declare module com {
	export module stripe {
		export module android {
			export class AlipayAuthenticator {
				public static class: java.lang.Class<com.stripe.android.AlipayAuthenticator>;
				/**
				 * Constructs a new instance of the com.stripe.android.AlipayAuthenticator interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					onAuthenticationRequest(param0: string): java.util.Map<string, string>;
				});
				public constructor();
				public onAuthenticationRequest(param0: string): java.util.Map<string, string>;
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export class ApiKeyValidator {
				public static class: java.lang.Class<com.stripe.android.ApiKeyValidator>;
				public static Companion: com.stripe.android.ApiKeyValidator.Companion;
				public requireValid(param0: string): string;
				public static get$payments_core_release(): com.stripe.android.ApiKeyValidator;
				public constructor();
			}
			export module ApiKeyValidator {
				export class Companion {
					public static class: java.lang.Class<com.stripe.android.ApiKeyValidator.Companion>;
					public get$payments_core_release(): com.stripe.android.ApiKeyValidator;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export class ApiResultCallback<ResultType> extends java.lang.Object {
				public static class: java.lang.Class<com.stripe.android.ApiResultCallback<any>>;
				/**
				 * Constructs a new instance of the com.stripe.android.ApiResultCallback<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					onSuccess(param0: ResultType): void;
					onError(param0: java.lang.Exception): void;
				});
				public constructor();
				public onError(param0: java.lang.Exception): void;
				public onSuccess(param0: ResultType): void;
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export class ApiVersion {
				public static class: java.lang.Class<com.stripe.android.ApiVersion>;
				public static Companion: com.stripe.android.ApiVersion.Companion;
				public static API_VERSION_CODE: string;
				public component1$payments_core_release(): string;
				public getBetas$payments_core_release(): java.util.Set<com.stripe.android.StripeApiBeta>;
				public getVersion$payments_core_release(): string;
				public hashCode(): number;
				public equals(param0: any): boolean;
				public copy(param0: string, param1: java.util.Set<any>): com.stripe.android.ApiVersion;
				public getCode(): string;
				public toString(): string;
				public constructor(param0: string, param1: java.util.Set<any>);
				public constructor(param0: java.util.Set<any>);
				public component2$payments_core_release(): java.util.Set<com.stripe.android.StripeApiBeta>;
			}
			export module ApiVersion {
				export class Companion {
					public static class: java.lang.Class<com.stripe.android.ApiVersion.Companion>;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export class AppInfo {
				public static class: java.lang.Class<com.stripe.android.AppInfo>;
				public static Companion: com.stripe.android.AppInfo.Companion;
				public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.AppInfo>;
				public static $stable: number;
				public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
				public copy(param0: string, param1: string, param2: string, param3: string): com.stripe.android.AppInfo;
				public static create(param0: string, param1: string, param2: string): com.stripe.android.AppInfo;
				public toString(): string;
				public static create(param0: string, param1: string): com.stripe.android.AppInfo;
				public constructor(param0: string, param1: string, param2: string, param3: string);
				public hashCode(): number;
				public createClientHeaders$payments_core_release(): java.util.Map<string, java.util.Map<string, string>>;
				public equals(param0: any): boolean;
				public describeContents(): number;
				public static create(param0: string, param1: string, param2: string, param3: string): com.stripe.android.AppInfo;
				public static create(param0: string): com.stripe.android.AppInfo;
				public toUserAgent$payments_core_release(): string;
			}
			export module AppInfo {
				export class Companion {
					public static class: java.lang.Class<com.stripe.android.AppInfo.Companion>;
					public create(param0: string, param1: string, param2: string, param3: string): com.stripe.android.AppInfo;
					public create(param0: string, param1: string): com.stripe.android.AppInfo;
					public create(param0: string): com.stripe.android.AppInfo;
					public create(param0: string, param1: string, param2: string): com.stripe.android.AppInfo;
				}
				export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.AppInfo> {
					public static class: java.lang.Class<com.stripe.android.AppInfo.Creator>;
					public newArray(param0: number): androidNative.Array<com.stripe.android.AppInfo>;
					public constructor();
					public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.AppInfo;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export class BuildConfig {
				public static class: java.lang.Class<com.stripe.android.BuildConfig>;
				public static DEBUG: boolean;
				public static LIBRARY_PACKAGE_NAME: string;
				public static BUILD_TYPE: string;
				public constructor();
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export class CardUtils {
				public static class: java.lang.Class<com.stripe.android.CardUtils>;
				public static INSTANCE: com.stripe.android.CardUtils;
				public static $stable: number;
				/** @deprecated */
				public static getPossibleCardBrand(param0: string): com.stripe.android.model.CardBrand;
				public isValidLuhnNumber$payments_core_release(param0: string): boolean;
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export class CustomerSession {
				public static class: java.lang.Class<com.stripe.android.CustomerSession>;
				public static Companion: com.stripe.android.CustomerSession.Companion;
				public static $stable: number;
				public getCachedCustomer(): com.stripe.android.model.Customer;
				public getCustomerCacheTime$payments_core_release(): number;
				public static getInstance(): com.stripe.android.CustomerSession;
				public static initCustomerSession(param0: globalAndroid.content.Context, param1: com.stripe.android.EphemeralKeyProvider, param2: boolean): void;
				public static initCustomerSession(param0: globalAndroid.content.Context, param1: com.stripe.android.EphemeralKeyProvider): void;
				public attachPaymentMethod(param0: string, param1: com.stripe.android.CustomerSession.PaymentMethodRetrievalListener): void;
				public updateCurrentCustomer(param0: com.stripe.android.CustomerSession.CustomerRetrievalListener): void;
				public setCustomerDefaultSource(param0: string, param1: string, param2: com.stripe.android.CustomerSession.CustomerRetrievalListener): void;
				public deleteCustomerSource(param0: string, param1: com.stripe.android.CustomerSession.SourceRetrievalListener): void;
				public constructor(param0: globalAndroid.content.Context, param1: com.stripe.android.networking.StripeRepository, param2: string, param3: string, param4: kotlin.coroutines.CoroutineContext, param5: com.stripe.android.OperationIdFactory, param6: kotlin.jvm.functions.Function0<java.lang.Long>, param7: com.stripe.android.EphemeralKeyManager.Factory);
				public setCustomerCacheTime$payments_core_release(param0: number): void;
				public getCustomer$payments_core_release(): com.stripe.android.model.Customer;
				public getPaymentMethods(param0: com.stripe.android.model.PaymentMethod.Type, param1: java.lang.Integer, param2: com.stripe.android.CustomerSession.PaymentMethodsRetrievalListener): void;
				public getPaymentMethods(param0: com.stripe.android.model.PaymentMethod.Type, param1: java.lang.Integer, param2: string, param3: com.stripe.android.CustomerSession.PaymentMethodsRetrievalListener): void;
				public static cancelCallbacks(): void;
				public getPaymentMethods(param0: com.stripe.android.model.PaymentMethod.Type, param1: com.stripe.android.CustomerSession.PaymentMethodsRetrievalListener): void;
				public addCustomerSource(param0: string, param1: string, param2: com.stripe.android.CustomerSession.SourceRetrievalListener): void;
				public getPaymentMethods(param0: com.stripe.android.model.PaymentMethod.Type, param1: java.lang.Integer, param2: string, param3: string, param4: com.stripe.android.CustomerSession.PaymentMethodsRetrievalListener): void;
				public static endCustomerSession(): void;
				public retrieveCurrentCustomer(param0: com.stripe.android.CustomerSession.CustomerRetrievalListener): void;
				public detachPaymentMethod(param0: string, param1: com.stripe.android.CustomerSession.PaymentMethodRetrievalListener): void;
				public setCustomerShippingInformation(param0: com.stripe.android.model.ShippingInformation, param1: com.stripe.android.CustomerSession.CustomerRetrievalListener): void;
				public setCustomer$payments_core_release(param0: com.stripe.android.model.Customer): void;
			}
			export module CustomerSession {
				export class Companion {
					public static class: java.lang.Class<com.stripe.android.CustomerSession.Companion>;
					public endCustomerSession(): void;
					public cancelCallbacks(): void;
					public setInstance$payments_core_release(param0: com.stripe.android.CustomerSession): void;
					public initCustomerSession(param0: globalAndroid.content.Context, param1: com.stripe.android.EphemeralKeyProvider): void;
					public getInstance$payments_core_release(): com.stripe.android.CustomerSession;
					public initCustomerSession(param0: globalAndroid.content.Context, param1: com.stripe.android.EphemeralKeyProvider, param2: boolean): void;
					public getInstance(): com.stripe.android.CustomerSession;
				}
				export class CustomerRetrievalListener extends com.stripe.android.CustomerSession.RetrievalListener {
					public static class: java.lang.Class<com.stripe.android.CustomerSession.CustomerRetrievalListener>;
					/**
					 * Constructs a new instance of the com.stripe.android.CustomerSession$CustomerRetrievalListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onCustomerRetrieved(param0: com.stripe.android.model.Customer): void;
						onError(param0: number, param1: string, param2: com.stripe.android.core.StripeError): void;
					});
					public constructor();
					public onCustomerRetrieved(param0: com.stripe.android.model.Customer): void;
					public onError(param0: number, param1: string, param2: com.stripe.android.core.StripeError): void;
				}
				export class PaymentMethodRetrievalListener extends com.stripe.android.CustomerSession.RetrievalListener {
					public static class: java.lang.Class<com.stripe.android.CustomerSession.PaymentMethodRetrievalListener>;
					/**
					 * Constructs a new instance of the com.stripe.android.CustomerSession$PaymentMethodRetrievalListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onPaymentMethodRetrieved(param0: com.stripe.android.model.PaymentMethod): void;
						onError(param0: number, param1: string, param2: com.stripe.android.core.StripeError): void;
					});
					public constructor();
					public onPaymentMethodRetrieved(param0: com.stripe.android.model.PaymentMethod): void;
					public onError(param0: number, param1: string, param2: com.stripe.android.core.StripeError): void;
				}
				export class PaymentMethodsRetrievalListener extends com.stripe.android.CustomerSession.RetrievalListener {
					public static class: java.lang.Class<com.stripe.android.CustomerSession.PaymentMethodsRetrievalListener>;
					/**
					 * Constructs a new instance of the com.stripe.android.CustomerSession$PaymentMethodsRetrievalListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onPaymentMethodsRetrieved(param0: java.util.List<com.stripe.android.model.PaymentMethod>): void;
						onError(param0: number, param1: string, param2: com.stripe.android.core.StripeError): void;
					});
					public constructor();
					public onPaymentMethodsRetrieved(param0: java.util.List<com.stripe.android.model.PaymentMethod>): void;
					public onError(param0: number, param1: string, param2: com.stripe.android.core.StripeError): void;
				}
				export class RetrievalListener {
					public static class: java.lang.Class<com.stripe.android.CustomerSession.RetrievalListener>;
					/**
					 * Constructs a new instance of the com.stripe.android.CustomerSession$RetrievalListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onError(param0: number, param1: string, param2: com.stripe.android.core.StripeError): void;
					});
					public constructor();
					public onError(param0: number, param1: string, param2: com.stripe.android.core.StripeError): void;
				}
				export class SourceRetrievalListener extends com.stripe.android.CustomerSession.RetrievalListener {
					public static class: java.lang.Class<com.stripe.android.CustomerSession.SourceRetrievalListener>;
					/**
					 * Constructs a new instance of the com.stripe.android.CustomerSession$SourceRetrievalListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onSourceRetrieved(param0: com.stripe.android.model.Source): void;
						onError(param0: number, param1: string, param2: com.stripe.android.core.StripeError): void;
					});
					public constructor();
					public onSourceRetrieved(param0: com.stripe.android.model.Source): void;
					public onError(param0: number, param1: string, param2: com.stripe.android.core.StripeError): void;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export class CustomerSessionKt {
				public static class: java.lang.Class<com.stripe.android.CustomerSessionKt>;
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export class CustomerSessionOperationExecutor {
				public static class: java.lang.Class<com.stripe.android.CustomerSessionOperationExecutor>;
				public constructor(param0: com.stripe.android.networking.StripeRepository, param1: string, param2: string, param3: java.util.Map<string, com.stripe.android.CustomerSession.RetrievalListener>, param4: kotlin.jvm.functions.Function1<any, kotlin.Unit>);
			}
			export module CustomerSessionOperationExecutor {
				export class Companion {
					public static class: java.lang.Class<com.stripe.android.CustomerSessionOperationExecutor.Companion>;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export class DefaultFraudDetectionDataRepository extends com.stripe.android.FraudDetectionDataRepository {
				public static class: java.lang.Class<com.stripe.android.DefaultFraudDetectionDataRepository>;
				public refresh(): void;
				public constructor(param0: globalAndroid.content.Context);
				public constructor(param0: globalAndroid.content.Context, param1: kotlin.coroutines.CoroutineContext);
				public getLatest(param0: kotlin.coroutines.Continuation<any>): any;
				public getCached(): com.stripe.android.networking.FraudDetectionData;
				public constructor(param0: com.stripe.android.FraudDetectionDataStore, param1: com.stripe.android.networking.FraudDetectionDataRequestFactory, param2: com.stripe.android.core.networking.StripeNetworkClient, param3: kotlin.coroutines.CoroutineContext);
				public save(param0: com.stripe.android.networking.FraudDetectionData): void;
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export class DefaultFraudDetectionDataStore extends com.stripe.android.FraudDetectionDataStore {
				public static class: java.lang.Class<com.stripe.android.DefaultFraudDetectionDataStore>;
				public get(param0: kotlin.coroutines.Continuation<any>): any;
				public constructor(param0: globalAndroid.content.Context, param1: kotlin.coroutines.CoroutineContext);
				public save(param0: com.stripe.android.networking.FraudDetectionData): void;
			}
			export module DefaultFraudDetectionDataStore {
				export class Companion {
					public static class: java.lang.Class<com.stripe.android.DefaultFraudDetectionDataStore.Companion>;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export class EphemeralKey extends com.stripe.android.core.model.StripeModel {
				public static class: java.lang.Class<com.stripe.android.EphemeralKey>;
				public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.EphemeralKey>;
				public static $stable: number;
				public getType$payments_core_release(): string;
				public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
				public copy(param0: string, param1: number, param2: number, param3: string, param4: boolean, param5: string, param6: string, param7: string): com.stripe.android.EphemeralKey;
				public constructor(param0: string, param1: number, param2: number, param3: string, param4: boolean, param5: string, param6: string, param7: string);
				public getObjectType$payments_core_release(): string;
				public getCreated$payments_core_release(): number;
				public toString(): string;
				public getExpires$payments_core_release(): number;
				public isLiveMode$payments_core_release(): boolean;
				public component6$payments_core_release(): string;
				public component4$payments_core_release(): string;
				public getObjectId$payments_core_release(): string;
				public component1$payments_core_release(): string;
				public component5$payments_core_release(): boolean;
				public component8$payments_core_release(): string;
				public getSecret(): string;
				public component3$payments_core_release(): number;
				public component7(): string;
				public component2$payments_core_release(): number;
				public hashCode(): number;
				public equals(param0: any): boolean;
				public describeContents(): number;
				public getId$payments_core_release(): string;
			}
			export module EphemeralKey {
				export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.EphemeralKey> {
					public static class: java.lang.Class<com.stripe.android.EphemeralKey.Creator>;
					public constructor();
					public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.EphemeralKey;
					public newArray(param0: number): androidNative.Array<com.stripe.android.EphemeralKey>;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export class EphemeralKeyManager {
				public static class: java.lang.Class<com.stripe.android.EphemeralKeyManager>;
				public setEphemeralKey$payments_core_release(param0: com.stripe.android.EphemeralKey): void;
				public constructor(param0: com.stripe.android.EphemeralKeyProvider, param1: com.stripe.android.EphemeralKeyManager.KeyManagerListener, param2: com.stripe.android.OperationIdFactory, param3: boolean, param4: kotlin.jvm.functions.Function0<java.lang.Long>, param5: number);
				public getEphemeralKey$payments_core_release(): com.stripe.android.EphemeralKey;
				public shouldRefreshKey$payments_core_release(param0: com.stripe.android.EphemeralKey): boolean;
			}
			export module EphemeralKeyManager {
				export class ClientKeyUpdateListener extends com.stripe.android.EphemeralKeyUpdateListener {
					public static class: java.lang.Class<com.stripe.android.EphemeralKeyManager.ClientKeyUpdateListener>;
					public onKeyUpdate(param0: string): void;
					public onKeyUpdateFailure(param0: number, param1: string): void;
					public constructor(param0: com.stripe.android.EphemeralKeyManager, param1: com.stripe.android.EphemeralOperation);
				}
				export class Companion {
					public static class: java.lang.Class<com.stripe.android.EphemeralKeyManager.Companion>;
				}
				export class Factory {
					public static class: java.lang.Class<com.stripe.android.EphemeralKeyManager.Factory>;
					/**
					 * Constructs a new instance of the com.stripe.android.EphemeralKeyManager$Factory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						create(param0: com.stripe.android.EphemeralKeyManager.KeyManagerListener): com.stripe.android.EphemeralKeyManager;
					});
					public constructor();
					public create(param0: com.stripe.android.EphemeralKeyManager.KeyManagerListener): com.stripe.android.EphemeralKeyManager;
				}
				export module Factory {
					export class Default extends com.stripe.android.EphemeralKeyManager.Factory {
						public static class: java.lang.Class<com.stripe.android.EphemeralKeyManager.Factory.Default>;
						public static $stable: number;
						public constructor(param0: com.stripe.android.EphemeralKeyProvider, param1: boolean, param2: com.stripe.android.OperationIdFactory, param3: kotlin.jvm.functions.Function0<java.lang.Long>);
						public create(param0: com.stripe.android.EphemeralKeyManager.KeyManagerListener): com.stripe.android.EphemeralKeyManager;
					}
				}
				export class KeyManagerListener {
					public static class: java.lang.Class<com.stripe.android.EphemeralKeyManager.KeyManagerListener>;
					/**
					 * Constructs a new instance of the com.stripe.android.EphemeralKeyManager$KeyManagerListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onKeyUpdate(param0: com.stripe.android.EphemeralKey, param1: com.stripe.android.EphemeralOperation): void;
						onKeyError(param0: string, param1: number, param2: string): void;
					});
					public constructor();
					public onKeyError(param0: string, param1: number, param2: string): void;
					public onKeyUpdate(param0: com.stripe.android.EphemeralKey, param1: com.stripe.android.EphemeralOperation): void;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export class EphemeralKeyProvider {
				public static class: java.lang.Class<com.stripe.android.EphemeralKeyProvider>;
				/**
				 * Constructs a new instance of the com.stripe.android.EphemeralKeyProvider interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					createEphemeralKey(param0: string, param1: com.stripe.android.EphemeralKeyUpdateListener): void;
				});
				public constructor();
				public createEphemeralKey(param0: string, param1: com.stripe.android.EphemeralKeyUpdateListener): void;
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export class EphemeralKeyUpdateListener {
				public static class: java.lang.Class<com.stripe.android.EphemeralKeyUpdateListener>;
				/**
				 * Constructs a new instance of the com.stripe.android.EphemeralKeyUpdateListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					onKeyUpdate(param0: string): void;
					onKeyUpdateFailure(param0: number, param1: string): void;
				});
				public constructor();
				public onKeyUpdate(param0: string): void;
				public onKeyUpdateFailure(param0: number, param1: string): void;
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export abstract class EphemeralOperation {
				public static class: java.lang.Class<com.stripe.android.EphemeralOperation>;
				public getProductUsage$payments_core_release(): java.util.Set<string>;
				public getId$payments_core_release(): string;
			}
			export module EphemeralOperation {
				export abstract class Customer extends com.stripe.android.EphemeralOperation {
					public static class: java.lang.Class<com.stripe.android.EphemeralOperation.Customer>;
				}
				export module Customer {
					export class AddSource extends com.stripe.android.EphemeralOperation.Customer {
						public static class: java.lang.Class<com.stripe.android.EphemeralOperation.Customer.AddSource>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.EphemeralOperation.Customer.AddSource>;
						public static $stable: number;
						public getProductUsage$payments_core_release(): java.util.Set<string>;
						public describeContents(): number;
						public copy(param0: string, param1: string, param2: string, param3: java.util.Set<string>): com.stripe.android.EphemeralOperation.Customer.AddSource;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getSourceId(): string;
						public toString(): string;
						public component3$payments_core_release(): string;
						public constructor(param0: string, param1: string, param2: string, param3: java.util.Set<string>);
						public component2(): string;
						public getSourceType(): string;
						public getId$payments_core_release(): string;
						public component4$payments_core_release(): java.util.Set<string>;
					}
					export module AddSource {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.EphemeralOperation.Customer.AddSource> {
							public static class: java.lang.Class<com.stripe.android.EphemeralOperation.Customer.AddSource.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.EphemeralOperation.Customer.AddSource;
							public newArray(param0: number): androidNative.Array<com.stripe.android.EphemeralOperation.Customer.AddSource>;
						}
					}
					export class AttachPaymentMethod extends com.stripe.android.EphemeralOperation.Customer {
						public static class: java.lang.Class<com.stripe.android.EphemeralOperation.Customer.AttachPaymentMethod>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.EphemeralOperation.Customer.AttachPaymentMethod>;
						public static $stable: number;
						public getProductUsage$payments_core_release(): java.util.Set<string>;
						public describeContents(): number;
						public getPaymentMethodId(): string;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public toString(): string;
						public component3$payments_core_release(): java.util.Set<string>;
						public component2$payments_core_release(): string;
						public getId$payments_core_release(): string;
						public constructor(param0: string, param1: string, param2: java.util.Set<string>);
						public copy(param0: string, param1: string, param2: java.util.Set<string>): com.stripe.android.EphemeralOperation.Customer.AttachPaymentMethod;
					}
					export module AttachPaymentMethod {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.EphemeralOperation.Customer.AttachPaymentMethod> {
							public static class: java.lang.Class<com.stripe.android.EphemeralOperation.Customer.AttachPaymentMethod.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.EphemeralOperation.Customer.AttachPaymentMethod>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.EphemeralOperation.Customer.AttachPaymentMethod;
						}
					}
					export class DeleteSource extends com.stripe.android.EphemeralOperation.Customer {
						public static class: java.lang.Class<com.stripe.android.EphemeralOperation.Customer.DeleteSource>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.EphemeralOperation.Customer.DeleteSource>;
						public static $stable: number;
						public getProductUsage$payments_core_release(): java.util.Set<string>;
						public describeContents(): number;
						public copy(param0: string, param1: string, param2: java.util.Set<string>): com.stripe.android.EphemeralOperation.Customer.DeleteSource;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getSourceId(): string;
						public toString(): string;
						public component3$payments_core_release(): java.util.Set<string>;
						public component2$payments_core_release(): string;
						public getId$payments_core_release(): string;
						public constructor(param0: string, param1: string, param2: java.util.Set<string>);
					}
					export module DeleteSource {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.EphemeralOperation.Customer.DeleteSource> {
							public static class: java.lang.Class<com.stripe.android.EphemeralOperation.Customer.DeleteSource.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.EphemeralOperation.Customer.DeleteSource>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.EphemeralOperation.Customer.DeleteSource;
						}
					}
					export class DetachPaymentMethod extends com.stripe.android.EphemeralOperation.Customer {
						public static class: java.lang.Class<com.stripe.android.EphemeralOperation.Customer.DetachPaymentMethod>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.EphemeralOperation.Customer.DetachPaymentMethod>;
						public static $stable: number;
						public getProductUsage$payments_core_release(): java.util.Set<string>;
						public describeContents(): number;
						public getPaymentMethodId(): string;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public copy(param0: string, param1: string, param2: java.util.Set<string>): com.stripe.android.EphemeralOperation.Customer.DetachPaymentMethod;
						public toString(): string;
						public component3$payments_core_release(): java.util.Set<string>;
						public component2$payments_core_release(): string;
						public getId$payments_core_release(): string;
						public constructor(param0: string, param1: string, param2: java.util.Set<string>);
					}
					export module DetachPaymentMethod {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.EphemeralOperation.Customer.DetachPaymentMethod> {
							public static class: java.lang.Class<com.stripe.android.EphemeralOperation.Customer.DetachPaymentMethod.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.EphemeralOperation.Customer.DetachPaymentMethod;
							public newArray(param0: number): androidNative.Array<com.stripe.android.EphemeralOperation.Customer.DetachPaymentMethod>;
						}
					}
					export class GetPaymentMethods extends com.stripe.android.EphemeralOperation.Customer {
						public static class: java.lang.Class<com.stripe.android.EphemeralOperation.Customer.GetPaymentMethods>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.EphemeralOperation.Customer.GetPaymentMethods>;
						public static $stable: number;
						public getProductUsage$payments_core_release(): java.util.Set<string>;
						public describeContents(): number;
						public constructor(param0: com.stripe.android.model.PaymentMethod.Type, param1: java.lang.Integer, param2: string, param3: string, param4: string, param5: java.util.Set<string>);
						public getLimit$payments_core_release(): java.lang.Integer;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public component6$payments_core_release(): java.util.Set<string>;
						public toString(): string;
						public component5$payments_core_release(): string;
						public component4$payments_core_release(): string;
						public component3$payments_core_release(): string;
						public getType$payments_core_release(): com.stripe.android.model.PaymentMethod.Type;
						public copy(param0: com.stripe.android.model.PaymentMethod.Type, param1: java.lang.Integer, param2: string, param3: string, param4: string, param5: java.util.Set<string>): com.stripe.android.EphemeralOperation.Customer.GetPaymentMethods;
						public getStartingAfter$payments_core_release(): string;
						public getId$payments_core_release(): string;
						public component1$payments_core_release(): com.stripe.android.model.PaymentMethod.Type;
						public getEndingBefore$payments_core_release(): string;
						public component2$payments_core_release(): java.lang.Integer;
					}
					export module GetPaymentMethods {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.EphemeralOperation.Customer.GetPaymentMethods> {
							public static class: java.lang.Class<com.stripe.android.EphemeralOperation.Customer.GetPaymentMethods.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.EphemeralOperation.Customer.GetPaymentMethods>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.EphemeralOperation.Customer.GetPaymentMethods;
						}
					}
					export class UpdateDefaultSource extends com.stripe.android.EphemeralOperation.Customer {
						public static class: java.lang.Class<com.stripe.android.EphemeralOperation.Customer.UpdateDefaultSource>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.EphemeralOperation.Customer.UpdateDefaultSource>;
						public static $stable: number;
						public getProductUsage$payments_core_release(): java.util.Set<string>;
						public describeContents(): number;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getSourceId(): string;
						public toString(): string;
						public component3$payments_core_release(): string;
						public constructor(param0: string, param1: string, param2: string, param3: java.util.Set<string>);
						public component2(): string;
						public getSourceType(): string;
						public getId$payments_core_release(): string;
						public component4$payments_core_release(): java.util.Set<string>;
						public copy(param0: string, param1: string, param2: string, param3: java.util.Set<string>): com.stripe.android.EphemeralOperation.Customer.UpdateDefaultSource;
					}
					export module UpdateDefaultSource {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.EphemeralOperation.Customer.UpdateDefaultSource> {
							public static class: java.lang.Class<com.stripe.android.EphemeralOperation.Customer.UpdateDefaultSource.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.EphemeralOperation.Customer.UpdateDefaultSource>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.EphemeralOperation.Customer.UpdateDefaultSource;
						}
					}
					export class UpdateShipping extends com.stripe.android.EphemeralOperation.Customer {
						public static class: java.lang.Class<com.stripe.android.EphemeralOperation.Customer.UpdateShipping>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.EphemeralOperation.Customer.UpdateShipping>;
						public static $stable: number;
						public getProductUsage$payments_core_release(): java.util.Set<string>;
						public describeContents(): number;
						public constructor(param0: com.stripe.android.model.ShippingInformation, param1: string, param2: java.util.Set<string>);
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public toString(): string;
						public getShippingInformation(): com.stripe.android.model.ShippingInformation;
						public component3$payments_core_release(): java.util.Set<string>;
						public component2$payments_core_release(): string;
						public component1(): com.stripe.android.model.ShippingInformation;
						public getId$payments_core_release(): string;
						public copy(param0: com.stripe.android.model.ShippingInformation, param1: string, param2: java.util.Set<string>): com.stripe.android.EphemeralOperation.Customer.UpdateShipping;
					}
					export module UpdateShipping {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.EphemeralOperation.Customer.UpdateShipping> {
							public static class: java.lang.Class<com.stripe.android.EphemeralOperation.Customer.UpdateShipping.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.EphemeralOperation.Customer.UpdateShipping>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.EphemeralOperation.Customer.UpdateShipping;
						}
					}
				}
				export abstract class Issuing extends com.stripe.android.EphemeralOperation {
					public static class: java.lang.Class<com.stripe.android.EphemeralOperation.Issuing>;
					public getProductUsage$payments_core_release(): java.util.Set<string>;
				}
				export module Issuing {
					export class RetrievePin extends com.stripe.android.EphemeralOperation.Issuing {
						public static class: java.lang.Class<com.stripe.android.EphemeralOperation.Issuing.RetrievePin>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.EphemeralOperation.Issuing.RetrievePin>;
						public static $stable: number;
						public component3(): string;
						public describeContents(): number;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public copy(param0: string, param1: string, param2: string, param3: string): com.stripe.android.EphemeralOperation.Issuing.RetrievePin;
						public toString(): string;
						public constructor(param0: string, param1: string, param2: string, param3: string);
						public component4$payments_core_release(): string;
						public component2(): string;
						public getCardId(): string;
						public getId$payments_core_release(): string;
						public getVerificationId(): string;
						public getUserOneTimeCode(): string;
					}
					export module RetrievePin {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.EphemeralOperation.Issuing.RetrievePin> {
							public static class: java.lang.Class<com.stripe.android.EphemeralOperation.Issuing.RetrievePin.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.EphemeralOperation.Issuing.RetrievePin>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.EphemeralOperation.Issuing.RetrievePin;
						}
					}
					export class UpdatePin extends com.stripe.android.EphemeralOperation.Issuing {
						public static class: java.lang.Class<com.stripe.android.EphemeralOperation.Issuing.UpdatePin>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.EphemeralOperation.Issuing.UpdatePin>;
						public static $stable: number;
						public component3(): string;
						public describeContents(): number;
						public copy(param0: string, param1: string, param2: string, param3: string, param4: string): com.stripe.android.EphemeralOperation.Issuing.UpdatePin;
						public getNewPin(): string;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public toString(): string;
						public component5$payments_core_release(): string;
						public component4(): string;
						public component2(): string;
						public getCardId(): string;
						public getId$payments_core_release(): string;
						public getVerificationId(): string;
						public constructor(param0: string, param1: string, param2: string, param3: string, param4: string);
						public getUserOneTimeCode(): string;
					}
					export module UpdatePin {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.EphemeralOperation.Issuing.UpdatePin> {
							public static class: java.lang.Class<com.stripe.android.EphemeralOperation.Issuing.UpdatePin.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.EphemeralOperation.Issuing.UpdatePin>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.EphemeralOperation.Issuing.UpdatePin;
						}
					}
				}
				export class RetrieveKey extends com.stripe.android.EphemeralOperation {
					public static class: java.lang.Class<com.stripe.android.EphemeralOperation.RetrieveKey>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.EphemeralOperation.RetrieveKey>;
					public equals(param0: any): boolean;
					public constructor(param0: string, param1: java.util.Set<string>);
					public toString(): string;
					public getId$payments_core_release(): string;
					public component1$payments_core_release(): string;
					public copy(param0: string, param1: java.util.Set<string>): com.stripe.android.EphemeralOperation.RetrieveKey;
					public describeContents(): number;
					public component2$payments_core_release(): java.util.Set<string>;
					public getProductUsage$payments_core_release(): java.util.Set<string>;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public hashCode(): number;
				}
				export module RetrieveKey {
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.EphemeralOperation.RetrieveKey> {
						public static class: java.lang.Class<com.stripe.android.EphemeralOperation.RetrieveKey.Creator>;
						public newArray(param0: number): androidNative.Array<com.stripe.android.EphemeralOperation.RetrieveKey>;
						public constructor();
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.EphemeralOperation.RetrieveKey;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export class FraudDetectionDataRepository {
				public static class: java.lang.Class<com.stripe.android.FraudDetectionDataRepository>;
				/**
				 * Constructs a new instance of the com.stripe.android.FraudDetectionDataRepository interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					refresh(): void;
					getCached(): com.stripe.android.networking.FraudDetectionData;
					getLatest(param0: kotlin.coroutines.Continuation<any>): any;
					save(param0: com.stripe.android.networking.FraudDetectionData): void;
				});
				public constructor();
				public refresh(): void;
				public getCached(): com.stripe.android.networking.FraudDetectionData;
				public getLatest(param0: kotlin.coroutines.Continuation<any>): any;
				public save(param0: com.stripe.android.networking.FraudDetectionData): void;
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export class FraudDetectionDataRepositoryKt {
				public static class: java.lang.Class<com.stripe.android.FraudDetectionDataRepositoryKt>;
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export class FraudDetectionDataStore {
				public static class: java.lang.Class<com.stripe.android.FraudDetectionDataStore>;
				/**
				 * Constructs a new instance of the com.stripe.android.FraudDetectionDataStore interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					get(param0: kotlin.coroutines.Continuation<any>): any;
					save(param0: com.stripe.android.networking.FraudDetectionData): void;
				});
				public constructor();
				public get(param0: kotlin.coroutines.Continuation<any>): any;
				public save(param0: com.stripe.android.networking.FraudDetectionData): void;
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export class GooglePayConfig {
				public static class: java.lang.Class<com.stripe.android.GooglePayConfig>;
				public static $stable: number;
				public constructor(param0: globalAndroid.content.Context);
				public getTokenizationSpecification(): org.json.JSONObject;
				public constructor(param0: string, param1: string);
				public constructor(param0: string);
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export class GooglePayJsonFactory {
				public static class: java.lang.Class<com.stripe.android.GooglePayJsonFactory>;
				public static $stable: number;
				public createPaymentDataRequest(param0: com.stripe.android.GooglePayJsonFactory.TransactionInfo, param1: com.stripe.android.GooglePayJsonFactory.BillingAddressParameters, param2: com.stripe.android.GooglePayJsonFactory.ShippingAddressParameters): org.json.JSONObject;
				public createIsReadyToPayRequest(param0: com.stripe.android.GooglePayJsonFactory.BillingAddressParameters, param1: java.lang.Boolean): org.json.JSONObject;
				public createIsReadyToPayRequest(param0: com.stripe.android.GooglePayJsonFactory.BillingAddressParameters): org.json.JSONObject;
				public createPaymentDataRequest(param0: com.stripe.android.GooglePayJsonFactory.TransactionInfo, param1: com.stripe.android.GooglePayJsonFactory.BillingAddressParameters, param2: com.stripe.android.GooglePayJsonFactory.ShippingAddressParameters, param3: boolean): org.json.JSONObject;
				public createPaymentDataRequest(param0: com.stripe.android.GooglePayJsonFactory.TransactionInfo, param1: com.stripe.android.GooglePayJsonFactory.BillingAddressParameters): org.json.JSONObject;
				public createPaymentDataRequest(param0: com.stripe.android.GooglePayJsonFactory.TransactionInfo): org.json.JSONObject;
				public constructor(param0: com.stripe.android.GooglePayConfig, param1: boolean);
				public constructor(param0: globalAndroid.content.Context, param1: boolean);
				public createIsReadyToPayRequest(): org.json.JSONObject;
				public createPaymentDataRequest(param0: com.stripe.android.GooglePayJsonFactory.TransactionInfo, param1: com.stripe.android.GooglePayJsonFactory.BillingAddressParameters, param2: com.stripe.android.GooglePayJsonFactory.ShippingAddressParameters, param3: boolean, param4: com.stripe.android.GooglePayJsonFactory.MerchantInfo): org.json.JSONObject;
				public constructor(param0: kotlin.jvm.functions.Function0<string>, param1: kotlin.jvm.functions.Function0<string>, param2: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Config);
			}
			export module GooglePayJsonFactory {
				export class BillingAddressParameters {
					public static class: java.lang.Class<com.stripe.android.GooglePayJsonFactory.BillingAddressParameters>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.GooglePayJsonFactory.BillingAddressParameters>;
					public static $stable: number;
					public component1$payments_core_release(): boolean;
					public describeContents(): number;
					public copy(param0: boolean, param1: com.stripe.android.GooglePayJsonFactory.BillingAddressParameters.Format, param2: boolean): com.stripe.android.GooglePayJsonFactory.BillingAddressParameters;
					public component3$payments_core_release(): boolean;
					public equals(param0: any): boolean;
					public toString(): string;
					public constructor(param0: boolean);
					public constructor();
					public constructor(param0: boolean, param1: com.stripe.android.GooglePayJsonFactory.BillingAddressParameters.Format);
					public isPhoneNumberRequired$payments_core_release(): boolean;
					public constructor(param0: boolean, param1: com.stripe.android.GooglePayJsonFactory.BillingAddressParameters.Format, param2: boolean);
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public isRequired$payments_core_release(): boolean;
					public hashCode(): number;
					public getFormat$payments_core_release(): com.stripe.android.GooglePayJsonFactory.BillingAddressParameters.Format;
					public component2$payments_core_release(): com.stripe.android.GooglePayJsonFactory.BillingAddressParameters.Format;
				}
				export module BillingAddressParameters {
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.GooglePayJsonFactory.BillingAddressParameters> {
						public static class: java.lang.Class<com.stripe.android.GooglePayJsonFactory.BillingAddressParameters.Creator>;
						public constructor();
						public newArray(param0: number): androidNative.Array<com.stripe.android.GooglePayJsonFactory.BillingAddressParameters>;
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.GooglePayJsonFactory.BillingAddressParameters;
					}
					export class Format {
						public static class: java.lang.Class<com.stripe.android.GooglePayJsonFactory.BillingAddressParameters.Format>;
						public static Min: com.stripe.android.GooglePayJsonFactory.BillingAddressParameters.Format;
						public static Full: com.stripe.android.GooglePayJsonFactory.BillingAddressParameters.Format;
						public static values(): androidNative.Array<com.stripe.android.GooglePayJsonFactory.BillingAddressParameters.Format>;
						public static valueOf(param0: string): com.stripe.android.GooglePayJsonFactory.BillingAddressParameters.Format;
						public getCode$payments_core_release(): string;
					}
				}
				export class Companion {
					public static class: java.lang.Class<com.stripe.android.GooglePayJsonFactory.Companion>;
				}
				export class MerchantInfo {
					public static class: java.lang.Class<com.stripe.android.GooglePayJsonFactory.MerchantInfo>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.GooglePayJsonFactory.MerchantInfo>;
					public static $stable: number;
					public equals(param0: any): boolean;
					public toString(): string;
					public constructor(param0: string);
					public component1$payments_core_release(): string;
					public constructor();
					public describeContents(): number;
					public getMerchantName$payments_core_release(): string;
					public copy(param0: string): com.stripe.android.GooglePayJsonFactory.MerchantInfo;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public hashCode(): number;
				}
				export module MerchantInfo {
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.GooglePayJsonFactory.MerchantInfo> {
						public static class: java.lang.Class<com.stripe.android.GooglePayJsonFactory.MerchantInfo.Creator>;
						public constructor();
						public newArray(param0: number): androidNative.Array<com.stripe.android.GooglePayJsonFactory.MerchantInfo>;
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.GooglePayJsonFactory.MerchantInfo;
					}
				}
				export class ShippingAddressParameters {
					public static class: java.lang.Class<com.stripe.android.GooglePayJsonFactory.ShippingAddressParameters>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.GooglePayJsonFactory.ShippingAddressParameters>;
					public static $stable: number;
					public component1$payments_core_release(): boolean;
					public constructor(param0: boolean, param1: java.util.Set<string>, param2: boolean);
					public copy(param0: boolean, param1: java.util.Set<string>, param2: boolean): com.stripe.android.GooglePayJsonFactory.ShippingAddressParameters;
					public describeContents(): number;
					public getNormalizedAllowedCountryCodes$payments_core_release(): java.util.Set<string>;
					public component3$payments_core_release(): boolean;
					public equals(param0: any): boolean;
					public toString(): string;
					public constructor(param0: boolean);
					public constructor();
					public getPhoneNumberRequired$payments_core_release(): boolean;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public isRequired$payments_core_release(): boolean;
					public hashCode(): number;
					public constructor(param0: boolean, param1: java.util.Set<string>);
				}
				export module ShippingAddressParameters {
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.GooglePayJsonFactory.ShippingAddressParameters> {
						public static class: java.lang.Class<com.stripe.android.GooglePayJsonFactory.ShippingAddressParameters.Creator>;
						public constructor();
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.GooglePayJsonFactory.ShippingAddressParameters;
						public newArray(param0: number): androidNative.Array<com.stripe.android.GooglePayJsonFactory.ShippingAddressParameters>;
					}
				}
				export class TransactionInfo {
					public static class: java.lang.Class<com.stripe.android.GooglePayJsonFactory.TransactionInfo>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.GooglePayJsonFactory.TransactionInfo>;
					public static $stable: number;
					public component6$payments_core_release(): string;
					public constructor(param0: string, param1: com.stripe.android.GooglePayJsonFactory.TransactionInfo.TotalPriceStatus, param2: string, param3: string);
					public constructor(param0: string, param1: com.stripe.android.GooglePayJsonFactory.TransactionInfo.TotalPriceStatus, param2: string, param3: string, param4: java.lang.Integer);
					public component1$payments_core_release(): string;
					public constructor(param0: string, param1: com.stripe.android.GooglePayJsonFactory.TransactionInfo.TotalPriceStatus, param2: string);
					public getTotalPriceLabel$payments_core_release(): string;
					public getCurrencyCode$payments_core_release(): string;
					public getTotalPrice$payments_core_release(): java.lang.Integer;
					public component3$payments_core_release(): string;
					public component4$payments_core_release(): string;
					public constructor(param0: string, param1: com.stripe.android.GooglePayJsonFactory.TransactionInfo.TotalPriceStatus, param2: string, param3: string, param4: java.lang.Integer, param5: string);
					public getTotalPriceStatus$payments_core_release(): com.stripe.android.GooglePayJsonFactory.TransactionInfo.TotalPriceStatus;
					public toString(): string;
					public copy(param0: string, param1: com.stripe.android.GooglePayJsonFactory.TransactionInfo.TotalPriceStatus, param2: string, param3: string, param4: java.lang.Integer, param5: string, param6: com.stripe.android.GooglePayJsonFactory.TransactionInfo.CheckoutOption): com.stripe.android.GooglePayJsonFactory.TransactionInfo;
					public constructor(param0: string, param1: com.stripe.android.GooglePayJsonFactory.TransactionInfo.TotalPriceStatus);
					public getTransactionId$payments_core_release(): string;
					public hashCode(): number;
					public constructor(param0: string, param1: com.stripe.android.GooglePayJsonFactory.TransactionInfo.TotalPriceStatus, param2: string, param3: string, param4: java.lang.Integer, param5: string, param6: com.stripe.android.GooglePayJsonFactory.TransactionInfo.CheckoutOption);
					public getCountryCode$payments_core_release(): string;
					public describeContents(): number;
					public component5$payments_core_release(): java.lang.Integer;
					public component7$payments_core_release(): com.stripe.android.GooglePayJsonFactory.TransactionInfo.CheckoutOption;
					public equals(param0: any): boolean;
					public component2$payments_core_release(): com.stripe.android.GooglePayJsonFactory.TransactionInfo.TotalPriceStatus;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public getCheckoutOption$payments_core_release(): com.stripe.android.GooglePayJsonFactory.TransactionInfo.CheckoutOption;
				}
				export module TransactionInfo {
					export class CheckoutOption {
						public static class: java.lang.Class<com.stripe.android.GooglePayJsonFactory.TransactionInfo.CheckoutOption>;
						public static Default: com.stripe.android.GooglePayJsonFactory.TransactionInfo.CheckoutOption;
						public static CompleteImmediatePurchase: com.stripe.android.GooglePayJsonFactory.TransactionInfo.CheckoutOption;
						public static valueOf(param0: string): com.stripe.android.GooglePayJsonFactory.TransactionInfo.CheckoutOption;
						public getCode$payments_core_release(): string;
						public static values(): androidNative.Array<com.stripe.android.GooglePayJsonFactory.TransactionInfo.CheckoutOption>;
					}
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.GooglePayJsonFactory.TransactionInfo> {
						public static class: java.lang.Class<com.stripe.android.GooglePayJsonFactory.TransactionInfo.Creator>;
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.GooglePayJsonFactory.TransactionInfo;
						public constructor();
						public newArray(param0: number): androidNative.Array<com.stripe.android.GooglePayJsonFactory.TransactionInfo>;
					}
					export class TotalPriceStatus {
						public static class: java.lang.Class<com.stripe.android.GooglePayJsonFactory.TransactionInfo.TotalPriceStatus>;
						public static NotCurrentlyKnown: com.stripe.android.GooglePayJsonFactory.TransactionInfo.TotalPriceStatus;
						public static Estimated: com.stripe.android.GooglePayJsonFactory.TransactionInfo.TotalPriceStatus;
						public static Final: com.stripe.android.GooglePayJsonFactory.TransactionInfo.TotalPriceStatus;
						public static valueOf(param0: string): com.stripe.android.GooglePayJsonFactory.TransactionInfo.TotalPriceStatus;
						public static values(): androidNative.Array<com.stripe.android.GooglePayJsonFactory.TransactionInfo.TotalPriceStatus>;
						public getCode$payments_core_release(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export class GooglePayJsonFactory_Factory extends dagger.internal.Factory<com.stripe.android.GooglePayJsonFactory> {
				public static class: java.lang.Class<com.stripe.android.GooglePayJsonFactory_Factory>;
				public get(): com.stripe.android.GooglePayJsonFactory;
				public constructor(param0: javax.inject.Provider<kotlin.jvm.functions.Function0<string>>, param1: javax.inject.Provider<kotlin.jvm.functions.Function0<string>>, param2: javax.inject.Provider<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Config>);
				public static newInstance(param0: kotlin.jvm.functions.Function0<string>, param1: kotlin.jvm.functions.Function0<string>, param2: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Config): com.stripe.android.GooglePayJsonFactory;
				public static create(param0: javax.inject.Provider<kotlin.jvm.functions.Function0<string>>, param1: javax.inject.Provider<kotlin.jvm.functions.Function0<string>>, param2: javax.inject.Provider<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Config>): com.stripe.android.GooglePayJsonFactory_Factory;
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export class IssuingCardPinService {
				public static class: java.lang.Class<com.stripe.android.IssuingCardPinService>;
				public static Companion: com.stripe.android.IssuingCardPinService.Companion;
				public static $stable: number;
				public static create(param0: globalAndroid.content.Context, param1: string, param2: string, param3: com.stripe.android.EphemeralKeyProvider): com.stripe.android.IssuingCardPinService;
				public static create(param0: globalAndroid.content.Context, param1: string, param2: com.stripe.android.EphemeralKeyProvider): com.stripe.android.IssuingCardPinService;
				public retrievePin(param0: string, param1: string, param2: string, param3: com.stripe.android.IssuingCardPinService.IssuingCardPinRetrievalListener): void;
				public static create(param0: globalAndroid.content.Context, param1: com.stripe.android.EphemeralKeyProvider): com.stripe.android.IssuingCardPinService;
				public updatePin(param0: string, param1: string, param2: string, param3: string, param4: com.stripe.android.IssuingCardPinService.IssuingCardPinUpdateListener): void;
				public constructor(param0: com.stripe.android.EphemeralKeyProvider, param1: com.stripe.android.networking.StripeRepository, param2: com.stripe.android.OperationIdFactory, param3: string, param4: kotlin.coroutines.CoroutineContext);
			}
			export module IssuingCardPinService {
				export class CardPinActionError {
					public static class: java.lang.Class<com.stripe.android.IssuingCardPinService.CardPinActionError>;
					public static UNKNOWN_ERROR: com.stripe.android.IssuingCardPinService.CardPinActionError;
					public static EPHEMERAL_KEY_ERROR: com.stripe.android.IssuingCardPinService.CardPinActionError;
					public static ONE_TIME_CODE_INCORRECT: com.stripe.android.IssuingCardPinService.CardPinActionError;
					public static ONE_TIME_CODE_EXPIRED: com.stripe.android.IssuingCardPinService.CardPinActionError;
					public static ONE_TIME_CODE_TOO_MANY_ATTEMPTS: com.stripe.android.IssuingCardPinService.CardPinActionError;
					public static ONE_TIME_CODE_ALREADY_REDEEMED: com.stripe.android.IssuingCardPinService.CardPinActionError;
					public static values(): androidNative.Array<com.stripe.android.IssuingCardPinService.CardPinActionError>;
					public static valueOf(param0: string): com.stripe.android.IssuingCardPinService.CardPinActionError;
				}
				export class Companion {
					public static class: java.lang.Class<com.stripe.android.IssuingCardPinService.Companion>;
					public create(param0: globalAndroid.content.Context, param1: com.stripe.android.EphemeralKeyProvider): com.stripe.android.IssuingCardPinService;
					public create(param0: globalAndroid.content.Context, param1: string, param2: com.stripe.android.EphemeralKeyProvider): com.stripe.android.IssuingCardPinService;
					public create(param0: globalAndroid.content.Context, param1: string, param2: string, param3: com.stripe.android.EphemeralKeyProvider): com.stripe.android.IssuingCardPinService;
				}
				export class IssuingCardPinRetrievalListener extends com.stripe.android.IssuingCardPinService.Listener {
					public static class: java.lang.Class<com.stripe.android.IssuingCardPinService.IssuingCardPinRetrievalListener>;
					/**
					 * Constructs a new instance of the com.stripe.android.IssuingCardPinService$IssuingCardPinRetrievalListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onIssuingCardPinRetrieved(param0: string): void;
						onError(param0: com.stripe.android.IssuingCardPinService.CardPinActionError, param1: string, param2: java.lang.Throwable): void;
					});
					public constructor();
					public onError(param0: com.stripe.android.IssuingCardPinService.CardPinActionError, param1: string, param2: java.lang.Throwable): void;
					public onIssuingCardPinRetrieved(param0: string): void;
				}
				export class IssuingCardPinUpdateListener extends com.stripe.android.IssuingCardPinService.Listener {
					public static class: java.lang.Class<com.stripe.android.IssuingCardPinService.IssuingCardPinUpdateListener>;
					/**
					 * Constructs a new instance of the com.stripe.android.IssuingCardPinService$IssuingCardPinUpdateListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onIssuingCardPinUpdated(): void;
						onError(param0: com.stripe.android.IssuingCardPinService.CardPinActionError, param1: string, param2: java.lang.Throwable): void;
					});
					public constructor();
					public onError(param0: com.stripe.android.IssuingCardPinService.CardPinActionError, param1: string, param2: java.lang.Throwable): void;
					public onIssuingCardPinUpdated(): void;
				}
				export class Listener {
					public static class: java.lang.Class<com.stripe.android.IssuingCardPinService.Listener>;
					/**
					 * Constructs a new instance of the com.stripe.android.IssuingCardPinService$Listener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onError(param0: com.stripe.android.IssuingCardPinService.CardPinActionError, param1: string, param2: java.lang.Throwable): void;
					});
					public constructor();
					public onError(param0: com.stripe.android.IssuingCardPinService.CardPinActionError, param1: string, param2: java.lang.Throwable): void;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export class ObjectBuilder<ObjectType> extends java.lang.Object {
				public static class: java.lang.Class<com.stripe.android.ObjectBuilder<any>>;
				/**
				 * Constructs a new instance of the com.stripe.android.ObjectBuilder<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					build(): ObjectType;
				});
				public constructor();
				public build(): ObjectType;
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export class OperationIdFactory {
				public static class: java.lang.Class<com.stripe.android.OperationIdFactory>;
				/**
				 * Constructs a new instance of the com.stripe.android.OperationIdFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					create(): string;
					<clinit>(): void;
				});
				public constructor();
				public static Companion: com.stripe.android.OperationIdFactory.Companion;
				public create(): string;
			}
			export module OperationIdFactory {
				export class Companion {
					public static class: java.lang.Class<com.stripe.android.OperationIdFactory.Companion>;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export class PayWithGoogleUtils {
				public static class: java.lang.Class<com.stripe.android.PayWithGoogleUtils>;
				public static INSTANCE: com.stripe.android.PayWithGoogleUtils;
				public static $stable: number;
				public static getPriceString(param0: number, param1: java.util.Currency): string;
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export class PaymentAuthConfig {
				public static class: java.lang.Class<com.stripe.android.PaymentAuthConfig>;
				public static Companion: com.stripe.android.PaymentAuthConfig.Companion;
				public static $stable: number;
				public static init(param0: com.stripe.android.PaymentAuthConfig): void;
				public static get(): com.stripe.android.PaymentAuthConfig;
				public getStripe3ds2Config$payments_core_release(): com.stripe.android.PaymentAuthConfig.Stripe3ds2Config;
			}
			export module PaymentAuthConfig {
				export class Builder extends com.stripe.android.ObjectBuilder<com.stripe.android.PaymentAuthConfig> {
					public static class: java.lang.Class<com.stripe.android.PaymentAuthConfig.Builder>;
					public static $stable: number;
					public build(): com.stripe.android.PaymentAuthConfig;
					public constructor();
					public build(): any;
					public set3ds2Config(param0: com.stripe.android.PaymentAuthConfig.Stripe3ds2Config): com.stripe.android.PaymentAuthConfig.Builder;
				}
				export class Companion {
					public static class: java.lang.Class<com.stripe.android.PaymentAuthConfig.Companion>;
					public get(): com.stripe.android.PaymentAuthConfig;
					public init(param0: com.stripe.android.PaymentAuthConfig): void;
				}
				export class Stripe3ds2ButtonCustomization {
					public static class: java.lang.Class<com.stripe.android.PaymentAuthConfig.Stripe3ds2ButtonCustomization>;
					public static $stable: number;
					public equals(param0: any): boolean;
					public toString(): string;
					public getButtonCustomization$payments_core_release(): com.stripe.android.stripe3ds2.init.ui.ButtonCustomization;
					public constructor(param0: com.stripe.android.stripe3ds2.init.ui.ButtonCustomization);
					public copy(param0: com.stripe.android.stripe3ds2.init.ui.ButtonCustomization): com.stripe.android.PaymentAuthConfig.Stripe3ds2ButtonCustomization;
					public hashCode(): number;
					public component1$payments_core_release(): com.stripe.android.stripe3ds2.init.ui.ButtonCustomization;
				}
				export module Stripe3ds2ButtonCustomization {
					export class Builder extends com.stripe.android.ObjectBuilder<com.stripe.android.PaymentAuthConfig.Stripe3ds2ButtonCustomization> {
						public static class: java.lang.Class<com.stripe.android.PaymentAuthConfig.Stripe3ds2ButtonCustomization.Builder>;
						public static $stable: number;
						public constructor();
						public setCornerRadius(param0: number): com.stripe.android.PaymentAuthConfig.Stripe3ds2ButtonCustomization.Builder;
						public build(): com.stripe.android.PaymentAuthConfig.Stripe3ds2ButtonCustomization;
						public setTextFontName(param0: string): com.stripe.android.PaymentAuthConfig.Stripe3ds2ButtonCustomization.Builder;
						public setTextFontSize(param0: number): com.stripe.android.PaymentAuthConfig.Stripe3ds2ButtonCustomization.Builder;
						public setBackgroundColor(param0: string): com.stripe.android.PaymentAuthConfig.Stripe3ds2ButtonCustomization.Builder;
						public setTextColor(param0: string): com.stripe.android.PaymentAuthConfig.Stripe3ds2ButtonCustomization.Builder;
						public build(): any;
					}
				}
				export class Stripe3ds2Config {
					public static class: java.lang.Class<com.stripe.android.PaymentAuthConfig.Stripe3ds2Config>;
					public static Companion: com.stripe.android.PaymentAuthConfig.Stripe3ds2Config.Companion;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.PaymentAuthConfig.Stripe3ds2Config>;
					public static $stable: number;
					public static DEFAULT_TIMEOUT: number;
					public component1$payments_core_release(): number;
					public equals(param0: any): boolean;
					public toString(): string;
					public copy(param0: number, param1: com.stripe.android.PaymentAuthConfig.Stripe3ds2UiCustomization): com.stripe.android.PaymentAuthConfig.Stripe3ds2Config;
					public getUiCustomization$payments_core_release(): com.stripe.android.PaymentAuthConfig.Stripe3ds2UiCustomization;
					public describeContents(): number;
					public component2$payments_core_release(): com.stripe.android.PaymentAuthConfig.Stripe3ds2UiCustomization;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public constructor(param0: number, param1: com.stripe.android.PaymentAuthConfig.Stripe3ds2UiCustomization);
					public hashCode(): number;
					public getTimeout$payments_core_release(): number;
				}
				export module Stripe3ds2Config {
					export class Builder extends com.stripe.android.ObjectBuilder<com.stripe.android.PaymentAuthConfig.Stripe3ds2Config> {
						public static class: java.lang.Class<com.stripe.android.PaymentAuthConfig.Stripe3ds2Config.Builder>;
						public static $stable: number;
						public setUiCustomization(param0: com.stripe.android.PaymentAuthConfig.Stripe3ds2UiCustomization): com.stripe.android.PaymentAuthConfig.Stripe3ds2Config.Builder;
						public constructor();
						public build(): com.stripe.android.PaymentAuthConfig.Stripe3ds2Config;
						public setTimeout(param0: number): com.stripe.android.PaymentAuthConfig.Stripe3ds2Config.Builder;
						public build(): any;
					}
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.PaymentAuthConfig.Stripe3ds2Config.Companion>;
					}
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.PaymentAuthConfig.Stripe3ds2Config> {
						public static class: java.lang.Class<com.stripe.android.PaymentAuthConfig.Stripe3ds2Config.Creator>;
						public constructor();
						public newArray(param0: number): androidNative.Array<com.stripe.android.PaymentAuthConfig.Stripe3ds2Config>;
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.PaymentAuthConfig.Stripe3ds2Config;
					}
				}
				export class Stripe3ds2LabelCustomization {
					public static class: java.lang.Class<com.stripe.android.PaymentAuthConfig.Stripe3ds2LabelCustomization>;
					public static $stable: number;
					public equals(param0: any): boolean;
					public toString(): string;
					public constructor(param0: com.stripe.android.stripe3ds2.init.ui.LabelCustomization);
					public getLabelCustomization$payments_core_release(): com.stripe.android.stripe3ds2.init.ui.LabelCustomization;
					public copy(param0: com.stripe.android.stripe3ds2.init.ui.LabelCustomization): com.stripe.android.PaymentAuthConfig.Stripe3ds2LabelCustomization;
					public hashCode(): number;
					public component1$payments_core_release(): com.stripe.android.stripe3ds2.init.ui.LabelCustomization;
				}
				export module Stripe3ds2LabelCustomization {
					export class Builder extends com.stripe.android.ObjectBuilder<com.stripe.android.PaymentAuthConfig.Stripe3ds2LabelCustomization> {
						public static class: java.lang.Class<com.stripe.android.PaymentAuthConfig.Stripe3ds2LabelCustomization.Builder>;
						public static $stable: number;
						public constructor();
						public setHeadingTextFontName(param0: string): com.stripe.android.PaymentAuthConfig.Stripe3ds2LabelCustomization.Builder;
						public setTextFontSize(param0: number): com.stripe.android.PaymentAuthConfig.Stripe3ds2LabelCustomization.Builder;
						public build(): com.stripe.android.PaymentAuthConfig.Stripe3ds2LabelCustomization;
						public setHeadingTextColor(param0: string): com.stripe.android.PaymentAuthConfig.Stripe3ds2LabelCustomization.Builder;
						public setTextColor(param0: string): com.stripe.android.PaymentAuthConfig.Stripe3ds2LabelCustomization.Builder;
						public setHeadingTextFontSize(param0: number): com.stripe.android.PaymentAuthConfig.Stripe3ds2LabelCustomization.Builder;
						public setTextFontName(param0: string): com.stripe.android.PaymentAuthConfig.Stripe3ds2LabelCustomization.Builder;
						public build(): any;
					}
				}
				export class Stripe3ds2TextBoxCustomization {
					public static class: java.lang.Class<com.stripe.android.PaymentAuthConfig.Stripe3ds2TextBoxCustomization>;
					public static $stable: number;
					public equals(param0: any): boolean;
					public getTextBoxCustomization$payments_core_release(): com.stripe.android.stripe3ds2.init.ui.TextBoxCustomization;
					public toString(): string;
					public constructor(param0: com.stripe.android.stripe3ds2.init.ui.TextBoxCustomization);
					public copy(param0: com.stripe.android.stripe3ds2.init.ui.TextBoxCustomization): com.stripe.android.PaymentAuthConfig.Stripe3ds2TextBoxCustomization;
					public component1$payments_core_release(): com.stripe.android.stripe3ds2.init.ui.TextBoxCustomization;
					public hashCode(): number;
				}
				export module Stripe3ds2TextBoxCustomization {
					export class Builder extends com.stripe.android.ObjectBuilder<com.stripe.android.PaymentAuthConfig.Stripe3ds2TextBoxCustomization> {
						public static class: java.lang.Class<com.stripe.android.PaymentAuthConfig.Stripe3ds2TextBoxCustomization.Builder>;
						public static $stable: number;
						public build(): com.stripe.android.PaymentAuthConfig.Stripe3ds2TextBoxCustomization;
						public constructor();
						public setTextFontSize(param0: number): com.stripe.android.PaymentAuthConfig.Stripe3ds2TextBoxCustomization.Builder;
						public setBorderWidth(param0: number): com.stripe.android.PaymentAuthConfig.Stripe3ds2TextBoxCustomization.Builder;
						public setBorderColor(param0: string): com.stripe.android.PaymentAuthConfig.Stripe3ds2TextBoxCustomization.Builder;
						public setTextFontName(param0: string): com.stripe.android.PaymentAuthConfig.Stripe3ds2TextBoxCustomization.Builder;
						public setTextColor(param0: string): com.stripe.android.PaymentAuthConfig.Stripe3ds2TextBoxCustomization.Builder;
						public setCornerRadius(param0: number): com.stripe.android.PaymentAuthConfig.Stripe3ds2TextBoxCustomization.Builder;
						public build(): any;
					}
				}
				export class Stripe3ds2ToolbarCustomization {
					public static class: java.lang.Class<com.stripe.android.PaymentAuthConfig.Stripe3ds2ToolbarCustomization>;
					public static $stable: number;
					public equals(param0: any): boolean;
					public copy(param0: com.stripe.android.stripe3ds2.init.ui.ToolbarCustomization): com.stripe.android.PaymentAuthConfig.Stripe3ds2ToolbarCustomization;
					public toString(): string;
					public getToolbarCustomization$payments_core_release(): com.stripe.android.stripe3ds2.init.ui.ToolbarCustomization;
					public component1$payments_core_release(): com.stripe.android.stripe3ds2.init.ui.ToolbarCustomization;
					public constructor(param0: com.stripe.android.stripe3ds2.init.ui.ToolbarCustomization);
					public hashCode(): number;
				}
				export module Stripe3ds2ToolbarCustomization {
					export class Builder extends com.stripe.android.ObjectBuilder<com.stripe.android.PaymentAuthConfig.Stripe3ds2ToolbarCustomization> {
						public static class: java.lang.Class<com.stripe.android.PaymentAuthConfig.Stripe3ds2ToolbarCustomization.Builder>;
						public static $stable: number;
						public setTextColor(param0: string): com.stripe.android.PaymentAuthConfig.Stripe3ds2ToolbarCustomization.Builder;
						public constructor();
						public setButtonText(param0: string): com.stripe.android.PaymentAuthConfig.Stripe3ds2ToolbarCustomization.Builder;
						public setTextFontName(param0: string): com.stripe.android.PaymentAuthConfig.Stripe3ds2ToolbarCustomization.Builder;
						public setStatusBarColor(param0: string): com.stripe.android.PaymentAuthConfig.Stripe3ds2ToolbarCustomization.Builder;
						public setBackgroundColor(param0: string): com.stripe.android.PaymentAuthConfig.Stripe3ds2ToolbarCustomization.Builder;
						public build(): com.stripe.android.PaymentAuthConfig.Stripe3ds2ToolbarCustomization;
						public setHeaderText(param0: string): com.stripe.android.PaymentAuthConfig.Stripe3ds2ToolbarCustomization.Builder;
						public setTextFontSize(param0: number): com.stripe.android.PaymentAuthConfig.Stripe3ds2ToolbarCustomization.Builder;
						public build(): any;
					}
				}
				export class Stripe3ds2UiCustomization {
					public static class: java.lang.Class<com.stripe.android.PaymentAuthConfig.Stripe3ds2UiCustomization>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.PaymentAuthConfig.Stripe3ds2UiCustomization>;
					public static $stable: number;
					public equals(param0: any): boolean;
					public toString(): string;
					public component1(): com.stripe.android.stripe3ds2.init.ui.StripeUiCustomization;
					public copy(param0: com.stripe.android.stripe3ds2.init.ui.StripeUiCustomization): com.stripe.android.PaymentAuthConfig.Stripe3ds2UiCustomization;
					public describeContents(): number;
					public constructor(param0: com.stripe.android.stripe3ds2.init.ui.StripeUiCustomization);
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public hashCode(): number;
					public getUiCustomization(): com.stripe.android.stripe3ds2.init.ui.StripeUiCustomization;
				}
				export module Stripe3ds2UiCustomization {
					export class Builder extends com.stripe.android.ObjectBuilder<com.stripe.android.PaymentAuthConfig.Stripe3ds2UiCustomization> {
						public static class: java.lang.Class<com.stripe.android.PaymentAuthConfig.Stripe3ds2UiCustomization.Builder>;
						public static Companion: com.stripe.android.PaymentAuthConfig.Stripe3ds2UiCustomization.Builder.Companion;
						public static $stable: number;
						public constructor();
						public setAccentColor(param0: string): com.stripe.android.PaymentAuthConfig.Stripe3ds2UiCustomization.Builder;
						public setButtonCustomization(param0: com.stripe.android.PaymentAuthConfig.Stripe3ds2ButtonCustomization, param1: com.stripe.android.PaymentAuthConfig.Stripe3ds2UiCustomization.ButtonType): com.stripe.android.PaymentAuthConfig.Stripe3ds2UiCustomization.Builder;
						public setTextBoxCustomization(param0: com.stripe.android.PaymentAuthConfig.Stripe3ds2TextBoxCustomization): com.stripe.android.PaymentAuthConfig.Stripe3ds2UiCustomization.Builder;
						public static createWithAppTheme(param0: globalAndroid.app.Activity): com.stripe.android.PaymentAuthConfig.Stripe3ds2UiCustomization.Builder;
						public build(): com.stripe.android.PaymentAuthConfig.Stripe3ds2UiCustomization;
						public setToolbarCustomization(param0: com.stripe.android.PaymentAuthConfig.Stripe3ds2ToolbarCustomization): com.stripe.android.PaymentAuthConfig.Stripe3ds2UiCustomization.Builder;
						public setLabelCustomization(param0: com.stripe.android.PaymentAuthConfig.Stripe3ds2LabelCustomization): com.stripe.android.PaymentAuthConfig.Stripe3ds2UiCustomization.Builder;
						public build(): any;
					}
					export module Builder {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.PaymentAuthConfig.Stripe3ds2UiCustomization.Builder.Companion>;
							public createWithAppTheme(param0: globalAndroid.app.Activity): com.stripe.android.PaymentAuthConfig.Stripe3ds2UiCustomization.Builder;
						}
						export class WhenMappings {
							public static class: java.lang.Class<com.stripe.android.PaymentAuthConfig.Stripe3ds2UiCustomization.Builder.WhenMappings>;
						}
					}
					export class ButtonType {
						public static class: java.lang.Class<com.stripe.android.PaymentAuthConfig.Stripe3ds2UiCustomization.ButtonType>;
						public static SUBMIT: com.stripe.android.PaymentAuthConfig.Stripe3ds2UiCustomization.ButtonType;
						public static CONTINUE: com.stripe.android.PaymentAuthConfig.Stripe3ds2UiCustomization.ButtonType;
						public static NEXT: com.stripe.android.PaymentAuthConfig.Stripe3ds2UiCustomization.ButtonType;
						public static CANCEL: com.stripe.android.PaymentAuthConfig.Stripe3ds2UiCustomization.ButtonType;
						public static RESEND: com.stripe.android.PaymentAuthConfig.Stripe3ds2UiCustomization.ButtonType;
						public static SELECT: com.stripe.android.PaymentAuthConfig.Stripe3ds2UiCustomization.ButtonType;
						public static values(): androidNative.Array<com.stripe.android.PaymentAuthConfig.Stripe3ds2UiCustomization.ButtonType>;
						public static valueOf(param0: string): com.stripe.android.PaymentAuthConfig.Stripe3ds2UiCustomization.ButtonType;
					}
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.PaymentAuthConfig.Stripe3ds2UiCustomization> {
						public static class: java.lang.Class<com.stripe.android.PaymentAuthConfig.Stripe3ds2UiCustomization.Creator>;
						public newArray(param0: number): androidNative.Array<com.stripe.android.PaymentAuthConfig.Stripe3ds2UiCustomization>;
						public constructor();
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.PaymentAuthConfig.Stripe3ds2UiCustomization;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export class PaymentBrowserAuthStarter extends com.stripe.android.view.AuthActivityStarter<com.stripe.android.auth.PaymentBrowserAuthContract.Args> {
				public static class: java.lang.Class<com.stripe.android.PaymentBrowserAuthStarter>;
				/**
				 * Constructs a new instance of the com.stripe.android.PaymentBrowserAuthStarter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					start(param0: any): void;
				});
				public constructor();
				public start(param0: any): void;
			}
			export module PaymentBrowserAuthStarter {
				export class Legacy extends com.stripe.android.PaymentBrowserAuthStarter {
					public static class: java.lang.Class<com.stripe.android.PaymentBrowserAuthStarter.Legacy>;
					public static $stable: number;
					public start(param0: com.stripe.android.auth.PaymentBrowserAuthContract.Args): void;
					public start(param0: any): void;
					public constructor(param0: com.stripe.android.view.AuthActivityStarterHost, param1: com.stripe.android.payments.DefaultReturnUrl);
				}
				export class Modern extends com.stripe.android.PaymentBrowserAuthStarter {
					public static class: java.lang.Class<com.stripe.android.PaymentBrowserAuthStarter.Modern>;
					public static $stable: number;
					public constructor(param0: androidx.activity.result.ActivityResultLauncher<com.stripe.android.auth.PaymentBrowserAuthContract.Args>);
					public start(param0: com.stripe.android.auth.PaymentBrowserAuthContract.Args): void;
					public start(param0: any): void;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export class PaymentConfiguration {
				public static class: java.lang.Class<com.stripe.android.PaymentConfiguration>;
				public static Companion: com.stripe.android.PaymentConfiguration.Companion;
				public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.PaymentConfiguration>;
				public static $stable: number;
				public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
				public static init(param0: globalAndroid.content.Context, param1: string): void;
				public getPublishableKey(): string;
				public component1(): string;
				public copy(param0: string, param1: string): com.stripe.android.PaymentConfiguration;
				public toString(): string;
				public hashCode(): number;
				public getStripeAccountId(): string;
				public component2(): string;
				public equals(param0: any): boolean;
				public describeContents(): number;
				public static getInstance(param0: globalAndroid.content.Context): com.stripe.android.PaymentConfiguration;
				public static init(param0: globalAndroid.content.Context, param1: string, param2: string): void;
				public constructor(param0: string, param1: string);
			}
			export module PaymentConfiguration {
				export class Companion {
					public static class: java.lang.Class<com.stripe.android.PaymentConfiguration.Companion>;
					public init(param0: globalAndroid.content.Context, param1: string, param2: string): void;
					public init(param0: globalAndroid.content.Context, param1: string): void;
					public getInstance(param0: globalAndroid.content.Context): com.stripe.android.PaymentConfiguration;
				}
				export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.PaymentConfiguration> {
					public static class: java.lang.Class<com.stripe.android.PaymentConfiguration.Creator>;
					public newArray(param0: number): androidNative.Array<com.stripe.android.PaymentConfiguration>;
					public constructor();
					public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.PaymentConfiguration;
				}
				export class Store {
					public static class: java.lang.Class<com.stripe.android.PaymentConfiguration.Store>;
					public constructor(param0: globalAndroid.content.Context);
				}
				export module Store {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.PaymentConfiguration.Store.Companion>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export class PaymentController {
				public static class: java.lang.Class<com.stripe.android.PaymentController>;
				/**
				 * Constructs a new instance of the com.stripe.android.PaymentController interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					startConfirmAndAuth(param0: com.stripe.android.view.AuthActivityStarterHost, param1: com.stripe.android.model.ConfirmStripeIntentParams, param2: com.stripe.android.networking.ApiRequest.Options, param3: kotlin.coroutines.Continuation<any>): any;
					confirmAndAuthenticateAlipay(param0: com.stripe.android.model.ConfirmPaymentIntentParams, param1: com.stripe.android.AlipayAuthenticator, param2: com.stripe.android.networking.ApiRequest.Options, param3: kotlin.coroutines.Continuation<any>): any;
					confirmWeChatPay(param0: com.stripe.android.model.ConfirmPaymentIntentParams, param1: com.stripe.android.networking.ApiRequest.Options, param2: kotlin.coroutines.Continuation<any>): any;
					startAuth(param0: com.stripe.android.view.AuthActivityStarterHost, param1: string, param2: com.stripe.android.networking.ApiRequest.Options, param3: com.stripe.android.PaymentController.StripeIntentType, param4: kotlin.coroutines.Continuation<any>): any;
					startAuthenticateSource(param0: com.stripe.android.view.AuthActivityStarterHost, param1: com.stripe.android.model.Source, param2: com.stripe.android.networking.ApiRequest.Options, param3: kotlin.coroutines.Continuation<any>): any;
					shouldHandlePaymentResult(param0: number, param1: globalAndroid.content.Intent): boolean;
					shouldHandleSetupResult(param0: number, param1: globalAndroid.content.Intent): boolean;
					shouldHandleSourceResult(param0: number, param1: globalAndroid.content.Intent): boolean;
					getPaymentIntentResult(param0: globalAndroid.content.Intent, param1: kotlin.coroutines.Continuation<any>): any;
					getSetupIntentResult(param0: globalAndroid.content.Intent, param1: kotlin.coroutines.Continuation<any>): any;
					getAuthenticateSourceResult(param0: globalAndroid.content.Intent, param1: kotlin.coroutines.Continuation<any>): any;
					handleNextAction(param0: com.stripe.android.view.AuthActivityStarterHost, param1: com.stripe.android.model.StripeIntent, param2: com.stripe.android.networking.ApiRequest.Options, param3: kotlin.coroutines.Continuation<any>): any;
					registerLaunchersWithActivityResultCaller(param0: androidx.activity.result.ActivityResultCaller, param1: androidx.activity.result.ActivityResultCallback<com.stripe.android.payments.PaymentFlowResult.Unvalidated>): void;
					unregisterLaunchers(): void;
				});
				public constructor();
				public shouldHandlePaymentResult(param0: number, param1: globalAndroid.content.Intent): boolean;
				public handleNextAction(param0: com.stripe.android.view.AuthActivityStarterHost, param1: com.stripe.android.model.StripeIntent, param2: com.stripe.android.networking.ApiRequest.Options, param3: kotlin.coroutines.Continuation<any>): any;
				public startAuth(param0: com.stripe.android.view.AuthActivityStarterHost, param1: string, param2: com.stripe.android.networking.ApiRequest.Options, param3: com.stripe.android.PaymentController.StripeIntentType, param4: kotlin.coroutines.Continuation<any>): any;
				public confirmAndAuthenticateAlipay(param0: com.stripe.android.model.ConfirmPaymentIntentParams, param1: com.stripe.android.AlipayAuthenticator, param2: com.stripe.android.networking.ApiRequest.Options, param3: kotlin.coroutines.Continuation<any>): any;
				public shouldHandleSetupResult(param0: number, param1: globalAndroid.content.Intent): boolean;
				public getSetupIntentResult(param0: globalAndroid.content.Intent, param1: kotlin.coroutines.Continuation<any>): any;
				public getAuthenticateSourceResult(param0: globalAndroid.content.Intent, param1: kotlin.coroutines.Continuation<any>): any;
				public startConfirmAndAuth(param0: com.stripe.android.view.AuthActivityStarterHost, param1: com.stripe.android.model.ConfirmStripeIntentParams, param2: com.stripe.android.networking.ApiRequest.Options, param3: kotlin.coroutines.Continuation<any>): any;
				public shouldHandleSourceResult(param0: number, param1: globalAndroid.content.Intent): boolean;
				public registerLaunchersWithActivityResultCaller(param0: androidx.activity.result.ActivityResultCaller, param1: androidx.activity.result.ActivityResultCallback<com.stripe.android.payments.PaymentFlowResult.Unvalidated>): void;
				public startAuthenticateSource(param0: com.stripe.android.view.AuthActivityStarterHost, param1: com.stripe.android.model.Source, param2: com.stripe.android.networking.ApiRequest.Options, param3: kotlin.coroutines.Continuation<any>): any;
				public confirmWeChatPay(param0: com.stripe.android.model.ConfirmPaymentIntentParams, param1: com.stripe.android.networking.ApiRequest.Options, param2: kotlin.coroutines.Continuation<any>): any;
				public getPaymentIntentResult(param0: globalAndroid.content.Intent, param1: kotlin.coroutines.Continuation<any>): any;
				public unregisterLaunchers(): void;
			}
			export module PaymentController {
				export class StripeIntentType {
					public static class: java.lang.Class<com.stripe.android.PaymentController.StripeIntentType>;
					public static PaymentIntent: com.stripe.android.PaymentController.StripeIntentType;
					public static SetupIntent: com.stripe.android.PaymentController.StripeIntentType;
					public static valueOf(param0: string): com.stripe.android.PaymentController.StripeIntentType;
					public static values(): androidNative.Array<com.stripe.android.PaymentController.StripeIntentType>;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export class PaymentIntentResult extends com.stripe.android.StripeIntentResult<com.stripe.android.model.PaymentIntent> {
				public static class: java.lang.Class<com.stripe.android.PaymentIntentResult>;
				public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.PaymentIntentResult>;
				public static $stable: number;
				public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
				public getIntent(): any;
				public toString(): string;
				public getFailureMessage(): string;
				public component3(): string;
				public hashCode(): number;
				public getIntent(): com.stripe.android.model.PaymentIntent;
				public copy(param0: com.stripe.android.model.PaymentIntent, param1: number, param2: string): com.stripe.android.PaymentIntentResult;
				public equals(param0: any): boolean;
				public describeContents(): number;
				public constructor(param0: number);
				public component1(): com.stripe.android.model.PaymentIntent;
				public constructor(param0: com.stripe.android.model.PaymentIntent, param1: number, param2: string);
			}
			export module PaymentIntentResult {
				export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.PaymentIntentResult> {
					public static class: java.lang.Class<com.stripe.android.PaymentIntentResult.Creator>;
					public constructor();
					public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.PaymentIntentResult;
					public newArray(param0: number): androidNative.Array<com.stripe.android.PaymentIntentResult>;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export class PaymentRelayContract extends androidx.activity.result.contract.ActivityResultContract<com.stripe.android.PaymentRelayStarter.Args, com.stripe.android.payments.PaymentFlowResult.Unvalidated> {
				public static class: java.lang.Class<com.stripe.android.PaymentRelayContract>;
				public parseResult(param0: number, param1: globalAndroid.content.Intent): com.stripe.android.payments.PaymentFlowResult.Unvalidated;
				public createIntent(param0: globalAndroid.content.Context, param1: com.stripe.android.PaymentRelayStarter.Args): globalAndroid.content.Intent;
				public constructor();
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export class PaymentRelayStarter extends com.stripe.android.view.AuthActivityStarter<com.stripe.android.PaymentRelayStarter.Args> {
				public static class: java.lang.Class<com.stripe.android.PaymentRelayStarter>;
				/**
				 * Constructs a new instance of the com.stripe.android.PaymentRelayStarter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					start(param0: any): void;
				});
				public constructor();
				public start(param0: any): void;
			}
			export module PaymentRelayStarter {
				export abstract class Args {
					public static class: java.lang.Class<com.stripe.android.PaymentRelayStarter.Args>;
					public static Companion: com.stripe.android.PaymentRelayStarter.Args.Companion;
					public static $stable: number;
					public toResult(): com.stripe.android.payments.PaymentFlowResult.Unvalidated;
					public getRequestCode(): number;
				}
				export module Args {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.PaymentRelayStarter.Args.Companion>;
						public create(param0: com.stripe.android.model.StripeIntent, param1: string): com.stripe.android.PaymentRelayStarter.Args;
					}
					export class ErrorArgs extends com.stripe.android.PaymentRelayStarter.Args {
						public static class: java.lang.Class<com.stripe.android.PaymentRelayStarter.Args.ErrorArgs>;
						public static Companion: com.stripe.android.PaymentRelayStarter.Args.ErrorArgs.Companion;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.PaymentRelayStarter.Args.ErrorArgs>;
						public static $stable: number;
						public component2(): number;
						public describeContents(): number;
						public toResult(): com.stripe.android.payments.PaymentFlowResult.Unvalidated;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public copy(param0: com.stripe.android.core.exception.StripeException, param1: number): com.stripe.android.PaymentRelayStarter.Args.ErrorArgs;
						public getRequestCode(): number;
						public constructor(param0: com.stripe.android.core.exception.StripeException, param1: number);
						public getException$payments_core_release(): com.stripe.android.core.exception.StripeException;
						public toString(): string;
						public component1$payments_core_release(): com.stripe.android.core.exception.StripeException;
					}
					export module ErrorArgs {
						export class Companion extends kotlinx.parcelize.Parceler<com.stripe.android.PaymentRelayStarter.Args.ErrorArgs> {
							public static class: java.lang.Class<com.stripe.android.PaymentRelayStarter.Args.ErrorArgs.Companion>;
							public newArray(param0: number): androidNative.Array<com.stripe.android.PaymentRelayStarter.Args.ErrorArgs>;
							public create(param0: globalAndroid.os.Parcel): com.stripe.android.PaymentRelayStarter.Args.ErrorArgs;
							public write(param0: com.stripe.android.PaymentRelayStarter.Args.ErrorArgs, param1: globalAndroid.os.Parcel, param2: number): void;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.PaymentRelayStarter.Args.ErrorArgs> {
							public static class: java.lang.Class<com.stripe.android.PaymentRelayStarter.Args.ErrorArgs.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.PaymentRelayStarter.Args.ErrorArgs;
							public newArray(param0: number): androidNative.Array<com.stripe.android.PaymentRelayStarter.Args.ErrorArgs>;
						}
					}
					export class PaymentIntentArgs extends com.stripe.android.PaymentRelayStarter.Args {
						public static class: java.lang.Class<com.stripe.android.PaymentRelayStarter.Args.PaymentIntentArgs>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.PaymentRelayStarter.Args.PaymentIntentArgs>;
						public static $stable: number;
						public getStripeAccountId$payments_core_release(): string;
						public describeContents(): number;
						public component1$payments_core_release(): com.stripe.android.model.PaymentIntent;
						public toResult(): com.stripe.android.payments.PaymentFlowResult.Unvalidated;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public constructor(param0: com.stripe.android.model.PaymentIntent, param1: string);
						public getRequestCode(): number;
						public toString(): string;
						public component2$payments_core_release(): string;
						public copy(param0: com.stripe.android.model.PaymentIntent, param1: string): com.stripe.android.PaymentRelayStarter.Args.PaymentIntentArgs;
						public getPaymentIntent$payments_core_release(): com.stripe.android.model.PaymentIntent;
					}
					export module PaymentIntentArgs {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.PaymentRelayStarter.Args.PaymentIntentArgs> {
							public static class: java.lang.Class<com.stripe.android.PaymentRelayStarter.Args.PaymentIntentArgs.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.PaymentRelayStarter.Args.PaymentIntentArgs>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.PaymentRelayStarter.Args.PaymentIntentArgs;
						}
					}
					export class SetupIntentArgs extends com.stripe.android.PaymentRelayStarter.Args {
						public static class: java.lang.Class<com.stripe.android.PaymentRelayStarter.Args.SetupIntentArgs>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.PaymentRelayStarter.Args.SetupIntentArgs>;
						public static $stable: number;
						public getStripeAccountId$payments_core_release(): string;
						public describeContents(): number;
						public toResult(): com.stripe.android.payments.PaymentFlowResult.Unvalidated;
						public component1$payments_core_release(): com.stripe.android.model.SetupIntent;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getSetupIntent$payments_core_release(): com.stripe.android.model.SetupIntent;
						public getRequestCode(): number;
						public toString(): string;
						public copy(param0: com.stripe.android.model.SetupIntent, param1: string): com.stripe.android.PaymentRelayStarter.Args.SetupIntentArgs;
						public component2$payments_core_release(): string;
						public constructor(param0: com.stripe.android.model.SetupIntent, param1: string);
					}
					export module SetupIntentArgs {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.PaymentRelayStarter.Args.SetupIntentArgs> {
							public static class: java.lang.Class<com.stripe.android.PaymentRelayStarter.Args.SetupIntentArgs.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.PaymentRelayStarter.Args.SetupIntentArgs>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.PaymentRelayStarter.Args.SetupIntentArgs;
						}
					}
					export class SourceArgs extends com.stripe.android.PaymentRelayStarter.Args {
						public static class: java.lang.Class<com.stripe.android.PaymentRelayStarter.Args.SourceArgs>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.PaymentRelayStarter.Args.SourceArgs>;
						public static $stable: number;
						public getStripeAccountId$payments_core_release(): string;
						public describeContents(): number;
						public toResult(): com.stripe.android.payments.PaymentFlowResult.Unvalidated;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public copy(param0: com.stripe.android.model.Source, param1: string): com.stripe.android.PaymentRelayStarter.Args.SourceArgs;
						public getSource$payments_core_release(): com.stripe.android.model.Source;
						public getRequestCode(): number;
						public component1$payments_core_release(): com.stripe.android.model.Source;
						public toString(): string;
						public component2$payments_core_release(): string;
						public constructor(param0: com.stripe.android.model.Source, param1: string);
					}
					export module SourceArgs {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.PaymentRelayStarter.Args.SourceArgs> {
							public static class: java.lang.Class<com.stripe.android.PaymentRelayStarter.Args.SourceArgs.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.PaymentRelayStarter.Args.SourceArgs>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.PaymentRelayStarter.Args.SourceArgs;
						}
					}
				}
				export class Legacy extends com.stripe.android.PaymentRelayStarter {
					public static class: java.lang.Class<com.stripe.android.PaymentRelayStarter.Legacy>;
					public static $stable: number;
					public start(param0: com.stripe.android.PaymentRelayStarter.Args): void;
					public start(param0: any): void;
					public constructor(param0: com.stripe.android.view.AuthActivityStarterHost);
				}
				export class Modern extends com.stripe.android.PaymentRelayStarter {
					public static class: java.lang.Class<com.stripe.android.PaymentRelayStarter.Modern>;
					public static $stable: number;
					public start(param0: com.stripe.android.PaymentRelayStarter.Args): void;
					public start(param0: any): void;
					public constructor(param0: androidx.activity.result.ActivityResultLauncher<com.stripe.android.PaymentRelayStarter.Args>);
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export class PaymentSession {
				public static class: java.lang.Class<com.stripe.android.PaymentSession>;
				public static Companion: com.stripe.android.PaymentSession.Companion;
				public static $stable: number;
				public static PRODUCT_TOKEN: string;
				public static EXTRA_PAYMENT_SESSION_DATA: string;
				public getViewModel$payments_core_release(): com.stripe.android.PaymentSessionViewModel;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.app.Application, param2: androidx.lifecycle.ViewModelStoreOwner, param3: androidx.lifecycle.LifecycleOwner, param4: androidx.savedstate.SavedStateRegistryOwner, param5: com.stripe.android.PaymentSessionConfig, param6: com.stripe.android.CustomerSession, param7: com.stripe.android.view.ActivityStarter<com.stripe.android.view.PaymentMethodsActivity, com.stripe.android.view.PaymentMethodsActivityStarter.Args>, param8: com.stripe.android.view.ActivityStarter<com.stripe.android.view.PaymentFlowActivity, com.stripe.android.view.PaymentFlowActivityStarter.Args>, param9: com.stripe.android.PaymentSessionData);
				public getListener$payments_core_release(): com.stripe.android.PaymentSession.PaymentSessionListener;
				public constructor(param0: androidx.activity.ComponentActivity, param1: com.stripe.android.PaymentSessionConfig);
				public presentPaymentMethodSelection(param0: string): void;
				public onCompleted(): void;
				public setCartTotal(param0: number): void;
				public clearPaymentMethod(): void;
				public constructor(param0: androidx.fragment.app.Fragment, param1: com.stripe.android.PaymentSessionConfig);
				public presentShippingFlow(): void;
				public init(param0: com.stripe.android.PaymentSession.PaymentSessionListener): void;
				public setListener$payments_core_release(param0: com.stripe.android.PaymentSession.PaymentSessionListener): void;
				public handlePaymentData(param0: number, param1: number, param2: globalAndroid.content.Intent): boolean;
			}
			export module PaymentSession {
				export class Companion {
					public static class: java.lang.Class<com.stripe.android.PaymentSession.Companion>;
				}
				export class PaymentSessionListener {
					public static class: java.lang.Class<com.stripe.android.PaymentSession.PaymentSessionListener>;
					/**
					 * Constructs a new instance of the com.stripe.android.PaymentSession$PaymentSessionListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onCommunicatingStateChanged(param0: boolean): void;
						onError(param0: number, param1: string): void;
						onPaymentSessionDataChanged(param0: com.stripe.android.PaymentSessionData): void;
					});
					public constructor();
					public onError(param0: number, param1: string): void;
					public onPaymentSessionDataChanged(param0: com.stripe.android.PaymentSessionData): void;
					public onCommunicatingStateChanged(param0: boolean): void;
				}
				export class WhenMappings {
					public static class: java.lang.Class<com.stripe.android.PaymentSession.WhenMappings>;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export class PaymentSessionConfig {
				public static class: java.lang.Class<com.stripe.android.PaymentSessionConfig>;
				public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.PaymentSessionConfig>;
				public static $stable: number;
				public component16$payments_core_release(): java.lang.Integer;
				public component8(): java.util.List<com.stripe.android.model.PaymentMethod.Type>;
				public component4(): boolean;
				public getPaymentMethodTypes(): java.util.List<com.stripe.android.model.PaymentMethod.Type>;
				public getAllowedShippingCountryCodes(): java.util.Set<string>;
				public component5(): boolean;
				public component7(): number;
				public component13$payments_core_release(): boolean;
				public getPrepopulatedShippingInfo(): com.stripe.android.model.ShippingInformation;
				public getShouldShowGooglePay(): boolean;
				public constructor();
				public getAddPaymentMethodFooterLayoutId(): number;
				public getWindowFlags$payments_core_release(): java.lang.Integer;
				public getShippingMethodsFactory$payments_core_release(): com.stripe.android.PaymentSessionConfig.ShippingMethodsFactory;
				public hashCode(): number;
				public getCanDeletePaymentMethods(): boolean;
				public component9(): boolean;
				public component3(): com.stripe.android.model.ShippingInformation;
				public copy(param0: java.util.List<any>, param1: java.util.List<any>, param2: com.stripe.android.model.ShippingInformation, param3: boolean, param4: boolean, param5: number, param6: number, param7: java.util.List<any>, param8: boolean, param9: java.util.Set<string>, param10: com.stripe.android.view.BillingAddressFields, param11: boolean, param12: boolean, param13: com.stripe.android.PaymentSessionConfig.ShippingInformationValidator, param14: com.stripe.android.PaymentSessionConfig.ShippingMethodsFactory, param15: java.lang.Integer): com.stripe.android.PaymentSessionConfig;
				public equals(param0: any): boolean;
				public component6(): number;
				public getOptionalShippingInfoFields(): java.util.List<com.stripe.android.view.ShippingInfoWidget.CustomizableShippingField>;
				public component1(): java.util.List<com.stripe.android.view.ShippingInfoWidget.CustomizableShippingField>;
				public getHiddenShippingInfoFields(): java.util.List<com.stripe.android.view.ShippingInfoWidget.CustomizableShippingField>;
				public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
				public constructor(param0: java.util.List<any>, param1: java.util.List<any>, param2: com.stripe.android.model.ShippingInformation, param3: boolean, param4: boolean, param5: number, param6: number, param7: java.util.List<any>, param8: boolean, param9: java.util.Set<string>, param10: com.stripe.android.view.BillingAddressFields, param11: boolean, param12: boolean, param13: com.stripe.android.PaymentSessionConfig.ShippingInformationValidator, param14: com.stripe.android.PaymentSessionConfig.ShippingMethodsFactory, param15: java.lang.Integer);
				public getShouldPrefetchCustomer$payments_core_release(): boolean;
				public getPaymentMethodsFooterLayoutId(): number;
				public component15$payments_core_release(): com.stripe.android.PaymentSessionConfig.ShippingMethodsFactory;
				public toString(): string;
				public component11(): com.stripe.android.view.BillingAddressFields;
				public component14$payments_core_release(): com.stripe.android.PaymentSessionConfig.ShippingInformationValidator;
				public component2(): java.util.List<com.stripe.android.view.ShippingInfoWidget.CustomizableShippingField>;
				public getShippingInformationValidator$payments_core_release(): com.stripe.android.PaymentSessionConfig.ShippingInformationValidator;
				public component12(): boolean;
				public describeContents(): number;
				public isShippingInfoRequired(): boolean;
				public isShippingMethodRequired(): boolean;
				public component10(): java.util.Set<string>;
				public getBillingAddressFields(): com.stripe.android.view.BillingAddressFields;
			}
			export module PaymentSessionConfig {
				export class Builder extends com.stripe.android.ObjectBuilder<com.stripe.android.PaymentSessionConfig> {
					public static class: java.lang.Class<com.stripe.android.PaymentSessionConfig.Builder>;
					public static $stable: number;
					public setPaymentMethodsFooter(param0: number): com.stripe.android.PaymentSessionConfig.Builder;
					public setShippingInfoRequired(param0: boolean): com.stripe.android.PaymentSessionConfig.Builder;
					public setCanDeletePaymentMethods(param0: boolean): com.stripe.android.PaymentSessionConfig.Builder;
					public setShippingInformationValidator(param0: com.stripe.android.PaymentSessionConfig.ShippingInformationValidator): com.stripe.android.PaymentSessionConfig.Builder;
					public build(): any;
					public setOptionalShippingInfoFields(param0: androidNative.Array<com.stripe.android.view.ShippingInfoWidget.CustomizableShippingField>): com.stripe.android.PaymentSessionConfig.Builder;
					public setPrepopulatedShippingInfo(param0: com.stripe.android.model.ShippingInformation): com.stripe.android.PaymentSessionConfig.Builder;
					public setShouldShowGooglePay(param0: boolean): com.stripe.android.PaymentSessionConfig.Builder;
					public build(): com.stripe.android.PaymentSessionConfig;
					public setAllowedShippingCountryCodes(param0: java.util.Set<string>): com.stripe.android.PaymentSessionConfig.Builder;
					public constructor();
					public setShippingMethodsRequired(param0: boolean): com.stripe.android.PaymentSessionConfig.Builder;
					public setWindowFlags(param0: java.lang.Integer): com.stripe.android.PaymentSessionConfig.Builder;
					public setBillingAddressFields(param0: com.stripe.android.view.BillingAddressFields): com.stripe.android.PaymentSessionConfig.Builder;
					public setPaymentMethodTypes(param0: java.util.List<any>): com.stripe.android.PaymentSessionConfig.Builder;
					public setAddPaymentMethodFooter(param0: number): com.stripe.android.PaymentSessionConfig.Builder;
					public setHiddenShippingInfoFields(param0: androidNative.Array<com.stripe.android.view.ShippingInfoWidget.CustomizableShippingField>): com.stripe.android.PaymentSessionConfig.Builder;
					public setShippingMethodsFactory(param0: com.stripe.android.PaymentSessionConfig.ShippingMethodsFactory): com.stripe.android.PaymentSessionConfig.Builder;
					public setShouldPrefetchCustomer(param0: boolean): com.stripe.android.PaymentSessionConfig.Builder;
				}
				export class Companion {
					public static class: java.lang.Class<com.stripe.android.PaymentSessionConfig.Companion>;
				}
				export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.PaymentSessionConfig> {
					public static class: java.lang.Class<com.stripe.android.PaymentSessionConfig.Creator>;
					public constructor();
					public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.PaymentSessionConfig;
					public newArray(param0: number): androidNative.Array<com.stripe.android.PaymentSessionConfig>;
				}
				export class DefaultShippingInfoValidator extends com.stripe.android.PaymentSessionConfig.ShippingInformationValidator {
					public static class: java.lang.Class<com.stripe.android.PaymentSessionConfig.DefaultShippingInfoValidator>;
					public getErrorMessage(param0: com.stripe.android.model.ShippingInformation): string;
					public constructor();
					public isValid(param0: com.stripe.android.model.ShippingInformation): boolean;
				}
				export class ShippingInformationValidator {
					public static class: java.lang.Class<com.stripe.android.PaymentSessionConfig.ShippingInformationValidator>;
					/**
					 * Constructs a new instance of the com.stripe.android.PaymentSessionConfig$ShippingInformationValidator interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						isValid(param0: com.stripe.android.model.ShippingInformation): boolean;
						getErrorMessage(param0: com.stripe.android.model.ShippingInformation): string;
					});
					public constructor();
					public getErrorMessage(param0: com.stripe.android.model.ShippingInformation): string;
					public isValid(param0: com.stripe.android.model.ShippingInformation): boolean;
				}
				export class ShippingMethodsFactory {
					public static class: java.lang.Class<com.stripe.android.PaymentSessionConfig.ShippingMethodsFactory>;
					/**
					 * Constructs a new instance of the com.stripe.android.PaymentSessionConfig$ShippingMethodsFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						create(param0: com.stripe.android.model.ShippingInformation): java.util.List<com.stripe.android.model.ShippingMethod>;
					});
					public constructor();
					public create(param0: com.stripe.android.model.ShippingInformation): java.util.List<com.stripe.android.model.ShippingMethod>;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export class PaymentSessionData {
				public static class: java.lang.Class<com.stripe.android.PaymentSessionData>;
				public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.PaymentSessionData>;
				public static $stable: number;
				public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
				public component4(): number;
				public getShippingInformation(): com.stripe.android.model.ShippingInformation;
				public getUseGooglePay(): boolean;
				public constructor(param0: com.stripe.android.PaymentSessionConfig);
				public toString(): string;
				public copy(param0: boolean, param1: boolean, param2: number, param3: number, param4: com.stripe.android.model.ShippingInformation, param5: com.stripe.android.model.ShippingMethod, param6: com.stripe.android.model.PaymentMethod, param7: boolean): com.stripe.android.PaymentSessionData;
				public getPaymentMethod(): com.stripe.android.model.PaymentMethod;
				public component6(): com.stripe.android.model.ShippingMethod;
				public getShippingMethod(): com.stripe.android.model.ShippingMethod;
				public component3(): number;
				public component5(): com.stripe.android.model.ShippingInformation;
				public isPaymentReadyToCharge(): boolean;
				public hashCode(): number;
				public equals(param0: any): boolean;
				public describeContents(): number;
				public getCartTotal(): number;
				public component7(): com.stripe.android.model.PaymentMethod;
				public component8(): boolean;
				public constructor(param0: boolean, param1: boolean, param2: number, param3: number, param4: com.stripe.android.model.ShippingInformation, param5: com.stripe.android.model.ShippingMethod, param6: com.stripe.android.model.PaymentMethod, param7: boolean);
				public getShippingTotal(): number;
			}
			export module PaymentSessionData {
				export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.PaymentSessionData> {
					public static class: java.lang.Class<com.stripe.android.PaymentSessionData.Creator>;
					public constructor();
					public newArray(param0: number): androidNative.Array<com.stripe.android.PaymentSessionData>;
					public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.PaymentSessionData;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export class PaymentSessionPrefs {
				public static class: java.lang.Class<com.stripe.android.PaymentSessionPrefs>;
				/**
				 * Constructs a new instance of the com.stripe.android.PaymentSessionPrefs interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					getPaymentMethodId(param0: string): string;
					savePaymentMethodId(param0: string, param1: string): void;
					<clinit>(): void;
				});
				public constructor();
				public static Companion: com.stripe.android.PaymentSessionPrefs.Companion;
				public savePaymentMethodId(param0: string, param1: string): void;
				public getPaymentMethodId(param0: string): string;
			}
			export module PaymentSessionPrefs {
				export class Companion {
					public static class: java.lang.Class<com.stripe.android.PaymentSessionPrefs.Companion>;
				}
				export class Default extends com.stripe.android.PaymentSessionPrefs {
					public static class: java.lang.Class<com.stripe.android.PaymentSessionPrefs.Default>;
					public static $stable: number;
					public constructor(param0: globalAndroid.content.Context);
					public getPaymentMethodId(param0: string): string;
					public savePaymentMethodId(param0: string, param1: string): void;
					public getPrefs(): globalAndroid.content.SharedPreferences;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export class PaymentSessionViewModel {
				public static class: java.lang.Class<com.stripe.android.PaymentSessionViewModel>;
				public static Companion: com.stripe.android.PaymentSessionViewModel.Companion;
				public static KEY_PAYMENT_SESSION_DATA: string;
				public constructor(param0: globalAndroid.app.Application, param1: androidx.lifecycle.SavedStateHandle, param2: com.stripe.android.PaymentSessionData, param3: com.stripe.android.CustomerSession, param4: com.stripe.android.PaymentSessionPrefs);
				public getPaymentSessionData(): com.stripe.android.PaymentSessionData;
				public getPaymentSessionDataLiveData(): androidx.lifecycle.LiveData<com.stripe.android.PaymentSessionData>;
				public getNetworkState$payments_core_release(): androidx.lifecycle.LiveData<com.stripe.android.PaymentSessionViewModel.NetworkState>;
				public clearPaymentMethod(): void;
				public setPaymentSessionData(param0: com.stripe.android.PaymentSessionData): void;
			}
			export module PaymentSessionViewModel {
				export class Companion {
					public static class: java.lang.Class<com.stripe.android.PaymentSessionViewModel.Companion>;
				}
				export class Factory {
					public static class: java.lang.Class<com.stripe.android.PaymentSessionViewModel.Factory>;
					public create(param0: string, param1: java.lang.Class, param2: androidx.lifecycle.SavedStateHandle): androidx.lifecycle.ViewModel;
					public constructor(param0: globalAndroid.app.Application, param1: androidx.savedstate.SavedStateRegistryOwner, param2: com.stripe.android.PaymentSessionData, param3: com.stripe.android.CustomerSession);
				}
				export abstract class FetchCustomerResult {
					public static class: java.lang.Class<com.stripe.android.PaymentSessionViewModel.FetchCustomerResult>;
					public static $stable: number;
				}
				export module FetchCustomerResult {
					export class Error extends com.stripe.android.PaymentSessionViewModel.FetchCustomerResult {
						public static class: java.lang.Class<com.stripe.android.PaymentSessionViewModel.FetchCustomerResult.Error>;
						public static $stable: number;
						public getErrorMessage(): string;
						public getErrorCode(): number;
						public component2(): string;
						public getStripeError(): com.stripe.android.core.StripeError;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public copy(param0: number, param1: string, param2: com.stripe.android.core.StripeError): com.stripe.android.PaymentSessionViewModel.FetchCustomerResult.Error;
						public component1(): number;
						public component3(): com.stripe.android.core.StripeError;
						public constructor(param0: number, param1: string, param2: com.stripe.android.core.StripeError);
						public toString(): string;
					}
					export class Success extends com.stripe.android.PaymentSessionViewModel.FetchCustomerResult {
						public static class: java.lang.Class<com.stripe.android.PaymentSessionViewModel.FetchCustomerResult.Success>;
						public static INSTANCE: com.stripe.android.PaymentSessionViewModel.FetchCustomerResult.Success;
						public static $stable: number;
					}
				}
				export class NetworkState {
					public static class: java.lang.Class<com.stripe.android.PaymentSessionViewModel.NetworkState>;
					public static Active: com.stripe.android.PaymentSessionViewModel.NetworkState;
					public static Inactive: com.stripe.android.PaymentSessionViewModel.NetworkState;
					public static valueOf(param0: string): com.stripe.android.PaymentSessionViewModel.NetworkState;
					public static values(): androidNative.Array<com.stripe.android.PaymentSessionViewModel.NetworkState>;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export class SetupIntentResult extends com.stripe.android.StripeIntentResult<com.stripe.android.model.SetupIntent> {
				public static class: java.lang.Class<com.stripe.android.SetupIntentResult>;
				public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.SetupIntentResult>;
				public static $stable: number;
				public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
				public constructor(param0: com.stripe.android.model.SetupIntent, param1: number, param2: string);
				public copy(param0: com.stripe.android.model.SetupIntent, param1: number, param2: string): com.stripe.android.SetupIntentResult;
				public getIntent(): com.stripe.android.model.SetupIntent;
				public getIntent(): any;
				public component1(): com.stripe.android.model.SetupIntent;
				public toString(): string;
				public getFailureMessage(): string;
				public component3(): string;
				public hashCode(): number;
				public equals(param0: any): boolean;
				public describeContents(): number;
				public constructor(param0: number);
			}
			export module SetupIntentResult {
				export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.SetupIntentResult> {
					public static class: java.lang.Class<com.stripe.android.SetupIntentResult.Creator>;
					public newArray(param0: number): androidNative.Array<com.stripe.android.SetupIntentResult>;
					public constructor();
					public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.SetupIntentResult;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export class Stripe {
				public static class: java.lang.Class<com.stripe.android.Stripe>;
				public static Companion: com.stripe.android.Stripe.Companion;
				public static $stable: number;
				public static API_VERSION: string;
				public static VERSION_NAME: string;
				public static VERSION: string;
				public retrievePaymentIntent(param0: string, param1: string, param2: com.stripe.android.ApiResultCallback<any>): void;
				public createSourceSynchronous(param0: com.stripe.android.model.SourceParams): com.stripe.android.model.Source;
				public createPaymentMethodSynchronous(param0: com.stripe.android.model.PaymentMethodCreateParams): com.stripe.android.model.PaymentMethod;
				public createPersonTokenSynchronous(param0: com.stripe.android.model.PersonTokenParams, param1: string, param2: string): com.stripe.android.model.Token;
				public createCardToken(param0: com.stripe.android.model.CardParams, param1: string, param2: com.stripe.android.ApiResultCallback<any>): void;
				public createRadarSession(param0: string, param1: com.stripe.android.ApiResultCallback<any>): void;
				public confirmAlipayPayment(param0: com.stripe.android.model.ConfirmPaymentIntentParams, param1: com.stripe.android.AlipayAuthenticator, param2: string, param3: com.stripe.android.ApiResultCallback<any>): void;
				/** @deprecated */
				public confirmWeChatPayPayment(param0: com.stripe.android.model.ConfirmPaymentIntentParams, param1: com.stripe.android.ApiResultCallback<any>): void;
				public createPiiTokenSynchronous(param0: string, param1: string): com.stripe.android.model.Token;
				public confirmPayment(param0: androidx.fragment.app.Fragment, param1: com.stripe.android.model.ConfirmPaymentIntentParams): void;
				public retrievePaymentIntentSynchronous(param0: string): com.stripe.android.model.PaymentIntent;
				public createCvcUpdateToken(param0: string, param1: string, param2: string, param3: com.stripe.android.ApiResultCallback<any>): void;
				public createPiiTokenSynchronous(param0: string): com.stripe.android.model.Token;
				public createSource(param0: com.stripe.android.model.SourceParams, param1: com.stripe.android.ApiResultCallback<any>): void;
				public createPaymentMethod(param0: com.stripe.android.model.PaymentMethodCreateParams, param1: string, param2: string, param3: com.stripe.android.ApiResultCallback<any>): void;
				public createPersonTokenSynchronous(param0: com.stripe.android.model.PersonTokenParams, param1: string): com.stripe.android.model.Token;
				public createFile(param0: com.stripe.android.model.StripeFileParams, param1: string, param2: string, param3: com.stripe.android.ApiResultCallback<any>): void;
				public retrieveSetupIntentSynchronous(param0: string): com.stripe.android.model.SetupIntent;
				public createCvcUpdateTokenSynchronous(param0: string): com.stripe.android.model.Token;
				public onPaymentResult(param0: number, param1: globalAndroid.content.Intent, param2: com.stripe.android.ApiResultCallback<any>): boolean;
				public getStripeAccountId$payments_core_release(): string;
				public constructor(param0: com.stripe.android.networking.StripeRepository, param1: com.stripe.android.PaymentController, param2: string, param3: string);
				public constructor(param0: globalAndroid.content.Context, param1: string, param2: string);
				public constructor(param0: com.stripe.android.networking.StripeRepository, param1: com.stripe.android.PaymentController, param2: string, param3: string, param4: kotlin.coroutines.CoroutineContext);
				/** @deprecated */
				public confirmWeChatPayPayment(param0: com.stripe.android.model.ConfirmPaymentIntentParams, param1: string, param2: com.stripe.android.ApiResultCallback<any>): void;
				public handleNextActionForPayment(param0: androidx.fragment.app.Fragment, param1: string, param2: string): void;
				public constructor(param0: globalAndroid.content.Context, param1: string, param2: string, param3: boolean);
				public constructor(param0: globalAndroid.content.Context, param1: string);
				public confirmSetupIntent(param0: androidx.fragment.app.Fragment, param1: com.stripe.android.model.ConfirmSetupIntentParams): void;
				public createBankAccountToken(param0: com.stripe.android.model.BankAccountTokenParams, param1: com.stripe.android.ApiResultCallback<any>): void;
				public createCardToken(param0: com.stripe.android.model.CardParams, param1: string, param2: string, param3: com.stripe.android.ApiResultCallback<any>): void;
				public createPersonToken(param0: com.stripe.android.model.PersonTokenParams, param1: com.stripe.android.ApiResultCallback<any>): void;
				/** @deprecated */
				public confirmPaymentIntentSynchronous(param0: com.stripe.android.model.ConfirmPaymentIntentParams, param1: string): com.stripe.android.model.PaymentIntent;
				public createRadarSession(param0: com.stripe.android.ApiResultCallback<any>): void;
				public createPiiToken(param0: string, param1: string, param2: string, param3: com.stripe.android.ApiResultCallback<any>): void;
				public createFileSynchronous(param0: com.stripe.android.model.StripeFileParams, param1: string, param2: string): com.stripe.android.model.StripeFile;
				public handleNextActionForPayment(param0: androidx.activity.ComponentActivity, param1: string): void;
				public constructor(param0: globalAndroid.content.Context, param1: string, param2: string, param3: boolean, param4: java.util.Set<any>);
				public createCvcUpdateToken(param0: string, param1: string, param2: com.stripe.android.ApiResultCallback<any>): void;
				public createSource(param0: com.stripe.android.model.SourceParams, param1: string, param2: string, param3: com.stripe.android.ApiResultCallback<any>): void;
				public createBankAccountToken(param0: com.stripe.android.model.BankAccountTokenParams, param1: string, param2: com.stripe.android.ApiResultCallback<any>): void;
				public getPublishableKey$payments_core_release(): string;
				public handleNextActionForSetupIntent(param0: androidx.activity.ComponentActivity, param1: string, param2: string): void;
				public createSourceSynchronous(param0: com.stripe.android.model.SourceParams, param1: string, param2: string): com.stripe.android.model.Source;
				public handleNextActionForSetupIntent(param0: androidx.activity.ComponentActivity, param1: string): void;
				public authenticateSource(param0: androidx.fragment.app.Fragment, param1: com.stripe.android.model.Source): void;
				public handleNextActionForPayment(param0: androidx.activity.ComponentActivity, param1: string, param2: string): void;
				public authenticateSource(param0: androidx.activity.ComponentActivity, param1: com.stripe.android.model.Source): void;
				public confirmSetupIntent(param0: androidx.fragment.app.Fragment, param1: com.stripe.android.model.ConfirmSetupIntentParams, param2: string): void;
				public retrieveSetupIntent(param0: string, param1: string, param2: com.stripe.android.ApiResultCallback<any>): void;
				public createPaymentMethod(param0: com.stripe.android.model.PaymentMethodCreateParams, param1: com.stripe.android.ApiResultCallback<any>): void;
				public createAccountToken(param0: com.stripe.android.model.AccountParams, param1: string, param2: string, param3: com.stripe.android.ApiResultCallback<any>): void;
				public static setAdvancedFraudSignalsEnabled(param0: boolean): void;
				public createCvcUpdateTokenSynchronous(param0: string, param1: string): com.stripe.android.model.Token;
				public confirmAlipayPayment(param0: com.stripe.android.model.ConfirmPaymentIntentParams, param1: com.stripe.android.AlipayAuthenticator, param2: com.stripe.android.ApiResultCallback<any>): void;
				public createFile(param0: com.stripe.android.model.StripeFileParams, param1: com.stripe.android.ApiResultCallback<any>): void;
				public createAccountTokenSynchronous(param0: com.stripe.android.model.AccountParams, param1: string, param2: string): com.stripe.android.model.Token;
				public createPersonToken(param0: com.stripe.android.model.PersonTokenParams, param1: string, param2: com.stripe.android.ApiResultCallback<any>): void;
				public authenticateSource(param0: androidx.activity.ComponentActivity, param1: com.stripe.android.model.Source, param2: string): void;
				public static getAppInfo(): com.stripe.android.AppInfo;
				public confirmSetupIntent(param0: androidx.activity.ComponentActivity, param1: com.stripe.android.model.ConfirmSetupIntentParams, param2: string): void;
				public handleNextActionForPayment(param0: androidx.fragment.app.Fragment, param1: string): void;
				public createAccountTokenSynchronous(param0: com.stripe.android.model.AccountParams): com.stripe.android.model.Token;
				/** @deprecated */
				public confirmSetupIntentSynchronous(param0: com.stripe.android.model.ConfirmSetupIntentParams): com.stripe.android.model.SetupIntent;
				public onSetupResult(param0: number, param1: globalAndroid.content.Intent, param2: com.stripe.android.ApiResultCallback<any>): boolean;
				/** @deprecated */
				public confirmPaymentIntentSynchronous(param0: com.stripe.android.model.ConfirmPaymentIntentParams): com.stripe.android.model.PaymentIntent;
				public static setAppInfo(param0: com.stripe.android.AppInfo): void;
				public retrieveSetupIntentSynchronous(param0: string, param1: string): com.stripe.android.model.SetupIntent;
				public isSetupResult(param0: number, param1: globalAndroid.content.Intent): boolean;
				public createFileSynchronous(param0: com.stripe.android.model.StripeFileParams, param1: string): com.stripe.android.model.StripeFile;
				public getPaymentController$payments_core_release(): com.stripe.android.PaymentController;
				public createBankAccountToken(param0: com.stripe.android.model.BankAccountTokenParams, param1: string, param2: string, param3: com.stripe.android.ApiResultCallback<any>): void;
				public handleNextActionForSetupIntent(param0: androidx.fragment.app.Fragment, param1: string, param2: string): void;
				public createCvcUpdateTokenSynchronous(param0: string, param1: string, param2: string): com.stripe.android.model.Token;
				public createPiiToken(param0: string, param1: string, param2: com.stripe.android.ApiResultCallback<any>): void;
				public createPaymentMethod(param0: com.stripe.android.model.PaymentMethodCreateParams, param1: string, param2: com.stripe.android.ApiResultCallback<any>): void;
				public confirmSetupIntent(param0: androidx.activity.ComponentActivity, param1: com.stripe.android.model.ConfirmSetupIntentParams): void;
				public confirmPayment(param0: androidx.fragment.app.Fragment, param1: com.stripe.android.model.ConfirmPaymentIntentParams, param2: string): void;
				public isPaymentResult(param0: number, param1: globalAndroid.content.Intent): boolean;
				public retrieveSourceSynchronous(param0: string, param1: string): com.stripe.android.model.Source;
				public createFileSynchronous(param0: com.stripe.android.model.StripeFileParams): com.stripe.android.model.StripeFile;
				public createPaymentMethodSynchronous(param0: com.stripe.android.model.PaymentMethodCreateParams, param1: string, param2: string): com.stripe.android.model.PaymentMethod;
				public createFile(param0: com.stripe.android.model.StripeFileParams, param1: string, param2: com.stripe.android.ApiResultCallback<any>): void;
				public isAuthenticateSourceResult(param0: number, param1: globalAndroid.content.Intent): boolean;
				public confirmPayment(param0: androidx.activity.ComponentActivity, param1: com.stripe.android.model.ConfirmPaymentIntentParams): void;
				public createBankAccountTokenSynchronous(param0: com.stripe.android.model.BankAccountTokenParams, param1: string): com.stripe.android.model.Token;
				public confirmPayment(param0: androidx.activity.ComponentActivity, param1: com.stripe.android.model.ConfirmPaymentIntentParams, param2: string): void;
				public createAccountTokenSynchronous(param0: com.stripe.android.model.AccountParams, param1: string): com.stripe.android.model.Token;
				public retrievePaymentIntentSynchronous(param0: string, param1: string): com.stripe.android.model.PaymentIntent;
				public createAccountToken(param0: com.stripe.android.model.AccountParams, param1: com.stripe.android.ApiResultCallback<any>): void;
				public getStripeRepository$payments_core_release(): com.stripe.android.networking.StripeRepository;
				public createCardTokenSynchronous(param0: com.stripe.android.model.CardParams, param1: string, param2: string): com.stripe.android.model.Token;
				public retrieveSource(param0: string, param1: string, param2: com.stripe.android.ApiResultCallback<any>): void;
				public handleNextActionForSetupIntent(param0: androidx.fragment.app.Fragment, param1: string): void;
				public createSource(param0: com.stripe.android.model.SourceParams, param1: string, param2: com.stripe.android.ApiResultCallback<any>): void;
				public authenticateSource(param0: androidx.fragment.app.Fragment, param1: com.stripe.android.model.Source, param2: string): void;
				public static getAdvancedFraudSignalsEnabled(): boolean;
				public createBankAccountTokenSynchronous(param0: com.stripe.android.model.BankAccountTokenParams, param1: string, param2: string): com.stripe.android.model.Token;
				public retrieveSource(param0: string, param1: string, param2: string, param3: com.stripe.android.ApiResultCallback<any>): void;
				public createCardToken(param0: com.stripe.android.model.CardParams, param1: com.stripe.android.ApiResultCallback<any>): void;
				public retrievePaymentIntent(param0: string, param1: com.stripe.android.ApiResultCallback<any>): void;
				/** @deprecated */
				public confirmSetupIntentSynchronous(param0: com.stripe.android.model.ConfirmSetupIntentParams, param1: string): com.stripe.android.model.SetupIntent;
				public createCardTokenSynchronous(param0: com.stripe.android.model.CardParams): com.stripe.android.model.Token;
				public createPiiToken(param0: string, param1: com.stripe.android.ApiResultCallback<any>): void;
				public retrieveSetupIntent(param0: string, param1: com.stripe.android.ApiResultCallback<any>): void;
				public createCvcUpdateToken(param0: string, param1: com.stripe.android.ApiResultCallback<any>): void;
				public createPersonTokenSynchronous(param0: com.stripe.android.model.PersonTokenParams): com.stripe.android.model.Token;
				public createPersonToken(param0: com.stripe.android.model.PersonTokenParams, param1: string, param2: string, param3: com.stripe.android.ApiResultCallback<any>): void;
				public createCardTokenSynchronous(param0: com.stripe.android.model.CardParams, param1: string): com.stripe.android.model.Token;
				public createBankAccountTokenSynchronous(param0: com.stripe.android.model.BankAccountTokenParams): com.stripe.android.model.Token;
				public retrieveSourceSynchronous(param0: string, param1: string, param2: string): com.stripe.android.model.Source;
				public onAuthenticateSourceResult(param0: globalAndroid.content.Intent, param1: com.stripe.android.ApiResultCallback<any>): void;
				public createPiiTokenSynchronous(param0: string, param1: string, param2: string): com.stripe.android.model.Token;
				public createPaymentMethodSynchronous(param0: com.stripe.android.model.PaymentMethodCreateParams, param1: string): com.stripe.android.model.PaymentMethod;
				public createSourceSynchronous(param0: com.stripe.android.model.SourceParams, param1: string): com.stripe.android.model.Source;
				public createAccountToken(param0: com.stripe.android.model.AccountParams, param1: string, param2: com.stripe.android.ApiResultCallback<any>): void;
			}
			export module Stripe {
				export class Companion {
					public static class: java.lang.Class<com.stripe.android.Stripe.Companion>;
					public getAppInfo(): com.stripe.android.AppInfo;
					public setAdvancedFraudSignalsEnabled(param0: boolean): void;
					public setAppInfo(param0: com.stripe.android.AppInfo): void;
					public getAdvancedFraudSignalsEnabled(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export class StripeApiBeta {
				public static class: java.lang.Class<com.stripe.android.StripeApiBeta>;
				public static WeChatPayV1: com.stripe.android.StripeApiBeta;
				public static valueOf(param0: string): com.stripe.android.StripeApiBeta;
				public static values(): androidNative.Array<com.stripe.android.StripeApiBeta>;
				public getCode(): string;
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export abstract class StripeIntentResult<T> extends com.stripe.android.core.model.StripeModel {
				public static class: java.lang.Class<com.stripe.android.StripeIntentResult<any>>;
				public static $stable: number;
				public getFailureMessage(): string;
				public hashCode(): number;
				public equals(param0: any): boolean;
				public constructor(param0: number);
				public getIntent(): any;
				public getOutcome(): number;
			}
			export module StripeIntentResult {
				export class Outcome {
					public static class: java.lang.Class<com.stripe.android.StripeIntentResult.Outcome>;
					/**
					 * Constructs a new instance of the com.stripe.android.StripeIntentResult$Outcome interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						<clinit>(): void;
					});
					public constructor();
					public static UNKNOWN: number;
					public static TIMEDOUT: number;
					public static FAILED: number;
					public static Companion: com.stripe.android.StripeIntentResult.Outcome.Companion;
					public static SUCCEEDED: number;
					public static CANCELED: number;
				}
				export module Outcome {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.StripeIntentResult.Outcome.Companion>;
						public static UNKNOWN: number;
						public static SUCCEEDED: number;
						public static FAILED: number;
						public static CANCELED: number;
						public static TIMEDOUT: number;
					}
				}
				export class WhenMappings {
					public static class: java.lang.Class<com.stripe.android.StripeIntentResult.WhenMappings>;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export class StripeKtxKt {
				public static class: java.lang.Class<com.stripe.android.StripeKtxKt>;
				public static createSource(param0: com.stripe.android.Stripe, param1: com.stripe.android.model.SourceParams, param2: string, param3: string, param4: kotlin.coroutines.Continuation<any>): any;
				public static createAccountToken(param0: com.stripe.android.Stripe, param1: com.stripe.android.model.AccountParams, param2: string, param3: string, param4: kotlin.coroutines.Continuation<any>): any;
				public static retrieveSource(param0: com.stripe.android.Stripe, param1: string, param2: string, param3: string, param4: kotlin.coroutines.Continuation<any>): any;
				public static createPaymentMethod(param0: com.stripe.android.Stripe, param1: com.stripe.android.model.PaymentMethodCreateParams, param2: string, param3: string, param4: kotlin.coroutines.Continuation<any>): any;
				public static createFile(param0: com.stripe.android.Stripe, param1: com.stripe.android.model.StripeFileParams, param2: string, param3: string, param4: kotlin.coroutines.Continuation<any>): any;
				public static retrievePaymentIntent(param0: com.stripe.android.Stripe, param1: string, param2: string, param3: kotlin.coroutines.Continuation<any>): any;
				public static confirmAlipayPayment(param0: com.stripe.android.Stripe, param1: com.stripe.android.model.ConfirmPaymentIntentParams, param2: com.stripe.android.AlipayAuthenticator, param3: string, param4: kotlin.coroutines.Continuation<any>): any;
				public static createPersonToken(param0: com.stripe.android.Stripe, param1: com.stripe.android.model.PersonTokenParams, param2: string, param3: string, param4: kotlin.coroutines.Continuation<any>): any;
				public static confirmPaymentIntent(param0: com.stripe.android.Stripe, param1: com.stripe.android.model.ConfirmPaymentIntentParams, param2: string, param3: kotlin.coroutines.Continuation<any>): any;
				public static getPaymentIntentResult(param0: com.stripe.android.Stripe, param1: number, param2: globalAndroid.content.Intent, param3: kotlin.coroutines.Continuation<any>): any;
				public static retrieveSetupIntent(param0: com.stripe.android.Stripe, param1: string, param2: string, param3: kotlin.coroutines.Continuation<any>): any;
				public static createPiiToken(param0: com.stripe.android.Stripe, param1: string, param2: string, param3: string, param4: kotlin.coroutines.Continuation<any>): any;
				public static getSetupIntentResult(param0: com.stripe.android.Stripe, param1: number, param2: globalAndroid.content.Intent, param3: kotlin.coroutines.Continuation<any>): any;
				public static createCvcUpdateToken(param0: com.stripe.android.Stripe, param1: string, param2: string, param3: string, param4: kotlin.coroutines.Continuation<any>): any;
				public static createRadarSession(param0: com.stripe.android.Stripe, param1: kotlin.coroutines.Continuation<any>): any;
				public static createBankAccountToken(param0: com.stripe.android.Stripe, param1: com.stripe.android.model.BankAccountTokenParams, param2: string, param3: string, param4: kotlin.coroutines.Continuation<any>): any;
				public static confirmWeChatPayPayment(param0: com.stripe.android.Stripe, param1: com.stripe.android.model.ConfirmPaymentIntentParams, param2: string, param3: kotlin.coroutines.Continuation<any>): any;
				public static getAuthenticateSourceResult(param0: com.stripe.android.Stripe, param1: number, param2: globalAndroid.content.Intent, param3: kotlin.coroutines.Continuation<any>): any;
				public static createCardToken(param0: com.stripe.android.Stripe, param1: com.stripe.android.model.CardParams, param2: string, param3: string, param4: kotlin.coroutines.Continuation<any>): any;
				public static confirmSetupIntent(param0: com.stripe.android.Stripe, param1: com.stripe.android.model.ConfirmSetupIntentParams, param2: string, param3: kotlin.coroutines.Continuation<any>): any;
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export class StripeOperationIdFactory extends com.stripe.android.OperationIdFactory {
				public static class: java.lang.Class<com.stripe.android.StripeOperationIdFactory>;
				public create(): string;
				public constructor();
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export class StripePaymentController extends com.stripe.android.PaymentController {
				public static class: java.lang.Class<com.stripe.android.StripePaymentController>;
				public static Companion: com.stripe.android.StripePaymentController.Companion;
				public static PAYMENT_REQUEST_CODE: number;
				public static SETUP_REQUEST_CODE: number;
				public static SOURCE_REQUEST_CODE: number;
				public shouldHandlePaymentResult(param0: number, param1: globalAndroid.content.Intent): boolean;
				public handleNextAction(param0: com.stripe.android.view.AuthActivityStarterHost, param1: com.stripe.android.model.StripeIntent, param2: com.stripe.android.networking.ApiRequest.Options, param3: kotlin.coroutines.Continuation<any>): any;
				public startAuth(param0: com.stripe.android.view.AuthActivityStarterHost, param1: string, param2: com.stripe.android.networking.ApiRequest.Options, param3: com.stripe.android.PaymentController.StripeIntentType, param4: kotlin.coroutines.Continuation<any>): any;
				public static create(param0: globalAndroid.content.Context, param1: string, param2: com.stripe.android.networking.StripeRepository, param3: boolean): com.stripe.android.PaymentController;
				public confirmAndAuthenticateAlipay(param0: com.stripe.android.model.ConfirmPaymentIntentParams, param1: com.stripe.android.AlipayAuthenticator, param2: com.stripe.android.networking.ApiRequest.Options, param3: kotlin.coroutines.Continuation<any>): any;
				public shouldHandleSetupResult(param0: number, param1: globalAndroid.content.Intent): boolean;
				public getSetupIntentResult(param0: globalAndroid.content.Intent, param1: kotlin.coroutines.Continuation<any>): any;
				public getAuthenticateSourceResult(param0: globalAndroid.content.Intent, param1: kotlin.coroutines.Continuation<any>): any;
				public static create(param0: globalAndroid.content.Context, param1: string, param2: com.stripe.android.networking.StripeRepository): com.stripe.android.PaymentController;
				public constructor(param0: globalAndroid.content.Context, param1: kotlin.jvm.functions.Function0<string>, param2: com.stripe.android.networking.StripeRepository, param3: boolean, param4: kotlin.coroutines.CoroutineContext, param5: com.stripe.android.core.networking.AnalyticsRequestExecutor, param6: com.stripe.android.networking.PaymentAnalyticsRequestFactory, param7: com.stripe.android.networking.AlipayRepository, param8: kotlin.coroutines.CoroutineContext);
				public registerLaunchersWithActivityResultCaller(param0: androidx.activity.result.ActivityResultCaller, param1: androidx.activity.result.ActivityResultCallback<com.stripe.android.payments.PaymentFlowResult.Unvalidated>): void;
				public startConfirmAndAuth(param0: com.stripe.android.view.AuthActivityStarterHost, param1: com.stripe.android.model.ConfirmStripeIntentParams, param2: com.stripe.android.networking.ApiRequest.Options, param3: kotlin.coroutines.Continuation<any>): any;
				public shouldHandleSourceResult(param0: number, param1: globalAndroid.content.Intent): boolean;
				public startAuthenticateSource(param0: com.stripe.android.view.AuthActivityStarterHost, param1: com.stripe.android.model.Source, param2: com.stripe.android.networking.ApiRequest.Options, param3: kotlin.coroutines.Continuation<any>): any;
				public confirmWeChatPay(param0: com.stripe.android.model.ConfirmPaymentIntentParams, param1: com.stripe.android.networking.ApiRequest.Options, param2: kotlin.coroutines.Continuation<any>): any;
				public unregisterLaunchers(): void;
				public getPaymentIntentResult(param0: globalAndroid.content.Intent, param1: kotlin.coroutines.Continuation<any>): any;
			}
			export module StripePaymentController {
				export class Companion {
					public static class: java.lang.Class<com.stripe.android.StripePaymentController.Companion>;
					public getEXPAND_PAYMENT_METHOD$payments_core_release(): java.util.List<string>;
					public getCHALLENGE_DELAY$payments_core_release(): number;
					public create(param0: globalAndroid.content.Context, param1: string, param2: com.stripe.android.networking.StripeRepository): com.stripe.android.PaymentController;
					public create(param0: globalAndroid.content.Context, param1: string, param2: com.stripe.android.networking.StripeRepository, param3: boolean): com.stripe.android.PaymentController;
				}
				export class WhenMappings {
					public static class: java.lang.Class<com.stripe.android.StripePaymentController.WhenMappings>;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module auth {
				export class PaymentBrowserAuthContract extends androidx.activity.result.contract.ActivityResultContract<com.stripe.android.auth.PaymentBrowserAuthContract.Args, com.stripe.android.payments.PaymentFlowResult.Unvalidated> {
					public static class: java.lang.Class<com.stripe.android.auth.PaymentBrowserAuthContract>;
					public static Companion: com.stripe.android.auth.PaymentBrowserAuthContract.Companion;
					public createIntent(param0: globalAndroid.content.Context, param1: com.stripe.android.auth.PaymentBrowserAuthContract.Args): globalAndroid.content.Intent;
					public constructor();
					public parseResult(param0: number, param1: globalAndroid.content.Intent): com.stripe.android.payments.PaymentFlowResult.Unvalidated;
				}
				export module PaymentBrowserAuthContract {
					export class Args {
						public static class: java.lang.Class<com.stripe.android.auth.PaymentBrowserAuthContract.Args>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.auth.PaymentBrowserAuthContract.Args>;
						public component11(): java.lang.Integer;
						public component5(): string;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public getStripeAccountId(): string;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getReturnUrl(): string;
						public toBundle(): globalAndroid.os.Bundle;
						public copy(param0: string, param1: number, param2: string, param3: string, param4: string, param5: boolean, param6: com.stripe.android.stripe3ds2.init.ui.StripeToolbarCustomization, param7: string, param8: boolean, param9: boolean, param10: java.lang.Integer, param11: string, param12: boolean): com.stripe.android.auth.PaymentBrowserAuthContract.Args;
						public component4(): string;
						public component2(): number;
						public component10(): boolean;
						public component8(): string;
						public getClientSecret(): string;
						public getToolbarCustomization(): com.stripe.android.stripe3ds2.init.ui.StripeToolbarCustomization;
						public component3(): string;
						public describeContents(): number;
						public component6(): boolean;
						public getUrl(): string;
						public component7(): com.stripe.android.stripe3ds2.init.ui.StripeToolbarCustomization;
						public getShouldCancelIntentOnUserNavigation(): boolean;
						public getRequestCode(): number;
						public component13(): boolean;
						public toString(): string;
						public getShouldCancelSource(): boolean;
						public getObjectId(): string;
						public getStatusBarColor(): java.lang.Integer;
						public component12(): string;
						public getPublishableKey(): string;
						public isInstantApp(): boolean;
						public hasDefaultReturnUrl$payments_core_release(param0: com.stripe.android.payments.DefaultReturnUrl): boolean;
						public component9(): boolean;
						public constructor(param0: string, param1: number, param2: string, param3: string, param4: string, param5: boolean, param6: com.stripe.android.stripe3ds2.init.ui.StripeToolbarCustomization, param7: string, param8: boolean, param9: boolean, param10: java.lang.Integer, param11: string, param12: boolean);
						public getEnableLogging(): boolean;
					}
					export module Args {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.auth.PaymentBrowserAuthContract.Args> {
							public static class: java.lang.Class<com.stripe.android.auth.PaymentBrowserAuthContract.Args.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.auth.PaymentBrowserAuthContract.Args;
							public newArray(param0: number): androidNative.Array<com.stripe.android.auth.PaymentBrowserAuthContract.Args>;
						}
					}
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.auth.PaymentBrowserAuthContract.Companion>;
						public parseArgs$payments_core_release(param0: globalAndroid.content.Intent): com.stripe.android.auth.PaymentBrowserAuthContract.Args;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module cards {
				export class Bin extends com.stripe.android.core.model.StripeModel {
					public static class: java.lang.Class<com.stripe.android.cards.Bin>;
					public static Companion: com.stripe.android.cards.Bin.Companion;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.cards.Bin>;
					public equals(param0: any): boolean;
					public toString(): string;
					public getValue$payments_core_release(): string;
					public copy(param0: string): com.stripe.android.cards.Bin;
					public constructor(param0: string);
					public component1$payments_core_release(): string;
					public describeContents(): number;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public hashCode(): number;
				}
				export module Bin {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.cards.Bin.Companion>;
						public create(param0: string): com.stripe.android.cards.Bin;
					}
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.cards.Bin> {
						public static class: java.lang.Class<com.stripe.android.cards.Bin.Creator>;
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.cards.Bin;
						public constructor();
						public newArray(param0: number): androidNative.Array<com.stripe.android.cards.Bin>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module cards {
				export class CardAccountRangeRepository {
					public static class: java.lang.Class<com.stripe.android.cards.CardAccountRangeRepository>;
					/**
					 * Constructs a new instance of the com.stripe.android.cards.CardAccountRangeRepository interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getAccountRange(param0: com.stripe.android.cards.CardNumber.Unvalidated, param1: kotlin.coroutines.Continuation<any>): any;
						getLoading(): kotlinx.coroutines.flow.Flow<java.lang.Boolean>;
					});
					public constructor();
					public getAccountRange(param0: com.stripe.android.cards.CardNumber.Unvalidated, param1: kotlin.coroutines.Continuation<any>): any;
					public getLoading(): kotlinx.coroutines.flow.Flow<java.lang.Boolean>;
				}
				export module CardAccountRangeRepository {
					export class Factory {
						public static class: java.lang.Class<com.stripe.android.cards.CardAccountRangeRepository.Factory>;
						/**
						 * Constructs a new instance of the com.stripe.android.cards.CardAccountRangeRepository$Factory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							create(): com.stripe.android.cards.CardAccountRangeRepository;
						});
						public constructor();
						public create(): com.stripe.android.cards.CardAccountRangeRepository;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module cards {
				export class CardAccountRangeSource {
					public static class: java.lang.Class<com.stripe.android.cards.CardAccountRangeSource>;
					/**
					 * Constructs a new instance of the com.stripe.android.cards.CardAccountRangeSource interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getAccountRange(param0: com.stripe.android.cards.CardNumber.Unvalidated, param1: kotlin.coroutines.Continuation<any>): any;
						getLoading(): kotlinx.coroutines.flow.Flow<java.lang.Boolean>;
					});
					public constructor();
					public getAccountRange(param0: com.stripe.android.cards.CardNumber.Unvalidated, param1: kotlin.coroutines.Continuation<any>): any;
					public getLoading(): kotlinx.coroutines.flow.Flow<java.lang.Boolean>;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module cards {
				export class CardAccountRangeStore {
					public static class: java.lang.Class<com.stripe.android.cards.CardAccountRangeStore>;
					/**
					 * Constructs a new instance of the com.stripe.android.cards.CardAccountRangeStore interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						get(param0: com.stripe.android.cards.Bin, param1: kotlin.coroutines.Continuation<any>): any;
						save(param0: com.stripe.android.cards.Bin, param1: java.util.List<com.stripe.android.model.AccountRange>): void;
						contains(param0: com.stripe.android.cards.Bin, param1: kotlin.coroutines.Continuation<any>): any;
					});
					public constructor();
					public get(param0: com.stripe.android.cards.Bin, param1: kotlin.coroutines.Continuation<any>): any;
					public save(param0: com.stripe.android.cards.Bin, param1: java.util.List<com.stripe.android.model.AccountRange>): void;
					public contains(param0: com.stripe.android.cards.Bin, param1: kotlin.coroutines.Continuation<any>): any;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module cards {
				export abstract class CardNumber {
					public static class: java.lang.Class<com.stripe.android.cards.CardNumber>;
					public static Companion: com.stripe.android.cards.CardNumber.Companion;
					public static MIN_PAN_LENGTH: number;
					public static MAX_PAN_LENGTH: number;
					public static DEFAULT_PAN_LENGTH: number;
				}
				export module CardNumber {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.cards.CardNumber.Companion>;
						public getSpacePositions$payments_core_release(param0: number): java.util.Set<java.lang.Integer>;
					}
					export class Unvalidated extends com.stripe.android.cards.CardNumber {
						public static class: java.lang.Class<com.stripe.android.cards.CardNumber.Unvalidated>;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getLength(): number;
						public getBin(): com.stripe.android.cards.Bin;
						public isPartialEntry$payments_core_release(param0: number): boolean;
						public isValidLuhn(): boolean;
						public getFormatted(param0: number): string;
						public copy(param0: string): com.stripe.android.cards.CardNumber.Unvalidated;
						public toString(): string;
						public validate(param0: number): com.stripe.android.cards.CardNumber.Validated;
						public isPossibleCardBrand$payments_core_release(): boolean;
						public isMaxLength(): boolean;
						public getNormalized(): string;
						public constructor(param0: string);
					}
					export module Unvalidated {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.cards.CardNumber.Unvalidated.Companion>;
						}
					}
					export class Validated extends com.stripe.android.cards.CardNumber {
						public static class: java.lang.Class<com.stripe.android.cards.CardNumber.Validated>;
						public copy(param0: string): com.stripe.android.cards.CardNumber.Validated;
						public getValue$payments_core_release(): string;
						public component1$payments_core_release(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public toString(): string;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module cards {
				export class CardWidgetViewModel {
					public static class: java.lang.Class<com.stripe.android.cards.CardWidgetViewModel>;
					public getAccountRange(param0: com.stripe.android.cards.CardNumber.Unvalidated): androidx.lifecycle.LiveData<com.stripe.android.model.AccountRange>;
					public constructor(param0: globalAndroid.app.Application, param1: com.stripe.android.cards.CardAccountRangeRepository.Factory);
					public constructor(param0: globalAndroid.app.Application);
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module cards {
				export abstract class Cvc {
					public static class: java.lang.Class<com.stripe.android.cards.Cvc>;
				}
				export module Cvc {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.cards.Cvc.Companion>;
					}
					export class Unvalidated extends com.stripe.android.cards.Cvc {
						public static class: java.lang.Class<com.stripe.android.cards.Cvc.Unvalidated>;
						public validate(param0: number): com.stripe.android.cards.Cvc.Validated;
						public isPartialEntry(param0: number): boolean;
						public getNormalized$payments_core_release(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public copy(param0: string): com.stripe.android.cards.Cvc.Unvalidated;
						public toString(): string;
						public constructor(param0: string);
					}
					export class Validated extends com.stripe.android.cards.Cvc {
						public static class: java.lang.Class<com.stripe.android.cards.Cvc.Validated>;
						public getValue$payments_core_release(): string;
						public component1$payments_core_release(): string;
						public copy(param0: string): com.stripe.android.cards.Cvc.Validated;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public toString(): string;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module cards {
				export class DefaultCardAccountRangeRepository extends com.stripe.android.cards.CardAccountRangeRepository {
					public static class: java.lang.Class<com.stripe.android.cards.DefaultCardAccountRangeRepository>;
					public constructor(param0: com.stripe.android.cards.CardAccountRangeSource, param1: com.stripe.android.cards.CardAccountRangeSource, param2: com.stripe.android.cards.CardAccountRangeSource, param3: com.stripe.android.cards.CardAccountRangeStore);
					public getAccountRange(param0: com.stripe.android.cards.CardNumber.Unvalidated, param1: kotlin.coroutines.Continuation<any>): any;
					public getLoading(): kotlinx.coroutines.flow.Flow<java.lang.Boolean>;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module cards {
				export class DefaultCardAccountRangeRepositoryFactory extends com.stripe.android.cards.CardAccountRangeRepository.Factory {
					public static class: java.lang.Class<com.stripe.android.cards.DefaultCardAccountRangeRepositoryFactory>;
					public constructor(param0: globalAndroid.content.Context);
					public constructor(param0: globalAndroid.content.Context, param1: com.stripe.android.core.networking.AnalyticsRequestExecutor);
					public create(): com.stripe.android.cards.CardAccountRangeRepository;
				}
				export module DefaultCardAccountRangeRepositoryFactory {
					export class NullCardAccountRangeSource extends com.stripe.android.cards.CardAccountRangeSource {
						public static class: java.lang.Class<com.stripe.android.cards.DefaultCardAccountRangeRepositoryFactory.NullCardAccountRangeSource>;
						public constructor();
						public getLoading(): kotlinx.coroutines.flow.Flow<java.lang.Boolean>;
						public getAccountRange(param0: com.stripe.android.cards.CardNumber.Unvalidated, param1: kotlin.coroutines.Continuation<any>): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module cards {
				export class DefaultCardAccountRangeStore extends com.stripe.android.cards.CardAccountRangeStore {
					public static class: java.lang.Class<com.stripe.android.cards.DefaultCardAccountRangeStore>;
					public constructor(param0: globalAndroid.content.Context);
					public get(param0: com.stripe.android.cards.Bin, param1: kotlin.coroutines.Continuation<any>): any;
					public createPrefKey$payments_core_release(param0: com.stripe.android.cards.Bin): string;
					public save(param0: com.stripe.android.cards.Bin, param1: java.util.List<com.stripe.android.model.AccountRange>): void;
					public contains(param0: com.stripe.android.cards.Bin, param1: kotlin.coroutines.Continuation<any>): any;
				}
				export module DefaultCardAccountRangeStore {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.cards.DefaultCardAccountRangeStore.Companion>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module cards {
				export class DefaultStaticCardAccountRanges extends com.stripe.android.cards.StaticCardAccountRanges {
					public static class: java.lang.Class<com.stripe.android.cards.DefaultStaticCardAccountRanges>;
					public static Companion: com.stripe.android.cards.DefaultStaticCardAccountRanges.Companion;
					public first(param0: com.stripe.android.cards.CardNumber.Unvalidated): com.stripe.android.model.AccountRange;
					public constructor();
					public filter(param0: com.stripe.android.cards.CardNumber.Unvalidated): java.util.List<com.stripe.android.model.AccountRange>;
				}
				export module DefaultStaticCardAccountRanges {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.cards.DefaultStaticCardAccountRanges.Companion>;
						public getDISCOVER_ACCOUNTS$payments_core_release(): java.util.List<com.stripe.android.model.AccountRange>;
						public getACCOUNTS$payments_core_release(): java.util.List<com.stripe.android.model.AccountRange>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module cards {
				export class InMemoryCardAccountRangeSource extends com.stripe.android.cards.CardAccountRangeSource {
					public static class: java.lang.Class<com.stripe.android.cards.InMemoryCardAccountRangeSource>;
					public constructor(param0: com.stripe.android.cards.CardAccountRangeStore);
					public getAccountRange(param0: com.stripe.android.cards.CardNumber.Unvalidated, param1: kotlin.coroutines.Continuation<any>): any;
					public getLoading(): kotlinx.coroutines.flow.Flow<java.lang.Boolean>;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module cards {
				export class RemoteCardAccountRangeSource extends com.stripe.android.cards.CardAccountRangeSource {
					public static class: java.lang.Class<com.stripe.android.cards.RemoteCardAccountRangeSource>;
					public constructor(param0: com.stripe.android.networking.StripeRepository, param1: com.stripe.android.networking.ApiRequest.Options, param2: com.stripe.android.cards.CardAccountRangeStore, param3: com.stripe.android.core.networking.AnalyticsRequestExecutor, param4: com.stripe.android.networking.PaymentAnalyticsRequestFactory);
					public getAccountRange(param0: com.stripe.android.cards.CardNumber.Unvalidated, param1: kotlin.coroutines.Continuation<any>): any;
					public getLoading(): kotlinx.coroutines.flow.Flow<java.lang.Boolean>;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module cards {
				export class StaticCardAccountRangeSource extends com.stripe.android.cards.CardAccountRangeSource {
					public static class: java.lang.Class<com.stripe.android.cards.StaticCardAccountRangeSource>;
					public constructor();
					public getAccountRange(param0: com.stripe.android.cards.CardNumber.Unvalidated, param1: kotlin.coroutines.Continuation<any>): any;
					public constructor(param0: com.stripe.android.cards.StaticCardAccountRanges);
					public getLoading(): kotlinx.coroutines.flow.Flow<java.lang.Boolean>;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module cards {
				export class StaticCardAccountRanges {
					public static class: java.lang.Class<com.stripe.android.cards.StaticCardAccountRanges>;
					/**
					 * Constructs a new instance of the com.stripe.android.cards.StaticCardAccountRanges interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						first(param0: com.stripe.android.cards.CardNumber.Unvalidated): com.stripe.android.model.AccountRange;
						filter(param0: com.stripe.android.cards.CardNumber.Unvalidated): java.util.List<com.stripe.android.model.AccountRange>;
					});
					public constructor();
					public first(param0: com.stripe.android.cards.CardNumber.Unvalidated): com.stripe.android.model.AccountRange;
					public filter(param0: com.stripe.android.cards.CardNumber.Unvalidated): java.util.List<com.stripe.android.model.AccountRange>;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module core {
				export class BuildConfig {
					public static class: java.lang.Class<com.stripe.android.core.BuildConfig>;
					public static DEBUG: boolean;
					public static LIBRARY_PACKAGE_NAME: string;
					public static BUILD_TYPE: string;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module core {
				export class Logger {
					public static class: java.lang.Class<com.stripe.android.core.Logger>;
					/**
					 * Constructs a new instance of the com.stripe.android.core.Logger interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						debug(param0: string): void;
						info(param0: string): void;
						warning(param0: string): void;
						error(param0: string, param1: java.lang.Throwable): void;
						<clinit>(): void;
					});
					public constructor();
					public static Companion: com.stripe.android.core.Logger.Companion;
					public info(param0: string): void;
					public warning(param0: string): void;
					public error(param0: string, param1: java.lang.Throwable): void;
					public debug(param0: string): void;
				}
				export module Logger {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.core.Logger.Companion>;
						public getInstance(param0: boolean): com.stripe.android.core.Logger;
						public real(): com.stripe.android.core.Logger;
						public noop(): com.stripe.android.core.Logger;
					}
					export class DefaultImpls {
						public static class: java.lang.Class<com.stripe.android.core.Logger.DefaultImpls>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module core {
				export class StripeError extends com.stripe.android.core.model.StripeModel {
					public static class: java.lang.Class<com.stripe.android.core.StripeError>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.core.StripeError>;
					public static $stable: number;
					public component2(): string;
					public component5(): string;
					public component7(): string;
					public describeContents(): number;
					public getDocUrl(): string;
					public component3(): string;
					public equals(param0: any): boolean;
					public toString(): string;
					public getCode(): string;
					public component1(): string;
					public getCharge(): string;
					public constructor();
					public component6(): string;
					public copy(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string): com.stripe.android.core.StripeError;
					public getMessage(): string;
					public component4(): string;
					public getDeclineCode(): string;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public getType(): string;
					public hashCode(): number;
					public constructor(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string);
					public getParam(): string;
				}
				export module StripeError {
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.core.StripeError> {
						public static class: java.lang.Class<com.stripe.android.core.StripeError.Creator>;
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.core.StripeError;
						public constructor();
						public newArray(param0: number): androidNative.Array<com.stripe.android.core.StripeError>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module core {
				export module exception {
					export class APIConnectionException extends com.stripe.android.core.exception.StripeException {
						public static class: java.lang.Class<com.stripe.android.core.exception.APIConnectionException>;
						public static Companion: com.stripe.android.core.exception.APIConnectionException.Companion;
						public static $stable: number;
						public constructor();
						public constructor(param0: com.stripe.android.core.StripeError, param1: string, param2: number, param3: java.lang.Throwable, param4: string);
						public constructor(param0: string, param1: java.lang.Throwable);
					}
					export module APIConnectionException {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.core.exception.APIConnectionException.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module core {
				export module exception {
					export class APIException extends com.stripe.android.core.exception.StripeException {
						public static class: java.lang.Class<com.stripe.android.core.exception.APIException>;
						public static $stable: number;
						public constructor();
						public constructor(param0: com.stripe.android.core.StripeError, param1: string, param2: number, param3: string, param4: java.lang.Throwable);
						public constructor(param0: java.lang.Throwable);
						public constructor(param0: com.stripe.android.core.StripeError, param1: string, param2: number, param3: java.lang.Throwable, param4: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module core {
				export module exception {
					export class InvalidRequestException extends com.stripe.android.core.exception.StripeException {
						public static class: java.lang.Class<com.stripe.android.core.exception.InvalidRequestException>;
						public static $stable: number;
						public constructor();
						public constructor(param0: com.stripe.android.core.StripeError, param1: string, param2: number, param3: string, param4: java.lang.Throwable);
						public constructor(param0: com.stripe.android.core.StripeError, param1: string, param2: number, param3: java.lang.Throwable, param4: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module core {
				export module exception {
					export abstract class StripeException {
						public static class: java.lang.Class<com.stripe.android.core.exception.StripeException>;
						public static Companion: com.stripe.android.core.exception.StripeException.Companion;
						public static $stable: number;
						public getStatusCode(): number;
						public constructor();
						public isClientError(): boolean;
						public getRequestId(): string;
						public getStripeError(): com.stripe.android.core.StripeError;
						public equals(param0: any): boolean;
						public hashCode(): number;
						public constructor(param0: com.stripe.android.core.StripeError, param1: string, param2: number, param3: java.lang.Throwable, param4: string);
						public toString(): string;
					}
					export module StripeException {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.core.exception.StripeException.Companion>;
							public create(param0: java.lang.Throwable): com.stripe.android.core.exception.StripeException;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module core {
				export module injection {
					export class CoroutineContextModule {
						public static class: java.lang.Class<com.stripe.android.core.injection.CoroutineContextModule>;
						public static $stable: number;
						public constructor();
						public provideWorkContext(): kotlin.coroutines.CoroutineContext;
						public provideUIContext(): kotlin.coroutines.CoroutineContext;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module core {
				export module injection {
					export class CoroutineContextModule_ProvideUIContextFactory extends dagger.internal.Factory<kotlin.coroutines.CoroutineContext> {
						public static class: java.lang.Class<com.stripe.android.core.injection.CoroutineContextModule_ProvideUIContextFactory>;
						public static create(param0: com.stripe.android.core.injection.CoroutineContextModule): com.stripe.android.core.injection.CoroutineContextModule_ProvideUIContextFactory;
						public get(): kotlin.coroutines.CoroutineContext;
						public static provideUIContext(param0: com.stripe.android.core.injection.CoroutineContextModule): kotlin.coroutines.CoroutineContext;
						public constructor(param0: com.stripe.android.core.injection.CoroutineContextModule);
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module core {
				export module injection {
					export class CoroutineContextModule_ProvideWorkContextFactory extends dagger.internal.Factory<kotlin.coroutines.CoroutineContext> {
						public static class: java.lang.Class<com.stripe.android.core.injection.CoroutineContextModule_ProvideWorkContextFactory>;
						public get(): kotlin.coroutines.CoroutineContext;
						public static create(param0: com.stripe.android.core.injection.CoroutineContextModule): com.stripe.android.core.injection.CoroutineContextModule_ProvideWorkContextFactory;
						public static provideWorkContext(param0: com.stripe.android.core.injection.CoroutineContextModule): kotlin.coroutines.CoroutineContext;
						public constructor(param0: com.stripe.android.core.injection.CoroutineContextModule);
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module core {
				export module injection {
					export class IOContext {
						public static class: java.lang.Class<com.stripe.android.core.injection.IOContext>;
						/**
						 * Constructs a new instance of the com.stripe.android.core.injection.IOContext interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module core {
				export module injection {
					export class Injectable<FallbackInitializeParam> extends java.lang.Object {
						public static class: java.lang.Class<com.stripe.android.core.injection.Injectable<any>>;
						/**
						 * Constructs a new instance of the com.stripe.android.core.injection.Injectable<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							fallbackInitialize(param0: FallbackInitializeParam): void;
						});
						public constructor();
						public fallbackInitialize(param0: FallbackInitializeParam): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module core {
				export module injection {
					export class InjectableKtxKt {
						public static class: java.lang.Class<com.stripe.android.core.injection.InjectableKtxKt>;
						public static injectWithFallback(param0: com.stripe.android.core.injection.Injectable<any>, param1: string, param2: any): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module core {
				export module injection {
					export class Injector {
						public static class: java.lang.Class<com.stripe.android.core.injection.Injector>;
						/**
						 * Constructs a new instance of the com.stripe.android.core.injection.Injector interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							inject(param0: com.stripe.android.core.injection.Injectable<any>): void;
						});
						public constructor();
						public inject(param0: com.stripe.android.core.injection.Injectable<any>): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module core {
				export module injection {
					export class InjectorKey {
						public static class: java.lang.Class<com.stripe.android.core.injection.InjectorKey>;
						/**
						 * Constructs a new instance of the com.stripe.android.core.injection.InjectorKey interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module core {
				export module injection {
					export class InjectorKt {
						public static class: java.lang.Class<com.stripe.android.core.injection.InjectorKt>;
						public static DUMMY_INJECTOR_KEY: string;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module core {
				export module injection {
					export class InjectorRegistry {
						public static class: java.lang.Class<com.stripe.android.core.injection.InjectorRegistry>;
						/**
						 * Constructs a new instance of the com.stripe.android.core.injection.InjectorRegistry interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							register(param0: com.stripe.android.core.injection.Injector, param1: string): void;
							retrieve(param0: string): com.stripe.android.core.injection.Injector;
							nextKey(param0: string): string;
						});
						public constructor();
						public register(param0: com.stripe.android.core.injection.Injector, param1: string): void;
						public nextKey(param0: string): string;
						public retrieve(param0: string): com.stripe.android.core.injection.Injector;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module core {
				export module injection {
					export class LoggingModule {
						public static class: java.lang.Class<com.stripe.android.core.injection.LoggingModule>;
						public static $stable: number;
						public constructor();
						public provideLogger(param0: boolean): com.stripe.android.core.Logger;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module core {
				export module injection {
					export class LoggingModule_ProvideLoggerFactory extends dagger.internal.Factory<com.stripe.android.core.Logger> {
						public static class: java.lang.Class<com.stripe.android.core.injection.LoggingModule_ProvideLoggerFactory>;
						public get(): com.stripe.android.core.Logger;
						public constructor(param0: com.stripe.android.core.injection.LoggingModule, param1: javax.inject.Provider<java.lang.Boolean>);
						public static create(param0: com.stripe.android.core.injection.LoggingModule, param1: javax.inject.Provider<java.lang.Boolean>): com.stripe.android.core.injection.LoggingModule_ProvideLoggerFactory;
						public static provideLogger(param0: com.stripe.android.core.injection.LoggingModule, param1: boolean): com.stripe.android.core.Logger;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module core {
				export module injection {
					export class NamedConstantsKt {
						public static class: java.lang.Class<com.stripe.android.core.injection.NamedConstantsKt>;
						public static ENABLE_LOGGING: string;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module core {
				export module injection {
					export class UIContext {
						public static class: java.lang.Class<com.stripe.android.core.injection.UIContext>;
						/**
						 * Constructs a new instance of the com.stripe.android.core.injection.UIContext interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module core {
				export module injection {
					export class WeakMapInjectorRegistry extends com.stripe.android.core.injection.InjectorRegistry {
						public static class: java.lang.Class<com.stripe.android.core.injection.WeakMapInjectorRegistry>;
						public static INSTANCE: com.stripe.android.core.injection.WeakMapInjectorRegistry;
						public static $stable: number;
						public getCURRENT_REGISTER_KEY(): java.util.concurrent.atomic.AtomicInteger;
						public register(param0: com.stripe.android.core.injection.Injector, param1: string): void;
						public nextKey(param0: string): string;
						public retrieve(param0: string): com.stripe.android.core.injection.Injector;
						public getStaticCacheMap(): java.util.WeakHashMap<com.stripe.android.core.injection.Injector, string>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module core {
				export module model {
					export class Country {
						public static class: java.lang.Class<com.stripe.android.core.model.Country>;
						public static $stable: number;
						public copy(param0: com.stripe.android.core.model.CountryCode, param1: string): com.stripe.android.core.model.Country;
						public getCode(): com.stripe.android.core.model.CountryCode;
						public constructor(param0: com.stripe.android.core.model.CountryCode, param1: string);
						public component2(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public component1(): com.stripe.android.core.model.CountryCode;
						public constructor(param0: string, param1: string);
						public getName(): string;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module core {
				export module model {
					export class CountryCode {
						public static class: java.lang.Class<com.stripe.android.core.model.CountryCode>;
						public static Companion: com.stripe.android.core.model.CountryCode.Companion;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.core.model.CountryCode>;
						public static $stable: number;
						public describeContents(): number;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getValue(): string;
						public copy(param0: string): com.stripe.android.core.model.CountryCode;
						public toString(): string;
						public constructor(param0: string);
					}
					export module CountryCode {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.core.model.CountryCode.Companion>;
							public getUS(): com.stripe.android.core.model.CountryCode;
							public isUS(param0: com.stripe.android.core.model.CountryCode): boolean;
							public getCA(): com.stripe.android.core.model.CountryCode;
							public getGB(): com.stripe.android.core.model.CountryCode;
							public create(param0: string): com.stripe.android.core.model.CountryCode;
							public isGB(param0: com.stripe.android.core.model.CountryCode): boolean;
							public isCA(param0: com.stripe.android.core.model.CountryCode): boolean;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.core.model.CountryCode> {
							public static class: java.lang.Class<com.stripe.android.core.model.CountryCode.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.core.model.CountryCode>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.core.model.CountryCode;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module core {
				export module model {
					export class CountryCodeKt {
						public static class: java.lang.Class<com.stripe.android.core.model.CountryCodeKt>;
						public static getCountryCode(param0: java.util.Locale): com.stripe.android.core.model.CountryCode;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module core {
				export module model {
					export class CountryUtils {
						public static class: java.lang.Class<com.stripe.android.core.model.CountryUtils>;
						public static INSTANCE: com.stripe.android.core.model.CountryUtils;
						public static $stable: number;
						public getCARD_POSTAL_CODE_COUNTRIES$stripe_core_release(): java.util.Set<string>;
						public formatNameForSorting$stripe_core_release(param0: string): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module core {
				export module model {
					export class StripeModel {
						public static class: java.lang.Class<com.stripe.android.core.model.StripeModel>;
						/**
						 * Constructs a new instance of the com.stripe.android.core.model.StripeModel interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							hashCode(): number;
							equals(param0: any): boolean;
						});
						public constructor();
						public hashCode(): number;
						public equals(param0: any): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module core {
				export module networking {
					export class AnalyticsRequest extends com.stripe.android.core.networking.StripeRequest {
						public static class: java.lang.Class<com.stripe.android.core.networking.AnalyticsRequest>;
						public static Companion: com.stripe.android.core.networking.AnalyticsRequest.Companion;
						public static $stable: number;
						public static HOST: string;
						public copy(param0: java.util.Map<string, any>, param1: java.util.Map<string, string>): com.stripe.android.core.networking.AnalyticsRequest;
						public constructor();
						public getParams(): java.util.Map<string, any>;
						public component1(): java.util.Map<string, any>;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getUrl(): string;
						public constructor(param0: java.util.Map<string, any>, param1: java.util.Map<string, string>);
						public toString(): string;
						public getRetryResponseCodes(): java.lang.Iterable<java.lang.Integer>;
						public component2(): java.util.Map<string, string>;
						public getHeaders(): java.util.Map<string, string>;
						public getMimeType(): com.stripe.android.core.networking.StripeRequest.MimeType;
						public getMethod(): com.stripe.android.core.networking.StripeRequest.Method;
					}
					export module AnalyticsRequest {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.core.networking.AnalyticsRequest.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module core {
				export module networking {
					export class AnalyticsRequestExecutor {
						public static class: java.lang.Class<com.stripe.android.core.networking.AnalyticsRequestExecutor>;
						/**
						 * Constructs a new instance of the com.stripe.android.core.networking.AnalyticsRequestExecutor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							executeAsync(param0: com.stripe.android.core.networking.AnalyticsRequest): void;
						});
						public constructor();
						public executeAsync(param0: com.stripe.android.core.networking.AnalyticsRequest): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module core {
				export module networking {
					export class ConnectionFactory {
						public static class: java.lang.Class<com.stripe.android.core.networking.ConnectionFactory>;
						/**
						 * Constructs a new instance of the com.stripe.android.core.networking.ConnectionFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							create(param0: com.stripe.android.core.networking.StripeRequest): com.stripe.android.core.networking.StripeConnection<string>;
							createForFile(param0: com.stripe.android.core.networking.StripeRequest, param1: java.io.File): com.stripe.android.core.networking.StripeConnection<java.io.File>;
							<clinit>(): void;
						});
						public constructor();
						public static Companion: com.stripe.android.core.networking.ConnectionFactory.Companion;
						public create(param0: com.stripe.android.core.networking.StripeRequest): com.stripe.android.core.networking.StripeConnection<string>;
						public createForFile(param0: com.stripe.android.core.networking.StripeRequest, param1: java.io.File): com.stripe.android.core.networking.StripeConnection<java.io.File>;
					}
					export module ConnectionFactory {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.core.networking.ConnectionFactory.Companion>;
						}
						export class Default extends com.stripe.android.core.networking.ConnectionFactory {
							public static class: java.lang.Class<com.stripe.android.core.networking.ConnectionFactory.Default>;
							public static INSTANCE: com.stripe.android.core.networking.ConnectionFactory.Default;
							public static $stable: number;
							public createForFile(param0: com.stripe.android.core.networking.StripeRequest, param1: java.io.File): com.stripe.android.core.networking.StripeConnection<java.io.File>;
							public create(param0: com.stripe.android.core.networking.StripeRequest): com.stripe.android.core.networking.StripeConnection<string>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module core {
				export module networking {
					export class DefaultAnalyticsRequestExecutor extends com.stripe.android.core.networking.AnalyticsRequestExecutor {
						public static class: java.lang.Class<com.stripe.android.core.networking.DefaultAnalyticsRequestExecutor>;
						public static Companion: com.stripe.android.core.networking.DefaultAnalyticsRequestExecutor.Companion;
						public static $stable: number;
						public static FIELD_EVENT: string;
						public constructor(param0: com.stripe.android.core.networking.StripeNetworkClient, param1: kotlin.coroutines.CoroutineContext, param2: com.stripe.android.core.Logger);
						public executeAsync(param0: com.stripe.android.core.networking.AnalyticsRequest): void;
						public constructor();
						public constructor(param0: com.stripe.android.core.Logger, param1: kotlin.coroutines.CoroutineContext);
					}
					export module DefaultAnalyticsRequestExecutor {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.core.networking.DefaultAnalyticsRequestExecutor.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module core {
				export module networking {
					export class DefaultAnalyticsRequestExecutor_Factory extends dagger.internal.Factory<com.stripe.android.core.networking.DefaultAnalyticsRequestExecutor> {
						public static class: java.lang.Class<com.stripe.android.core.networking.DefaultAnalyticsRequestExecutor_Factory>;
						public constructor(param0: javax.inject.Provider<com.stripe.android.core.Logger>, param1: javax.inject.Provider<kotlin.coroutines.CoroutineContext>);
						public get(): com.stripe.android.core.networking.DefaultAnalyticsRequestExecutor;
						public static newInstance(param0: com.stripe.android.core.Logger, param1: kotlin.coroutines.CoroutineContext): com.stripe.android.core.networking.DefaultAnalyticsRequestExecutor;
						public static create(param0: javax.inject.Provider<com.stripe.android.core.Logger>, param1: javax.inject.Provider<kotlin.coroutines.CoroutineContext>): com.stripe.android.core.networking.DefaultAnalyticsRequestExecutor_Factory;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module core {
				export module networking {
					export class DefaultStripeNetworkClient extends com.stripe.android.core.networking.StripeNetworkClient {
						public static class: java.lang.Class<com.stripe.android.core.networking.DefaultStripeNetworkClient>;
						public static $stable: number;
						public constructor(param0: kotlin.coroutines.CoroutineContext, param1: com.stripe.android.core.networking.ConnectionFactory, param2: com.stripe.android.core.networking.RetryDelaySupplier, param3: number, param4: com.stripe.android.core.Logger);
						public constructor();
						public constructor(param0: kotlin.coroutines.CoroutineContext, param1: com.stripe.android.core.networking.ConnectionFactory, param2: com.stripe.android.core.networking.RetryDelaySupplier);
						public constructor(param0: kotlin.coroutines.CoroutineContext, param1: com.stripe.android.core.networking.ConnectionFactory);
						public executeRequest(param0: com.stripe.android.core.networking.StripeRequest, param1: kotlin.coroutines.Continuation<any>): any;
						public executeInternal$stripe_core_release(param0: number, param1: java.lang.Iterable, param2: kotlin.jvm.functions.Function0, param3: kotlin.coroutines.Continuation): any;
						public executeRequestForFile(param0: com.stripe.android.core.networking.StripeRequest, param1: java.io.File, param2: kotlin.coroutines.Continuation<any>): any;
						public constructor(param0: kotlin.coroutines.CoroutineContext);
						public constructor(param0: kotlin.coroutines.CoroutineContext, param1: com.stripe.android.core.networking.ConnectionFactory, param2: com.stripe.android.core.networking.RetryDelaySupplier, param3: number);
					}
					export module DefaultStripeNetworkClient {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.core.networking.DefaultStripeNetworkClient.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module core {
				export module networking {
					export class NetworkConstantsKt {
						public static class: java.lang.Class<com.stripe.android.core.networking.NetworkConstantsKt>;
						public static HTTP_TOO_MANY_REQUESTS: number;
						public static HEADER_CONTENT_TYPE: string;
						public static HEADER_AUTHORIZATION: string;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module core {
				export module networking {
					export class QueryStringFactory {
						public static class: java.lang.Class<com.stripe.android.core.networking.QueryStringFactory>;
						public static INSTANCE: com.stripe.android.core.networking.QueryStringFactory;
						public static $stable: number;
						public compactParams(param0: java.util.Map<string, any>): java.util.Map<string, any>;
						public create(param0: java.util.Map<string, any>): string;
						public createFromParamsWithEmptyValues(param0: java.util.Map<string, any>): string;
					}
					export module QueryStringFactory {
						export class Parameter {
							public static class: java.lang.Class<com.stripe.android.core.networking.QueryStringFactory.Parameter>;
							public hashCode(): number;
							public constructor(param0: string, param1: string);
							public toString(): string;
							public equals(param0: any): boolean;
							public copy(param0: string, param1: string): com.stripe.android.core.networking.QueryStringFactory.Parameter;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module core {
				export module networking {
					export class RequestId {
						public static class: java.lang.Class<com.stripe.android.core.networking.RequestId>;
						public static Companion: com.stripe.android.core.networking.RequestId.Companion;
						public static $stable: number;
						public copy(param0: string): com.stripe.android.core.networking.RequestId;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getValue(): string;
						public toString(): string;
						public constructor(param0: string);
					}
					export module RequestId {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.core.networking.RequestId.Companion>;
							public fromString(param0: string): com.stripe.android.core.networking.RequestId;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module core {
				export module networking {
					export class RetryDelaySupplier {
						public static class: java.lang.Class<com.stripe.android.core.networking.RetryDelaySupplier>;
						public static $stable: number;
						public constructor();
						public getDelayMillis(param0: number, param1: number): number;
						public constructor(param0: number);
					}
					export module RetryDelaySupplier {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.core.networking.RetryDelaySupplier.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module core {
				export module networking {
					export class RetryDelaySupplier_Factory extends dagger.internal.Factory<com.stripe.android.core.networking.RetryDelaySupplier> {
						public static class: java.lang.Class<com.stripe.android.core.networking.RetryDelaySupplier_Factory>;
						public constructor();
						public static newInstance(): com.stripe.android.core.networking.RetryDelaySupplier;
						public static create(): com.stripe.android.core.networking.RetryDelaySupplier_Factory;
						public get(): com.stripe.android.core.networking.RetryDelaySupplier;
					}
					export module RetryDelaySupplier_Factory {
						export class InstanceHolder {
							public static class: java.lang.Class<com.stripe.android.core.networking.RetryDelaySupplier_Factory.InstanceHolder>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module core {
				export module networking {
					export class StripeConnection<ResponseBodyType> extends java.io.Closeable {
						public static class: java.lang.Class<com.stripe.android.core.networking.StripeConnection<any>>;
						/**
						 * Constructs a new instance of the com.stripe.android.core.networking.StripeConnection<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getResponseCode(): number;
							getResponse(): com.stripe.android.core.networking.StripeResponse<any>;
							createBodyFromResponseStream(param0: java.io.InputStream): any;
						});
						public constructor();
						public getResponse(): com.stripe.android.core.networking.StripeResponse<any>;
						public getResponseCode(): number;
						public createBodyFromResponseStream(param0: java.io.InputStream): any;
					}
					export module StripeConnection {
						export abstract class AbstractConnection<ResponseBodyType> extends com.stripe.android.core.networking.StripeConnection<any> {
							public static class: java.lang.Class<com.stripe.android.core.networking.StripeConnection.AbstractConnection<any>>;
							public static Companion: com.stripe.android.core.networking.StripeConnection.AbstractConnection.Companion;
							public static $stable: number;
							public constructor(param0: javax.net.ssl.HttpsURLConnection);
							public close(): void;
							public getResponseCode(): number;
							public getResponse(): com.stripe.android.core.networking.StripeResponse<any>;
							public createBodyFromResponseStream(param0: java.io.InputStream): any;
						}
						export module AbstractConnection {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.core.networking.StripeConnection.AbstractConnection.Companion>;
								public getCHARSET$stripe_core_release(): string;
							}
						}
						export class Default extends com.stripe.android.core.networking.StripeConnection.AbstractConnection<string> {
							public static class: java.lang.Class<com.stripe.android.core.networking.StripeConnection.Default>;
							public static $stable: number;
							public constructor(param0: javax.net.ssl.HttpsURLConnection);
							public getResponseCode(): number;
							public createBodyFromResponseStream(param0: java.io.InputStream): string;
							public getResponse(): com.stripe.android.core.networking.StripeResponse<any>;
							public createBodyFromResponseStream(param0: java.io.InputStream): any;
						}
						export class FileConnection extends com.stripe.android.core.networking.StripeConnection.AbstractConnection<java.io.File> {
							public static class: java.lang.Class<com.stripe.android.core.networking.StripeConnection.FileConnection>;
							public static $stable: number;
							public createBodyFromResponseStream(param0: java.io.InputStream): java.io.File;
							public constructor(param0: javax.net.ssl.HttpsURLConnection);
							public getResponseCode(): number;
							public getResponse(): com.stripe.android.core.networking.StripeResponse<any>;
							public createBodyFromResponseStream(param0: java.io.InputStream): any;
							public constructor(param0: javax.net.ssl.HttpsURLConnection, param1: java.io.File);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module core {
				export module networking {
					export class StripeNetworkClient {
						public static class: java.lang.Class<com.stripe.android.core.networking.StripeNetworkClient>;
						/**
						 * Constructs a new instance of the com.stripe.android.core.networking.StripeNetworkClient interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							executeRequest(param0: com.stripe.android.core.networking.StripeRequest, param1: kotlin.coroutines.Continuation<any>): any;
							executeRequestForFile(param0: com.stripe.android.core.networking.StripeRequest, param1: java.io.File, param2: kotlin.coroutines.Continuation<any>): any;
						});
						public constructor();
						public executeRequest(param0: com.stripe.android.core.networking.StripeRequest, param1: kotlin.coroutines.Continuation<any>): any;
						public executeRequestForFile(param0: com.stripe.android.core.networking.StripeRequest, param1: java.io.File, param2: kotlin.coroutines.Continuation<any>): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module core {
				export module networking {
					export abstract class StripeRequest {
						public static class: java.lang.Class<com.stripe.android.core.networking.StripeRequest>;
						public static $stable: number;
						public writePostBody(param0: java.io.OutputStream): void;
						public constructor();
						public setPostHeaders(param0: java.util.Map<string, string>): void;
						public getHeaders(): java.util.Map<string, string>;
						public getMimeType(): com.stripe.android.core.networking.StripeRequest.MimeType;
						public getUrl(): string;
						public getPostHeaders(): java.util.Map<string, string>;
						public getMethod(): com.stripe.android.core.networking.StripeRequest.Method;
						public getRetryResponseCodes(): java.lang.Iterable<java.lang.Integer>;
					}
					export module StripeRequest {
						export class Method {
							public static class: java.lang.Class<com.stripe.android.core.networking.StripeRequest.Method>;
							public static GET: com.stripe.android.core.networking.StripeRequest.Method;
							public static POST: com.stripe.android.core.networking.StripeRequest.Method;
							public static DELETE: com.stripe.android.core.networking.StripeRequest.Method;
							public getCode(): string;
							public static valueOf(param0: string): com.stripe.android.core.networking.StripeRequest.Method;
							public static values(): androidNative.Array<com.stripe.android.core.networking.StripeRequest.Method>;
						}
						export class MimeType {
							public static class: java.lang.Class<com.stripe.android.core.networking.StripeRequest.MimeType>;
							public static Form: com.stripe.android.core.networking.StripeRequest.MimeType;
							public static MultipartForm: com.stripe.android.core.networking.StripeRequest.MimeType;
							public static Json: com.stripe.android.core.networking.StripeRequest.MimeType;
							public getCode(): string;
							public static values(): androidNative.Array<com.stripe.android.core.networking.StripeRequest.MimeType>;
							public toString(): string;
							public static valueOf(param0: string): com.stripe.android.core.networking.StripeRequest.MimeType;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module core {
				export module networking {
					export class StripeResponse<ResponseBody> extends java.lang.Object {
						public static class: java.lang.Class<com.stripe.android.core.networking.StripeResponse<any>>;
						public static Companion: com.stripe.android.core.networking.StripeResponse.Companion;
						public static $stable: number;
						public static HEADER_REQUEST_ID: string;
						public constructor(param0: number, param1: ResponseBody, param2: java.util.Map<string, any>);
						public component3(): java.util.Map<string, java.util.List<string>>;
						public getHeaderValue(param0: string): java.util.List<string>;
						public getBody(): ResponseBody;
						public isOk(): boolean;
						public isError(): boolean;
						public getCode(): number;
						public isRateLimited(): boolean;
						public component2(): ResponseBody;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public toString(): string;
						public getHeaders(): java.util.Map<string, java.util.List<string>>;
						public component1(): number;
						public copy(param0: number, param1: ResponseBody, param2: java.util.Map<string, any>): com.stripe.android.core.networking.StripeResponse<ResponseBody>;
						public getRequestId(): com.stripe.android.core.networking.RequestId;
					}
					export module StripeResponse {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.core.networking.StripeResponse.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module core {
				export module networking {
					export class StripeResponseKtxKt {
						public static class: java.lang.Class<com.stripe.android.core.networking.StripeResponseKtxKt>;
						public static responseJson(param0: com.stripe.android.core.networking.StripeResponse<string>): org.json.JSONObject;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module databinding {
				export class AddPaymentMethodActivityBinding {
					public static class: java.lang.Class<com.stripe.android.databinding.AddPaymentMethodActivityBinding>;
					public root: globalAndroid.widget.LinearLayout;
					public getRoot(): globalAndroid.widget.ScrollView;
					public static bind(param0: globalAndroid.view.View): com.stripe.android.databinding.AddPaymentMethodActivityBinding;
					public static inflate(param0: globalAndroid.view.LayoutInflater): com.stripe.android.databinding.AddPaymentMethodActivityBinding;
					public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: boolean): com.stripe.android.databinding.AddPaymentMethodActivityBinding;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module databinding {
				export class AddPaymentMethodCardViewBinding {
					public static class: java.lang.Class<com.stripe.android.databinding.AddPaymentMethodCardViewBinding>;
					public addPaymentMethodCard: globalAndroid.widget.LinearLayout;
					public billingAddressWidget: com.stripe.android.view.ShippingInfoWidget;
					public cardMultilineWidget: com.stripe.android.view.CardMultilineWidget;
					public static bind(param0: globalAndroid.view.View): com.stripe.android.databinding.AddPaymentMethodCardViewBinding;
					public getRoot(): globalAndroid.widget.LinearLayout;
					public static inflate(param0: globalAndroid.view.LayoutInflater): com.stripe.android.databinding.AddPaymentMethodCardViewBinding;
					public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: boolean): com.stripe.android.databinding.AddPaymentMethodCardViewBinding;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module databinding {
				export class AddPaymentMethodRowBinding {
					public static class: java.lang.Class<com.stripe.android.databinding.AddPaymentMethodRowBinding>;
					public label: androidx.appcompat.widget.AppCompatTextView;
					public static bind(param0: globalAndroid.view.View): com.stripe.android.databinding.AddPaymentMethodRowBinding;
					public static inflate(param0: globalAndroid.view.LayoutInflater): com.stripe.android.databinding.AddPaymentMethodRowBinding;
					public getRoot(): globalAndroid.widget.LinearLayout;
					public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: boolean): com.stripe.android.databinding.AddPaymentMethodRowBinding;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module databinding {
				export class AddressWidgetBinding {
					public static class: java.lang.Class<com.stripe.android.databinding.AddressWidgetBinding>;
					public countryAutocompleteAaw: com.stripe.android.view.CountryTextInputLayout;
					public etAddressLineOneAaw: com.stripe.android.view.StripeEditText;
					public etAddressLineTwoAaw: com.stripe.android.view.StripeEditText;
					public etCityAaw: com.stripe.android.view.StripeEditText;
					public etNameAaw: com.stripe.android.view.StripeEditText;
					public etPhoneNumberAaw: com.stripe.android.view.StripeEditText;
					public etPostalCodeAaw: com.stripe.android.view.StripeEditText;
					public etStateAaw: com.stripe.android.view.StripeEditText;
					public tlAddressLine1Aaw: com.google.android.material.textfield.TextInputLayout;
					public tlAddressLine2Aaw: com.google.android.material.textfield.TextInputLayout;
					public tlCityAaw: com.google.android.material.textfield.TextInputLayout;
					public tlNameAaw: com.google.android.material.textfield.TextInputLayout;
					public tlPhoneNumberAaw: com.google.android.material.textfield.TextInputLayout;
					public tlPostalCodeAaw: com.google.android.material.textfield.TextInputLayout;
					public tlStateAaw: com.google.android.material.textfield.TextInputLayout;
					public getRoot(): globalAndroid.view.View;
					public static bind(param0: globalAndroid.view.View): com.stripe.android.databinding.AddressWidgetBinding;
					public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup): com.stripe.android.databinding.AddressWidgetBinding;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module databinding {
				export class BankItemBinding {
					public static class: java.lang.Class<com.stripe.android.databinding.BankItemBinding>;
					public checkIcon: androidx.appcompat.widget.AppCompatImageView;
					public icon: androidx.appcompat.widget.AppCompatImageView;
					public name: androidx.appcompat.widget.AppCompatTextView;
					public static inflate(param0: globalAndroid.view.LayoutInflater): com.stripe.android.databinding.BankItemBinding;
					public static bind(param0: globalAndroid.view.View): com.stripe.android.databinding.BankItemBinding;
					public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: boolean): com.stripe.android.databinding.BankItemBinding;
					public getRoot(): globalAndroid.widget.LinearLayout;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module databinding {
				export class BankListPaymentMethodBinding {
					public static class: java.lang.Class<com.stripe.android.databinding.BankListPaymentMethodBinding>;
					public bankList: androidx.recyclerview.widget.RecyclerView;
					public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: boolean): com.stripe.android.databinding.BankListPaymentMethodBinding;
					public static inflate(param0: globalAndroid.view.LayoutInflater): com.stripe.android.databinding.BankListPaymentMethodBinding;
					public getRoot(): globalAndroid.widget.LinearLayout;
					public static bind(param0: globalAndroid.view.View): com.stripe.android.databinding.BankListPaymentMethodBinding;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module databinding {
				export class BecsDebitWidgetBinding {
					public static class: java.lang.Class<com.stripe.android.databinding.BecsDebitWidgetBinding>;
					public accountNumberEditText: com.stripe.android.view.BecsDebitAccountNumberEditText;
					public accountNumberTextInputLayout: com.google.android.material.textfield.TextInputLayout;
					public bsbEditText: com.stripe.android.view.BecsDebitBsbEditText;
					public bsbTextInputLayout: com.google.android.material.textfield.TextInputLayout;
					public emailEditText: com.stripe.android.view.EmailEditText;
					public emailTextInputLayout: com.google.android.material.textfield.TextInputLayout;
					public mandateAcceptanceTextView: com.stripe.android.view.BecsDebitMandateAcceptanceTextView;
					public nameEditText: com.stripe.android.view.StripeEditText;
					public nameTextInputLayout: com.google.android.material.textfield.TextInputLayout;
					public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup): com.stripe.android.databinding.BecsDebitWidgetBinding;
					public getRoot(): globalAndroid.view.View;
					public static bind(param0: globalAndroid.view.View): com.stripe.android.databinding.BecsDebitWidgetBinding;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module databinding {
				export class CardBrandSpinnerDropdownBinding {
					public static class: java.lang.Class<com.stripe.android.databinding.CardBrandSpinnerDropdownBinding>;
					public textView: androidx.appcompat.widget.AppCompatTextView;
					public static bind(param0: globalAndroid.view.View): com.stripe.android.databinding.CardBrandSpinnerDropdownBinding;
					public getRoot(): androidx.appcompat.widget.AppCompatTextView;
					public static inflate(param0: globalAndroid.view.LayoutInflater): com.stripe.android.databinding.CardBrandSpinnerDropdownBinding;
					public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: boolean): com.stripe.android.databinding.CardBrandSpinnerDropdownBinding;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module databinding {
				export class CardBrandSpinnerMainBinding {
					public static class: java.lang.Class<com.stripe.android.databinding.CardBrandSpinnerMainBinding>;
					public image: androidx.appcompat.widget.AppCompatImageView;
					public getRoot(): androidx.appcompat.widget.AppCompatImageView;
					public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: boolean): com.stripe.android.databinding.CardBrandSpinnerMainBinding;
					public static inflate(param0: globalAndroid.view.LayoutInflater): com.stripe.android.databinding.CardBrandSpinnerMainBinding;
					public static bind(param0: globalAndroid.view.View): com.stripe.android.databinding.CardBrandSpinnerMainBinding;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module databinding {
				export class CardBrandViewBinding {
					public static class: java.lang.Class<com.stripe.android.databinding.CardBrandViewBinding>;
					public icon: globalAndroid.widget.ImageView;
					public progress: com.stripe.android.view.CardWidgetProgressView;
					public static bind(param0: globalAndroid.view.View): com.stripe.android.databinding.CardBrandViewBinding;
					public getRoot(): globalAndroid.view.View;
					public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup): com.stripe.android.databinding.CardBrandViewBinding;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module databinding {
				export class CardInputWidgetBinding {
					public static class: java.lang.Class<com.stripe.android.databinding.CardInputWidgetBinding>;
					public cardBrandView: com.stripe.android.view.CardBrandView;
					public cardNumberEditText: com.stripe.android.view.CardNumberEditText;
					public cardNumberTextInputLayout: com.google.android.material.textfield.TextInputLayout;
					public container: globalAndroid.widget.FrameLayout;
					public cvcEditText: com.stripe.android.view.CvcEditText;
					public cvcTextInputLayout: com.google.android.material.textfield.TextInputLayout;
					public expiryDateEditText: com.stripe.android.view.ExpiryDateEditText;
					public expiryDateTextInputLayout: com.google.android.material.textfield.TextInputLayout;
					public postalCodeEditText: com.stripe.android.view.PostalCodeEditText;
					public postalCodeTextInputLayout: com.google.android.material.textfield.TextInputLayout;
					public static bind(param0: globalAndroid.view.View): com.stripe.android.databinding.CardInputWidgetBinding;
					public getRoot(): globalAndroid.view.View;
					public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup): com.stripe.android.databinding.CardInputWidgetBinding;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module databinding {
				export class CardMultilineWidgetBinding {
					public static class: java.lang.Class<com.stripe.android.databinding.CardMultilineWidgetBinding>;
					public etCardNumber: com.stripe.android.view.CardNumberEditText;
					public etCvc: com.stripe.android.view.CvcEditText;
					public etExpiry: com.stripe.android.view.ExpiryDateEditText;
					public etPostalCode: com.stripe.android.view.PostalCodeEditText;
					public secondRowLayout: globalAndroid.widget.LinearLayout;
					public tlCardNumber: com.stripe.android.view.CardNumberTextInputLayout;
					public tlCvc: com.google.android.material.textfield.TextInputLayout;
					public tlExpiry: com.google.android.material.textfield.TextInputLayout;
					public tlPostalCode: com.google.android.material.textfield.TextInputLayout;
					public getRoot(): globalAndroid.view.View;
					public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup): com.stripe.android.databinding.CardMultilineWidgetBinding;
					public static bind(param0: globalAndroid.view.View): com.stripe.android.databinding.CardMultilineWidgetBinding;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module databinding {
				export class CardWidgetProgressViewBinding {
					public static class: java.lang.Class<com.stripe.android.databinding.CardWidgetProgressViewBinding>;
					public cardLoading: globalAndroid.widget.ProgressBar;
					public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup): com.stripe.android.databinding.CardWidgetProgressViewBinding;
					public getRoot(): globalAndroid.view.View;
					public static bind(param0: globalAndroid.view.View): com.stripe.android.databinding.CardWidgetProgressViewBinding;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module databinding {
				export class CountryTextViewBinding {
					public static class: java.lang.Class<com.stripe.android.databinding.CountryTextViewBinding>;
					public static inflate(param0: globalAndroid.view.LayoutInflater): com.stripe.android.databinding.CountryTextViewBinding;
					public static bind(param0: globalAndroid.view.View): com.stripe.android.databinding.CountryTextViewBinding;
					public getRoot(): globalAndroid.widget.TextView;
					public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: boolean): com.stripe.android.databinding.CountryTextViewBinding;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module databinding {
				export class GooglePayRowBinding {
					public static class: java.lang.Class<com.stripe.android.databinding.GooglePayRowBinding>;
					public checkIcon: androidx.appcompat.widget.AppCompatImageView;
					public label: androidx.appcompat.widget.AppCompatTextView;
					public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: boolean): com.stripe.android.databinding.GooglePayRowBinding;
					public getRoot(): globalAndroid.widget.LinearLayout;
					public static inflate(param0: globalAndroid.view.LayoutInflater): com.stripe.android.databinding.GooglePayRowBinding;
					public static bind(param0: globalAndroid.view.View): com.stripe.android.databinding.GooglePayRowBinding;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module databinding {
				export class MaskedCardRowBinding {
					public static class: java.lang.Class<com.stripe.android.databinding.MaskedCardRowBinding>;
					public maskedCardItem: com.stripe.android.view.MaskedCardView;
					public getRoot(): globalAndroid.widget.FrameLayout;
					public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: boolean): com.stripe.android.databinding.MaskedCardRowBinding;
					public static inflate(param0: globalAndroid.view.LayoutInflater): com.stripe.android.databinding.MaskedCardRowBinding;
					public static bind(param0: globalAndroid.view.View): com.stripe.android.databinding.MaskedCardRowBinding;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module databinding {
				export class MaskedCardViewBinding {
					public static class: java.lang.Class<com.stripe.android.databinding.MaskedCardViewBinding>;
					public brandIcon: androidx.appcompat.widget.AppCompatImageView;
					public checkIcon: androidx.appcompat.widget.AppCompatImageView;
					public details: androidx.appcompat.widget.AppCompatTextView;
					public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup): com.stripe.android.databinding.MaskedCardViewBinding;
					public static bind(param0: globalAndroid.view.View): com.stripe.android.databinding.MaskedCardViewBinding;
					public getRoot(): globalAndroid.view.View;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module databinding {
				export class PaymentAuthWebViewActivityBinding {
					public static class: java.lang.Class<com.stripe.android.databinding.PaymentAuthWebViewActivityBinding>;
					public progressBar: com.google.android.material.progressindicator.CircularProgressIndicator;
					public toolbar: androidx.appcompat.widget.Toolbar;
					public webView: com.stripe.android.view.PaymentAuthWebView;
					public webViewContainer: globalAndroid.widget.FrameLayout;
					public static inflate(param0: globalAndroid.view.LayoutInflater): com.stripe.android.databinding.PaymentAuthWebViewActivityBinding;
					public static bind(param0: globalAndroid.view.View): com.stripe.android.databinding.PaymentAuthWebViewActivityBinding;
					public getRoot(): androidx.coordinatorlayout.widget.CoordinatorLayout;
					public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: boolean): com.stripe.android.databinding.PaymentAuthWebViewActivityBinding;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module databinding {
				export class PaymentFlowActivityBinding {
					public static class: java.lang.Class<com.stripe.android.databinding.PaymentFlowActivityBinding>;
					public shippingFlowViewpager: com.stripe.android.view.PaymentFlowViewPager;
					public static inflate(param0: globalAndroid.view.LayoutInflater): com.stripe.android.databinding.PaymentFlowActivityBinding;
					public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: boolean): com.stripe.android.databinding.PaymentFlowActivityBinding;
					public getRoot(): globalAndroid.widget.FrameLayout;
					public static bind(param0: globalAndroid.view.View): com.stripe.android.databinding.PaymentFlowActivityBinding;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module databinding {
				export class PaymentMethodsActivityBinding {
					public static class: java.lang.Class<com.stripe.android.databinding.PaymentMethodsActivityBinding>;
					public coordinator: androidx.coordinatorlayout.widget.CoordinatorLayout;
					public footerContainer: globalAndroid.widget.FrameLayout;
					public progressBar: com.google.android.material.progressindicator.LinearProgressIndicator;
					public recycler: com.stripe.android.view.PaymentMethodsRecyclerView;
					public toolbar: androidx.appcompat.widget.Toolbar;
					public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: boolean): com.stripe.android.databinding.PaymentMethodsActivityBinding;
					public getRoot(): androidx.coordinatorlayout.widget.CoordinatorLayout;
					public static bind(param0: globalAndroid.view.View): com.stripe.android.databinding.PaymentMethodsActivityBinding;
					public static inflate(param0: globalAndroid.view.LayoutInflater): com.stripe.android.databinding.PaymentMethodsActivityBinding;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module databinding {
				export class ShippingInfoPageBinding {
					public static class: java.lang.Class<com.stripe.android.databinding.ShippingInfoPageBinding>;
					public shippingInfoWidget: com.stripe.android.view.ShippingInfoWidget;
					public getRoot(): globalAndroid.widget.ScrollView;
					public static inflate(param0: globalAndroid.view.LayoutInflater): com.stripe.android.databinding.ShippingInfoPageBinding;
					public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: boolean): com.stripe.android.databinding.ShippingInfoPageBinding;
					public static bind(param0: globalAndroid.view.View): com.stripe.android.databinding.ShippingInfoPageBinding;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module databinding {
				export class ShippingMethodPageBinding {
					public static class: java.lang.Class<com.stripe.android.databinding.ShippingMethodPageBinding>;
					public selectShippingMethodWidget: com.stripe.android.view.SelectShippingMethodWidget;
					public getRoot(): globalAndroid.widget.FrameLayout;
					public static inflate(param0: globalAndroid.view.LayoutInflater): com.stripe.android.databinding.ShippingMethodPageBinding;
					public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: boolean): com.stripe.android.databinding.ShippingMethodPageBinding;
					public static bind(param0: globalAndroid.view.View): com.stripe.android.databinding.ShippingMethodPageBinding;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module databinding {
				export class ShippingMethodViewBinding {
					public static class: java.lang.Class<com.stripe.android.databinding.ShippingMethodViewBinding>;
					public description: globalAndroid.widget.TextView;
					public name: globalAndroid.widget.TextView;
					public price: globalAndroid.widget.TextView;
					public selectedIcon: androidx.appcompat.widget.AppCompatImageView;
					public getRoot(): globalAndroid.view.View;
					public static bind(param0: globalAndroid.view.View): com.stripe.android.databinding.ShippingMethodViewBinding;
					public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup): com.stripe.android.databinding.ShippingMethodViewBinding;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module databinding {
				export class ShippingMethodWidgetBinding {
					public static class: java.lang.Class<com.stripe.android.databinding.ShippingMethodWidgetBinding>;
					public shippingMethods: androidx.recyclerview.widget.RecyclerView;
					public getRoot(): globalAndroid.view.View;
					public static bind(param0: globalAndroid.view.View): com.stripe.android.databinding.ShippingMethodWidgetBinding;
					public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup): com.stripe.android.databinding.ShippingMethodWidgetBinding;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module databinding {
				export class Stripe3ds2TransactionLayoutBinding {
					public static class: java.lang.Class<com.stripe.android.databinding.Stripe3ds2TransactionLayoutBinding>;
					public fragmentContainer: androidx.fragment.app.FragmentContainerView;
					public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: boolean): com.stripe.android.databinding.Stripe3ds2TransactionLayoutBinding;
					public static bind(param0: globalAndroid.view.View): com.stripe.android.databinding.Stripe3ds2TransactionLayoutBinding;
					public getRoot(): androidx.fragment.app.FragmentContainerView;
					public static inflate(param0: globalAndroid.view.LayoutInflater): com.stripe.android.databinding.Stripe3ds2TransactionLayoutBinding;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module databinding {
				export class StripeActivityBinding {
					public static class: java.lang.Class<com.stripe.android.databinding.StripeActivityBinding>;
					public progressBar: com.google.android.material.progressindicator.LinearProgressIndicator;
					public toolbar: androidx.appcompat.widget.Toolbar;
					public viewStub: globalAndroid.view.ViewStub;
					public getRoot(): globalAndroid.widget.RelativeLayout;
					public static inflate(param0: globalAndroid.view.LayoutInflater): com.stripe.android.databinding.StripeActivityBinding;
					public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: boolean): com.stripe.android.databinding.StripeActivityBinding;
					public static bind(param0: globalAndroid.view.View): com.stripe.android.databinding.StripeActivityBinding;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module databinding {
				export class StripeCardFormViewBinding {
					public static class: java.lang.Class<com.stripe.android.databinding.StripeCardFormViewBinding>;
					public cardMultilineWidget: com.stripe.android.view.CardMultilineWidget;
					public cardMultilineWidgetContainer: com.google.android.material.card.MaterialCardView;
					public countryLayout: com.stripe.android.view.CountryTextInputLayout;
					public countryPostalDivider: globalAndroid.view.View;
					public errors: globalAndroid.widget.TextView;
					public postalCode: com.stripe.android.view.PostalCodeEditText;
					public postalCodeContainer: com.google.android.material.textfield.TextInputLayout;
					public getRoot(): globalAndroid.view.View;
					public static bind(param0: globalAndroid.view.View): com.stripe.android.databinding.StripeCardFormViewBinding;
					public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup): com.stripe.android.databinding.StripeCardFormViewBinding;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module databinding {
				export class StripeCountryDropdownItemBinding {
					public static class: java.lang.Class<com.stripe.android.databinding.StripeCountryDropdownItemBinding>;
					public text1: globalAndroid.widget.TextView;
					public static inflate(param0: globalAndroid.view.LayoutInflater): com.stripe.android.databinding.StripeCountryDropdownItemBinding;
					public getRoot(): globalAndroid.widget.TextView;
					public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: boolean): com.stripe.android.databinding.StripeCountryDropdownItemBinding;
					public static bind(param0: globalAndroid.view.View): com.stripe.android.databinding.StripeCountryDropdownItemBinding;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module databinding {
				export class StripeHorizontalDividerBinding {
					public static class: java.lang.Class<com.stripe.android.databinding.StripeHorizontalDividerBinding>;
					public getRoot(): globalAndroid.view.View;
					public static inflate(param0: globalAndroid.view.LayoutInflater): com.stripe.android.databinding.StripeHorizontalDividerBinding;
					public static bind(param0: globalAndroid.view.View): com.stripe.android.databinding.StripeHorizontalDividerBinding;
					public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: boolean): com.stripe.android.databinding.StripeHorizontalDividerBinding;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module databinding {
				export class StripeVerticalDividerBinding {
					public static class: java.lang.Class<com.stripe.android.databinding.StripeVerticalDividerBinding>;
					public static bind(param0: globalAndroid.view.View): com.stripe.android.databinding.StripeVerticalDividerBinding;
					public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: boolean): com.stripe.android.databinding.StripeVerticalDividerBinding;
					public getRoot(): globalAndroid.view.View;
					public static inflate(param0: globalAndroid.view.LayoutInflater): com.stripe.android.databinding.StripeVerticalDividerBinding;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module exception {
				export class AuthenticationException extends com.stripe.android.core.exception.StripeException {
					public static class: java.lang.Class<com.stripe.android.exception.AuthenticationException>;
					public static $stable: number;
					public constructor(param0: com.stripe.android.core.StripeError, param1: string, param2: number, param3: java.lang.Throwable, param4: string);
					public constructor();
					public constructor(param0: com.stripe.android.core.StripeError, param1: string);
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module exception {
				export class CardException extends com.stripe.android.core.exception.StripeException {
					public static class: java.lang.Class<com.stripe.android.exception.CardException>;
					public static $stable: number;
					public constructor(param0: com.stripe.android.core.StripeError, param1: string, param2: number, param3: java.lang.Throwable, param4: string);
					public getCode(): string;
					public constructor();
					public getCharge(): string;
					public getDeclineCode(): string;
					public constructor(param0: com.stripe.android.core.StripeError, param1: string);
					public getParam(): string;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module exception {
				export class MaxRetryReachedException extends com.stripe.android.core.exception.StripeException {
					public static class: java.lang.Class<com.stripe.android.exception.MaxRetryReachedException>;
					public constructor(param0: com.stripe.android.core.StripeError, param1: string, param2: number, param3: java.lang.Throwable, param4: string);
					public constructor(param0: string);
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module exception {
				export class PermissionException extends com.stripe.android.core.exception.StripeException {
					public static class: java.lang.Class<com.stripe.android.exception.PermissionException>;
					public static $stable: number;
					public constructor(param0: com.stripe.android.core.StripeError, param1: string, param2: number, param3: java.lang.Throwable, param4: string);
					public constructor();
					public constructor(param0: com.stripe.android.core.StripeError, param1: string);
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module exception {
				export class RateLimitException extends com.stripe.android.core.exception.StripeException {
					public static class: java.lang.Class<com.stripe.android.exception.RateLimitException>;
					public static $stable: number;
					public constructor(param0: com.stripe.android.core.StripeError, param1: string, param2: number, param3: java.lang.Throwable, param4: string);
					public constructor(param0: com.stripe.android.core.StripeError, param1: string, param2: string, param3: java.lang.Throwable);
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module googlepaylauncher {
				export class DefaultGooglePayRepository extends com.stripe.android.googlepaylauncher.GooglePayRepository {
					public static class: java.lang.Class<com.stripe.android.googlepaylauncher.DefaultGooglePayRepository>;
					public constructor(param0: globalAndroid.content.Context, param1: com.stripe.android.googlepaylauncher.GooglePayEnvironment, param2: com.stripe.android.GooglePayJsonFactory.BillingAddressParameters, param3: boolean, param4: com.stripe.android.core.Logger);
					public isReady(): kotlinx.coroutines.flow.Flow<java.lang.Boolean>;
					public constructor(param0: globalAndroid.content.Context, param1: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Config, param2: com.stripe.android.core.Logger);
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module googlepaylauncher {
				export class DefaultGooglePayRepository_Factory extends dagger.internal.Factory<com.stripe.android.googlepaylauncher.DefaultGooglePayRepository> {
					public static class: java.lang.Class<com.stripe.android.googlepaylauncher.DefaultGooglePayRepository_Factory>;
					public constructor(param0: javax.inject.Provider<globalAndroid.content.Context>, param1: javax.inject.Provider<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Config>, param2: javax.inject.Provider<com.stripe.android.core.Logger>);
					public get(): com.stripe.android.googlepaylauncher.DefaultGooglePayRepository;
					public static create(param0: javax.inject.Provider<globalAndroid.content.Context>, param1: javax.inject.Provider<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Config>, param2: javax.inject.Provider<com.stripe.android.core.Logger>): com.stripe.android.googlepaylauncher.DefaultGooglePayRepository_Factory;
					public static newInstance(param0: globalAndroid.content.Context, param1: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Config, param2: com.stripe.android.core.Logger): com.stripe.android.googlepaylauncher.DefaultGooglePayRepository;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module googlepaylauncher {
				export class GooglePayConfig {
					public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayConfig>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.googlepaylauncher.GooglePayConfig>;
					public component6$payments_core_release(): string;
					public component7$payments_core_release(): string;
					public setAmount$payments_core_release(param0: java.lang.Integer): void;
					public component2$payments_core_release(): java.lang.Integer;
					public getCurrencyCode$payments_core_release(): string;
					public component3$payments_core_release(): string;
					public component4$payments_core_release(): string;
					public toString(): string;
					public component1(): com.stripe.android.googlepaylauncher.GooglePayEnvironment;
					public getTransactionId$payments_core_release(): string;
					public hashCode(): number;
					public setCountryCode$payments_core_release(param0: string): void;
					public getEnvironment(): com.stripe.android.googlepaylauncher.GooglePayEnvironment;
					public component5$payments_core_release(): boolean;
					public getCountryCode$payments_core_release(): string;
					public describeContents(): number;
					public getMerchantName$payments_core_release(): string;
					public setEmailRequired$payments_core_release(param0: boolean): void;
					public setMerchantName$payments_core_release(param0: string): void;
					public equals(param0: any): boolean;
					public setTransactionId$payments_core_release(param0: string): void;
					public copy(param0: com.stripe.android.googlepaylauncher.GooglePayEnvironment, param1: java.lang.Integer, param2: string, param3: string, param4: boolean, param5: string, param6: string): com.stripe.android.googlepaylauncher.GooglePayConfig;
					public setEnvironment(param0: com.stripe.android.googlepaylauncher.GooglePayEnvironment): void;
					public isEmailRequired$payments_core_release(): boolean;
					public constructor(param0: com.stripe.android.googlepaylauncher.GooglePayEnvironment, param1: java.lang.Integer, param2: string, param3: string, param4: boolean, param5: string, param6: string);
					public getAmount$payments_core_release(): java.lang.Integer;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public setCurrencyCode$payments_core_release(param0: string): void;
				}
				export module GooglePayConfig {
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.googlepaylauncher.GooglePayConfig> {
						public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayConfig.Creator>;
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.googlepaylauncher.GooglePayConfig;
						public constructor();
						public newArray(param0: number): androidNative.Array<com.stripe.android.googlepaylauncher.GooglePayConfig>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module googlepaylauncher {
				export class GooglePayConfigConversionKtxKt {
					public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayConfigConversionKtxKt>;
					public static convert(param0: com.stripe.android.googlepaylauncher.GooglePayLauncher.BillingAddressConfig): com.stripe.android.GooglePayJsonFactory.BillingAddressParameters;
					public static convert(param0: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.BillingAddressConfig): com.stripe.android.GooglePayJsonFactory.BillingAddressParameters;
				}
				export module GooglePayConfigConversionKtxKt {
					export class WhenMappings {
						public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayConfigConversionKtxKt.WhenMappings>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module googlepaylauncher {
				export class GooglePayEnvironment {
					public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayEnvironment>;
					public static Production: com.stripe.android.googlepaylauncher.GooglePayEnvironment;
					public static Test: com.stripe.android.googlepaylauncher.GooglePayEnvironment;
					public static values(): androidNative.Array<com.stripe.android.googlepaylauncher.GooglePayEnvironment>;
					public static valueOf(param0: string): com.stripe.android.googlepaylauncher.GooglePayEnvironment;
					public getValue$payments_core_release(): number;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module googlepaylauncher {
				export class GooglePayLauncher {
					public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayLauncher>;
					public static Companion: com.stripe.android.googlepaylauncher.GooglePayLauncher.Companion;
					public static $stable: number;
					public static PRODUCT_USAGE: string;
					public constructor(param0: androidx.fragment.app.Fragment, param1: com.stripe.android.googlepaylauncher.GooglePayLauncher.Config, param2: com.stripe.android.googlepaylauncher.GooglePayLauncher.ReadyCallback, param3: com.stripe.android.googlepaylauncher.GooglePayLauncher.ResultCallback);
					public presentForSetupIntent(param0: string, param1: string): void;
					public constructor(param0: kotlinx.coroutines.CoroutineScope, param1: com.stripe.android.googlepaylauncher.GooglePayLauncher.Config, param2: com.stripe.android.googlepaylauncher.GooglePayLauncher.ReadyCallback, param3: androidx.activity.result.ActivityResultLauncher<com.stripe.android.googlepaylauncher.GooglePayLauncherContract.Args>, param4: kotlin.jvm.functions.Function1<any, any>, param5: com.stripe.android.networking.PaymentAnalyticsRequestFactory, param6: com.stripe.android.core.networking.AnalyticsRequestExecutor);
					public constructor(param0: androidx.activity.ComponentActivity, param1: com.stripe.android.googlepaylauncher.GooglePayLauncher.Config, param2: com.stripe.android.googlepaylauncher.GooglePayLauncher.ReadyCallback, param3: com.stripe.android.googlepaylauncher.GooglePayLauncher.ResultCallback);
					public presentForPaymentIntent(param0: string): void;
				}
				export module GooglePayLauncher {
					export class BillingAddressConfig {
						public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayLauncher.BillingAddressConfig>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.googlepaylauncher.GooglePayLauncher.BillingAddressConfig>;
						public static $stable: number;
						public getFormat$payments_core_release(): com.stripe.android.googlepaylauncher.GooglePayLauncher.BillingAddressConfig.Format;
						public isRequired$payments_core_release(): boolean;
						public describeContents(): number;
						public constructor();
						public component2$payments_core_release(): com.stripe.android.googlepaylauncher.GooglePayLauncher.BillingAddressConfig.Format;
						public constructor(param0: boolean, param1: com.stripe.android.googlepaylauncher.GooglePayLauncher.BillingAddressConfig.Format, param2: boolean);
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public component3$payments_core_release(): boolean;
						public toString(): string;
						public copy(param0: boolean, param1: com.stripe.android.googlepaylauncher.GooglePayLauncher.BillingAddressConfig.Format, param2: boolean): com.stripe.android.googlepaylauncher.GooglePayLauncher.BillingAddressConfig;
						public constructor(param0: boolean, param1: com.stripe.android.googlepaylauncher.GooglePayLauncher.BillingAddressConfig.Format);
						public constructor(param0: boolean);
						public isPhoneNumberRequired$payments_core_release(): boolean;
						public component1$payments_core_release(): boolean;
					}
					export module BillingAddressConfig {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.googlepaylauncher.GooglePayLauncher.BillingAddressConfig> {
							public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayLauncher.BillingAddressConfig.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.googlepaylauncher.GooglePayLauncher.BillingAddressConfig;
							public newArray(param0: number): androidNative.Array<com.stripe.android.googlepaylauncher.GooglePayLauncher.BillingAddressConfig>;
						}
						export class Format {
							public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayLauncher.BillingAddressConfig.Format>;
							public static Min: com.stripe.android.googlepaylauncher.GooglePayLauncher.BillingAddressConfig.Format;
							public static Full: com.stripe.android.googlepaylauncher.GooglePayLauncher.BillingAddressConfig.Format;
							public static values(): androidNative.Array<com.stripe.android.googlepaylauncher.GooglePayLauncher.BillingAddressConfig.Format>;
							public static valueOf(param0: string): com.stripe.android.googlepaylauncher.GooglePayLauncher.BillingAddressConfig.Format;
							public getCode$payments_core_release(): string;
						}
					}
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayLauncher.Companion>;
					}
					export class Config {
						public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayLauncher.Config>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.googlepaylauncher.GooglePayLauncher.Config>;
						public static $stable: number;
						public component5(): com.stripe.android.googlepaylauncher.GooglePayLauncher.BillingAddressConfig;
						public isEmailRequired(): boolean;
						public setEmailRequired(param0: boolean): void;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public isJcbEnabled$payments_core_release(): boolean;
						public constructor(param0: com.stripe.android.googlepaylauncher.GooglePayEnvironment, param1: string, param2: string);
						public getExistingPaymentMethodRequired(): boolean;
						public setExistingPaymentMethodRequired(param0: boolean): void;
						public getMerchantCountryCode(): string;
						public constructor(param0: com.stripe.android.googlepaylauncher.GooglePayEnvironment, param1: string, param2: string, param3: boolean);
						public getBillingAddressConfig(): com.stripe.android.googlepaylauncher.GooglePayLauncher.BillingAddressConfig;
						public getEnvironment(): com.stripe.android.googlepaylauncher.GooglePayEnvironment;
						public constructor(param0: com.stripe.android.googlepaylauncher.GooglePayEnvironment, param1: string, param2: string, param3: boolean, param4: com.stripe.android.googlepaylauncher.GooglePayLauncher.BillingAddressConfig);
						public component4(): boolean;
						public component3(): string;
						public describeContents(): number;
						public component6(): boolean;
						public getMerchantName(): string;
						public copy(param0: com.stripe.android.googlepaylauncher.GooglePayEnvironment, param1: string, param2: string, param3: boolean, param4: com.stripe.android.googlepaylauncher.GooglePayLauncher.BillingAddressConfig, param5: boolean): com.stripe.android.googlepaylauncher.GooglePayLauncher.Config;
						public toString(): string;
						public component2(): string;
						public component1(): com.stripe.android.googlepaylauncher.GooglePayEnvironment;
						public constructor(param0: com.stripe.android.googlepaylauncher.GooglePayEnvironment, param1: string, param2: string, param3: boolean, param4: com.stripe.android.googlepaylauncher.GooglePayLauncher.BillingAddressConfig, param5: boolean);
						public setBillingAddressConfig(param0: com.stripe.android.googlepaylauncher.GooglePayLauncher.BillingAddressConfig): void;
					}
					export module Config {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.googlepaylauncher.GooglePayLauncher.Config> {
							public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayLauncher.Config.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.googlepaylauncher.GooglePayLauncher.Config>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.googlepaylauncher.GooglePayLauncher.Config;
						}
					}
					export class ReadyCallback {
						public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayLauncher.ReadyCallback>;
						/**
						 * Constructs a new instance of the com.stripe.android.googlepaylauncher.GooglePayLauncher$ReadyCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onReady(param0: boolean): void;
						});
						public constructor();
						public onReady(param0: boolean): void;
					}
					export abstract class Result {
						public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayLauncher.Result>;
						public static $stable: number;
					}
					export module Result {
						export class Canceled extends com.stripe.android.googlepaylauncher.GooglePayLauncher.Result {
							public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayLauncher.Result.Canceled>;
							public static INSTANCE: com.stripe.android.googlepaylauncher.GooglePayLauncher.Result.Canceled;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.googlepaylauncher.GooglePayLauncher.Result.Canceled>;
							public static $stable: number;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public describeContents(): number;
						}
						export module Canceled {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.googlepaylauncher.GooglePayLauncher.Result.Canceled> {
								public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayLauncher.Result.Canceled.Creator>;
								public constructor();
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.googlepaylauncher.GooglePayLauncher.Result.Canceled;
								public newArray(param0: number): androidNative.Array<com.stripe.android.googlepaylauncher.GooglePayLauncher.Result.Canceled>;
							}
						}
						export class Completed extends com.stripe.android.googlepaylauncher.GooglePayLauncher.Result {
							public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayLauncher.Result.Completed>;
							public static INSTANCE: com.stripe.android.googlepaylauncher.GooglePayLauncher.Result.Completed;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.googlepaylauncher.GooglePayLauncher.Result.Completed>;
							public static $stable: number;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public describeContents(): number;
						}
						export module Completed {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.googlepaylauncher.GooglePayLauncher.Result.Completed> {
								public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayLauncher.Result.Completed.Creator>;
								public newArray(param0: number): androidNative.Array<com.stripe.android.googlepaylauncher.GooglePayLauncher.Result.Completed>;
								public constructor();
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.googlepaylauncher.GooglePayLauncher.Result.Completed;
							}
						}
						export class Failed extends com.stripe.android.googlepaylauncher.GooglePayLauncher.Result {
							public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayLauncher.Result.Failed>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.googlepaylauncher.GooglePayLauncher.Result.Failed>;
							public static $stable: number;
							public getError(): java.lang.Throwable;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public hashCode(): number;
							public constructor(param0: java.lang.Throwable);
							public describeContents(): number;
							public toString(): string;
							public equals(param0: any): boolean;
							public copy(param0: java.lang.Throwable): com.stripe.android.googlepaylauncher.GooglePayLauncher.Result.Failed;
							public component1(): java.lang.Throwable;
						}
						export module Failed {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.googlepaylauncher.GooglePayLauncher.Result.Failed> {
								public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayLauncher.Result.Failed.Creator>;
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.googlepaylauncher.GooglePayLauncher.Result.Failed;
								public newArray(param0: number): androidNative.Array<com.stripe.android.googlepaylauncher.GooglePayLauncher.Result.Failed>;
								public constructor();
							}
						}
					}
					export class ResultCallback {
						public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayLauncher.ResultCallback>;
						/**
						 * Constructs a new instance of the com.stripe.android.googlepaylauncher.GooglePayLauncher$ResultCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onResult(param0: com.stripe.android.googlepaylauncher.GooglePayLauncher.Result): void;
						});
						public constructor();
						public onResult(param0: com.stripe.android.googlepaylauncher.GooglePayLauncher.Result): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module googlepaylauncher {
				export class GooglePayLauncherActivity {
					public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayLauncherActivity>;
					public onActivityResult(param0: number, param1: number, param2: globalAndroid.content.Intent): void;
					public onCreate(param0: globalAndroid.os.Bundle): void;
					public constructor();
					public finish(): void;
				}
				export module GooglePayLauncherActivity {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayLauncherActivity.Companion>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module googlepaylauncher {
				export class GooglePayLauncherContract extends androidx.activity.result.contract.ActivityResultContract<com.stripe.android.googlepaylauncher.GooglePayLauncherContract.Args, com.stripe.android.googlepaylauncher.GooglePayLauncher.Result> {
					public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayLauncherContract>;
					public static Companion: com.stripe.android.googlepaylauncher.GooglePayLauncherContract.Companion;
					public static $stable: number;
					public static EXTRA_RESULT: string;
					public static EXTRA_STATUS_BAR_COLOR: string;
					public constructor();
					public createIntent(param0: globalAndroid.content.Context, param1: com.stripe.android.googlepaylauncher.GooglePayLauncherContract.Args): globalAndroid.content.Intent;
					public parseResult(param0: number, param1: globalAndroid.content.Intent): com.stripe.android.googlepaylauncher.GooglePayLauncher.Result;
				}
				export module GooglePayLauncherContract {
					export abstract class Args {
						public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayLauncherContract.Args>;
						public static Companion: com.stripe.android.googlepaylauncher.GooglePayLauncherContract.Args.Companion;
						public static $stable: number;
						public toBundle$payments_core_release(): globalAndroid.os.Bundle;
						public getConfig$payments_core_release(): com.stripe.android.googlepaylauncher.GooglePayLauncher.Config;
						public getClientSecret$payments_core_release(): string;
					}
					export module Args {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayLauncherContract.Args.Companion>;
							public fromIntent$payments_core_release(param0: globalAndroid.content.Intent): com.stripe.android.googlepaylauncher.GooglePayLauncherContract.Args;
						}
					}
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayLauncherContract.Companion>;
					}
					export class PaymentIntentArgs extends com.stripe.android.googlepaylauncher.GooglePayLauncherContract.Args {
						public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayLauncherContract.PaymentIntentArgs>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.googlepaylauncher.GooglePayLauncherContract.PaymentIntentArgs>;
						public static $stable: number;
						public component1$payments_core_release(): string;
						public describeContents(): number;
						public constructor(param0: string, param1: com.stripe.android.googlepaylauncher.GooglePayLauncher.Config);
						public getConfig$payments_core_release(): com.stripe.android.googlepaylauncher.GooglePayLauncher.Config;
						public copy(param0: string, param1: com.stripe.android.googlepaylauncher.GooglePayLauncher.Config): com.stripe.android.googlepaylauncher.GooglePayLauncherContract.PaymentIntentArgs;
						public getClientSecret$payments_core_release(): string;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public component2$payments_core_release(): com.stripe.android.googlepaylauncher.GooglePayLauncher.Config;
						public toString(): string;
					}
					export module PaymentIntentArgs {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.googlepaylauncher.GooglePayLauncherContract.PaymentIntentArgs> {
							public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayLauncherContract.PaymentIntentArgs.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.googlepaylauncher.GooglePayLauncherContract.PaymentIntentArgs;
							public newArray(param0: number): androidNative.Array<com.stripe.android.googlepaylauncher.GooglePayLauncherContract.PaymentIntentArgs>;
						}
					}
					export class SetupIntentArgs extends com.stripe.android.googlepaylauncher.GooglePayLauncherContract.Args {
						public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayLauncherContract.SetupIntentArgs>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.googlepaylauncher.GooglePayLauncherContract.SetupIntentArgs>;
						public static $stable: number;
						public describeContents(): number;
						public getConfig$payments_core_release(): com.stripe.android.googlepaylauncher.GooglePayLauncher.Config;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public constructor(param0: string, param1: com.stripe.android.googlepaylauncher.GooglePayLauncher.Config, param2: string);
						public toString(): string;
						public component3$payments_core_release(): string;
						public component1$payments_core_release(): string;
						public getCurrencyCode$payments_core_release(): string;
						public getClientSecret$payments_core_release(): string;
						public copy(param0: string, param1: com.stripe.android.googlepaylauncher.GooglePayLauncher.Config, param2: string): com.stripe.android.googlepaylauncher.GooglePayLauncherContract.SetupIntentArgs;
						public component2$payments_core_release(): com.stripe.android.googlepaylauncher.GooglePayLauncher.Config;
					}
					export module SetupIntentArgs {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.googlepaylauncher.GooglePayLauncherContract.SetupIntentArgs> {
							public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayLauncherContract.SetupIntentArgs.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.googlepaylauncher.GooglePayLauncherContract.SetupIntentArgs>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.googlepaylauncher.GooglePayLauncherContract.SetupIntentArgs;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module googlepaylauncher {
				export abstract class GooglePayLauncherResult extends com.stripe.android.view.ActivityStarter.Result {
					public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayLauncherResult>;
					public static Companion: com.stripe.android.googlepaylauncher.GooglePayLauncherResult.Companion;
					public static fromIntent(param0: globalAndroid.content.Intent): com.stripe.android.googlepaylauncher.GooglePayLauncherResult;
					public toBundle(): globalAndroid.os.Bundle;
				}
				export module GooglePayLauncherResult {
					export class Canceled extends com.stripe.android.googlepaylauncher.GooglePayLauncherResult {
						public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayLauncherResult.Canceled>;
						public static INSTANCE: com.stripe.android.googlepaylauncher.GooglePayLauncherResult.Canceled;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.googlepaylauncher.GooglePayLauncherResult.Canceled>;
						public describeContents(): number;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public toBundle(): globalAndroid.os.Bundle;
					}
					export module Canceled {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.googlepaylauncher.GooglePayLauncherResult.Canceled> {
							public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayLauncherResult.Canceled.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.googlepaylauncher.GooglePayLauncherResult.Canceled>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.googlepaylauncher.GooglePayLauncherResult.Canceled;
						}
					}
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayLauncherResult.Companion>;
						public fromIntent(param0: globalAndroid.content.Intent): com.stripe.android.googlepaylauncher.GooglePayLauncherResult;
					}
					export class Error extends com.stripe.android.googlepaylauncher.GooglePayLauncherResult {
						public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayLauncherResult.Error>;
						public static Companion: com.stripe.android.googlepaylauncher.GooglePayLauncherResult.Error.Companion;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.googlepaylauncher.GooglePayLauncherResult.Error>;
						public getException(): java.lang.Throwable;
						public describeContents(): number;
						public getGooglePayStatus(): com.google.android.gms.common.api.Status;
						public component1(): java.lang.Throwable;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getPaymentMethod(): com.stripe.android.model.PaymentMethod;
						public component4(): com.stripe.android.model.ShippingInformation;
						public toBundle(): globalAndroid.os.Bundle;
						public toString(): string;
						public getShippingInformation(): com.stripe.android.model.ShippingInformation;
						public component2(): com.google.android.gms.common.api.Status;
						public component3(): com.stripe.android.model.PaymentMethod;
						public copy(param0: java.lang.Throwable, param1: com.google.android.gms.common.api.Status, param2: com.stripe.android.model.PaymentMethod, param3: com.stripe.android.model.ShippingInformation): com.stripe.android.googlepaylauncher.GooglePayLauncherResult.Error;
						public constructor(param0: java.lang.Throwable, param1: com.google.android.gms.common.api.Status, param2: com.stripe.android.model.PaymentMethod, param3: com.stripe.android.model.ShippingInformation);
					}
					export module Error {
						export class Companion extends kotlinx.parcelize.Parceler<com.stripe.android.googlepaylauncher.GooglePayLauncherResult.Error> {
							public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayLauncherResult.Error.Companion>;
							public newArray(param0: number): androidNative.Array<com.stripe.android.googlepaylauncher.GooglePayLauncherResult.Error>;
							public create(param0: globalAndroid.os.Parcel): com.stripe.android.googlepaylauncher.GooglePayLauncherResult.Error;
							public write(param0: com.stripe.android.googlepaylauncher.GooglePayLauncherResult.Error, param1: globalAndroid.os.Parcel, param2: number): void;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.googlepaylauncher.GooglePayLauncherResult.Error> {
							public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayLauncherResult.Error.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.googlepaylauncher.GooglePayLauncherResult.Error>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.googlepaylauncher.GooglePayLauncherResult.Error;
						}
					}
					export class PaymentData extends com.stripe.android.googlepaylauncher.GooglePayLauncherResult {
						public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayLauncherResult.PaymentData>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.googlepaylauncher.GooglePayLauncherResult.PaymentData>;
						public component1(): com.stripe.android.model.PaymentMethod;
						public constructor(param0: com.stripe.android.model.PaymentMethod, param1: com.stripe.android.model.ShippingInformation);
						public describeContents(): number;
						public copy(param0: com.stripe.android.model.PaymentMethod, param1: com.stripe.android.model.ShippingInformation): com.stripe.android.googlepaylauncher.GooglePayLauncherResult.PaymentData;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getPaymentMethod(): com.stripe.android.model.PaymentMethod;
						public component2(): com.stripe.android.model.ShippingInformation;
						public toBundle(): globalAndroid.os.Bundle;
						public toString(): string;
						public getShippingInformation(): com.stripe.android.model.ShippingInformation;
					}
					export module PaymentData {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.googlepaylauncher.GooglePayLauncherResult.PaymentData> {
							public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayLauncherResult.PaymentData.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.googlepaylauncher.GooglePayLauncherResult.PaymentData;
							public newArray(param0: number): androidNative.Array<com.stripe.android.googlepaylauncher.GooglePayLauncherResult.PaymentData>;
						}
					}
					export class Unavailable extends com.stripe.android.googlepaylauncher.GooglePayLauncherResult {
						public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayLauncherResult.Unavailable>;
						public static INSTANCE: com.stripe.android.googlepaylauncher.GooglePayLauncherResult.Unavailable;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.googlepaylauncher.GooglePayLauncherResult.Unavailable>;
						public describeContents(): number;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public toBundle(): globalAndroid.os.Bundle;
					}
					export module Unavailable {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.googlepaylauncher.GooglePayLauncherResult.Unavailable> {
							public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayLauncherResult.Unavailable.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.googlepaylauncher.GooglePayLauncherResult.Unavailable>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.googlepaylauncher.GooglePayLauncherResult.Unavailable;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module googlepaylauncher {
				export class GooglePayLauncherViewModel {
					public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayLauncherViewModel>;
					public getGooglePayResult$payments_core_release(): androidx.lifecycle.LiveData<com.stripe.android.googlepaylauncher.GooglePayLauncher.Result>;
					public isReadyToPay(param0: kotlin.coroutines.Continuation<any>): any;
					public createTransactionInfo$payments_core_release(param0: com.stripe.android.model.StripeIntent, param1: string): com.stripe.android.GooglePayJsonFactory.TransactionInfo;
					public getResultFromConfirmation$payments_core_release(param0: number, param1: globalAndroid.content.Intent, param2: kotlin.coroutines.Continuation<any>): any;
					public updateResult(param0: com.stripe.android.googlepaylauncher.GooglePayLauncher.Result): void;
					public constructor(param0: com.google.android.gms.wallet.PaymentsClient, param1: com.stripe.android.networking.ApiRequest.Options, param2: com.stripe.android.googlepaylauncher.GooglePayLauncherContract.Args, param3: com.stripe.android.networking.StripeRepository, param4: com.stripe.android.PaymentController, param5: com.stripe.android.GooglePayJsonFactory, param6: com.stripe.android.googlepaylauncher.GooglePayRepository);
					public createPaymentDataRequest(param0: com.stripe.android.googlepaylauncher.GooglePayLauncherContract.Args, param1: kotlin.coroutines.Continuation<any>): any;
					public confirmStripeIntent(param0: com.stripe.android.view.AuthActivityStarterHost, param1: com.stripe.android.model.PaymentMethodCreateParams, param2: kotlin.coroutines.Continuation<any>): any;
					public createLoadPaymentDataTask(param0: kotlin.coroutines.Continuation<any>): any;
					public getHasLaunched(): boolean;
					public setHasLaunched(param0: boolean): void;
					public onConfirmResult(param0: number, param1: globalAndroid.content.Intent): void;
				}
				export module GooglePayLauncherViewModel {
					export class Factory {
						public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayLauncherViewModel.Factory>;
						public create(param0: java.lang.Class): androidx.lifecycle.ViewModel;
						public constructor(param0: globalAndroid.app.Application, param1: com.stripe.android.googlepaylauncher.GooglePayLauncherContract.Args, param2: boolean, param3: kotlin.coroutines.CoroutineContext);
					}
					export class WhenMappings {
						public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayLauncherViewModel.WhenMappings>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module googlepaylauncher {
				export class GooglePayPaymentMethodLauncher {
					public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher>;
					public static Companion: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Companion;
					public static $stable: number;
					public static PRODUCT_USAGE_TOKEN: string;
					public static INTERNAL_ERROR: number;
					public static DEVELOPER_ERROR: number;
					public static NETWORK_ERROR: number;
					public present(param0: string, param1: number, param2: string): void;
					public constructor(param0: androidx.activity.ComponentActivity, param1: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Config, param2: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.ReadyCallback, param3: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.ResultCallback);
					public constructor(param0: kotlinx.coroutines.CoroutineScope, param1: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Config, param2: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.ReadyCallback, param3: androidx.activity.result.ActivityResultLauncher<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherContract.Args>, param4: boolean, param5: globalAndroid.content.Context, param6: kotlin.jvm.functions.Function1<com.stripe.android.googlepaylauncher.GooglePayEnvironment, com.stripe.android.googlepaylauncher.GooglePayRepository>, param7: java.util.Set<string>, param8: kotlin.jvm.functions.Function0<string>, param9: kotlin.jvm.functions.Function0<string>, param10: boolean, param11: kotlin.coroutines.CoroutineContext, param12: com.stripe.android.networking.PaymentAnalyticsRequestFactory, param13: com.stripe.android.core.networking.AnalyticsRequestExecutor, param14: com.stripe.android.networking.StripeRepository);
					public constructor(param0: androidx.fragment.app.Fragment, param1: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Config, param2: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.ReadyCallback, param3: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.ResultCallback);
					public present(param0: string, param1: number): void;
					public present(param0: string): void;
				}
				export module GooglePayPaymentMethodLauncher {
					export class BillingAddressConfig {
						public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.BillingAddressConfig>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.BillingAddressConfig>;
						public static $stable: number;
						public constructor(param0: boolean, param1: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.BillingAddressConfig.Format, param2: boolean);
						public isRequired(): boolean;
						public component3(): boolean;
						public describeContents(): number;
						public constructor();
						public getFormat(): com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.BillingAddressConfig.Format;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public component2(): com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.BillingAddressConfig.Format;
						public constructor(param0: boolean, param1: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.BillingAddressConfig.Format);
						public toString(): string;
						public isPhoneNumberRequired(): boolean;
						public copy(param0: boolean, param1: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.BillingAddressConfig.Format, param2: boolean): com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.BillingAddressConfig;
						public constructor(param0: boolean);
						public component1(): boolean;
					}
					export module BillingAddressConfig {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.BillingAddressConfig> {
							public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.BillingAddressConfig.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.BillingAddressConfig;
							public newArray(param0: number): androidNative.Array<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.BillingAddressConfig>;
						}
						export class Format {
							public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.BillingAddressConfig.Format>;
							public static Min: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.BillingAddressConfig.Format;
							public static Full: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.BillingAddressConfig.Format;
							public static values(): androidNative.Array<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.BillingAddressConfig.Format>;
							public static valueOf(param0: string): com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.BillingAddressConfig.Format;
							public getCode$payments_core_release(): string;
						}
					}
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Companion>;
					}
					export class Config {
						public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Config>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Config>;
						public static $stable: number;
						public isEmailRequired(): boolean;
						public copy(param0: com.stripe.android.googlepaylauncher.GooglePayEnvironment, param1: string, param2: string, param3: boolean, param4: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.BillingAddressConfig, param5: boolean): com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Config;
						public setEmailRequired(param0: boolean): void;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public constructor(param0: com.stripe.android.googlepaylauncher.GooglePayEnvironment, param1: string, param2: string, param3: boolean, param4: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.BillingAddressConfig, param5: boolean);
						public getBillingAddressConfig(): com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.BillingAddressConfig;
						public isJcbEnabled$payments_core_release(): boolean;
						public constructor(param0: com.stripe.android.googlepaylauncher.GooglePayEnvironment, param1: string, param2: string);
						public getExistingPaymentMethodRequired(): boolean;
						public setExistingPaymentMethodRequired(param0: boolean): void;
						public getMerchantCountryCode(): string;
						public constructor(param0: com.stripe.android.googlepaylauncher.GooglePayEnvironment, param1: string, param2: string, param3: boolean);
						public setBillingAddressConfig(param0: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.BillingAddressConfig): void;
						public getEnvironment(): com.stripe.android.googlepaylauncher.GooglePayEnvironment;
						public component4(): boolean;
						public component3(): string;
						public describeContents(): number;
						public component5(): com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.BillingAddressConfig;
						public component6(): boolean;
						public getMerchantName(): string;
						public constructor(param0: com.stripe.android.googlepaylauncher.GooglePayEnvironment, param1: string, param2: string, param3: boolean, param4: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.BillingAddressConfig);
						public toString(): string;
						public component2(): string;
						public component1(): com.stripe.android.googlepaylauncher.GooglePayEnvironment;
					}
					export module Config {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Config> {
							public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Config.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Config;
							public newArray(param0: number): androidNative.Array<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Config>;
						}
					}
					export class ErrorCode {
						public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.ErrorCode>;
						/**
						 * Constructs a new instance of the com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher$ErrorCode interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
					export class ReadyCallback {
						public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.ReadyCallback>;
						/**
						 * Constructs a new instance of the com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher$ReadyCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onReady(param0: boolean): void;
						});
						public constructor();
						public onReady(param0: boolean): void;
					}
					export abstract class Result {
						public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Result>;
						public static $stable: number;
					}
					export module Result {
						export class Canceled extends com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Result {
							public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Result.Canceled>;
							public static INSTANCE: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Result.Canceled;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Result.Canceled>;
							public static $stable: number;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public describeContents(): number;
						}
						export module Canceled {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Result.Canceled> {
								public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Result.Canceled.Creator>;
								public newArray(param0: number): androidNative.Array<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Result.Canceled>;
								public constructor();
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Result.Canceled;
							}
						}
						export class Completed extends com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Result {
							public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Result.Completed>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Result.Completed>;
							public static $stable: number;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public constructor(param0: com.stripe.android.model.PaymentMethod);
							public hashCode(): number;
							public copy(param0: com.stripe.android.model.PaymentMethod): com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Result.Completed;
							public describeContents(): number;
							public getPaymentMethod(): com.stripe.android.model.PaymentMethod;
							public component1(): com.stripe.android.model.PaymentMethod;
							public toString(): string;
							public equals(param0: any): boolean;
						}
						export module Completed {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Result.Completed> {
								public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Result.Completed.Creator>;
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Result.Completed;
								public constructor();
								public newArray(param0: number): androidNative.Array<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Result.Completed>;
							}
						}
						export class Failed extends com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Result {
							public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Result.Failed>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Result.Failed>;
							public static $stable: number;
							public copy(param0: java.lang.Throwable, param1: number): com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Result.Failed;
							public constructor(param0: java.lang.Throwable, param1: number);
							public getError(): java.lang.Throwable;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public hashCode(): number;
							public component2(): number;
							public getErrorCode(): number;
							public describeContents(): number;
							public toString(): string;
							public equals(param0: any): boolean;
							public component1(): java.lang.Throwable;
						}
						export module Failed {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Result.Failed> {
								public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Result.Failed.Creator>;
								public newArray(param0: number): androidNative.Array<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Result.Failed>;
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Result.Failed;
								public constructor();
							}
						}
					}
					export class ResultCallback {
						public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.ResultCallback>;
						/**
						 * Constructs a new instance of the com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher$ResultCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onResult(param0: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Result): void;
						});
						public constructor();
						public onResult(param0: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Result): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module googlepaylauncher {
				export class GooglePayPaymentMethodLauncherActivity {
					public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherActivity>;
					public onActivityResult(param0: number, param1: number, param2: globalAndroid.content.Intent): void;
					public onCreate(param0: globalAndroid.os.Bundle): void;
					public constructor();
					public finish(): void;
				}
				export module GooglePayPaymentMethodLauncherActivity {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherActivity.Companion>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module googlepaylauncher {
				export class GooglePayPaymentMethodLauncherContract extends androidx.activity.result.contract.ActivityResultContract<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherContract.Args, com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Result> {
					public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherContract>;
					public static Companion: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherContract.Companion;
					public static $stable: number;
					public static EXTRA_RESULT: string;
					public static EXTRA_STATUS_BAR_COLOR: string;
					public constructor();
					public createIntent(param0: globalAndroid.content.Context, param1: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherContract.Args): globalAndroid.content.Intent;
					public parseResult(param0: number, param1: globalAndroid.content.Intent): com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Result;
				}
				export module GooglePayPaymentMethodLauncherContract {
					export class Args {
						public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherContract.Args>;
						public static Companion: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherContract.Args.Companion;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherContract.Args>;
						public static $stable: number;
						public toBundle$payments_core_release(): globalAndroid.os.Bundle;
						public getInjectionParams$payments_core_release(): com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherContract.Args.InjectionParams;
						public describeContents(): number;
						public constructor(param0: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Config, param1: string, param2: number, param3: string);
						public copy(param0: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Config, param1: string, param2: number, param3: string, param4: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherContract.Args.InjectionParams): com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherContract.Args;
						public getTransactionId$payments_core_release(): string;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public toString(): string;
						public component4$payments_core_release(): string;
						public getConfig$payments_core_release(): com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Config;
						public component2$payments_core_release(): string;
						public constructor(param0: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Config, param1: string, param2: number, param3: string, param4: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherContract.Args.InjectionParams);
						public getCurrencyCode$payments_core_release(): string;
						public component3$payments_core_release(): number;
						public component1$payments_core_release(): com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Config;
						public component5$payments_core_release(): com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherContract.Args.InjectionParams;
						public getAmount$payments_core_release(): number;
						public constructor(param0: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Config, param1: string, param2: number);
					}
					export module Args {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherContract.Args.Companion>;
							public fromIntent(param0: globalAndroid.content.Intent): com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherContract.Args;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherContract.Args> {
							public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherContract.Args.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherContract.Args;
							public newArray(param0: number): androidNative.Array<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherContract.Args>;
						}
						export class InjectionParams {
							public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherContract.Args.InjectionParams>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherContract.Args.InjectionParams>;
							public component3(): boolean;
							public copy(param0: string, param1: java.util.Set<string>, param2: boolean, param3: string, param4: string): com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherContract.Args.InjectionParams;
							public getInjectorKey(): string;
							public hashCode(): number;
							public getProductUsage(): java.util.Set<string>;
							public constructor(param0: string, param1: java.util.Set<string>, param2: boolean, param3: string, param4: string);
							public component2(): java.util.Set<string>;
							public toString(): string;
							public component5(): string;
							public getStripeAccountId(): string;
							public getPublishableKey(): string;
							public component1(): string;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public getEnableLogging(): boolean;
							public describeContents(): number;
							public component4(): string;
							public equals(param0: any): boolean;
						}
						export module InjectionParams {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherContract.Args.InjectionParams> {
								public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherContract.Args.InjectionParams.Creator>;
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherContract.Args.InjectionParams;
								public newArray(param0: number): androidNative.Array<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherContract.Args.InjectionParams>;
								public constructor();
							}
						}
					}
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherContract.Companion>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module googlepaylauncher {
				export class GooglePayPaymentMethodLauncherViewModel {
					public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherViewModel>;
					public setHasLaunched$payments_core_release(param0: boolean): void;
					public createTransactionInfo$payments_core_release(param0: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherContract.Args): com.stripe.android.GooglePayJsonFactory.TransactionInfo;
					public getGooglePayResult$payments_core_release(): androidx.lifecycle.LiveData<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Result>;
					public isReadyToPay(param0: kotlin.coroutines.Continuation<any>): any;
					public updateResult(param0: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Result): void;
					public createPaymentMethod(param0: com.google.android.gms.wallet.PaymentData, param1: kotlin.coroutines.Continuation<any>): any;
					public constructor(param0: com.google.android.gms.wallet.PaymentsClient, param1: com.stripe.android.networking.ApiRequest.Options, param2: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherContract.Args, param3: com.stripe.android.networking.StripeRepository, param4: com.stripe.android.GooglePayJsonFactory, param5: com.stripe.android.googlepaylauncher.GooglePayRepository, param6: androidx.lifecycle.SavedStateHandle);
					public createLoadPaymentDataTask(param0: kotlin.coroutines.Continuation<any>): any;
					public getHasLaunched$payments_core_release(): boolean;
					public createPaymentDataRequest(): org.json.JSONObject;
				}
				export module GooglePayPaymentMethodLauncherViewModel {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherViewModel.Companion>;
					}
					export class Factory extends androidx.lifecycle.AbstractSavedStateViewModelFactory implements com.stripe.android.core.injection.Injectable<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherViewModel.Factory.FallbackInjectionParams>  {
						public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherViewModel.Factory>;
						public subComponentBuilder: com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelSubcomponent.Builder;
						public fallbackInitialize(param0: any): void;
						public create(param0: string, param1: java.lang.Class, param2: androidx.lifecycle.SavedStateHandle): androidx.lifecycle.ViewModel;
						public fallbackInitialize(param0: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherViewModel.Factory.FallbackInjectionParams): void;
						public constructor(param0: globalAndroid.app.Application, param1: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherContract.Args, param2: androidx.savedstate.SavedStateRegistryOwner, param3: globalAndroid.os.Bundle);
						public setSubComponentBuilder(param0: com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelSubcomponent.Builder): void;
						public getSubComponentBuilder(): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelSubcomponent.Builder;
					}
					export module Factory {
						export class FallbackInjectionParams {
							public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherViewModel.Factory.FallbackInjectionParams>;
							public copy(param0: globalAndroid.app.Application, param1: boolean, param2: string, param3: string, param4: java.util.Set<string>): com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherViewModel.Factory.FallbackInjectionParams;
							public hashCode(): number;
							public getProductUsage(): java.util.Set<string>;
							public component2(): boolean;
							public getApplication(): globalAndroid.app.Application;
							public toString(): string;
							public getStripeAccountId(): string;
							public getPublishableKey(): string;
							public component3(): string;
							public getEnableLogging(): boolean;
							public constructor(param0: globalAndroid.app.Application, param1: boolean, param2: string, param3: string, param4: java.util.Set<string>);
							public component1(): globalAndroid.app.Application;
							public component4(): string;
							public component5(): java.util.Set<string>;
							public equals(param0: any): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module googlepaylauncher {
				export class GooglePayPaymentMethodLauncherViewModel_Factory extends dagger.internal.Factory<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherViewModel> {
					public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherViewModel_Factory>;
					public constructor(param0: javax.inject.Provider<com.google.android.gms.wallet.PaymentsClient>, param1: javax.inject.Provider<com.stripe.android.networking.ApiRequest.Options>, param2: javax.inject.Provider<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherContract.Args>, param3: javax.inject.Provider<com.stripe.android.networking.StripeRepository>, param4: javax.inject.Provider<com.stripe.android.GooglePayJsonFactory>, param5: javax.inject.Provider<com.stripe.android.googlepaylauncher.GooglePayRepository>, param6: javax.inject.Provider<androidx.lifecycle.SavedStateHandle>);
					public static create(param0: javax.inject.Provider<com.google.android.gms.wallet.PaymentsClient>, param1: javax.inject.Provider<com.stripe.android.networking.ApiRequest.Options>, param2: javax.inject.Provider<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherContract.Args>, param3: javax.inject.Provider<com.stripe.android.networking.StripeRepository>, param4: javax.inject.Provider<com.stripe.android.GooglePayJsonFactory>, param5: javax.inject.Provider<com.stripe.android.googlepaylauncher.GooglePayRepository>, param6: javax.inject.Provider<androidx.lifecycle.SavedStateHandle>): com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherViewModel_Factory;
					public get(): com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherViewModel;
					public static newInstance(param0: com.google.android.gms.wallet.PaymentsClient, param1: com.stripe.android.networking.ApiRequest.Options, param2: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherContract.Args, param3: com.stripe.android.networking.StripeRepository, param4: com.stripe.android.GooglePayJsonFactory, param5: com.stripe.android.googlepaylauncher.GooglePayRepository, param6: androidx.lifecycle.SavedStateHandle): com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherViewModel;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module googlepaylauncher {
				export class GooglePayPaymentMethodLauncherViewModel_Factory_MembersInjector extends dagger.MembersInjector<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherViewModel.Factory> {
					public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherViewModel_Factory_MembersInjector>;
					public static injectSubComponentBuilder(param0: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherViewModel.Factory, param1: com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelSubcomponent.Builder): void;
					public constructor(param0: javax.inject.Provider<com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelSubcomponent.Builder>);
					public static create(param0: javax.inject.Provider<com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelSubcomponent.Builder>): dagger.MembersInjector<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherViewModel.Factory>;
					public injectMembers(param0: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherViewModel.Factory): void;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module googlepaylauncher {
				export class GooglePayPaymentMethodLauncher_Factory {
					public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher_Factory>;
					public constructor(param0: javax.inject.Provider<globalAndroid.content.Context>, param1: javax.inject.Provider<kotlin.jvm.functions.Function1<com.stripe.android.googlepaylauncher.GooglePayEnvironment, com.stripe.android.googlepaylauncher.GooglePayRepository>>, param2: javax.inject.Provider<java.util.Set<string>>, param3: javax.inject.Provider<kotlin.jvm.functions.Function0<string>>, param4: javax.inject.Provider<kotlin.jvm.functions.Function0<string>>, param5: javax.inject.Provider<java.lang.Boolean>, param6: javax.inject.Provider<kotlin.coroutines.CoroutineContext>, param7: javax.inject.Provider<com.stripe.android.networking.PaymentAnalyticsRequestFactory>, param8: javax.inject.Provider<com.stripe.android.core.networking.AnalyticsRequestExecutor>, param9: javax.inject.Provider<com.stripe.android.networking.StripeRepository>);
					public get(param0: kotlinx.coroutines.CoroutineScope, param1: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Config, param2: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.ReadyCallback, param3: androidx.activity.result.ActivityResultLauncher<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherContract.Args>, param4: boolean): com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher;
					public static create(param0: javax.inject.Provider<globalAndroid.content.Context>, param1: javax.inject.Provider<kotlin.jvm.functions.Function1<com.stripe.android.googlepaylauncher.GooglePayEnvironment, com.stripe.android.googlepaylauncher.GooglePayRepository>>, param2: javax.inject.Provider<java.util.Set<string>>, param3: javax.inject.Provider<kotlin.jvm.functions.Function0<string>>, param4: javax.inject.Provider<kotlin.jvm.functions.Function0<string>>, param5: javax.inject.Provider<java.lang.Boolean>, param6: javax.inject.Provider<kotlin.coroutines.CoroutineContext>, param7: javax.inject.Provider<com.stripe.android.networking.PaymentAnalyticsRequestFactory>, param8: javax.inject.Provider<com.stripe.android.core.networking.AnalyticsRequestExecutor>, param9: javax.inject.Provider<com.stripe.android.networking.StripeRepository>): com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher_Factory;
					public static newInstance(param0: kotlinx.coroutines.CoroutineScope, param1: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Config, param2: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.ReadyCallback, param3: androidx.activity.result.ActivityResultLauncher<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherContract.Args>, param4: boolean, param5: globalAndroid.content.Context, param6: kotlin.jvm.functions.Function1<com.stripe.android.googlepaylauncher.GooglePayEnvironment, com.stripe.android.googlepaylauncher.GooglePayRepository>, param7: java.util.Set<string>, param8: kotlin.jvm.functions.Function0<string>, param9: kotlin.jvm.functions.Function0<string>, param10: boolean, param11: kotlin.coroutines.CoroutineContext, param12: com.stripe.android.networking.PaymentAnalyticsRequestFactory, param13: com.stripe.android.core.networking.AnalyticsRequestExecutor, param14: com.stripe.android.networking.StripeRepository): com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module googlepaylauncher {
				export class GooglePayRepository {
					public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayRepository>;
					/**
					 * Constructs a new instance of the com.stripe.android.googlepaylauncher.GooglePayRepository interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						isReady(): kotlinx.coroutines.flow.Flow<java.lang.Boolean>;
					});
					public constructor();
					public isReady(): kotlinx.coroutines.flow.Flow<java.lang.Boolean>;
				}
				export module GooglePayRepository {
					export class Disabled extends com.stripe.android.googlepaylauncher.GooglePayRepository {
						public static class: java.lang.Class<com.stripe.android.googlepaylauncher.GooglePayRepository.Disabled>;
						public static INSTANCE: com.stripe.android.googlepaylauncher.GooglePayRepository.Disabled;
						public static $stable: number;
						public isReady(): kotlinx.coroutines.flow.Flow<java.lang.Boolean>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module googlepaylauncher {
				export class PaymentsClientFactory {
					public static class: java.lang.Class<com.stripe.android.googlepaylauncher.PaymentsClientFactory>;
					public constructor(param0: globalAndroid.content.Context);
					public create(param0: com.stripe.android.googlepaylauncher.GooglePayEnvironment): com.google.android.gms.wallet.PaymentsClient;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module googlepaylauncher {
				export class PaymentsClientFactory_Factory extends dagger.internal.Factory<com.stripe.android.googlepaylauncher.PaymentsClientFactory> {
					public static class: java.lang.Class<com.stripe.android.googlepaylauncher.PaymentsClientFactory_Factory>;
					public constructor(param0: javax.inject.Provider<globalAndroid.content.Context>);
					public static newInstance(param0: globalAndroid.content.Context): com.stripe.android.googlepaylauncher.PaymentsClientFactory;
					public static create(param0: javax.inject.Provider<globalAndroid.content.Context>): com.stripe.android.googlepaylauncher.PaymentsClientFactory_Factory;
					public get(): com.stripe.android.googlepaylauncher.PaymentsClientFactory;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module googlepaylauncher {
				export class StripeGooglePayActivity {
					public static class: java.lang.Class<com.stripe.android.googlepaylauncher.StripeGooglePayActivity>;
					public onActivityResult(param0: number, param1: number, param2: globalAndroid.content.Intent): void;
					public onCreate(param0: globalAndroid.os.Bundle): void;
					public constructor();
					public finish(): void;
				}
				export module StripeGooglePayActivity {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.googlepaylauncher.StripeGooglePayActivity.Companion>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module googlepaylauncher {
				export class StripeGooglePayContract extends androidx.activity.result.contract.ActivityResultContract<com.stripe.android.googlepaylauncher.StripeGooglePayContract.Args, com.stripe.android.googlepaylauncher.GooglePayLauncherResult> {
					public static class: java.lang.Class<com.stripe.android.googlepaylauncher.StripeGooglePayContract>;
					public constructor();
					public createIntent(param0: globalAndroid.content.Context, param1: com.stripe.android.googlepaylauncher.StripeGooglePayContract.Args): globalAndroid.content.Intent;
					public parseResult(param0: number, param1: globalAndroid.content.Intent): com.stripe.android.googlepaylauncher.GooglePayLauncherResult;
				}
				export module StripeGooglePayContract {
					export class Args extends com.stripe.android.view.ActivityStarter.Args {
						public static class: java.lang.Class<com.stripe.android.googlepaylauncher.StripeGooglePayContract.Args>;
						public static Companion: com.stripe.android.googlepaylauncher.StripeGooglePayContract.Args.Companion;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.googlepaylauncher.StripeGooglePayContract.Args>;
						public static $stable: number;
						public setConfig(param0: com.stripe.android.googlepaylauncher.GooglePayConfig): void;
						public getStatusBarColor(): java.lang.Integer;
						public describeContents(): number;
						public component1(): com.stripe.android.googlepaylauncher.GooglePayConfig;
						public copy(param0: com.stripe.android.googlepaylauncher.GooglePayConfig, param1: java.lang.Integer): com.stripe.android.googlepaylauncher.StripeGooglePayContract.Args;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public constructor(param0: com.stripe.android.googlepaylauncher.GooglePayConfig, param1: java.lang.Integer);
						public component2(): java.lang.Integer;
						public getConfig(): com.stripe.android.googlepaylauncher.GooglePayConfig;
						public toString(): string;
					}
					export module Args {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.googlepaylauncher.StripeGooglePayContract.Args.Companion>;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.googlepaylauncher.StripeGooglePayContract.Args> {
							public static class: java.lang.Class<com.stripe.android.googlepaylauncher.StripeGooglePayContract.Args.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.googlepaylauncher.StripeGooglePayContract.Args>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.googlepaylauncher.StripeGooglePayContract.Args;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module googlepaylauncher {
				export class StripeGooglePayViewModel {
					public static class: java.lang.Class<com.stripe.android.googlepaylauncher.StripeGooglePayViewModel>;
					public getPaymentMethod(): com.stripe.android.model.PaymentMethod;
					public updateGooglePayResult(param0: com.stripe.android.googlepaylauncher.GooglePayLauncherResult): void;
					public constructor(param0: globalAndroid.app.Application, param1: string, param2: string, param3: com.stripe.android.googlepaylauncher.StripeGooglePayContract.Args, param4: com.stripe.android.networking.StripeRepository, param5: string, param6: kotlin.coroutines.CoroutineContext);
					public createIsReadyToPayRequest(): com.google.android.gms.wallet.IsReadyToPayRequest;
					public setPaymentMethod(param0: com.stripe.android.model.PaymentMethod): void;
					public getGooglePayResult$payments_core_release(): androidx.lifecycle.LiveData<com.stripe.android.googlepaylauncher.GooglePayLauncherResult>;
					public createPaymentMethod(param0: com.stripe.android.model.PaymentMethodCreateParams): androidx.lifecycle.LiveData<kotlin.Result<com.stripe.android.model.PaymentMethod>>;
					public getHasLaunched(): boolean;
					public setHasLaunched(param0: boolean): void;
					public createPaymentDataRequestForPaymentIntentArgs(): org.json.JSONObject;
				}
				export module StripeGooglePayViewModel {
					export class Factory {
						public static class: java.lang.Class<com.stripe.android.googlepaylauncher.StripeGooglePayViewModel.Factory>;
						public create(param0: java.lang.Class): androidx.lifecycle.ViewModel;
						public constructor(param0: globalAndroid.app.Application, param1: string, param2: string, param3: com.stripe.android.googlepaylauncher.StripeGooglePayContract.Args);
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module googlepaylauncher {
				export module injection {
					export class DaggerGooglePayPaymentMethodLauncherComponent extends com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherComponent {
						public static class: java.lang.Class<com.stripe.android.googlepaylauncher.injection.DaggerGooglePayPaymentMethodLauncherComponent>;
						public static builder(): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherComponent.Builder;
						public inject(param0: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherViewModel.Factory): void;
					}
					export module DaggerGooglePayPaymentMethodLauncherComponent {
						export class Builder extends com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherComponent.Builder {
							public static class: java.lang.Class<com.stripe.android.googlepaylauncher.injection.DaggerGooglePayPaymentMethodLauncherComponent.Builder>;
							public enableLogging(param0: boolean): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherComponent.Builder;
							public analyticsRequestFactory(param0: com.stripe.android.networking.PaymentAnalyticsRequestFactory): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherComponent.Builder;
							public stripeRepository(param0: com.stripe.android.networking.StripeRepository): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherComponent.Builder;
							public stripeAccountIdProvider(param0: kotlin.jvm.functions.Function0<string>): com.stripe.android.googlepaylauncher.injection.DaggerGooglePayPaymentMethodLauncherComponent.Builder;
							public context(param0: globalAndroid.content.Context): com.stripe.android.googlepaylauncher.injection.DaggerGooglePayPaymentMethodLauncherComponent.Builder;
							public analyticsRequestFactory(param0: com.stripe.android.networking.PaymentAnalyticsRequestFactory): com.stripe.android.googlepaylauncher.injection.DaggerGooglePayPaymentMethodLauncherComponent.Builder;
							public googlePayConfig(param0: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Config): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherComponent.Builder;
							public publishableKeyProvider(param0: kotlin.jvm.functions.Function0<string>): com.stripe.android.googlepaylauncher.injection.DaggerGooglePayPaymentMethodLauncherComponent.Builder;
							public ioContext(param0: kotlin.coroutines.CoroutineContext): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherComponent.Builder;
							public publishableKeyProvider(param0: kotlin.jvm.functions.Function0<string>): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherComponent.Builder;
							public enableLogging(param0: boolean): com.stripe.android.googlepaylauncher.injection.DaggerGooglePayPaymentMethodLauncherComponent.Builder;
							public ioContext(param0: kotlin.coroutines.CoroutineContext): com.stripe.android.googlepaylauncher.injection.DaggerGooglePayPaymentMethodLauncherComponent.Builder;
							public stripeRepository(param0: com.stripe.android.networking.StripeRepository): com.stripe.android.googlepaylauncher.injection.DaggerGooglePayPaymentMethodLauncherComponent.Builder;
							public context(param0: globalAndroid.content.Context): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherComponent.Builder;
							public googlePayConfig(param0: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Config): com.stripe.android.googlepaylauncher.injection.DaggerGooglePayPaymentMethodLauncherComponent.Builder;
							public build(): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherComponent;
							public stripeAccountIdProvider(param0: kotlin.jvm.functions.Function0<string>): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherComponent.Builder;
						}
						export class GooglePayPaymentMethodLauncherViewModelSubcomponentBuilder extends com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelSubcomponent.Builder {
							public static class: java.lang.Class<com.stripe.android.googlepaylauncher.injection.DaggerGooglePayPaymentMethodLauncherComponent.GooglePayPaymentMethodLauncherViewModelSubcomponentBuilder>;
							public build(): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelSubcomponent;
							public savedStateHandle(param0: androidx.lifecycle.SavedStateHandle): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelSubcomponent.Builder;
							public args(param0: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherContract.Args): com.stripe.android.googlepaylauncher.injection.DaggerGooglePayPaymentMethodLauncherComponent.GooglePayPaymentMethodLauncherViewModelSubcomponentBuilder;
							public savedStateHandle(param0: androidx.lifecycle.SavedStateHandle): com.stripe.android.googlepaylauncher.injection.DaggerGooglePayPaymentMethodLauncherComponent.GooglePayPaymentMethodLauncherViewModelSubcomponentBuilder;
							public args(param0: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherContract.Args): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelSubcomponent.Builder;
						}
						export class GooglePayPaymentMethodLauncherViewModelSubcomponentImpl extends com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelSubcomponent {
							public static class: java.lang.Class<com.stripe.android.googlepaylauncher.injection.DaggerGooglePayPaymentMethodLauncherComponent.GooglePayPaymentMethodLauncherViewModelSubcomponentImpl>;
							public getViewModel(): com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherViewModel;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module googlepaylauncher {
				export module injection {
					export class DaggerGooglePayPaymentMethodLauncherViewModelFactoryComponent extends com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelFactoryComponent {
						public static class: java.lang.Class<com.stripe.android.googlepaylauncher.injection.DaggerGooglePayPaymentMethodLauncherViewModelFactoryComponent>;
						public static builder(): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelFactoryComponent.Builder;
						public inject(param0: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherViewModel.Factory): void;
					}
					export module DaggerGooglePayPaymentMethodLauncherViewModelFactoryComponent {
						export class Builder extends com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelFactoryComponent.Builder {
							public static class: java.lang.Class<com.stripe.android.googlepaylauncher.injection.DaggerGooglePayPaymentMethodLauncherViewModelFactoryComponent.Builder>;
							public enableLogging(param0: boolean): com.stripe.android.googlepaylauncher.injection.DaggerGooglePayPaymentMethodLauncherViewModelFactoryComponent.Builder;
							public build(): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelFactoryComponent;
							public stripeAccountIdProvider(param0: kotlin.jvm.functions.Function0<string>): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelFactoryComponent.Builder;
							public context(param0: globalAndroid.content.Context): com.stripe.android.googlepaylauncher.injection.DaggerGooglePayPaymentMethodLauncherViewModelFactoryComponent.Builder;
							public publishableKeyProvider(param0: kotlin.jvm.functions.Function0<string>): com.stripe.android.googlepaylauncher.injection.DaggerGooglePayPaymentMethodLauncherViewModelFactoryComponent.Builder;
							public stripeAccountIdProvider(param0: kotlin.jvm.functions.Function0<string>): com.stripe.android.googlepaylauncher.injection.DaggerGooglePayPaymentMethodLauncherViewModelFactoryComponent.Builder;
							public context(param0: globalAndroid.content.Context): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelFactoryComponent.Builder;
							public googlePayConfig(param0: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Config): com.stripe.android.googlepaylauncher.injection.DaggerGooglePayPaymentMethodLauncherViewModelFactoryComponent.Builder;
							public enableLogging(param0: boolean): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelFactoryComponent.Builder;
							public productUsage(param0: java.util.Set<string>): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelFactoryComponent.Builder;
							public publishableKeyProvider(param0: kotlin.jvm.functions.Function0<string>): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelFactoryComponent.Builder;
							public googlePayConfig(param0: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Config): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelFactoryComponent.Builder;
							public productUsage(param0: java.util.Set<string>): com.stripe.android.googlepaylauncher.injection.DaggerGooglePayPaymentMethodLauncherViewModelFactoryComponent.Builder;
						}
						export class GooglePayPaymentMethodLauncherViewModelSubcomponentBuilder extends com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelSubcomponent.Builder {
							public static class: java.lang.Class<com.stripe.android.googlepaylauncher.injection.DaggerGooglePayPaymentMethodLauncherViewModelFactoryComponent.GooglePayPaymentMethodLauncherViewModelSubcomponentBuilder>;
							public build(): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelSubcomponent;
							public savedStateHandle(param0: androidx.lifecycle.SavedStateHandle): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelSubcomponent.Builder;
							public args(param0: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherContract.Args): com.stripe.android.googlepaylauncher.injection.DaggerGooglePayPaymentMethodLauncherViewModelFactoryComponent.GooglePayPaymentMethodLauncherViewModelSubcomponentBuilder;
							public args(param0: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherContract.Args): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelSubcomponent.Builder;
							public savedStateHandle(param0: androidx.lifecycle.SavedStateHandle): com.stripe.android.googlepaylauncher.injection.DaggerGooglePayPaymentMethodLauncherViewModelFactoryComponent.GooglePayPaymentMethodLauncherViewModelSubcomponentBuilder;
						}
						export class GooglePayPaymentMethodLauncherViewModelSubcomponentImpl extends com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelSubcomponent {
							public static class: java.lang.Class<com.stripe.android.googlepaylauncher.injection.DaggerGooglePayPaymentMethodLauncherViewModelFactoryComponent.GooglePayPaymentMethodLauncherViewModelSubcomponentImpl>;
							public getViewModel(): com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherViewModel;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module googlepaylauncher {
				export module injection {
					export class GooglePayLauncherModule {
						public static class: java.lang.Class<com.stripe.android.googlepaylauncher.injection.GooglePayLauncherModule>;
						public static $stable: number;
						public provideGooglePayRepositoryFactory(param0: globalAndroid.content.Context, param1: com.stripe.android.core.Logger): kotlin.jvm.functions.Function1<com.stripe.android.googlepaylauncher.GooglePayEnvironment, com.stripe.android.googlepaylauncher.GooglePayRepository>;
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module googlepaylauncher {
				export module injection {
					export class GooglePayLauncherModule_ProvideGooglePayRepositoryFactoryFactory extends dagger.internal.Factory<kotlin.jvm.functions.Function1<com.stripe.android.googlepaylauncher.GooglePayEnvironment, com.stripe.android.googlepaylauncher.GooglePayRepository>> {
						public static class: java.lang.Class<com.stripe.android.googlepaylauncher.injection.GooglePayLauncherModule_ProvideGooglePayRepositoryFactoryFactory>;
						public get(): kotlin.jvm.functions.Function1<com.stripe.android.googlepaylauncher.GooglePayEnvironment, com.stripe.android.googlepaylauncher.GooglePayRepository>;
						public constructor(param0: com.stripe.android.googlepaylauncher.injection.GooglePayLauncherModule, param1: javax.inject.Provider<globalAndroid.content.Context>, param2: javax.inject.Provider<com.stripe.android.core.Logger>);
						public static create(param0: com.stripe.android.googlepaylauncher.injection.GooglePayLauncherModule, param1: javax.inject.Provider<globalAndroid.content.Context>, param2: javax.inject.Provider<com.stripe.android.core.Logger>): com.stripe.android.googlepaylauncher.injection.GooglePayLauncherModule_ProvideGooglePayRepositoryFactoryFactory;
						public static provideGooglePayRepositoryFactory(param0: com.stripe.android.googlepaylauncher.injection.GooglePayLauncherModule, param1: globalAndroid.content.Context, param2: com.stripe.android.core.Logger): kotlin.jvm.functions.Function1<com.stripe.android.googlepaylauncher.GooglePayEnvironment, com.stripe.android.googlepaylauncher.GooglePayRepository>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module googlepaylauncher {
				export module injection {
					export abstract class GooglePayPaymentMethodLauncherComponent {
						public static class: java.lang.Class<com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherComponent>;
						public constructor();
						public inject(param0: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherViewModel.Factory): void;
					}
					export module GooglePayPaymentMethodLauncherComponent {
						export class Builder {
							public static class: java.lang.Class<com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherComponent.Builder>;
							/**
							 * Constructs a new instance of the com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherComponent$Builder interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								context(param0: globalAndroid.content.Context): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherComponent.Builder;
								ioContext(param0: kotlin.coroutines.CoroutineContext): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherComponent.Builder;
								analyticsRequestFactory(param0: com.stripe.android.networking.PaymentAnalyticsRequestFactory): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherComponent.Builder;
								stripeRepository(param0: com.stripe.android.networking.StripeRepository): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherComponent.Builder;
								googlePayConfig(param0: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Config): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherComponent.Builder;
								enableLogging(param0: boolean): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherComponent.Builder;
								publishableKeyProvider(param0: kotlin.jvm.functions.Function0<string>): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherComponent.Builder;
								stripeAccountIdProvider(param0: kotlin.jvm.functions.Function0<string>): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherComponent.Builder;
								build(): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherComponent;
							});
							public constructor();
							public enableLogging(param0: boolean): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherComponent.Builder;
							public analyticsRequestFactory(param0: com.stripe.android.networking.PaymentAnalyticsRequestFactory): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherComponent.Builder;
							public stripeRepository(param0: com.stripe.android.networking.StripeRepository): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherComponent.Builder;
							public googlePayConfig(param0: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Config): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherComponent.Builder;
							public ioContext(param0: kotlin.coroutines.CoroutineContext): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherComponent.Builder;
							public publishableKeyProvider(param0: kotlin.jvm.functions.Function0<string>): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherComponent.Builder;
							public context(param0: globalAndroid.content.Context): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherComponent.Builder;
							public build(): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherComponent;
							public stripeAccountIdProvider(param0: kotlin.jvm.functions.Function0<string>): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherComponent.Builder;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module googlepaylauncher {
				export module injection {
					export class GooglePayPaymentMethodLauncherFactory {
						public static class: java.lang.Class<com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherFactory>;
						/**
						 * Constructs a new instance of the com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							create(param0: kotlinx.coroutines.CoroutineScope, param1: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Config, param2: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.ReadyCallback, param3: androidx.activity.result.ActivityResultLauncher<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherContract.Args>, param4: boolean): com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher;
						});
						public constructor();
						public create(param0: kotlinx.coroutines.CoroutineScope, param1: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Config, param2: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.ReadyCallback, param3: androidx.activity.result.ActivityResultLauncher<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherContract.Args>, param4: boolean): com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher;
					}
					export module GooglePayPaymentMethodLauncherFactory {
						export class DefaultImpls {
							public static class: java.lang.Class<com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherFactory.DefaultImpls>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module googlepaylauncher {
				export module injection {
					export class GooglePayPaymentMethodLauncherFactory_Impl extends com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherFactory {
						public static class: java.lang.Class<com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherFactory_Impl>;
						public create(param0: kotlinx.coroutines.CoroutineScope, param1: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Config, param2: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.ReadyCallback, param3: androidx.activity.result.ActivityResultLauncher<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherContract.Args>, param4: boolean): com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher;
						public static create(param0: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher_Factory): javax.inject.Provider<com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherFactory>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module googlepaylauncher {
				export module injection {
					export abstract class GooglePayPaymentMethodLauncherModule {
						public static class: java.lang.Class<com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherModule>;
						public static Companion: com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherModule.Companion;
						public constructor();
						public bindsGooglePayRepository(param0: com.stripe.android.googlepaylauncher.DefaultGooglePayRepository): com.stripe.android.googlepaylauncher.GooglePayRepository;
					}
					export module GooglePayPaymentMethodLauncherModule {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherModule.Companion>;
							public providePaymentsClient(param0: globalAndroid.content.Context, param1: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Config, param2: com.stripe.android.googlepaylauncher.PaymentsClientFactory): com.google.android.gms.wallet.PaymentsClient;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module googlepaylauncher {
				export module injection {
					export class GooglePayPaymentMethodLauncherModule_Companion_ProvidePaymentsClientFactory extends dagger.internal.Factory<com.google.android.gms.wallet.PaymentsClient> {
						public static class: java.lang.Class<com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherModule_Companion_ProvidePaymentsClientFactory>;
						public get(): com.google.android.gms.wallet.PaymentsClient;
						public static providePaymentsClient(param0: globalAndroid.content.Context, param1: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Config, param2: com.stripe.android.googlepaylauncher.PaymentsClientFactory): com.google.android.gms.wallet.PaymentsClient;
						public static create(param0: javax.inject.Provider<globalAndroid.content.Context>, param1: javax.inject.Provider<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Config>, param2: javax.inject.Provider<com.stripe.android.googlepaylauncher.PaymentsClientFactory>): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherModule_Companion_ProvidePaymentsClientFactory;
						public constructor(param0: javax.inject.Provider<globalAndroid.content.Context>, param1: javax.inject.Provider<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Config>, param2: javax.inject.Provider<com.stripe.android.googlepaylauncher.PaymentsClientFactory>);
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module googlepaylauncher {
				export module injection {
					export class GooglePayPaymentMethodLauncherViewModelFactoryComponent {
						public static class: java.lang.Class<com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelFactoryComponent>;
						/**
						 * Constructs a new instance of the com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelFactoryComponent interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							inject(param0: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherViewModel.Factory): void;
						});
						public constructor();
						public inject(param0: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherViewModel.Factory): void;
					}
					export module GooglePayPaymentMethodLauncherViewModelFactoryComponent {
						export class Builder {
							public static class: java.lang.Class<com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelFactoryComponent.Builder>;
							/**
							 * Constructs a new instance of the com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelFactoryComponent$Builder interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								context(param0: globalAndroid.content.Context): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelFactoryComponent.Builder;
								enableLogging(param0: boolean): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelFactoryComponent.Builder;
								publishableKeyProvider(param0: kotlin.jvm.functions.Function0<string>): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelFactoryComponent.Builder;
								stripeAccountIdProvider(param0: kotlin.jvm.functions.Function0<string>): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelFactoryComponent.Builder;
								productUsage(param0: java.util.Set<string>): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelFactoryComponent.Builder;
								googlePayConfig(param0: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Config): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelFactoryComponent.Builder;
								build(): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelFactoryComponent;
							});
							public constructor();
							public context(param0: globalAndroid.content.Context): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelFactoryComponent.Builder;
							public enableLogging(param0: boolean): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelFactoryComponent.Builder;
							public productUsage(param0: java.util.Set<string>): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelFactoryComponent.Builder;
							public publishableKeyProvider(param0: kotlin.jvm.functions.Function0<string>): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelFactoryComponent.Builder;
							public stripeAccountIdProvider(param0: kotlin.jvm.functions.Function0<string>): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelFactoryComponent.Builder;
							public googlePayConfig(param0: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Config): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelFactoryComponent.Builder;
							public build(): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelFactoryComponent;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module googlepaylauncher {
				export module injection {
					export class GooglePayPaymentMethodLauncherViewModelSubcomponent {
						public static class: java.lang.Class<com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelSubcomponent>;
						/**
						 * Constructs a new instance of the com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelSubcomponent interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getViewModel(): com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherViewModel;
						});
						public constructor();
						public getViewModel(): com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherViewModel;
					}
					export module GooglePayPaymentMethodLauncherViewModelSubcomponent {
						export class Builder {
							public static class: java.lang.Class<com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelSubcomponent.Builder>;
							/**
							 * Constructs a new instance of the com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelSubcomponent$Builder interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								args(param0: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherContract.Args): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelSubcomponent.Builder;
								savedStateHandle(param0: androidx.lifecycle.SavedStateHandle): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelSubcomponent.Builder;
								build(): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelSubcomponent;
							});
							public constructor();
							public build(): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelSubcomponent;
							public savedStateHandle(param0: androidx.lifecycle.SavedStateHandle): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelSubcomponent.Builder;
							public args(param0: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherContract.Args): com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherViewModelSubcomponent.Builder;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class AccountParams extends com.stripe.android.model.TokenParams {
					public static class: java.lang.Class<com.stripe.android.model.AccountParams>;
					public static Companion: com.stripe.android.model.AccountParams.Companion;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.AccountParams>;
					public static $stable: number;
					public constructor(param0: com.stripe.android.model.Token.Type, param1: java.util.Set<string>);
					public copy(param0: boolean, param1: com.stripe.android.model.AccountParams.BusinessTypeParams): com.stripe.android.model.AccountParams;
					public static create(param0: boolean, param1: com.stripe.android.model.AccountParams.BusinessTypeParams.Individual): com.stripe.android.model.AccountParams;
					public getTypeDataParams(): java.util.Map<string, any>;
					public describeContents(): number;
					public static create(param0: boolean, param1: com.stripe.android.model.AccountParams.BusinessType): com.stripe.android.model.AccountParams;
					public static create(param0: boolean, param1: com.stripe.android.model.AccountParams.BusinessTypeParams.Company): com.stripe.android.model.AccountParams;
					public toParamMap(): java.util.Map<string, any>;
					public equals(param0: any): boolean;
					public toString(): string;
					public static create(param0: boolean): com.stripe.android.model.AccountParams;
					public constructor(param0: boolean, param1: com.stripe.android.model.AccountParams.BusinessTypeParams);
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public hashCode(): number;
				}
				export module AccountParams {
					export class BusinessType {
						public static class: java.lang.Class<com.stripe.android.model.AccountParams.BusinessType>;
						public static Individual: com.stripe.android.model.AccountParams.BusinessType;
						public static Company: com.stripe.android.model.AccountParams.BusinessType;
						public static valueOf(param0: string): com.stripe.android.model.AccountParams.BusinessType;
						public static values(): androidNative.Array<com.stripe.android.model.AccountParams.BusinessType>;
						public getCode(): string;
					}
					export abstract class BusinessTypeParams extends com.stripe.android.model.StripeParamsModel {
						public static class: java.lang.Class<com.stripe.android.model.AccountParams.BusinessTypeParams>;
						public static $stable: number;
						public getParamsList(): java.util.List<kotlin.Pair<string, any>>;
						public toParamMap(): java.util.Map<string, any>;
						public getType$payments_core_release(): com.stripe.android.model.AccountParams.BusinessType;
					}
					export module BusinessTypeParams {
						export class Company extends com.stripe.android.model.AccountParams.BusinessTypeParams {
							public static class: java.lang.Class<com.stripe.android.model.AccountParams.BusinessTypeParams.Company>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.AccountParams.BusinessTypeParams.Company>;
							public static $stable: number;
							public component13(): string;
							public component7(): string;
							public setAddressKanji(param0: com.stripe.android.model.AddressJapanParams): void;
							public component10(): string;
							public component1(): com.stripe.android.model.Address;
							public toParamMap(): java.util.Map<string, any>;
							public component4(): java.lang.Boolean;
							public setNameKana(param0: string): void;
							public component14(): com.stripe.android.model.AccountParams.BusinessTypeParams.Company.Verification;
							public describeContents(): number;
							public getAddressKana(): com.stripe.android.model.AddressJapanParams;
							public getAddress(): com.stripe.android.model.Address;
							public setExecutivesProvided(param0: java.lang.Boolean): void;
							public component5(): java.lang.Boolean;
							public getAddressKanji(): com.stripe.android.model.AddressJapanParams;
							public setNameKanji(param0: string): void;
							public setVatId(param0: string): void;
							public setTaxId(param0: string): void;
							public component8(): string;
							public setVerification(param0: com.stripe.android.model.AccountParams.BusinessTypeParams.Company.Verification): void;
							public setAddressKana(param0: com.stripe.android.model.AddressJapanParams): void;
							public setPhone(param0: string): void;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public getPhone(): string;
							public getNameKanji(): string;
							public equals(param0: any): boolean;
							public getTaxIdRegistrar(): string;
							public hashCode(): number;
							public setOwnersProvided(param0: java.lang.Boolean): void;
							public copy(param0: com.stripe.android.model.Address, param1: com.stripe.android.model.AddressJapanParams, param2: com.stripe.android.model.AddressJapanParams, param3: java.lang.Boolean, param4: java.lang.Boolean, param5: string, param6: string, param7: string, param8: java.lang.Boolean, param9: string, param10: string, param11: string, param12: string, param13: com.stripe.android.model.AccountParams.BusinessTypeParams.Company.Verification): com.stripe.android.model.AccountParams.BusinessTypeParams.Company;
							public toString(): string;
							public component9(): java.lang.Boolean;
							public constructor(param0: com.stripe.android.model.Address, param1: com.stripe.android.model.AddressJapanParams, param2: com.stripe.android.model.AddressJapanParams, param3: java.lang.Boolean, param4: java.lang.Boolean, param5: string, param6: string, param7: string, param8: java.lang.Boolean, param9: string, param10: string, param11: string, param12: string, param13: com.stripe.android.model.AccountParams.BusinessTypeParams.Company.Verification);
							public component12(): string;
							public setAddress(param0: com.stripe.android.model.Address): void;
							public setTaxIdRegistrar(param0: string): void;
							public getDirectorsProvided(): java.lang.Boolean;
							public getExecutivesProvided(): java.lang.Boolean;
							public component6(): string;
							public setDirectorsProvided(param0: java.lang.Boolean): void;
							public constructor();
							public getNameKana(): string;
							public getOwnersProvided(): java.lang.Boolean;
							public getParamsList(): java.util.List<kotlin.Pair<string, any>>;
							public setName(param0: string): void;
							public component3(): com.stripe.android.model.AddressJapanParams;
							public getVatId(): string;
							public getName(): string;
							public getVerification(): com.stripe.android.model.AccountParams.BusinessTypeParams.Company.Verification;
							public component2(): com.stripe.android.model.AddressJapanParams;
							public component11(): string;
							public getTaxId(): string;
						}
						export module Company {
							export class Builder extends com.stripe.android.ObjectBuilder<com.stripe.android.model.AccountParams.BusinessTypeParams.Company> {
								public static class: java.lang.Class<com.stripe.android.model.AccountParams.BusinessTypeParams.Company.Builder>;
								public static $stable: number;
								public setVatId(param0: string): com.stripe.android.model.AccountParams.BusinessTypeParams.Company.Builder;
								public setDirectorsProvided(param0: java.lang.Boolean): com.stripe.android.model.AccountParams.BusinessTypeParams.Company.Builder;
								public constructor();
								public setNameKanji(param0: string): com.stripe.android.model.AccountParams.BusinessTypeParams.Company.Builder;
								public setVerification(param0: com.stripe.android.model.AccountParams.BusinessTypeParams.Company.Verification): com.stripe.android.model.AccountParams.BusinessTypeParams.Company.Builder;
								public build(): com.stripe.android.model.AccountParams.BusinessTypeParams.Company;
								public setTaxId(param0: string): com.stripe.android.model.AccountParams.BusinessTypeParams.Company.Builder;
								public setExecutivesProvided(param0: java.lang.Boolean): com.stripe.android.model.AccountParams.BusinessTypeParams.Company.Builder;
								public setPhone(param0: string): com.stripe.android.model.AccountParams.BusinessTypeParams.Company.Builder;
								public setAddressKanji(param0: com.stripe.android.model.AddressJapanParams): com.stripe.android.model.AccountParams.BusinessTypeParams.Company.Builder;
								public setNameKana(param0: string): com.stripe.android.model.AccountParams.BusinessTypeParams.Company.Builder;
								public build(): any;
								public setOwnersProvided(param0: java.lang.Boolean): com.stripe.android.model.AccountParams.BusinessTypeParams.Company.Builder;
								public setAddressKana(param0: com.stripe.android.model.AddressJapanParams): com.stripe.android.model.AccountParams.BusinessTypeParams.Company.Builder;
								public setTaxIdRegistrar(param0: string): com.stripe.android.model.AccountParams.BusinessTypeParams.Company.Builder;
								public setAddress(param0: com.stripe.android.model.Address): com.stripe.android.model.AccountParams.BusinessTypeParams.Company.Builder;
								public setName(param0: string): com.stripe.android.model.AccountParams.BusinessTypeParams.Company.Builder;
							}
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.AccountParams.BusinessTypeParams.Company.Companion>;
							}
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.AccountParams.BusinessTypeParams.Company> {
								public static class: java.lang.Class<com.stripe.android.model.AccountParams.BusinessTypeParams.Company.Creator>;
								public constructor();
								public newArray(param0: number): androidNative.Array<com.stripe.android.model.AccountParams.BusinessTypeParams.Company>;
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.AccountParams.BusinessTypeParams.Company;
							}
							export class Document extends com.stripe.android.model.StripeParamsModel {
								public static class: java.lang.Class<com.stripe.android.model.AccountParams.BusinessTypeParams.Company.Document>;
								public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.AccountParams.BusinessTypeParams.Company.Document>;
								public static $stable: number;
								public toString(): string;
								public describeContents(): number;
								public constructor(param0: string, param1: string);
								public copy(param0: string, param1: string): com.stripe.android.model.AccountParams.BusinessTypeParams.Company.Document;
								public equals(param0: any): boolean;
								public toParamMap(): java.util.Map<string, any>;
								public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
								public constructor();
								public constructor(param0: string);
								public hashCode(): number;
							}
							export module Document {
								export class Companion {
									public static class: java.lang.Class<com.stripe.android.model.AccountParams.BusinessTypeParams.Company.Document.Companion>;
								}
								export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.AccountParams.BusinessTypeParams.Company.Document> {
									public static class: java.lang.Class<com.stripe.android.model.AccountParams.BusinessTypeParams.Company.Document.Creator>;
									public constructor();
									public newArray(param0: number): androidNative.Array<com.stripe.android.model.AccountParams.BusinessTypeParams.Company.Document>;
									public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.AccountParams.BusinessTypeParams.Company.Document;
								}
							}
							export class Verification extends com.stripe.android.model.StripeParamsModel {
								public static class: java.lang.Class<com.stripe.android.model.AccountParams.BusinessTypeParams.Company.Verification>;
								public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.AccountParams.BusinessTypeParams.Company.Verification>;
								public static $stable: number;
								public copy(param0: com.stripe.android.model.AccountParams.BusinessTypeParams.Company.Document): com.stripe.android.model.AccountParams.BusinessTypeParams.Company.Verification;
								public toString(): string;
								public getDocument(): com.stripe.android.model.AccountParams.BusinessTypeParams.Company.Document;
								public describeContents(): number;
								public equals(param0: any): boolean;
								public setDocument(param0: com.stripe.android.model.AccountParams.BusinessTypeParams.Company.Document): void;
								public toParamMap(): java.util.Map<string, any>;
								public constructor(param0: com.stripe.android.model.AccountParams.BusinessTypeParams.Company.Document);
								public component1(): com.stripe.android.model.AccountParams.BusinessTypeParams.Company.Document;
								public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
								public constructor();
								public hashCode(): number;
							}
							export module Verification {
								export class Companion {
									public static class: java.lang.Class<com.stripe.android.model.AccountParams.BusinessTypeParams.Company.Verification.Companion>;
								}
								export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.AccountParams.BusinessTypeParams.Company.Verification> {
									public static class: java.lang.Class<com.stripe.android.model.AccountParams.BusinessTypeParams.Company.Verification.Creator>;
									public constructor();
									public newArray(param0: number): androidNative.Array<com.stripe.android.model.AccountParams.BusinessTypeParams.Company.Verification>;
									public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.AccountParams.BusinessTypeParams.Company.Verification;
								}
							}
						}
						export class Individual extends com.stripe.android.model.AccountParams.BusinessTypeParams {
							public static class: java.lang.Class<com.stripe.android.model.AccountParams.BusinessTypeParams.Individual>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.AccountParams.BusinessTypeParams.Individual>;
							public static $stable: number;
							public component13(): string;
							public component7(): string;
							public setAddressKanji(param0: com.stripe.android.model.AddressJapanParams): void;
							public component10(): string;
							public component16(): string;
							public component1(): com.stripe.android.model.Address;
							public setVerification(param0: com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Verification): void;
							public toParamMap(): java.util.Map<string, any>;
							public setFirstName(param0: string): void;
							public getFirstName(): string;
							public setMaidenName(param0: string): void;
							public setLastNameKana(param0: string): void;
							public describeContents(): number;
							public getAddressKana(): com.stripe.android.model.AddressJapanParams;
							public getAddress(): com.stripe.android.model.Address;
							public getLastNameKanji(): string;
							public setMetadata(param0: java.util.Map<string, string>): void;
							public getAddressKanji(): com.stripe.android.model.AddressJapanParams;
							public getFirstNameKanji(): string;
							public setGender(param0: string): void;
							public setSsnLast4(param0: string): void;
							public component9(): string;
							public setIdNumber(param0: string): void;
							public component15(): java.util.Map<string, string>;
							public getLastNameKana(): string;
							public setLastNameKanji(param0: string): void;
							public component8(): string;
							public setAddressKana(param0: com.stripe.android.model.AddressJapanParams): void;
							public setPhone(param0: string): void;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public getDateOfBirth(): com.stripe.android.model.DateOfBirth;
							public getLastName(): string;
							public getPhone(): string;
							public component14(): string;
							public equals(param0: any): boolean;
							public setLastName(param0: string): void;
							public getGender(): string;
							public component18(): com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Verification;
							public hashCode(): number;
							public getVerification(): com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Verification;
							public setFirstNameKanji(param0: string): void;
							public toString(): string;
							public copy(param0: com.stripe.android.model.Address, param1: com.stripe.android.model.AddressJapanParams, param2: com.stripe.android.model.AddressJapanParams, param3: com.stripe.android.model.DateOfBirth, param4: string, param5: string, param6: string, param7: string, param8: string, param9: string, param10: string, param11: string, param12: string, param13: string, param14: java.util.Map<string, string>, param15: string, param16: string, param17: com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Verification): com.stripe.android.model.AccountParams.BusinessTypeParams.Individual;
							public component12(): string;
							public setAddress(param0: com.stripe.android.model.Address): void;
							public setEmail(param0: string): void;
							public component17(): string;
							public component6(): string;
							public getFirstNameKana(): string;
							public constructor();
							public getMetadata(): java.util.Map<string, string>;
							public setDateOfBirth(param0: com.stripe.android.model.DateOfBirth): void;
							public getParamsList(): java.util.List<kotlin.Pair<string, any>>;
							public setFirstNameKana(param0: string): void;
							public component4(): com.stripe.android.model.DateOfBirth;
							public component5(): string;
							public getMaidenName(): string;
							public component3(): com.stripe.android.model.AddressJapanParams;
							public getIdNumber(): string;
							public getEmail(): string;
							public getSsnLast4(): string;
							public component2(): com.stripe.android.model.AddressJapanParams;
							public component11(): string;
							public constructor(param0: com.stripe.android.model.Address, param1: com.stripe.android.model.AddressJapanParams, param2: com.stripe.android.model.AddressJapanParams, param3: com.stripe.android.model.DateOfBirth, param4: string, param5: string, param6: string, param7: string, param8: string, param9: string, param10: string, param11: string, param12: string, param13: string, param14: java.util.Map<string, string>, param15: string, param16: string, param17: com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Verification);
						}
						export module Individual {
							export class Builder extends com.stripe.android.ObjectBuilder<com.stripe.android.model.AccountParams.BusinessTypeParams.Individual> {
								public static class: java.lang.Class<com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Builder>;
								public static $stable: number;
								public setVerification(param0: com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Verification): com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Builder;
								public setLastNameKanji(param0: string): com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Builder;
								public setMetadata(param0: java.util.Map<string, string>): com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Builder;
								public setDateOfBirth(param0: com.stripe.android.model.DateOfBirth): com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Builder;
								public setLastName(param0: string): com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Builder;
								public setPhone(param0: string): com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Builder;
								public constructor();
								public setFirstNameKana(param0: string): com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Builder;
								public setAddressKana(param0: com.stripe.android.model.AddressJapanParams): com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Builder;
								public setIdNumber(param0: string): com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Builder;
								public setMaidenName(param0: string): com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Builder;
								public build(): com.stripe.android.model.AccountParams.BusinessTypeParams.Individual;
								public setAddress(param0: com.stripe.android.model.Address): com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Builder;
								public setAddressKanji(param0: com.stripe.android.model.AddressJapanParams): com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Builder;
								public setLastNameKana(param0: string): com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Builder;
								public build(): any;
								public setFirstName(param0: string): com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Builder;
								public setEmail(param0: string): com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Builder;
								public setFirstNameKanji(param0: string): com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Builder;
								public setGender(param0: string): com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Builder;
								public setSsnLast4(param0: string): com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Builder;
							}
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Companion>;
							}
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.AccountParams.BusinessTypeParams.Individual> {
								public static class: java.lang.Class<com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Creator>;
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.AccountParams.BusinessTypeParams.Individual;
								public constructor();
								public newArray(param0: number): androidNative.Array<com.stripe.android.model.AccountParams.BusinessTypeParams.Individual>;
							}
							export class Document extends com.stripe.android.model.StripeParamsModel {
								public static class: java.lang.Class<com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Document>;
								public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Document>;
								public static $stable: number;
								public copy(param0: string, param1: string): com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Document;
								public toString(): string;
								public describeContents(): number;
								public constructor(param0: string, param1: string);
								public equals(param0: any): boolean;
								public toParamMap(): java.util.Map<string, any>;
								public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
								public constructor();
								public constructor(param0: string);
								public hashCode(): number;
							}
							export module Document {
								export class Companion {
									public static class: java.lang.Class<com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Document.Companion>;
								}
								export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Document> {
									public static class: java.lang.Class<com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Document.Creator>;
									public constructor();
									public newArray(param0: number): androidNative.Array<com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Document>;
									public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Document;
								}
							}
							export class Verification extends com.stripe.android.model.StripeParamsModel {
								public static class: java.lang.Class<com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Verification>;
								public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Verification>;
								public static $stable: number;
								public component1(): com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Document;
								public toString(): string;
								public getAdditionalDocument(): com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Document;
								public equals(param0: any): boolean;
								public toParamMap(): java.util.Map<string, any>;
								public getDocument(): com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Document;
								public setDocument(param0: com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Document): void;
								public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
								public constructor();
								public component2(): com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Document;
								public constructor(param0: com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Document, param1: com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Document);
								public constructor(param0: com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Document);
								public describeContents(): number;
								public setAdditionalDocument(param0: com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Document): void;
								public copy(param0: com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Document, param1: com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Document): com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Verification;
								public hashCode(): number;
							}
							export module Verification {
								export class Companion {
									public static class: java.lang.Class<com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Verification.Companion>;
								}
								export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Verification> {
									public static class: java.lang.Class<com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Verification.Creator>;
									public constructor();
									public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Verification;
									public newArray(param0: number): androidNative.Array<com.stripe.android.model.AccountParams.BusinessTypeParams.Individual.Verification>;
								}
							}
						}
					}
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.model.AccountParams.Companion>;
						public create(param0: boolean, param1: com.stripe.android.model.AccountParams.BusinessTypeParams.Company): com.stripe.android.model.AccountParams;
						public create(param0: boolean, param1: com.stripe.android.model.AccountParams.BusinessTypeParams.Individual): com.stripe.android.model.AccountParams;
						public create(param0: boolean, param1: com.stripe.android.model.AccountParams.BusinessType): com.stripe.android.model.AccountParams;
						public create(param0: boolean): com.stripe.android.model.AccountParams;
					}
					export module Companion {
						export class WhenMappings {
							public static class: java.lang.Class<com.stripe.android.model.AccountParams.Companion.WhenMappings>;
						}
					}
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.AccountParams> {
						public static class: java.lang.Class<com.stripe.android.model.AccountParams.Creator>;
						public constructor();
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.AccountParams;
						public newArray(param0: number): androidNative.Array<com.stripe.android.model.AccountParams>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class AccountRange extends com.stripe.android.core.model.StripeModel {
					public static class: java.lang.Class<com.stripe.android.model.AccountRange>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.AccountRange>;
					public describeContents(): number;
					public getCountry(): string;
					public equals(param0: any): boolean;
					public component3(): com.stripe.android.model.AccountRange.BrandInfo;
					public toString(): string;
					public getPanLength(): number;
					public copy(param0: com.stripe.android.model.BinRange, param1: number, param2: com.stripe.android.model.AccountRange.BrandInfo, param3: string): com.stripe.android.model.AccountRange;
					public getBinRange(): com.stripe.android.model.BinRange;
					public getBrandInfo(): com.stripe.android.model.AccountRange.BrandInfo;
					public getBrand(): com.stripe.android.model.CardBrand;
					public component2(): number;
					public component4(): string;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public hashCode(): number;
					public component1(): com.stripe.android.model.BinRange;
					public constructor(param0: com.stripe.android.model.BinRange, param1: number, param2: com.stripe.android.model.AccountRange.BrandInfo, param3: string);
				}
				export module AccountRange {
					export class BrandInfo {
						public static class: java.lang.Class<com.stripe.android.model.AccountRange.BrandInfo>;
						public static Visa: com.stripe.android.model.AccountRange.BrandInfo;
						public static Mastercard: com.stripe.android.model.AccountRange.BrandInfo;
						public static AmericanExpress: com.stripe.android.model.AccountRange.BrandInfo;
						public static JCB: com.stripe.android.model.AccountRange.BrandInfo;
						public static DinersClub: com.stripe.android.model.AccountRange.BrandInfo;
						public static Discover: com.stripe.android.model.AccountRange.BrandInfo;
						public static UnionPay: com.stripe.android.model.AccountRange.BrandInfo;
						public getBrandName(): string;
						public static values(): androidNative.Array<com.stripe.android.model.AccountRange.BrandInfo>;
						public static valueOf(param0: string): com.stripe.android.model.AccountRange.BrandInfo;
						public getBrand(): com.stripe.android.model.CardBrand;
					}
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.AccountRange> {
						public static class: java.lang.Class<com.stripe.android.model.AccountRange.Creator>;
						public constructor();
						public newArray(param0: number): androidNative.Array<com.stripe.android.model.AccountRange>;
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.AccountRange;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class Address implements com.stripe.android.core.model.StripeModel, com.stripe.android.model.StripeParamsModel {
					public static class: java.lang.Class<com.stripe.android.model.Address>;
					public static Companion: com.stripe.android.model.Address.Companion;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.Address>;
					public static $stable: number;
					public component2(): string;
					public component5(): string;
					public copy(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string): com.stripe.android.model.Address;
					public describeContents(): number;
					public getLine1(): string;
					public component3(): string;
					public getCountry(): string;
					public getState(): string;
					public getCity(): string;
					public toParamMap(): java.util.Map<string, any>;
					public equals(param0: any): boolean;
					public toString(): string;
					public component1(): string;
					public getCountryCode(): com.stripe.android.core.model.CountryCode;
					public getLine2(): string;
					public constructor();
					public getCountryCode$payments_core_release(): com.stripe.android.core.model.CountryCode;
					public component6(): string;
					public component4(): string;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public getPostalCode(): string;
					public hashCode(): number;
					public constructor(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string);
					public static fromJson(param0: org.json.JSONObject): com.stripe.android.model.Address;
				}
				export module Address {
					export class Builder extends com.stripe.android.ObjectBuilder<com.stripe.android.model.Address> {
						public static class: java.lang.Class<com.stripe.android.model.Address.Builder>;
						public static $stable: number;
						public setPostalCode(param0: string): com.stripe.android.model.Address.Builder;
						public constructor();
						public setLine2(param0: string): com.stripe.android.model.Address.Builder;
						public setState(param0: string): com.stripe.android.model.Address.Builder;
						public build(): com.stripe.android.model.Address;
						public setCountry(param0: string): com.stripe.android.model.Address.Builder;
						public setCity(param0: string): com.stripe.android.model.Address.Builder;
						public setCountryCode(param0: com.stripe.android.core.model.CountryCode): com.stripe.android.model.Address.Builder;
						public setLine1(param0: string): com.stripe.android.model.Address.Builder;
						public build(): any;
					}
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.model.Address.Companion>;
						public fromJson(param0: org.json.JSONObject): com.stripe.android.model.Address;
					}
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.Address> {
						public static class: java.lang.Class<com.stripe.android.model.Address.Creator>;
						public constructor();
						public newArray(param0: number): androidNative.Array<com.stripe.android.model.Address>;
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.Address;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class AddressJapanParams extends com.stripe.android.model.StripeParamsModel {
					public static class: java.lang.Class<com.stripe.android.model.AddressJapanParams>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.AddressJapanParams>;
					public static $stable: number;
					public component2(): string;
					public component5(): string;
					public component7(): string;
					public copy(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string): com.stripe.android.model.AddressJapanParams;
					public describeContents(): number;
					public getLine1(): string;
					public component3(): string;
					public getCountry(): string;
					public getState(): string;
					public getCity(): string;
					public toParamMap(): java.util.Map<string, any>;
					public getTown(): string;
					public equals(param0: any): boolean;
					public toString(): string;
					public component1(): string;
					public getLine2(): string;
					public constructor();
					public component6(): string;
					public component4(): string;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public getPostalCode(): string;
					public hashCode(): number;
					public constructor(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string);
				}
				export module AddressJapanParams {
					export class Builder extends com.stripe.android.ObjectBuilder<com.stripe.android.model.AddressJapanParams> {
						public static class: java.lang.Class<com.stripe.android.model.AddressJapanParams.Builder>;
						public static $stable: number;
						public setLine2(param0: string): com.stripe.android.model.AddressJapanParams.Builder;
						public setCity(param0: string): com.stripe.android.model.AddressJapanParams.Builder;
						public constructor();
						public setState(param0: string): com.stripe.android.model.AddressJapanParams.Builder;
						public setPostalCode(param0: string): com.stripe.android.model.AddressJapanParams.Builder;
						public setCountry(param0: string): com.stripe.android.model.AddressJapanParams.Builder;
						public build(): com.stripe.android.model.AddressJapanParams;
						public setLine1(param0: string): com.stripe.android.model.AddressJapanParams.Builder;
						public setTown(param0: string): com.stripe.android.model.AddressJapanParams.Builder;
						public build(): any;
					}
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.model.AddressJapanParams.Companion>;
					}
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.AddressJapanParams> {
						public static class: java.lang.Class<com.stripe.android.model.AddressJapanParams.Creator>;
						public constructor();
						public newArray(param0: number): androidNative.Array<com.stripe.android.model.AddressJapanParams>;
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.AddressJapanParams;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class AlipayAuthResult extends com.stripe.android.core.model.StripeModel {
					public static class: java.lang.Class<com.stripe.android.model.AlipayAuthResult>;
					public static Companion: com.stripe.android.model.AlipayAuthResult.Companion;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.AlipayAuthResult>;
					public static RESULT_CODE_SUCCESS: string;
					public static RESULT_CODE_CANCELLED: string;
					public static RESULT_CODE_FAILED: string;
					public equals(param0: any): boolean;
					public toString(): string;
					public component1(): number;
					public describeContents(): number;
					public getOutcome(): number;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public copy(param0: number): com.stripe.android.model.AlipayAuthResult;
					public hashCode(): number;
					public constructor(param0: number);
				}
				export module AlipayAuthResult {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.model.AlipayAuthResult.Companion>;
					}
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.AlipayAuthResult> {
						public static class: java.lang.Class<com.stripe.android.model.AlipayAuthResult.Creator>;
						public constructor();
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.AlipayAuthResult;
						public newArray(param0: number): androidNative.Array<com.stripe.android.model.AlipayAuthResult>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class BankAccount implements com.stripe.android.core.model.StripeModel, com.stripe.android.model.StripePaymentSource {
					public static class: java.lang.Class<com.stripe.android.model.BankAccount>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.BankAccount>;
					public static $stable: number;
					public getId(): string;
					public getFingerprint(): string;
					public component2(): string;
					public component5(): string;
					public getCountryCode(): string;
					public getCurrency(): string;
					public getRoutingNumber(): string;
					public toString(): string;
					public copy(param0: string, param1: string, param2: com.stripe.android.model.BankAccount.Type, param3: string, param4: string, param5: string, param6: string, param7: string, param8: string, param9: com.stripe.android.model.BankAccount.Status): com.stripe.android.model.BankAccount;
					public component8(): string;
					public constructor();
					public component4(): string;
					public hashCode(): number;
					public component10(): com.stripe.android.model.BankAccount.Status;
					public component7(): string;
					public describeContents(): number;
					public getBankName(): string;
					public constructor(param0: string, param1: string, param2: com.stripe.android.model.BankAccount.Type, param3: string, param4: string, param5: string, param6: string, param7: string, param8: string, param9: com.stripe.android.model.BankAccount.Status);
					public getAccountHolderType(): com.stripe.android.model.BankAccount.Type;
					public getLast4(): string;
					public equals(param0: any): boolean;
					public component1(): string;
					public component6(): string;
					public component9(): string;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public component3(): com.stripe.android.model.BankAccount.Type;
					public getAccountHolderName(): string;
					public getStatus(): com.stripe.android.model.BankAccount.Status;
				}
				export module BankAccount {
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.BankAccount> {
						public static class: java.lang.Class<com.stripe.android.model.BankAccount.Creator>;
						public constructor();
						public newArray(param0: number): androidNative.Array<com.stripe.android.model.BankAccount>;
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.BankAccount;
					}
					export class Status {
						public static class: java.lang.Class<com.stripe.android.model.BankAccount.Status>;
						public static Companion: com.stripe.android.model.BankAccount.Status.Companion;
						public static New: com.stripe.android.model.BankAccount.Status;
						public static Validated: com.stripe.android.model.BankAccount.Status;
						public static Verified: com.stripe.android.model.BankAccount.Status;
						public static VerificationFailed: com.stripe.android.model.BankAccount.Status;
						public static Errored: com.stripe.android.model.BankAccount.Status;
						public static values(): androidNative.Array<com.stripe.android.model.BankAccount.Status>;
						public toString(): string;
						public static valueOf(param0: string): com.stripe.android.model.BankAccount.Status;
						public getCode$payments_core_release(): string;
					}
					export module Status {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.BankAccount.Status.Companion>;
							public fromCode$payments_core_release(param0: string): com.stripe.android.model.BankAccount.Status;
						}
					}
					export class Type {
						public static class: java.lang.Class<com.stripe.android.model.BankAccount.Type>;
						public static Companion: com.stripe.android.model.BankAccount.Type.Companion;
						public static Company: com.stripe.android.model.BankAccount.Type;
						public static Individual: com.stripe.android.model.BankAccount.Type;
						public static valueOf(param0: string): com.stripe.android.model.BankAccount.Type;
						public static values(): androidNative.Array<com.stripe.android.model.BankAccount.Type>;
						public toString(): string;
						public getCode$payments_core_release(): string;
					}
					export module Type {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.BankAccount.Type.Companion>;
							public fromCode$payments_core_release(param0: string): com.stripe.android.model.BankAccount.Type;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class BankAccountTokenParams extends com.stripe.android.model.TokenParams {
					public static class: java.lang.Class<com.stripe.android.model.BankAccountTokenParams>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.BankAccountTokenParams>;
					public static $stable: number;
					public constructor(param0: com.stripe.android.model.Token.Type, param1: java.util.Set<string>);
					public getTypeDataParams(): java.util.Map<string, any>;
					public describeContents(): number;
					public toParamMap(): java.util.Map<string, any>;
					public equals(param0: any): boolean;
					public toString(): string;
					public constructor(param0: string, param1: string, param2: string, param3: com.stripe.android.model.BankAccountTokenParams.Type);
					public constructor(param0: string, param1: string, param2: string, param3: com.stripe.android.model.BankAccountTokenParams.Type, param4: string, param5: string);
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public copy(param0: string, param1: string, param2: string, param3: com.stripe.android.model.BankAccountTokenParams.Type, param4: string, param5: string): com.stripe.android.model.BankAccountTokenParams;
					public hashCode(): number;
					public constructor(param0: string, param1: string, param2: string);
					public constructor(param0: string, param1: string, param2: string, param3: com.stripe.android.model.BankAccountTokenParams.Type, param4: string);
				}
				export module BankAccountTokenParams {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.model.BankAccountTokenParams.Companion>;
					}
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.BankAccountTokenParams> {
						public static class: java.lang.Class<com.stripe.android.model.BankAccountTokenParams.Creator>;
						public constructor();
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.BankAccountTokenParams;
						public newArray(param0: number): androidNative.Array<com.stripe.android.model.BankAccountTokenParams>;
					}
					export class Type {
						public static class: java.lang.Class<com.stripe.android.model.BankAccountTokenParams.Type>;
						public static Companion: com.stripe.android.model.BankAccountTokenParams.Type.Companion;
						public static Individual: com.stripe.android.model.BankAccountTokenParams.Type;
						public static Company: com.stripe.android.model.BankAccountTokenParams.Type;
						public static valueOf(param0: string): com.stripe.android.model.BankAccountTokenParams.Type;
						public static values(): androidNative.Array<com.stripe.android.model.BankAccountTokenParams.Type>;
						public getCode$payments_core_release(): string;
					}
					export module Type {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.BankAccountTokenParams.Type.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class BankAccountTokenParamsFixtures {
					public static class: java.lang.Class<com.stripe.android.model.BankAccountTokenParamsFixtures>;
					public static INSTANCE: com.stripe.android.model.BankAccountTokenParamsFixtures;
					public static DEFAULT: com.stripe.android.model.BankAccountTokenParams;
					public static $stable: number;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class BankStatuses extends com.stripe.android.core.model.StripeModel {
					public static class: java.lang.Class<com.stripe.android.model.BankStatuses>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.BankStatuses>;
					public constructor(param0: java.util.Map<string, java.lang.Boolean>);
					public equals(param0: any): boolean;
					public toString(): string;
					public copy(param0: java.util.Map<string, java.lang.Boolean>): com.stripe.android.model.BankStatuses;
					public constructor();
					public describeContents(): number;
					public size$payments_core_release(): number;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public hashCode(): number;
				}
				export module BankStatuses {
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.BankStatuses> {
						public static class: java.lang.Class<com.stripe.android.model.BankStatuses.Creator>;
						public newArray(param0: number): androidNative.Array<com.stripe.android.model.BankStatuses>;
						public constructor();
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.BankStatuses;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class BinRange extends com.stripe.android.core.model.StripeModel {
					public static class: java.lang.Class<com.stripe.android.model.BinRange>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.BinRange>;
					public constructor(param0: string, param1: string);
					public equals(param0: any): boolean;
					public copy(param0: string, param1: string): com.stripe.android.model.BinRange;
					public getLow(): string;
					public toString(): string;
					public component1(): string;
					public component2(): string;
					public describeContents(): number;
					public getHigh(): string;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public hashCode(): number;
					public matches$payments_core_release(param0: com.stripe.android.cards.CardNumber.Unvalidated): boolean;
				}
				export module BinRange {
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.BinRange> {
						public static class: java.lang.Class<com.stripe.android.model.BinRange.Creator>;
						public constructor();
						public newArray(param0: number): androidNative.Array<com.stripe.android.model.BinRange>;
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.BinRange;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class Card implements com.stripe.android.core.model.StripeModel, com.stripe.android.model.StripePaymentSource {
					public static class: java.lang.Class<com.stripe.android.model.Card>;
					public static Companion: com.stripe.android.model.Card.Companion;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.Card>;
					public static $stable: number;
					public getId(): string;
					public getFingerprint(): string;
					public component5(): string;
					public getAddressCity(): string;
					public component14(): com.stripe.android.model.CardFunding;
					public getFunding(): com.stripe.android.model.CardFunding;
					public getCvcCheck(): string;
					public component13(): com.stripe.android.model.CardBrand;
					public component8(): string;
					public getAddressLine2(): string;
					public component12(): string;
					public getAddressState(): string;
					public getExpMonth(): java.lang.Integer;
					public getAddressZipCheck(): string;
					public component3(): string;
					public component15(): string;
					public copy(param0: java.lang.Integer, param1: java.lang.Integer, param2: string, param3: string, param4: string, param5: string, param6: string, param7: string, param8: string, param9: string, param10: string, param11: string, param12: com.stripe.android.model.CardBrand, param13: com.stripe.android.model.CardFunding, param14: string, param15: string, param16: string, param17: string, param18: string, param19: string, param20: com.stripe.android.model.TokenizationMethod): com.stripe.android.model.Card;
					public component9(): string;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public constructor(param0: java.lang.Integer, param1: java.lang.Integer, param2: string, param3: string, param4: string, param5: string, param6: string, param7: string, param8: string, param9: string, param10: string, param11: string, param12: com.stripe.android.model.CardBrand, param13: com.stripe.android.model.CardFunding, param14: string, param15: string, param16: string, param17: string, param18: string, param19: string, param20: com.stripe.android.model.TokenizationMethod);
					public component16(): string;
					public getCurrency(): string;
					public component19(): string;
					public component1(): java.lang.Integer;
					public getAddressCountry(): string;
					public toString(): string;
					public getExpYear(): java.lang.Integer;
					public getBrand(): com.stripe.android.model.CardBrand;
					public component4(): string;
					public component2(): java.lang.Integer;
					public hashCode(): number;
					public getCustomerId(): string;
					public component21(): com.stripe.android.model.TokenizationMethod;
					public getAddressLine1Check(): string;
					public component11(): string;
					public getAddressLine1(): string;
					public getTokenizationMethod(): com.stripe.android.model.TokenizationMethod;
					public component7(): string;
					public describeContents(): number;
					public getCountry(): string;
					public getLast4(): string;
					public component17(): string;
					public component10(): string;
					public equals(param0: any): boolean;
					public getAddressZip(): string;
					public getName(): string;
					public component6(): string;
					public component18(): string;
					public component20(): string;
				}
				export module Card {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.model.Card.Companion>;
					}
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.Card> {
						public static class: java.lang.Class<com.stripe.android.model.Card.Creator>;
						public constructor();
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.Card;
						public newArray(param0: number): androidNative.Array<com.stripe.android.model.Card>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class CardBrand {
					public static class: java.lang.Class<com.stripe.android.model.CardBrand>;
					public static Companion: com.stripe.android.model.CardBrand.Companion;
					public static AmericanExpress: com.stripe.android.model.CardBrand;
					public static Discover: com.stripe.android.model.CardBrand;
					public static JCB: com.stripe.android.model.CardBrand;
					public static DinersClub: com.stripe.android.model.CardBrand;
					public static Visa: com.stripe.android.model.CardBrand;
					public static MasterCard: com.stripe.android.model.CardBrand;
					public static UnionPay: com.stripe.android.model.CardBrand;
					public static Unknown: com.stripe.android.model.CardBrand;
					public getDisplayName(): string;
					public getIcon(): number;
					public getErrorIcon(): number;
					public static values(): androidNative.Array<com.stripe.android.model.CardBrand>;
					public static valueOf(param0: string): com.stripe.android.model.CardBrand;
					public isValidCardNumberLength(param0: string): boolean;
					public getCvcLength(): java.util.Set<java.lang.Integer>;
					public getMaxCvcLength(): number;
					public getCode(): string;
					public getMaxLengthForCardNumber$payments_core_release(param0: string): number;
					public isMaxCvc(param0: string): boolean;
					public getCvcIcon(): number;
					public isValidCvc(param0: string): boolean;
				}
				export module CardBrand {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.model.CardBrand.Companion>;
						public getCardBrands$payments_core_release(param0: string): java.util.List<com.stripe.android.model.CardBrand>;
						public fromCardNumber$payments_core_release(param0: string): com.stripe.android.model.CardBrand;
						public fromCode(param0: string): com.stripe.android.model.CardBrand;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class CardFunding {
					public static class: java.lang.Class<com.stripe.android.model.CardFunding>;
					public static Companion: com.stripe.android.model.CardFunding.Companion;
					public static Credit: com.stripe.android.model.CardFunding;
					public static Debit: com.stripe.android.model.CardFunding;
					public static Prepaid: com.stripe.android.model.CardFunding;
					public static Unknown: com.stripe.android.model.CardFunding;
					public static values(): androidNative.Array<com.stripe.android.model.CardFunding>;
					public getCode$payments_core_release(): string;
					public static valueOf(param0: string): com.stripe.android.model.CardFunding;
				}
				export module CardFunding {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.model.CardFunding.Companion>;
						public fromCode$payments_core_release(param0: string): com.stripe.android.model.CardFunding;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class CardMetadata extends com.stripe.android.core.model.StripeModel {
					public static class: java.lang.Class<com.stripe.android.model.CardMetadata>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.CardMetadata>;
					public getBin(): com.stripe.android.cards.Bin;
					public component2(): java.util.List<com.stripe.android.model.AccountRange>;
					public equals(param0: any): boolean;
					public toString(): string;
					public copy(param0: com.stripe.android.cards.Bin, param1: java.util.List<com.stripe.android.model.AccountRange>): com.stripe.android.model.CardMetadata;
					public describeContents(): number;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public getAccountRanges(): java.util.List<com.stripe.android.model.AccountRange>;
					public hashCode(): number;
					public constructor(param0: com.stripe.android.cards.Bin, param1: java.util.List<com.stripe.android.model.AccountRange>);
					public component1(): com.stripe.android.cards.Bin;
				}
				export module CardMetadata {
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.CardMetadata> {
						public static class: java.lang.Class<com.stripe.android.model.CardMetadata.Creator>;
						public constructor();
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.CardMetadata;
						public newArray(param0: number): androidNative.Array<com.stripe.android.model.CardMetadata>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class CardParams extends com.stripe.android.model.TokenParams {
					public static class: java.lang.Class<com.stripe.android.model.CardParams>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.CardParams>;
					public static $stable: number;
					public constructor(param0: com.stripe.android.model.Token.Type, param1: java.util.Set<string>);
					public component6$payments_core_release(): string;
					public copy(param0: com.stripe.android.model.CardBrand, param1: java.util.Set<string>, param2: string, param3: number, param4: number, param5: string, param6: string, param7: com.stripe.android.model.Address, param8: string, param9: java.util.Map<string, string>): com.stripe.android.model.CardParams;
					public constructor(param0: string, param1: number, param2: number, param3: string, param4: string, param5: com.stripe.android.model.Address, param6: string, param7: java.util.Map<string, string>);
					public getCurrency(): string;
					public getTypeDataParams(): java.util.Map<string, any>;
					public component1(): com.stripe.android.model.CardBrand;
					public setExpMonth$payments_core_release(param0: number): void;
					public component3$payments_core_release(): string;
					public constructor(param0: string, param1: number, param2: number, param3: string, param4: string);
					public toString(): string;
					public component8(): com.stripe.android.model.Address;
					public getExpYear$payments_core_release(): number;
					public getBrand(): com.stripe.android.model.CardBrand;
					public setExpYear$payments_core_release(param0: number): void;
					public hashCode(): number;
					public constructor(param0: string, param1: number, param2: number, param3: string, param4: string, param5: com.stripe.android.model.Address);
					public constructor(param0: string, param1: number, param2: number);
					public setAddress(param0: com.stripe.android.model.Address): void;
					public component4$payments_core_release(): number;
					public component5$payments_core_release(): number;
					public setCvc$payments_core_release(param0: string): void;
					public setNumber$payments_core_release(param0: string): void;
					public component7(): string;
					public describeContents(): number;
					public component10(): java.util.Map<string, string>;
					public setCurrency(param0: string): void;
					public toParamMap(): java.util.Map<string, any>;
					public setName(param0: string): void;
					public getLast4(): string;
					public equals(param0: any): boolean;
					public constructor(param0: string, param1: number, param2: number, param3: string);
					public getCvc$payments_core_release(): string;
					public getExpMonth$payments_core_release(): number;
					public getName(): string;
					public getMetadata(): java.util.Map<string, string>;
					public constructor(param0: com.stripe.android.model.CardBrand, param1: java.util.Set<string>, param2: string, param3: number, param4: number, param5: string, param6: string, param7: com.stripe.android.model.Address, param8: string, param9: java.util.Map<string, string>);
					public component9(): string;
					public constructor(param0: string, param1: number, param2: number, param3: string, param4: string, param5: com.stripe.android.model.Address, param6: string);
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public setMetadata(param0: java.util.Map<string, string>): void;
					public getAddress(): com.stripe.android.model.Address;
					public getNumber$payments_core_release(): string;
				}
				export module CardParams {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.model.CardParams.Companion>;
					}
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.CardParams> {
						public static class: java.lang.Class<com.stripe.android.model.CardParams.Creator>;
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.CardParams;
						public constructor();
						public newArray(param0: number): androidNative.Array<com.stripe.android.model.CardParams>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class ConfirmPaymentIntentParams extends com.stripe.android.model.ConfirmStripeIntentParams {
					public static class: java.lang.Class<com.stripe.android.model.ConfirmPaymentIntentParams>;
					public static Companion: com.stripe.android.model.ConfirmPaymentIntentParams.Companion;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.ConfirmPaymentIntentParams>;
					public static $stable: number;
					public static PARAM_SOURCE_DATA: string;
					public static create(param0: string, param1: com.stripe.android.model.ConfirmPaymentIntentParams.Shipping): com.stripe.android.model.ConfirmPaymentIntentParams;
					public static createWithSourceId(param0: string, param1: string, param2: string): com.stripe.android.model.ConfirmPaymentIntentParams;
					public component13(): com.stripe.android.model.ConfirmPaymentIntentParams.Shipping;
					public static createWithPaymentMethodCreateParams(param0: com.stripe.android.model.PaymentMethodCreateParams, param1: string, param2: java.lang.Boolean, param3: string, param4: com.stripe.android.model.MandateDataParams, param5: com.stripe.android.model.ConfirmPaymentIntentParams.SetupFutureUsage): com.stripe.android.model.ConfirmPaymentIntentParams;
					public component2(): string;
					public component5(): string;
					public static createWithPaymentMethodId(param0: string, param1: string, param2: java.lang.Boolean, param3: com.stripe.android.model.PaymentMethodOptionsParams): com.stripe.android.model.ConfirmPaymentIntentParams;
					public setReceiptEmail(param0: string): void;
					public component12(): com.stripe.android.model.ConfirmPaymentIntentParams.SetupFutureUsage;
					public static createWithPaymentMethodId(param0: string, param1: string, param2: java.lang.Boolean, param3: com.stripe.android.model.PaymentMethodOptionsParams, param4: string, param5: com.stripe.android.model.MandateDataParams, param6: com.stripe.android.model.ConfirmPaymentIntentParams.SetupFutureUsage): com.stripe.android.model.ConfirmPaymentIntentParams;
					public getPaymentMethodOptions(): com.stripe.android.model.PaymentMethodOptionsParams;
					public setMandateData(param0: com.stripe.android.model.MandateDataParams): void;
					public getMandateId(): string;
					public static createWithSourceParams(param0: com.stripe.android.model.SourceParams, param1: string, param2: string, param3: java.lang.Boolean): com.stripe.android.model.ConfirmPaymentIntentParams;
					public static createWithSourceParams(param0: com.stripe.android.model.SourceParams, param1: string, param2: string): com.stripe.android.model.ConfirmPaymentIntentParams;
					public component11(): com.stripe.android.model.MandateDataParams;
					public static createWithSourceId(param0: string, param1: string, param2: string, param3: java.lang.Boolean, param4: com.stripe.android.model.ConfirmPaymentIntentParams.Shipping): com.stripe.android.model.ConfirmPaymentIntentParams;
					public getPaymentMethodId(): string;
					public component7(): java.lang.Boolean;
					public static create(param0: string, param1: com.stripe.android.model.ConfirmPaymentIntentParams.Shipping, param2: com.stripe.android.model.ConfirmPaymentIntentParams.SetupFutureUsage): com.stripe.android.model.ConfirmPaymentIntentParams;
					public getReceiptEmail(): string;
					public static createWithPaymentMethodCreateParams(param0: com.stripe.android.model.PaymentMethodCreateParams, param1: string, param2: java.lang.Boolean, param3: string): com.stripe.android.model.ConfirmPaymentIntentParams;
					public shouldSavePaymentMethod(): boolean;
					public component3(): com.stripe.android.model.SourceParams;
					public static createWithPaymentMethodId(param0: string, param1: string, param2: java.lang.Boolean): com.stripe.android.model.ConfirmPaymentIntentParams;
					public getSetupFutureUsage(): com.stripe.android.model.ConfirmPaymentIntentParams.SetupFutureUsage;
					public getReturnUrl(): string;
					public setMandateId(param0: string): void;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public shouldUseStripeSdk(): boolean;
					public static createWithPaymentMethodId(param0: string, param1: string, param2: java.lang.Boolean, param3: com.stripe.android.model.PaymentMethodOptionsParams, param4: string, param5: com.stripe.android.model.MandateDataParams, param6: com.stripe.android.model.ConfirmPaymentIntentParams.SetupFutureUsage, param7: com.stripe.android.model.ConfirmPaymentIntentParams.Shipping): com.stripe.android.model.ConfirmPaymentIntentParams;
					public component14(): string;
					public static createWithSourceId(param0: string, param1: string, param2: string, param3: java.lang.Boolean): com.stripe.android.model.ConfirmPaymentIntentParams;
					public static createWithPaymentMethodId(param0: string, param1: string, param2: java.lang.Boolean, param3: com.stripe.android.model.PaymentMethodOptionsParams, param4: string): com.stripe.android.model.ConfirmPaymentIntentParams;
					public getSavePaymentMethod(): java.lang.Boolean;
					public component9(): com.stripe.android.model.PaymentMethodOptionsParams;
					public static createWithPaymentMethodId(param0: string, param1: string, param2: java.lang.Boolean, param3: com.stripe.android.model.PaymentMethodOptionsParams, param4: string, param5: com.stripe.android.model.MandateDataParams): com.stripe.android.model.ConfirmPaymentIntentParams;
					public getMandateData(): com.stripe.android.model.MandateDataParams;
					public setSetupFutureUsage(param0: com.stripe.android.model.ConfirmPaymentIntentParams.SetupFutureUsage): void;
					public component1(): com.stripe.android.model.PaymentMethodCreateParams;
					public getSourceId(): string;
					public withShouldUseStripeSdk(param0: boolean): com.stripe.android.model.ConfirmPaymentIntentParams;
					public static createWithPaymentMethodCreateParams(param0: com.stripe.android.model.PaymentMethodCreateParams, param1: string): com.stripe.android.model.ConfirmPaymentIntentParams;
					public getClientSecret(): string;
					public static createWithPaymentMethodCreateParams(param0: com.stripe.android.model.PaymentMethodCreateParams, param1: string, param2: java.lang.Boolean): com.stripe.android.model.ConfirmPaymentIntentParams;
					public toString(): string;
					public static createWithSourceParams(param0: com.stripe.android.model.SourceParams, param1: string, param2: string, param3: java.lang.Boolean, param4: com.stripe.android.model.ConfirmPaymentIntentParams.Shipping): com.stripe.android.model.ConfirmPaymentIntentParams;
					public static createAlipay(param0: string): com.stripe.android.model.ConfirmPaymentIntentParams;
					public getShipping(): com.stripe.android.model.ConfirmPaymentIntentParams.Shipping;
					public component4(): string;
					public hashCode(): number;
					public static createWithPaymentMethodCreateParams(param0: com.stripe.android.model.PaymentMethodCreateParams, param1: string, param2: java.lang.Boolean, param3: string, param4: com.stripe.android.model.MandateDataParams): com.stripe.android.model.ConfirmPaymentIntentParams;
					public setReturnUrl(param0: string): void;
					public copy(param0: com.stripe.android.model.PaymentMethodCreateParams, param1: string, param2: com.stripe.android.model.SourceParams, param3: string, param4: string, param5: string, param6: java.lang.Boolean, param7: boolean, param8: com.stripe.android.model.PaymentMethodOptionsParams, param9: string, param10: com.stripe.android.model.MandateDataParams, param11: com.stripe.android.model.ConfirmPaymentIntentParams.SetupFutureUsage, param12: com.stripe.android.model.ConfirmPaymentIntentParams.Shipping, param13: string): com.stripe.android.model.ConfirmPaymentIntentParams;
					public getSourceParams(): com.stripe.android.model.SourceParams;
					public setPaymentMethodOptions(param0: com.stripe.android.model.PaymentMethodOptionsParams): void;
					public describeContents(): number;
					public setShipping(param0: com.stripe.android.model.ConfirmPaymentIntentParams.Shipping): void;
					public setSavePaymentMethod(param0: java.lang.Boolean): void;
					public toParamMap(): java.util.Map<string, any>;
					public constructor(param0: com.stripe.android.model.PaymentMethodCreateParams, param1: string, param2: com.stripe.android.model.SourceParams, param3: string, param4: string, param5: string, param6: java.lang.Boolean, param7: boolean, param8: com.stripe.android.model.PaymentMethodOptionsParams, param9: string, param10: com.stripe.android.model.MandateDataParams, param11: com.stripe.android.model.ConfirmPaymentIntentParams.SetupFutureUsage, param12: com.stripe.android.model.ConfirmPaymentIntentParams.Shipping, param13: string);
					public static create(param0: string): com.stripe.android.model.ConfirmPaymentIntentParams;
					public component10(): string;
					public equals(param0: any): boolean;
					public static createWithPaymentMethodId(param0: string, param1: string): com.stripe.android.model.ConfirmPaymentIntentParams;
					public getPaymentMethodCreateParams(): com.stripe.android.model.PaymentMethodCreateParams;
					public component6(): string;
					public static createWithPaymentMethodCreateParams(param0: com.stripe.android.model.PaymentMethodCreateParams, param1: string, param2: java.lang.Boolean, param3: string, param4: com.stripe.android.model.MandateDataParams, param5: com.stripe.android.model.ConfirmPaymentIntentParams.SetupFutureUsage, param6: com.stripe.android.model.ConfirmPaymentIntentParams.Shipping): com.stripe.android.model.ConfirmPaymentIntentParams;
					public withShouldUseStripeSdk(param0: boolean): com.stripe.android.model.ConfirmStripeIntentParams;
				}
				export module ConfirmPaymentIntentParams {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.model.ConfirmPaymentIntentParams.Companion>;
						public createWithPaymentMethodCreateParams(param0: com.stripe.android.model.PaymentMethodCreateParams, param1: string): com.stripe.android.model.ConfirmPaymentIntentParams;
						public createWithSourceId(param0: string, param1: string, param2: string, param3: java.lang.Boolean, param4: com.stripe.android.model.ConfirmPaymentIntentParams.Shipping): com.stripe.android.model.ConfirmPaymentIntentParams;
						public createWithPaymentMethodCreateParams(param0: com.stripe.android.model.PaymentMethodCreateParams, param1: string, param2: java.lang.Boolean, param3: string, param4: com.stripe.android.model.MandateDataParams, param5: com.stripe.android.model.ConfirmPaymentIntentParams.SetupFutureUsage): com.stripe.android.model.ConfirmPaymentIntentParams;
						public createWithSourceParams(param0: com.stripe.android.model.SourceParams, param1: string, param2: string, param3: java.lang.Boolean): com.stripe.android.model.ConfirmPaymentIntentParams;
						public createWithPaymentMethodId(param0: string, param1: string, param2: java.lang.Boolean, param3: com.stripe.android.model.PaymentMethodOptionsParams): com.stripe.android.model.ConfirmPaymentIntentParams;
						public createWithPaymentMethodId(param0: string, param1: string, param2: java.lang.Boolean, param3: com.stripe.android.model.PaymentMethodOptionsParams, param4: string, param5: com.stripe.android.model.MandateDataParams, param6: com.stripe.android.model.ConfirmPaymentIntentParams.SetupFutureUsage, param7: com.stripe.android.model.ConfirmPaymentIntentParams.Shipping): com.stripe.android.model.ConfirmPaymentIntentParams;
						public createWithPaymentMethodCreateParams(param0: com.stripe.android.model.PaymentMethodCreateParams, param1: string, param2: java.lang.Boolean, param3: string, param4: com.stripe.android.model.MandateDataParams, param5: com.stripe.android.model.ConfirmPaymentIntentParams.SetupFutureUsage, param6: com.stripe.android.model.ConfirmPaymentIntentParams.Shipping): com.stripe.android.model.ConfirmPaymentIntentParams;
						public createWithSourceParams(param0: com.stripe.android.model.SourceParams, param1: string, param2: string): com.stripe.android.model.ConfirmPaymentIntentParams;
						public create(param0: string, param1: com.stripe.android.model.ConfirmPaymentIntentParams.Shipping, param2: com.stripe.android.model.ConfirmPaymentIntentParams.SetupFutureUsage): com.stripe.android.model.ConfirmPaymentIntentParams;
						public create(param0: string): com.stripe.android.model.ConfirmPaymentIntentParams;
						public createWithPaymentMethodId(param0: string, param1: string, param2: java.lang.Boolean): com.stripe.android.model.ConfirmPaymentIntentParams;
						public createWithPaymentMethodCreateParams(param0: com.stripe.android.model.PaymentMethodCreateParams, param1: string, param2: java.lang.Boolean): com.stripe.android.model.ConfirmPaymentIntentParams;
						public createWithPaymentMethodId(param0: string, param1: string): com.stripe.android.model.ConfirmPaymentIntentParams;
						public createWithPaymentMethodId(param0: string, param1: string, param2: java.lang.Boolean, param3: com.stripe.android.model.PaymentMethodOptionsParams, param4: string, param5: com.stripe.android.model.MandateDataParams): com.stripe.android.model.ConfirmPaymentIntentParams;
						public createAlipay(param0: string): com.stripe.android.model.ConfirmPaymentIntentParams;
						public createWithPaymentMethodId(param0: string, param1: string, param2: java.lang.Boolean, param3: com.stripe.android.model.PaymentMethodOptionsParams, param4: string, param5: com.stripe.android.model.MandateDataParams, param6: com.stripe.android.model.ConfirmPaymentIntentParams.SetupFutureUsage): com.stripe.android.model.ConfirmPaymentIntentParams;
						public createWithSourceId(param0: string, param1: string, param2: string, param3: java.lang.Boolean): com.stripe.android.model.ConfirmPaymentIntentParams;
						public createWithSourceId(param0: string, param1: string, param2: string): com.stripe.android.model.ConfirmPaymentIntentParams;
						public createWithPaymentMethodCreateParams(param0: com.stripe.android.model.PaymentMethodCreateParams, param1: string, param2: java.lang.Boolean, param3: string): com.stripe.android.model.ConfirmPaymentIntentParams;
						public create(param0: string, param1: com.stripe.android.model.ConfirmPaymentIntentParams.Shipping): com.stripe.android.model.ConfirmPaymentIntentParams;
						public createWithSourceParams(param0: com.stripe.android.model.SourceParams, param1: string, param2: string, param3: java.lang.Boolean, param4: com.stripe.android.model.ConfirmPaymentIntentParams.Shipping): com.stripe.android.model.ConfirmPaymentIntentParams;
						public createWithPaymentMethodCreateParams(param0: com.stripe.android.model.PaymentMethodCreateParams, param1: string, param2: java.lang.Boolean, param3: string, param4: com.stripe.android.model.MandateDataParams): com.stripe.android.model.ConfirmPaymentIntentParams;
						public createWithPaymentMethodId(param0: string, param1: string, param2: java.lang.Boolean, param3: com.stripe.android.model.PaymentMethodOptionsParams, param4: string): com.stripe.android.model.ConfirmPaymentIntentParams;
					}
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.ConfirmPaymentIntentParams> {
						public static class: java.lang.Class<com.stripe.android.model.ConfirmPaymentIntentParams.Creator>;
						public newArray(param0: number): androidNative.Array<com.stripe.android.model.ConfirmPaymentIntentParams>;
						public constructor();
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.ConfirmPaymentIntentParams;
					}
					export class SetupFutureUsage {
						public static class: java.lang.Class<com.stripe.android.model.ConfirmPaymentIntentParams.SetupFutureUsage>;
						public static OnSession: com.stripe.android.model.ConfirmPaymentIntentParams.SetupFutureUsage;
						public static OffSession: com.stripe.android.model.ConfirmPaymentIntentParams.SetupFutureUsage;
						public static Blank: com.stripe.android.model.ConfirmPaymentIntentParams.SetupFutureUsage;
						public static valueOf(param0: string): com.stripe.android.model.ConfirmPaymentIntentParams.SetupFutureUsage;
						public static values(): androidNative.Array<com.stripe.android.model.ConfirmPaymentIntentParams.SetupFutureUsage>;
						public getCode$payments_core_release(): string;
					}
					export class Shipping extends com.stripe.android.model.StripeParamsModel {
						public static class: java.lang.Class<com.stripe.android.model.ConfirmPaymentIntentParams.Shipping>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.ConfirmPaymentIntentParams.Shipping>;
						public static $stable: number;
						public describeContents(): number;
						public getTrackingNumber$payments_core_release(): string;
						public component1$payments_core_release(): com.stripe.android.model.Address;
						public toParamMap(): java.util.Map<string, any>;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getPhone$payments_core_release(): string;
						public toString(): string;
						public component5$payments_core_release(): string;
						public getAddress$payments_core_release(): com.stripe.android.model.Address;
						public component4$payments_core_release(): string;
						public getCarrier$payments_core_release(): string;
						public component3$payments_core_release(): string;
						public constructor(param0: com.stripe.android.model.Address, param1: string);
						public constructor(param0: com.stripe.android.model.Address, param1: string, param2: string, param3: string, param4: string);
						public component2$payments_core_release(): string;
						public constructor(param0: com.stripe.android.model.Address, param1: string, param2: string, param3: string);
						public getName$payments_core_release(): string;
						public constructor(param0: com.stripe.android.model.Address, param1: string, param2: string);
						public copy(param0: com.stripe.android.model.Address, param1: string, param2: string, param3: string, param4: string): com.stripe.android.model.ConfirmPaymentIntentParams.Shipping;
					}
					export module Shipping {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.ConfirmPaymentIntentParams.Shipping.Companion>;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.ConfirmPaymentIntentParams.Shipping> {
							public static class: java.lang.Class<com.stripe.android.model.ConfirmPaymentIntentParams.Shipping.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.ConfirmPaymentIntentParams.Shipping>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.ConfirmPaymentIntentParams.Shipping;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class ConfirmSetupIntentParams extends com.stripe.android.model.ConfirmStripeIntentParams {
					public static class: java.lang.Class<com.stripe.android.model.ConfirmSetupIntentParams>;
					public static Companion: com.stripe.android.model.ConfirmSetupIntentParams.Companion;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.ConfirmSetupIntentParams>;
					public static $stable: number;
					public component7(): com.stripe.android.model.MandateDataParams;
					public getMandateData(): com.stripe.android.model.MandateDataParams;
					public component2$payments_core_release(): string;
					public copy(param0: string, param1: string, param2: com.stripe.android.model.PaymentMethodCreateParams, param3: string, param4: boolean, param5: string, param6: com.stripe.android.model.MandateDataParams): com.stripe.android.model.ConfirmSetupIntentParams;
					public static create(param0: com.stripe.android.model.PaymentMethodCreateParams, param1: string, param2: com.stripe.android.model.MandateDataParams, param3: string): com.stripe.android.model.ConfirmSetupIntentParams;
					public getClientSecret(): string;
					public setMandateData(param0: com.stripe.android.model.MandateDataParams): void;
					public getMandateId(): string;
					public component3$payments_core_release(): com.stripe.android.model.PaymentMethodCreateParams;
					public toString(): string;
					public withShouldUseStripeSdk(param0: boolean): com.stripe.android.model.ConfirmSetupIntentParams;
					public component4(): string;
					public hashCode(): number;
					public static create(param0: string, param1: string, param2: com.stripe.android.model.MandateDataParams, param3: string): com.stripe.android.model.ConfirmSetupIntentParams;
					public constructor(param0: string, param1: string, param2: com.stripe.android.model.PaymentMethodCreateParams, param3: string, param4: boolean, param5: string, param6: com.stripe.android.model.MandateDataParams);
					public setReturnUrl(param0: string): void;
					public static createWithoutPaymentMethod(param0: string): com.stripe.android.model.ConfirmSetupIntentParams;
					public static create(param0: com.stripe.android.model.PaymentMethodCreateParams, param1: string): com.stripe.android.model.ConfirmSetupIntentParams;
					public static create(param0: com.stripe.android.model.PaymentMethodCreateParams, param1: string, param2: com.stripe.android.model.MandateDataParams): com.stripe.android.model.ConfirmSetupIntentParams;
					public describeContents(): number;
					public toParamMap(): java.util.Map<string, any>;
					public equals(param0: any): boolean;
					public component1(): string;
					public component6(): string;
					public getReturnUrl(): string;
					public setMandateId(param0: string): void;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public shouldUseStripeSdk(): boolean;
					public static create(param0: string, param1: string, param2: com.stripe.android.model.MandateDataParams): com.stripe.android.model.ConfirmSetupIntentParams;
					public static create(param0: string, param1: string): com.stripe.android.model.ConfirmSetupIntentParams;
					public withShouldUseStripeSdk(param0: boolean): com.stripe.android.model.ConfirmStripeIntentParams;
				}
				export module ConfirmSetupIntentParams {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.model.ConfirmSetupIntentParams.Companion>;
						public create(param0: com.stripe.android.model.PaymentMethodCreateParams, param1: string, param2: com.stripe.android.model.MandateDataParams): com.stripe.android.model.ConfirmSetupIntentParams;
						public create(param0: string, param1: string, param2: com.stripe.android.model.MandateDataParams): com.stripe.android.model.ConfirmSetupIntentParams;
						public create(param0: com.stripe.android.model.PaymentMethodCreateParams, param1: string, param2: com.stripe.android.model.MandateDataParams, param3: string): com.stripe.android.model.ConfirmSetupIntentParams;
						public create(param0: string, param1: string): com.stripe.android.model.ConfirmSetupIntentParams;
						public create(param0: com.stripe.android.model.PaymentMethodCreateParams, param1: string): com.stripe.android.model.ConfirmSetupIntentParams;
						public create(param0: string, param1: string, param2: com.stripe.android.model.MandateDataParams, param3: string): com.stripe.android.model.ConfirmSetupIntentParams;
						public createWithoutPaymentMethod(param0: string): com.stripe.android.model.ConfirmSetupIntentParams;
					}
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.ConfirmSetupIntentParams> {
						public static class: java.lang.Class<com.stripe.android.model.ConfirmSetupIntentParams.Creator>;
						public constructor();
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.ConfirmSetupIntentParams;
						public newArray(param0: number): androidNative.Array<com.stripe.android.model.ConfirmSetupIntentParams>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class ConfirmStripeIntentParams extends com.stripe.android.model.StripeParamsModel {
					public static class: java.lang.Class<com.stripe.android.model.ConfirmStripeIntentParams>;
					/**
					 * Constructs a new instance of the com.stripe.android.model.ConfirmStripeIntentParams interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getClientSecret(): string;
						getReturnUrl(): string;
						setReturnUrl(param0: string): void;
						shouldUseStripeSdk(): boolean;
						withShouldUseStripeSdk(param0: boolean): com.stripe.android.model.ConfirmStripeIntentParams;
						<clinit>(): void;
						toParamMap(): java.util.Map<string, any>;
					});
					public constructor();
					public static PARAM_PAYMENT_METHOD_DATA: string;
					public static PARAM_PAYMENT_METHOD_ID: string;
					public static PARAM_USE_STRIPE_SDK: string;
					public static PARAM_MANDATE_ID: string;
					public static PARAM_MANDATE_DATA: string;
					public static PARAM_RETURN_URL: string;
					public static Companion: com.stripe.android.model.ConfirmStripeIntentParams.Companion;
					public static PARAM_CLIENT_SECRET: string;
					public setReturnUrl(param0: string): void;
					public getReturnUrl(): string;
					public shouldUseStripeSdk(): boolean;
					public toParamMap(): java.util.Map<string, any>;
					public getClientSecret(): string;
					public withShouldUseStripeSdk(param0: boolean): com.stripe.android.model.ConfirmStripeIntentParams;
				}
				export module ConfirmStripeIntentParams {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.model.ConfirmStripeIntentParams.Companion>;
						public static PARAM_CLIENT_SECRET: string;
						public static PARAM_RETURN_URL: string;
						public static PARAM_PAYMENT_METHOD_ID: string;
						public static PARAM_PAYMENT_METHOD_DATA: string;
						public static PARAM_USE_STRIPE_SDK: string;
						public static PARAM_MANDATE_ID: string;
						public static PARAM_MANDATE_DATA: string;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class Customer extends com.stripe.android.core.model.StripeModel {
					public static class: java.lang.Class<com.stripe.android.model.Customer>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.Customer>;
					public static $stable: number;
					public getLiveMode(): boolean;
					public getId(): string;
					public component2(): string;
					public component10(): boolean;
					public copy(param0: string, param1: string, param2: com.stripe.android.model.ShippingInformation, param3: java.util.List<any>, param4: boolean, param5: java.lang.Integer, param6: string, param7: string, param8: string, param9: boolean): com.stripe.android.model.Customer;
					public constructor(param0: string, param1: string, param2: com.stripe.android.model.ShippingInformation, param3: java.util.List<any>, param4: boolean, param5: java.lang.Integer, param6: string, param7: string, param8: string, param9: boolean);
					public component5(): boolean;
					public component6(): java.lang.Integer;
					public toString(): string;
					public getHasMore(): boolean;
					public component4(): java.util.List<com.stripe.android.model.CustomerPaymentSource>;
					public getUrl(): string;
					public component8(): string;
					public getSourceById(param0: string): com.stripe.android.model.CustomerPaymentSource;
					public hashCode(): number;
					public getEmail(): string;
					public getTotalCount(): java.lang.Integer;
					public component7(): string;
					public describeContents(): number;
					public component3(): com.stripe.android.model.ShippingInformation;
					public equals(param0: any): boolean;
					public component1(): string;
					public getSources(): java.util.List<com.stripe.android.model.CustomerPaymentSource>;
					public getDefaultSource(): string;
					public component9(): string;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public getDescription(): string;
					public getShippingInformation(): com.stripe.android.model.ShippingInformation;
				}
				export module Customer {
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.Customer> {
						public static class: java.lang.Class<com.stripe.android.model.Customer.Creator>;
						public constructor();
						public newArray(param0: number): androidNative.Array<com.stripe.android.model.Customer>;
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.Customer;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class CustomerBankAccount extends com.stripe.android.model.CustomerPaymentSource {
					public static class: java.lang.Class<com.stripe.android.model.CustomerBankAccount>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.CustomerBankAccount>;
					public static $stable: number;
					public equals(param0: any): boolean;
					public toString(): string;
					public getId(): string;
					public getTokenizationMethod(): com.stripe.android.model.TokenizationMethod;
					public constructor(param0: com.stripe.android.model.BankAccount);
					public describeContents(): number;
					public copy(param0: com.stripe.android.model.BankAccount): com.stripe.android.model.CustomerBankAccount;
					public component1(): com.stripe.android.model.BankAccount;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public getBankAccount(): com.stripe.android.model.BankAccount;
					public hashCode(): number;
				}
				export module CustomerBankAccount {
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.CustomerBankAccount> {
						public static class: java.lang.Class<com.stripe.android.model.CustomerBankAccount.Creator>;
						public newArray(param0: number): androidNative.Array<com.stripe.android.model.CustomerBankAccount>;
						public constructor();
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.CustomerBankAccount;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class CustomerCard extends com.stripe.android.model.CustomerPaymentSource {
					public static class: java.lang.Class<com.stripe.android.model.CustomerCard>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.CustomerCard>;
					public static $stable: number;
					public getCard(): com.stripe.android.model.Card;
					public equals(param0: any): boolean;
					public toString(): string;
					public getId(): string;
					public copy(param0: com.stripe.android.model.Card): com.stripe.android.model.CustomerCard;
					public constructor(param0: com.stripe.android.model.Card);
					public getTokenizationMethod(): com.stripe.android.model.TokenizationMethod;
					public describeContents(): number;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public hashCode(): number;
					public component1(): com.stripe.android.model.Card;
				}
				export module CustomerCard {
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.CustomerCard> {
						public static class: java.lang.Class<com.stripe.android.model.CustomerCard.Creator>;
						public constructor();
						public newArray(param0: number): androidNative.Array<com.stripe.android.model.CustomerCard>;
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.CustomerCard;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export abstract class CustomerPaymentSource extends com.stripe.android.core.model.StripeModel {
					public static class: java.lang.Class<com.stripe.android.model.CustomerPaymentSource>;
					public static $stable: number;
					public equals(param0: any): boolean;
					public getId(): string;
					public getTokenizationMethod(): com.stripe.android.model.TokenizationMethod;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class CustomerSource extends com.stripe.android.model.CustomerPaymentSource {
					public static class: java.lang.Class<com.stripe.android.model.CustomerSource>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.CustomerSource>;
					public static $stable: number;
					public getSource(): com.stripe.android.model.Source;
					public equals(param0: any): boolean;
					public copy(param0: com.stripe.android.model.Source): com.stripe.android.model.CustomerSource;
					public toString(): string;
					public getId(): string;
					public getTokenizationMethod(): com.stripe.android.model.TokenizationMethod;
					public describeContents(): number;
					public component1(): com.stripe.android.model.Source;
					public constructor(param0: com.stripe.android.model.Source);
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public hashCode(): number;
				}
				export module CustomerSource {
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.CustomerSource> {
						public static class: java.lang.Class<com.stripe.android.model.CustomerSource.Creator>;
						public constructor();
						public newArray(param0: number): androidNative.Array<com.stripe.android.model.CustomerSource>;
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.CustomerSource;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class CvcTokenParams extends com.stripe.android.model.TokenParams {
					public static class: java.lang.Class<com.stripe.android.model.CvcTokenParams>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.CvcTokenParams>;
					public static $stable: number;
					public constructor(param0: com.stripe.android.model.Token.Type, param1: java.util.Set<string>);
					public equals(param0: any): boolean;
					public toString(): string;
					public constructor(param0: string);
					public getTypeDataParams(): java.util.Map<string, any>;
					public describeContents(): number;
					public copy(param0: string): com.stripe.android.model.CvcTokenParams;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public hashCode(): number;
					public toParamMap(): java.util.Map<string, any>;
				}
				export module CvcTokenParams {
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.CvcTokenParams> {
						public static class: java.lang.Class<com.stripe.android.model.CvcTokenParams.Creator>;
						public constructor();
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.CvcTokenParams;
						public newArray(param0: number): androidNative.Array<com.stripe.android.model.CvcTokenParams>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class DateOfBirth extends com.stripe.android.model.StripeParamsModel {
					public static class: java.lang.Class<com.stripe.android.model.DateOfBirth>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.DateOfBirth>;
					public static $stable: number;
					public component3(): number;
					public copy(param0: number, param1: number, param2: number): com.stripe.android.model.DateOfBirth;
					public describeContents(): number;
					public toParamMap(): java.util.Map<string, any>;
					public equals(param0: any): boolean;
					public getYear(): number;
					public getMonth(): number;
					public toString(): string;
					public constructor(param0: number, param1: number, param2: number);
					public component1(): number;
					public component2(): number;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public getDay(): number;
					public hashCode(): number;
				}
				export module DateOfBirth {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.model.DateOfBirth.Companion>;
					}
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.DateOfBirth> {
						public static class: java.lang.Class<com.stripe.android.model.DateOfBirth.Creator>;
						public newArray(param0: number): androidNative.Array<com.stripe.android.model.DateOfBirth>;
						public constructor();
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.DateOfBirth;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export abstract class ExpirationDate {
					public static class: java.lang.Class<com.stripe.android.model.ExpirationDate>;
					public static $stable: number;
				}
				export module ExpirationDate {
					export class Unvalidated extends com.stripe.android.model.ExpirationDate {
						public static class: java.lang.Class<com.stripe.android.model.ExpirationDate.Unvalidated>;
						public static Companion: com.stripe.android.model.ExpirationDate.Unvalidated.Companion;
						public copy(param0: string, param1: string): com.stripe.android.model.ExpirationDate.Unvalidated;
						public getMonth(): string;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getDisplayString(): string;
						public isComplete$payments_core_release(): boolean;
						public toString(): string;
						public isPartialEntry$payments_core_release(): boolean;
						public validate(): com.stripe.android.model.ExpirationDate.Validated;
						public component2(): string;
						public constructor(param0: string, param1: string);
						public isMonthValid(): boolean;
						public getYear(): string;
						public constructor(param0: number, param1: number);
					}
					export module Unvalidated {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.ExpirationDate.Unvalidated.Companion>;
							public create(param0: string): com.stripe.android.model.ExpirationDate.Unvalidated;
							public getEMPTY(): com.stripe.android.model.ExpirationDate.Unvalidated;
						}
					}
					export class Validated extends com.stripe.android.model.ExpirationDate {
						public static class: java.lang.Class<com.stripe.android.model.ExpirationDate.Validated>;
						public static $stable: number;
						public component2(): number;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getMonth(): number;
						public getYear(): number;
						public component1(): number;
						public constructor(param0: number, param1: number);
						public copy(param0: number, param1: number): com.stripe.android.model.ExpirationDate.Validated;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class GooglePayResult {
					public static class: java.lang.Class<com.stripe.android.model.GooglePayResult>;
					public static Companion: com.stripe.android.model.GooglePayResult.Companion;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.GooglePayResult>;
					public static $stable: number;
					public constructor(param0: com.stripe.android.model.Token, param1: com.stripe.android.model.Address, param2: string, param3: string, param4: string, param5: com.stripe.android.model.ShippingInformation);
					public component5(): string;
					public component6(): com.stripe.android.model.ShippingInformation;
					public describeContents(): number;
					public component3(): string;
					public equals(param0: any): boolean;
					public toString(): string;
					public getName(): string;
					public constructor();
					public getPhoneNumber(): string;
					public component1(): com.stripe.android.model.Token;
					public component2(): com.stripe.android.model.Address;
					public component4(): string;
					public getToken(): com.stripe.android.model.Token;
					public copy(param0: com.stripe.android.model.Token, param1: com.stripe.android.model.Address, param2: string, param3: string, param4: string, param5: com.stripe.android.model.ShippingInformation): com.stripe.android.model.GooglePayResult;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public static fromJson(param0: org.json.JSONObject): com.stripe.android.model.GooglePayResult;
					public hashCode(): number;
					public getAddress(): com.stripe.android.model.Address;
					public getEmail(): string;
					public getShippingInformation(): com.stripe.android.model.ShippingInformation;
				}
				export module GooglePayResult {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.model.GooglePayResult.Companion>;
						public fromJson(param0: org.json.JSONObject): com.stripe.android.model.GooglePayResult;
					}
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.GooglePayResult> {
						public static class: java.lang.Class<com.stripe.android.model.GooglePayResult.Creator>;
						public constructor();
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.GooglePayResult;
						public newArray(param0: number): androidNative.Array<com.stripe.android.model.GooglePayResult>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class IssuingCardPin extends com.stripe.android.core.model.StripeModel {
					public static class: java.lang.Class<com.stripe.android.model.IssuingCardPin>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.IssuingCardPin>;
					public static $stable: number;
					public equals(param0: any): boolean;
					public copy(param0: string): com.stripe.android.model.IssuingCardPin;
					public toString(): string;
					public component1(): string;
					public constructor(param0: string);
					public describeContents(): number;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public hashCode(): number;
					public getPin(): string;
				}
				export module IssuingCardPin {
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.IssuingCardPin> {
						public static class: java.lang.Class<com.stripe.android.model.IssuingCardPin.Creator>;
						public newArray(param0: number): androidNative.Array<com.stripe.android.model.IssuingCardPin>;
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.IssuingCardPin;
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class KlarnaSourceParams extends com.stripe.android.model.StripeParamsModel {
					public static class: java.lang.Class<com.stripe.android.model.KlarnaSourceParams>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.KlarnaSourceParams>;
					public static $stable: number;
					public component5(): string;
					public constructor(param0: string, param1: java.util.List<com.stripe.android.model.KlarnaSourceParams.LineItem>, param2: java.util.Set<any>, param3: string, param4: string, param5: com.stripe.android.model.Address, param6: string, param7: string, param8: com.stripe.android.model.DateOfBirth, param9: com.stripe.android.model.KlarnaSourceParams.PaymentPageOptions);
					public component3(): java.util.Set<com.stripe.android.model.KlarnaSourceParams.CustomPaymentMethods>;
					public getLineItems(): java.util.List<com.stripe.android.model.KlarnaSourceParams.LineItem>;
					public toString(): string;
					public component8(): string;
					public constructor(param0: string, param1: java.util.List<com.stripe.android.model.KlarnaSourceParams.LineItem>, param2: java.util.Set<any>, param3: string, param4: string, param5: com.stripe.android.model.Address);
					public component4(): string;
					public getPurchaseCountry(): string;
					public hashCode(): number;
					public getBillingPhone(): string;
					public getBillingEmail(): string;
					public getBillingAddress(): com.stripe.android.model.Address;
					public constructor(param0: string, param1: java.util.List<com.stripe.android.model.KlarnaSourceParams.LineItem>, param2: java.util.Set<any>);
					public constructor(param0: string, param1: java.util.List<com.stripe.android.model.KlarnaSourceParams.LineItem>, param2: java.util.Set<any>, param3: string, param4: string, param5: com.stripe.android.model.Address, param6: string);
					public getBillingFirstName(): string;
					public component6(): com.stripe.android.model.Address;
					public component7(): string;
					public describeContents(): number;
					public constructor(param0: string, param1: java.util.List<com.stripe.android.model.KlarnaSourceParams.LineItem>, param2: java.util.Set<any>, param3: string, param4: string);
					public getBillingLastName(): string;
					public toParamMap(): java.util.Map<string, any>;
					public component10(): com.stripe.android.model.KlarnaSourceParams.PaymentPageOptions;
					public constructor(param0: string, param1: java.util.List<com.stripe.android.model.KlarnaSourceParams.LineItem>, param2: java.util.Set<any>, param3: string, param4: string, param5: com.stripe.android.model.Address, param6: string, param7: string);
					public equals(param0: any): boolean;
					public component9(): com.stripe.android.model.DateOfBirth;
					public component1(): string;
					public getCustomPaymentMethods(): java.util.Set<com.stripe.android.model.KlarnaSourceParams.CustomPaymentMethods>;
					public getPageOptions(): com.stripe.android.model.KlarnaSourceParams.PaymentPageOptions;
					public constructor(param0: string, param1: java.util.List<com.stripe.android.model.KlarnaSourceParams.LineItem>, param2: java.util.Set<any>, param3: string, param4: string, param5: com.stripe.android.model.Address, param6: string, param7: string, param8: com.stripe.android.model.DateOfBirth);
					public constructor(param0: string, param1: java.util.List<com.stripe.android.model.KlarnaSourceParams.LineItem>, param2: java.util.Set<any>, param3: string);
					public constructor(param0: string, param1: java.util.List<com.stripe.android.model.KlarnaSourceParams.LineItem>);
					public component2(): java.util.List<com.stripe.android.model.KlarnaSourceParams.LineItem>;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public getBillingDob(): com.stripe.android.model.DateOfBirth;
					public copy(param0: string, param1: java.util.List<com.stripe.android.model.KlarnaSourceParams.LineItem>, param2: java.util.Set<any>, param3: string, param4: string, param5: com.stripe.android.model.Address, param6: string, param7: string, param8: com.stripe.android.model.DateOfBirth, param9: com.stripe.android.model.KlarnaSourceParams.PaymentPageOptions): com.stripe.android.model.KlarnaSourceParams;
				}
				export module KlarnaSourceParams {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.model.KlarnaSourceParams.Companion>;
					}
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.KlarnaSourceParams> {
						public static class: java.lang.Class<com.stripe.android.model.KlarnaSourceParams.Creator>;
						public constructor();
						public newArray(param0: number): androidNative.Array<com.stripe.android.model.KlarnaSourceParams>;
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.KlarnaSourceParams;
					}
					export class CustomPaymentMethods {
						public static class: java.lang.Class<com.stripe.android.model.KlarnaSourceParams.CustomPaymentMethods>;
						public static PayIn4: com.stripe.android.model.KlarnaSourceParams.CustomPaymentMethods;
						public static Installments: com.stripe.android.model.KlarnaSourceParams.CustomPaymentMethods;
						public static values(): androidNative.Array<com.stripe.android.model.KlarnaSourceParams.CustomPaymentMethods>;
						public static valueOf(param0: string): com.stripe.android.model.KlarnaSourceParams.CustomPaymentMethods;
						public getCode$payments_core_release(): string;
					}
					export class LineItem {
						public static class: java.lang.Class<com.stripe.android.model.KlarnaSourceParams.LineItem>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.KlarnaSourceParams.LineItem>;
						public static $stable: number;
						public describeContents(): number;
						public getItemDescription(): string;
						public copy(param0: com.stripe.android.model.KlarnaSourceParams.LineItem.Type, param1: string, param2: number, param3: java.lang.Integer): com.stripe.android.model.KlarnaSourceParams.LineItem;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public constructor(param0: com.stripe.android.model.KlarnaSourceParams.LineItem.Type, param1: string, param2: number, param3: java.lang.Integer);
						public getQuantity(): java.lang.Integer;
						public getItemType(): com.stripe.android.model.KlarnaSourceParams.LineItem.Type;
						public getTotalAmount(): number;
						public toString(): string;
						public component2(): string;
						public component4(): java.lang.Integer;
						public constructor(param0: com.stripe.android.model.KlarnaSourceParams.LineItem.Type, param1: string, param2: number);
						public component1(): com.stripe.android.model.KlarnaSourceParams.LineItem.Type;
						public component3(): number;
					}
					export module LineItem {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.KlarnaSourceParams.LineItem> {
							public static class: java.lang.Class<com.stripe.android.model.KlarnaSourceParams.LineItem.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.KlarnaSourceParams.LineItem;
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.KlarnaSourceParams.LineItem>;
						}
						export class Type {
							public static class: java.lang.Class<com.stripe.android.model.KlarnaSourceParams.LineItem.Type>;
							public static Sku: com.stripe.android.model.KlarnaSourceParams.LineItem.Type;
							public static Tax: com.stripe.android.model.KlarnaSourceParams.LineItem.Type;
							public static Shipping: com.stripe.android.model.KlarnaSourceParams.LineItem.Type;
							public static valueOf(param0: string): com.stripe.android.model.KlarnaSourceParams.LineItem.Type;
							public getCode$payments_core_release(): string;
							public static values(): androidNative.Array<com.stripe.android.model.KlarnaSourceParams.LineItem.Type>;
						}
					}
					export class PaymentPageOptions extends com.stripe.android.model.StripeParamsModel {
						public static class: java.lang.Class<com.stripe.android.model.KlarnaSourceParams.PaymentPageOptions>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.KlarnaSourceParams.PaymentPageOptions>;
						public static $stable: number;
						public getLogoUrl(): string;
						public component4(): com.stripe.android.model.KlarnaSourceParams.PaymentPageOptions.PurchaseType;
						public component3(): string;
						public describeContents(): number;
						public constructor();
						public toParamMap(): java.util.Map<string, any>;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public constructor(param0: string, param1: string, param2: string, param3: com.stripe.android.model.KlarnaSourceParams.PaymentPageOptions.PurchaseType);
						public getBackgroundImageUrl(): string;
						public toString(): string;
						public getPageTitle(): string;
						public getPurchaseType(): com.stripe.android.model.KlarnaSourceParams.PaymentPageOptions.PurchaseType;
						public copy(param0: string, param1: string, param2: string, param3: com.stripe.android.model.KlarnaSourceParams.PaymentPageOptions.PurchaseType): com.stripe.android.model.KlarnaSourceParams.PaymentPageOptions;
						public component2(): string;
					}
					export module PaymentPageOptions {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.KlarnaSourceParams.PaymentPageOptions.Companion>;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.KlarnaSourceParams.PaymentPageOptions> {
							public static class: java.lang.Class<com.stripe.android.model.KlarnaSourceParams.PaymentPageOptions.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.KlarnaSourceParams.PaymentPageOptions>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.KlarnaSourceParams.PaymentPageOptions;
						}
						export class PurchaseType {
							public static class: java.lang.Class<com.stripe.android.model.KlarnaSourceParams.PaymentPageOptions.PurchaseType>;
							public static Buy: com.stripe.android.model.KlarnaSourceParams.PaymentPageOptions.PurchaseType;
							public static Rent: com.stripe.android.model.KlarnaSourceParams.PaymentPageOptions.PurchaseType;
							public static Book: com.stripe.android.model.KlarnaSourceParams.PaymentPageOptions.PurchaseType;
							public static Subscribe: com.stripe.android.model.KlarnaSourceParams.PaymentPageOptions.PurchaseType;
							public static Download: com.stripe.android.model.KlarnaSourceParams.PaymentPageOptions.PurchaseType;
							public static Order: com.stripe.android.model.KlarnaSourceParams.PaymentPageOptions.PurchaseType;
							public static Continue: com.stripe.android.model.KlarnaSourceParams.PaymentPageOptions.PurchaseType;
							public getCode(): string;
							public static values(): androidNative.Array<com.stripe.android.model.KlarnaSourceParams.PaymentPageOptions.PurchaseType>;
							public static valueOf(param0: string): com.stripe.android.model.KlarnaSourceParams.PaymentPageOptions.PurchaseType;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class ListPaymentMethodsParams extends com.stripe.android.model.StripeParamsModel {
					public static class: java.lang.Class<com.stripe.android.model.ListPaymentMethodsParams>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.ListPaymentMethodsParams>;
					public static $stable: number;
					public copy(param0: string, param1: com.stripe.android.model.PaymentMethod.Type, param2: java.lang.Integer, param3: string, param4: string): com.stripe.android.model.ListPaymentMethodsParams;
					public equals(param0: any): boolean;
					public toString(): string;
					public component2$payments_core_release(): com.stripe.android.model.PaymentMethod.Type;
					public constructor(param0: string, param1: com.stripe.android.model.PaymentMethod.Type, param2: java.lang.Integer, param3: string, param4: string);
					public describeContents(): number;
					public getPaymentMethodType$payments_core_release(): com.stripe.android.model.PaymentMethod.Type;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public hashCode(): number;
					public toParamMap(): java.util.Map<string, any>;
				}
				export module ListPaymentMethodsParams {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.model.ListPaymentMethodsParams.Companion>;
					}
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.ListPaymentMethodsParams> {
						public static class: java.lang.Class<com.stripe.android.model.ListPaymentMethodsParams.Creator>;
						public constructor();
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.ListPaymentMethodsParams;
						public newArray(param0: number): androidNative.Array<com.stripe.android.model.ListPaymentMethodsParams>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class MandateDataParams extends com.stripe.android.model.StripeParamsModel {
					public static class: java.lang.Class<com.stripe.android.model.MandateDataParams>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.MandateDataParams>;
					public static $stable: number;
					public copy(param0: com.stripe.android.model.MandateDataParams.Type): com.stripe.android.model.MandateDataParams;
					public equals(param0: any): boolean;
					public toString(): string;
					public constructor(param0: com.stripe.android.model.MandateDataParams.Type);
					public describeContents(): number;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public hashCode(): number;
					public toParamMap(): java.util.Map<string, any>;
				}
				export module MandateDataParams {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.model.MandateDataParams.Companion>;
					}
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.MandateDataParams> {
						public static class: java.lang.Class<com.stripe.android.model.MandateDataParams.Creator>;
						public constructor();
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.MandateDataParams;
						public newArray(param0: number): androidNative.Array<com.stripe.android.model.MandateDataParams>;
					}
					export abstract class Type extends com.stripe.android.model.StripeParamsModel {
						public static class: java.lang.Class<com.stripe.android.model.MandateDataParams.Type>;
						public static $stable: number;
						public toParamMap(): java.util.Map<string, any>;
						public getCode$payments_core_release(): string;
					}
					export module Type {
						export class Online extends com.stripe.android.model.MandateDataParams.Type {
							public static class: java.lang.Class<com.stripe.android.model.MandateDataParams.Type.Online>;
							public static Companion: com.stripe.android.model.MandateDataParams.Type.Online.Companion;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.MandateDataParams.Type.Online>;
							public static $stable: number;
							public constructor();
							public copy(param0: string, param1: string, param2: boolean): com.stripe.android.model.MandateDataParams.Type.Online;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public constructor(param0: string, param1: string, param2: boolean);
							public hashCode(): number;
							public constructor(param0: string, param1: string);
							public describeContents(): number;
							public toParamMap(): java.util.Map<string, any>;
							public toString(): string;
							public equals(param0: any): boolean;
						}
						export module Online {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.MandateDataParams.Type.Online.Companion>;
								public getDEFAULT(): com.stripe.android.model.MandateDataParams.Type.Online;
							}
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.MandateDataParams.Type.Online> {
								public static class: java.lang.Class<com.stripe.android.model.MandateDataParams.Type.Online.Creator>;
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.MandateDataParams.Type.Online;
								public newArray(param0: number): androidNative.Array<com.stripe.android.model.MandateDataParams.Type.Online>;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class PaymentIntent extends com.stripe.android.model.StripeIntent {
					public static class: java.lang.Class<com.stripe.android.model.PaymentIntent>;
					public static Companion: com.stripe.android.model.PaymentIntent.Companion;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentIntent>;
					public static $stable: number;
					public getId(): string;
					public component13(): com.stripe.android.model.PaymentMethod;
					public getLastErrorMessage(): string;
					public getNextActionType(): com.stripe.android.model.StripeIntent.NextActionType;
					public component21(): com.stripe.android.model.StripeIntent.NextActionData;
					public component20(): java.util.List<string>;
					public getCanceledAt(): number;
					public getPaymentMethodId(): string;
					public component8(): com.stripe.android.model.PaymentIntent.ConfirmationMethod;
					public getUnactivatedPaymentMethods(): java.util.List<string>;
					public getShipping(): com.stripe.android.model.PaymentIntent.Shipping;
					public component19(): com.stripe.android.model.PaymentIntent.Shipping;
					public getCreated(): number;
					public static fromJson(param0: org.json.JSONObject): com.stripe.android.model.PaymentIntent;
					public getReceiptEmail(): string;
					public component15(): string;
					public getPaymentMethod(): com.stripe.android.model.PaymentMethod;
					public getNextActionData(): com.stripe.android.model.StripeIntent.NextActionData;
					public requiresAction(): boolean;
					public component1(): string;
					public component18(): com.stripe.android.model.PaymentIntent.Error;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public getDescription(): string;
					public component14(): string;
					public getSetupFutureUsage(): com.stripe.android.model.StripeIntent.Usage;
					public component6(): com.stripe.android.model.PaymentIntent.CaptureMethod;
					public requiresConfirmation(): boolean;
					public component2(): java.util.List<string>;
					public getCurrency(): string;
					public copy(param0: string, param1: java.util.List<string>, param2: java.lang.Long, param3: number, param4: com.stripe.android.model.PaymentIntent.CancellationReason, param5: com.stripe.android.model.PaymentIntent.CaptureMethod, param6: string, param7: com.stripe.android.model.PaymentIntent.ConfirmationMethod, param8: number, param9: string, param10: string, param11: boolean, param12: com.stripe.android.model.PaymentMethod, param13: string, param14: string, param15: com.stripe.android.model.StripeIntent.Status, param16: com.stripe.android.model.StripeIntent.Usage, param17: com.stripe.android.model.PaymentIntent.Error, param18: com.stripe.android.model.PaymentIntent.Shipping, param19: java.util.List<string>, param20: com.stripe.android.model.StripeIntent.NextActionData): com.stripe.android.model.PaymentIntent;
					public getClientSecret(): string;
					public toString(): string;
					public isLiveMode(): boolean;
					public component3(): java.lang.Long;
					public component4(): number;
					public component5(): com.stripe.android.model.PaymentIntent.CancellationReason;
					public getPaymentMethodTypes(): java.util.List<string>;
					public component12(): boolean;
					public hashCode(): number;
					public constructor(param0: string, param1: java.util.List<string>, param2: java.lang.Long, param3: number, param4: com.stripe.android.model.PaymentIntent.CancellationReason, param5: com.stripe.android.model.PaymentIntent.CaptureMethod, param6: string, param7: com.stripe.android.model.PaymentIntent.ConfirmationMethod, param8: number, param9: string, param10: string, param11: boolean, param12: com.stripe.android.model.PaymentMethod, param13: string, param14: string, param15: com.stripe.android.model.StripeIntent.Status, param16: com.stripe.android.model.StripeIntent.Usage, param17: com.stripe.android.model.PaymentIntent.Error, param18: com.stripe.android.model.PaymentIntent.Shipping, param19: java.util.List<string>, param20: com.stripe.android.model.StripeIntent.NextActionData);
					public getCancellationReason(): com.stripe.android.model.PaymentIntent.CancellationReason;
					public component11(): string;
					public getAmount(): java.lang.Long;
					public getLastPaymentError(): com.stripe.android.model.PaymentIntent.Error;
					public component7(): string;
					public describeContents(): number;
					public component17(): com.stripe.android.model.StripeIntent.Usage;
					public component9(): number;
					public getConfirmationMethod(): com.stripe.android.model.PaymentIntent.ConfirmationMethod;
					public component10(): string;
					public equals(param0: any): boolean;
					public isConfirmed(): boolean;
					public getStatus(): com.stripe.android.model.StripeIntent.Status;
					public getCaptureMethod(): com.stripe.android.model.PaymentIntent.CaptureMethod;
					public isSetupFutureUsageSet(): boolean;
					public component16(): com.stripe.android.model.StripeIntent.Status;
				}
				export module PaymentIntent {
					export class CancellationReason {
						public static class: java.lang.Class<com.stripe.android.model.PaymentIntent.CancellationReason>;
						public static Companion: com.stripe.android.model.PaymentIntent.CancellationReason.Companion;
						public static Duplicate: com.stripe.android.model.PaymentIntent.CancellationReason;
						public static Fraudulent: com.stripe.android.model.PaymentIntent.CancellationReason;
						public static RequestedByCustomer: com.stripe.android.model.PaymentIntent.CancellationReason;
						public static Abandoned: com.stripe.android.model.PaymentIntent.CancellationReason;
						public static FailedInvoice: com.stripe.android.model.PaymentIntent.CancellationReason;
						public static VoidInvoice: com.stripe.android.model.PaymentIntent.CancellationReason;
						public static Automatic: com.stripe.android.model.PaymentIntent.CancellationReason;
						public static values(): androidNative.Array<com.stripe.android.model.PaymentIntent.CancellationReason>;
						public static valueOf(param0: string): com.stripe.android.model.PaymentIntent.CancellationReason;
					}
					export module CancellationReason {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.PaymentIntent.CancellationReason.Companion>;
							public fromCode(param0: string): com.stripe.android.model.PaymentIntent.CancellationReason;
						}
					}
					export class CaptureMethod {
						public static class: java.lang.Class<com.stripe.android.model.PaymentIntent.CaptureMethod>;
						public static Companion: com.stripe.android.model.PaymentIntent.CaptureMethod.Companion;
						public static Automatic: com.stripe.android.model.PaymentIntent.CaptureMethod;
						public static Manual: com.stripe.android.model.PaymentIntent.CaptureMethod;
						public static values(): androidNative.Array<com.stripe.android.model.PaymentIntent.CaptureMethod>;
						public static valueOf(param0: string): com.stripe.android.model.PaymentIntent.CaptureMethod;
					}
					export module CaptureMethod {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.PaymentIntent.CaptureMethod.Companion>;
							public fromCode(param0: string): com.stripe.android.model.PaymentIntent.CaptureMethod;
						}
					}
					export class ClientSecret {
						public static class: java.lang.Class<com.stripe.android.model.PaymentIntent.ClientSecret>;
						public static Companion: com.stripe.android.model.PaymentIntent.ClientSecret.Companion;
						public getValue$payments_core_release(): string;
						public copy(param0: string): com.stripe.android.model.PaymentIntent.ClientSecret;
						public component1$payments_core_release(): string;
						public getPaymentIntentId$payments_core_release(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public toString(): string;
						public constructor(param0: string);
					}
					export module ClientSecret {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.PaymentIntent.ClientSecret.Companion>;
							public isMatch(param0: string): boolean;
						}
					}
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.model.PaymentIntent.Companion>;
						public fromJson(param0: org.json.JSONObject): com.stripe.android.model.PaymentIntent;
					}
					export class ConfirmationMethod {
						public static class: java.lang.Class<com.stripe.android.model.PaymentIntent.ConfirmationMethod>;
						public static Companion: com.stripe.android.model.PaymentIntent.ConfirmationMethod.Companion;
						public static Automatic: com.stripe.android.model.PaymentIntent.ConfirmationMethod;
						public static Manual: com.stripe.android.model.PaymentIntent.ConfirmationMethod;
						public static valueOf(param0: string): com.stripe.android.model.PaymentIntent.ConfirmationMethod;
						public static values(): androidNative.Array<com.stripe.android.model.PaymentIntent.ConfirmationMethod>;
					}
					export module ConfirmationMethod {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.PaymentIntent.ConfirmationMethod.Companion>;
							public fromCode(param0: string): com.stripe.android.model.PaymentIntent.ConfirmationMethod;
						}
					}
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentIntent> {
						public static class: java.lang.Class<com.stripe.android.model.PaymentIntent.Creator>;
						public constructor();
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.PaymentIntent;
						public newArray(param0: number): androidNative.Array<com.stripe.android.model.PaymentIntent>;
					}
					export class Error extends com.stripe.android.core.model.StripeModel {
						public static class: java.lang.Class<com.stripe.android.model.PaymentIntent.Error>;
						public static Companion: com.stripe.android.model.PaymentIntent.Error.Companion;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentIntent.Error>;
						public static $stable: number;
						public static CODE_AUTHENTICATION_ERROR: string;
						public getMessage(): string;
						public component3(): string;
						public component7(): com.stripe.android.model.PaymentMethod;
						public describeContents(): number;
						public component5(): string;
						public getDeclineCode(): string;
						public getParam(): string;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getPaymentMethod(): com.stripe.android.model.PaymentMethod;
						public constructor(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: com.stripe.android.model.PaymentMethod, param7: com.stripe.android.model.PaymentIntent.Error.Type);
						public getType(): com.stripe.android.model.PaymentIntent.Error.Type;
						public component8(): com.stripe.android.model.PaymentIntent.Error.Type;
						public copy(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: com.stripe.android.model.PaymentMethod, param7: com.stripe.android.model.PaymentIntent.Error.Type): com.stripe.android.model.PaymentIntent.Error;
						public toString(): string;
						public getDocUrl(): string;
						public component4(): string;
						public component2(): string;
						public getCharge(): string;
						public component6(): string;
						public getCode(): string;
					}
					export module Error {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.PaymentIntent.Error.Companion>;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentIntent.Error> {
							public static class: java.lang.Class<com.stripe.android.model.PaymentIntent.Error.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.PaymentIntent.Error;
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.PaymentIntent.Error>;
						}
						export class Type {
							public static class: java.lang.Class<com.stripe.android.model.PaymentIntent.Error.Type>;
							public static Companion: com.stripe.android.model.PaymentIntent.Error.Type.Companion;
							public static ApiConnectionError: com.stripe.android.model.PaymentIntent.Error.Type;
							public static ApiError: com.stripe.android.model.PaymentIntent.Error.Type;
							public static AuthenticationError: com.stripe.android.model.PaymentIntent.Error.Type;
							public static CardError: com.stripe.android.model.PaymentIntent.Error.Type;
							public static IdempotencyError: com.stripe.android.model.PaymentIntent.Error.Type;
							public static InvalidRequestError: com.stripe.android.model.PaymentIntent.Error.Type;
							public static RateLimitError: com.stripe.android.model.PaymentIntent.Error.Type;
							public getCode(): string;
							public static valueOf(param0: string): com.stripe.android.model.PaymentIntent.Error.Type;
							public static values(): androidNative.Array<com.stripe.android.model.PaymentIntent.Error.Type>;
						}
						export module Type {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.PaymentIntent.Error.Type.Companion>;
								public fromCode(param0: string): com.stripe.android.model.PaymentIntent.Error.Type;
							}
						}
					}
					export class Shipping extends com.stripe.android.core.model.StripeModel {
						public static class: java.lang.Class<com.stripe.android.model.PaymentIntent.Shipping>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentIntent.Shipping>;
						public static $stable: number;
						public component3(): string;
						public describeContents(): number;
						public component5(): string;
						public copy(param0: com.stripe.android.model.Address, param1: string, param2: string, param3: string, param4: string): com.stripe.android.model.PaymentIntent.Shipping;
						public getTrackingNumber(): string;
						public getPhone(): string;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getCarrier(): string;
						public getName(): string;
						public toString(): string;
						public component4(): string;
						public component1(): com.stripe.android.model.Address;
						public constructor(param0: com.stripe.android.model.Address, param1: string, param2: string, param3: string, param4: string);
						public component2(): string;
						public getAddress(): com.stripe.android.model.Address;
					}
					export module Shipping {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentIntent.Shipping> {
							public static class: java.lang.Class<com.stripe.android.model.PaymentIntent.Shipping.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.PaymentIntent.Shipping>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.PaymentIntent.Shipping;
						}
					}
					export class WhenMappings {
						public static class: java.lang.Class<com.stripe.android.model.PaymentIntent.WhenMappings>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class PaymentMethod extends com.stripe.android.core.model.StripeModel {
					public static class: java.lang.Class<com.stripe.android.model.PaymentMethod>;
					public static Companion: com.stripe.android.model.PaymentMethod.Companion;
					public id: string;
					public created: java.lang.Long;
					public liveMode: boolean;
					public type: com.stripe.android.model.PaymentMethod.Type;
					public billingDetails: com.stripe.android.model.PaymentMethod.BillingDetails;
					public customerId: string;
					public card: com.stripe.android.model.PaymentMethod.Card;
					public cardPresent: com.stripe.android.model.PaymentMethod.CardPresent;
					public fpx: com.stripe.android.model.PaymentMethod.Fpx;
					public ideal: com.stripe.android.model.PaymentMethod.Ideal;
					public sepaDebit: com.stripe.android.model.PaymentMethod.SepaDebit;
					public auBecsDebit: com.stripe.android.model.PaymentMethod.AuBecsDebit;
					public bacsDebit: com.stripe.android.model.PaymentMethod.BacsDebit;
					public sofort: com.stripe.android.model.PaymentMethod.Sofort;
					public upi: com.stripe.android.model.PaymentMethod.Upi;
					public netbanking: com.stripe.android.model.PaymentMethod.Netbanking;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethod>;
					public static $stable: number;
					public component14(): com.stripe.android.model.PaymentMethod.Sofort;
					public hasExpectedDetails(): boolean;
					public static fromJson(param0: org.json.JSONObject): com.stripe.android.model.PaymentMethod;
					public component4(): com.stripe.android.model.PaymentMethod.Type;
					public component9(): com.stripe.android.model.PaymentMethod.Fpx;
					public component5(): com.stripe.android.model.PaymentMethod.BillingDetails;
					public component13(): com.stripe.android.model.PaymentMethod.BacsDebit;
					public component16(): com.stripe.android.model.PaymentMethod.Netbanking;
					public component7(): com.stripe.android.model.PaymentMethod.Card;
					public toString(): string;
					public component2(): java.lang.Long;
					public component8(): com.stripe.android.model.PaymentMethod.CardPresent;
					public hashCode(): number;
					public component11(): com.stripe.android.model.PaymentMethod.SepaDebit;
					public component12(): com.stripe.android.model.PaymentMethod.AuBecsDebit;
					public component15(): com.stripe.android.model.PaymentMethod.Upi;
					public constructor(param0: string, param1: java.lang.Long, param2: boolean, param3: com.stripe.android.model.PaymentMethod.Type, param4: com.stripe.android.model.PaymentMethod.BillingDetails, param5: string, param6: com.stripe.android.model.PaymentMethod.Card, param7: com.stripe.android.model.PaymentMethod.CardPresent, param8: com.stripe.android.model.PaymentMethod.Fpx, param9: com.stripe.android.model.PaymentMethod.Ideal, param10: com.stripe.android.model.PaymentMethod.SepaDebit, param11: com.stripe.android.model.PaymentMethod.AuBecsDebit, param12: com.stripe.android.model.PaymentMethod.BacsDebit, param13: com.stripe.android.model.PaymentMethod.Sofort, param14: com.stripe.android.model.PaymentMethod.Upi, param15: com.stripe.android.model.PaymentMethod.Netbanking);
					public describeContents(): number;
					public component10(): com.stripe.android.model.PaymentMethod.Ideal;
					public equals(param0: any): boolean;
					public component1(): string;
					public component6(): string;
					public component3(): boolean;
					public copy(param0: string, param1: java.lang.Long, param2: boolean, param3: com.stripe.android.model.PaymentMethod.Type, param4: com.stripe.android.model.PaymentMethod.BillingDetails, param5: string, param6: com.stripe.android.model.PaymentMethod.Card, param7: com.stripe.android.model.PaymentMethod.CardPresent, param8: com.stripe.android.model.PaymentMethod.Fpx, param9: com.stripe.android.model.PaymentMethod.Ideal, param10: com.stripe.android.model.PaymentMethod.SepaDebit, param11: com.stripe.android.model.PaymentMethod.AuBecsDebit, param12: com.stripe.android.model.PaymentMethod.BacsDebit, param13: com.stripe.android.model.PaymentMethod.Sofort, param14: com.stripe.android.model.PaymentMethod.Upi, param15: com.stripe.android.model.PaymentMethod.Netbanking): com.stripe.android.model.PaymentMethod;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
				}
				export module PaymentMethod {
					export class AuBecsDebit extends com.stripe.android.model.PaymentMethod.TypeData {
						public static class: java.lang.Class<com.stripe.android.model.PaymentMethod.AuBecsDebit>;
						public bsbNumber: string;
						public fingerprint: string;
						public last4: string;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethod.AuBecsDebit>;
						public static $stable: number;
						public getType(): com.stripe.android.model.PaymentMethod.Type;
						public component3(): string;
						public describeContents(): number;
						public constructor(param0: string, param1: string, param2: string);
						public component2(): string;
						public copy(param0: string, param1: string, param2: string): com.stripe.android.model.PaymentMethod.AuBecsDebit;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public toString(): string;
					}
					export module AuBecsDebit {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethod.AuBecsDebit> {
							public static class: java.lang.Class<com.stripe.android.model.PaymentMethod.AuBecsDebit.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.PaymentMethod.AuBecsDebit>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.PaymentMethod.AuBecsDebit;
						}
					}
					export class BacsDebit extends com.stripe.android.model.PaymentMethod.TypeData {
						public static class: java.lang.Class<com.stripe.android.model.PaymentMethod.BacsDebit>;
						public fingerprint: string;
						public last4: string;
						public sortCode: string;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethod.BacsDebit>;
						public static $stable: number;
						public getType(): com.stripe.android.model.PaymentMethod.Type;
						public component3(): string;
						public copy(param0: string, param1: string, param2: string): com.stripe.android.model.PaymentMethod.BacsDebit;
						public describeContents(): number;
						public constructor(param0: string, param1: string, param2: string);
						public component2(): string;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public toString(): string;
					}
					export module BacsDebit {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethod.BacsDebit> {
							public static class: java.lang.Class<com.stripe.android.model.PaymentMethod.BacsDebit.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.PaymentMethod.BacsDebit>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.PaymentMethod.BacsDebit;
						}
					}
					export class BillingDetails implements com.stripe.android.core.model.StripeModel, com.stripe.android.model.StripeParamsModel {
						public static class: java.lang.Class<com.stripe.android.model.PaymentMethod.BillingDetails>;
						public static Companion: com.stripe.android.model.PaymentMethod.BillingDetails.Companion;
						public address: com.stripe.android.model.Address;
						public email: string;
						public name: string;
						public phone: string;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethod.BillingDetails>;
						public static $stable: number;
						public static PARAM_ADDRESS: string;
						public static PARAM_EMAIL: string;
						public static PARAM_NAME: string;
						public static PARAM_PHONE: string;
						public component3(): string;
						public describeContents(): number;
						public constructor();
						public toParamMap(): java.util.Map<string, any>;
						public constructor(param0: com.stripe.android.model.Address);
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public copy(param0: com.stripe.android.model.Address, param1: string, param2: string, param3: string): com.stripe.android.model.PaymentMethod.BillingDetails;
						public toString(): string;
						public component4(): string;
						public component1(): com.stripe.android.model.Address;
						public constructor(param0: com.stripe.android.model.Address, param1: string);
						public constructor(param0: com.stripe.android.model.Address, param1: string, param2: string, param3: string);
						public component2(): string;
						public constructor(param0: com.stripe.android.model.Address, param1: string, param2: string);
						public toBuilder(): com.stripe.android.model.PaymentMethod.BillingDetails.Builder;
					}
					export module BillingDetails {
						export class Builder extends com.stripe.android.ObjectBuilder<com.stripe.android.model.PaymentMethod.BillingDetails> {
							public static class: java.lang.Class<com.stripe.android.model.PaymentMethod.BillingDetails.Builder>;
							public static $stable: number;
							public constructor();
							public build(): com.stripe.android.model.PaymentMethod.BillingDetails;
							public setPhone(param0: string): com.stripe.android.model.PaymentMethod.BillingDetails.Builder;
							public build(): any;
							public setName(param0: string): com.stripe.android.model.PaymentMethod.BillingDetails.Builder;
							public setAddress(param0: com.stripe.android.model.Address): com.stripe.android.model.PaymentMethod.BillingDetails.Builder;
							public setEmail(param0: string): com.stripe.android.model.PaymentMethod.BillingDetails.Builder;
						}
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.PaymentMethod.BillingDetails.Companion>;
							public create(param0: com.stripe.android.model.ShippingInformation): com.stripe.android.model.PaymentMethod.BillingDetails;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethod.BillingDetails> {
							public static class: java.lang.Class<com.stripe.android.model.PaymentMethod.BillingDetails.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.PaymentMethod.BillingDetails>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.PaymentMethod.BillingDetails;
						}
					}
					export class Builder extends com.stripe.android.ObjectBuilder<com.stripe.android.model.PaymentMethod> {
						public static class: java.lang.Class<com.stripe.android.model.PaymentMethod.Builder>;
						public static $stable: number;
						public setId(param0: string): com.stripe.android.model.PaymentMethod.Builder;
						public constructor();
						public setUpi(param0: com.stripe.android.model.PaymentMethod.Upi): com.stripe.android.model.PaymentMethod.Builder;
						public setAuBecsDebit(param0: com.stripe.android.model.PaymentMethod.AuBecsDebit): com.stripe.android.model.PaymentMethod.Builder;
						public setSepaDebit(param0: com.stripe.android.model.PaymentMethod.SepaDebit): com.stripe.android.model.PaymentMethod.Builder;
						public setCardPresent(param0: com.stripe.android.model.PaymentMethod.CardPresent): com.stripe.android.model.PaymentMethod.Builder;
						public setType(param0: com.stripe.android.model.PaymentMethod.Type): com.stripe.android.model.PaymentMethod.Builder;
						public setNetbanking(param0: com.stripe.android.model.PaymentMethod.Netbanking): com.stripe.android.model.PaymentMethod.Builder;
						public setIdeal(param0: com.stripe.android.model.PaymentMethod.Ideal): com.stripe.android.model.PaymentMethod.Builder;
						public build(): any;
						public setCreated(param0: java.lang.Long): com.stripe.android.model.PaymentMethod.Builder;
						public build(): com.stripe.android.model.PaymentMethod;
						public setMetadata(param0: java.util.Map<string, string>): com.stripe.android.model.PaymentMethod.Builder;
						public setFpx(param0: com.stripe.android.model.PaymentMethod.Fpx): com.stripe.android.model.PaymentMethod.Builder;
						public setCard(param0: com.stripe.android.model.PaymentMethod.Card): com.stripe.android.model.PaymentMethod.Builder;
						public setCustomerId(param0: string): com.stripe.android.model.PaymentMethod.Builder;
						public setLiveMode(param0: boolean): com.stripe.android.model.PaymentMethod.Builder;
						public setBillingDetails(param0: com.stripe.android.model.PaymentMethod.BillingDetails): com.stripe.android.model.PaymentMethod.Builder;
						public setSofort(param0: com.stripe.android.model.PaymentMethod.Sofort): com.stripe.android.model.PaymentMethod.Builder;
						public setBacsDebit(param0: com.stripe.android.model.PaymentMethod.BacsDebit): com.stripe.android.model.PaymentMethod.Builder;
					}
					export class Card extends com.stripe.android.model.PaymentMethod.TypeData {
						public static class: java.lang.Class<com.stripe.android.model.PaymentMethod.Card>;
						public brand: com.stripe.android.model.CardBrand;
						public checks: com.stripe.android.model.PaymentMethod.Card.Checks;
						public country: string;
						public expiryMonth: java.lang.Integer;
						public expiryYear: java.lang.Integer;
						public fingerprint: string;
						public funding: string;
						public last4: string;
						public threeDSecureUsage: com.stripe.android.model.PaymentMethod.Card.ThreeDSecureUsage;
						public wallet: com.stripe.android.model.wallets.Wallet;
						public networks: com.stripe.android.model.PaymentMethod.Card.Networks;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethod.Card>;
						public static $stable: number;
						public getType(): com.stripe.android.model.PaymentMethod.Type;
						public component3(): string;
						public describeContents(): number;
						public constructor();
						public component2(): com.stripe.android.model.PaymentMethod.Card.Checks;
						public component5(): java.lang.Integer;
						public component1(): com.stripe.android.model.CardBrand;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public component7(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public constructor(param0: com.stripe.android.model.CardBrand, param1: com.stripe.android.model.PaymentMethod.Card.Checks, param2: string, param3: java.lang.Integer, param4: java.lang.Integer, param5: string, param6: string, param7: string, param8: com.stripe.android.model.PaymentMethod.Card.ThreeDSecureUsage, param9: com.stripe.android.model.wallets.Wallet, param10: com.stripe.android.model.PaymentMethod.Card.Networks);
						public toString(): string;
						public copy(param0: com.stripe.android.model.CardBrand, param1: com.stripe.android.model.PaymentMethod.Card.Checks, param2: string, param3: java.lang.Integer, param4: java.lang.Integer, param5: string, param6: string, param7: string, param8: com.stripe.android.model.PaymentMethod.Card.ThreeDSecureUsage, param9: com.stripe.android.model.wallets.Wallet, param10: com.stripe.android.model.PaymentMethod.Card.Networks): com.stripe.android.model.PaymentMethod.Card;
						public component4(): java.lang.Integer;
						public component6(): string;
						public component8(): string;
						public component9(): com.stripe.android.model.PaymentMethod.Card.ThreeDSecureUsage;
						public component11$payments_core_release(): com.stripe.android.model.PaymentMethod.Card.Networks;
						public component10(): com.stripe.android.model.wallets.Wallet;
					}
					export module Card {
						export class Checks extends com.stripe.android.core.model.StripeModel {
							public static class: java.lang.Class<com.stripe.android.model.PaymentMethod.Card.Checks>;
							public addressLine1Check: string;
							public addressPostalCodeCheck: string;
							public cvcCheck: string;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethod.Card.Checks>;
							public static $stable: number;
							public copy(param0: string, param1: string, param2: string): com.stripe.android.model.PaymentMethod.Card.Checks;
							public component2(): string;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public hashCode(): number;
							public describeContents(): number;
							public constructor(param0: string, param1: string, param2: string);
							public toString(): string;
							public equals(param0: any): boolean;
							public component3(): string;
							public component1(): string;
						}
						export module Checks {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethod.Card.Checks> {
								public static class: java.lang.Class<com.stripe.android.model.PaymentMethod.Card.Checks.Creator>;
								public newArray(param0: number): androidNative.Array<com.stripe.android.model.PaymentMethod.Card.Checks>;
								public constructor();
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.PaymentMethod.Card.Checks;
							}
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethod.Card> {
							public static class: java.lang.Class<com.stripe.android.model.PaymentMethod.Card.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.PaymentMethod.Card>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.PaymentMethod.Card;
						}
						export class Networks extends com.stripe.android.core.model.StripeModel {
							public static class: java.lang.Class<com.stripe.android.model.PaymentMethod.Card.Networks>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethod.Card.Networks>;
							public static $stable: number;
							public getPreferred(): string;
							public constructor();
							public constructor(param0: java.util.Set<string>, param1: boolean, param2: string);
							public hashCode(): number;
							public component2(): boolean;
							public toString(): string;
							public component3(): string;
							public getSelectionMandatory(): boolean;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public describeContents(): number;
							public component1(): java.util.Set<string>;
							public getAvailable(): java.util.Set<string>;
							public equals(param0: any): boolean;
							public copy(param0: java.util.Set<string>, param1: boolean, param2: string): com.stripe.android.model.PaymentMethod.Card.Networks;
						}
						export module Networks {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethod.Card.Networks> {
								public static class: java.lang.Class<com.stripe.android.model.PaymentMethod.Card.Networks.Creator>;
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.PaymentMethod.Card.Networks;
								public constructor();
								public newArray(param0: number): androidNative.Array<com.stripe.android.model.PaymentMethod.Card.Networks>;
							}
						}
						export class ThreeDSecureUsage extends com.stripe.android.core.model.StripeModel {
							public static class: java.lang.Class<com.stripe.android.model.PaymentMethod.Card.ThreeDSecureUsage>;
							public isSupported: boolean;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethod.Card.ThreeDSecureUsage>;
							public static $stable: number;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public component1(): boolean;
							public hashCode(): number;
							public describeContents(): number;
							public constructor(param0: boolean);
							public copy(param0: boolean): com.stripe.android.model.PaymentMethod.Card.ThreeDSecureUsage;
							public toString(): string;
							public equals(param0: any): boolean;
						}
						export module ThreeDSecureUsage {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethod.Card.ThreeDSecureUsage> {
								public static class: java.lang.Class<com.stripe.android.model.PaymentMethod.Card.ThreeDSecureUsage.Creator>;
								public newArray(param0: number): androidNative.Array<com.stripe.android.model.PaymentMethod.Card.ThreeDSecureUsage>;
								public constructor();
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.PaymentMethod.Card.ThreeDSecureUsage;
							}
						}
					}
					export class CardPresent extends com.stripe.android.model.PaymentMethod.TypeData {
						public static class: java.lang.Class<com.stripe.android.model.PaymentMethod.CardPresent>;
						public static Companion: com.stripe.android.model.PaymentMethod.CardPresent.Companion;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethod.CardPresent>;
						public static $stable: number;
						public getType(): com.stripe.android.model.PaymentMethod.Type;
						public describeContents(): number;
						public constructor();
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public constructor(param0: boolean);
						public copy(param0: boolean): com.stripe.android.model.PaymentMethod.CardPresent;
						public toString(): string;
					}
					export module CardPresent {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.PaymentMethod.CardPresent.Companion>;
							public getEMPTY$payments_core_release(): com.stripe.android.model.PaymentMethod.CardPresent;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethod.CardPresent> {
							public static class: java.lang.Class<com.stripe.android.model.PaymentMethod.CardPresent.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.PaymentMethod.CardPresent;
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.PaymentMethod.CardPresent>;
						}
					}
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.model.PaymentMethod.Companion>;
						public fromJson(param0: org.json.JSONObject): com.stripe.android.model.PaymentMethod;
					}
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethod> {
						public static class: java.lang.Class<com.stripe.android.model.PaymentMethod.Creator>;
						public constructor();
						public newArray(param0: number): androidNative.Array<com.stripe.android.model.PaymentMethod>;
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.PaymentMethod;
					}
					export class Fpx extends com.stripe.android.model.PaymentMethod.TypeData {
						public static class: java.lang.Class<com.stripe.android.model.PaymentMethod.Fpx>;
						public bank: string;
						public accountHolderType: string;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethod.Fpx>;
						public static $stable: number;
						public getType(): com.stripe.android.model.PaymentMethod.Type;
						public describeContents(): number;
						public component2(): string;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public copy(param0: string, param1: string): com.stripe.android.model.PaymentMethod.Fpx;
						public constructor(param0: string, param1: string);
						public toString(): string;
					}
					export module Fpx {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethod.Fpx> {
							public static class: java.lang.Class<com.stripe.android.model.PaymentMethod.Fpx.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.PaymentMethod.Fpx;
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.PaymentMethod.Fpx>;
						}
					}
					export class Ideal extends com.stripe.android.model.PaymentMethod.TypeData {
						public static class: java.lang.Class<com.stripe.android.model.PaymentMethod.Ideal>;
						public bank: string;
						public bankIdentifierCode: string;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethod.Ideal>;
						public static $stable: number;
						public getType(): com.stripe.android.model.PaymentMethod.Type;
						public describeContents(): number;
						public component2(): string;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public constructor(param0: string, param1: string);
						public copy(param0: string, param1: string): com.stripe.android.model.PaymentMethod.Ideal;
						public toString(): string;
					}
					export module Ideal {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethod.Ideal> {
							public static class: java.lang.Class<com.stripe.android.model.PaymentMethod.Ideal.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.PaymentMethod.Ideal>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.PaymentMethod.Ideal;
						}
					}
					export class Netbanking extends com.stripe.android.model.PaymentMethod.TypeData {
						public static class: java.lang.Class<com.stripe.android.model.PaymentMethod.Netbanking>;
						public bank: string;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethod.Netbanking>;
						public static $stable: number;
						public getType(): com.stripe.android.model.PaymentMethod.Type;
						public describeContents(): number;
						public copy(param0: string): com.stripe.android.model.PaymentMethod.Netbanking;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public toString(): string;
						public constructor(param0: string);
					}
					export module Netbanking {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethod.Netbanking> {
							public static class: java.lang.Class<com.stripe.android.model.PaymentMethod.Netbanking.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.PaymentMethod.Netbanking>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.PaymentMethod.Netbanking;
						}
					}
					export class SepaDebit extends com.stripe.android.model.PaymentMethod.TypeData {
						public static class: java.lang.Class<com.stripe.android.model.PaymentMethod.SepaDebit>;
						public bankCode: string;
						public branchCode: string;
						public country: string;
						public fingerprint: string;
						public last4: string;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethod.SepaDebit>;
						public static $stable: number;
						public getType(): com.stripe.android.model.PaymentMethod.Type;
						public component3(): string;
						public describeContents(): number;
						public component5(): string;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public toString(): string;
						public component4(): string;
						public component2(): string;
						public copy(param0: string, param1: string, param2: string, param3: string, param4: string): com.stripe.android.model.PaymentMethod.SepaDebit;
						public constructor(param0: string, param1: string, param2: string, param3: string, param4: string);
					}
					export module SepaDebit {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethod.SepaDebit> {
							public static class: java.lang.Class<com.stripe.android.model.PaymentMethod.SepaDebit.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.PaymentMethod.SepaDebit>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.PaymentMethod.SepaDebit;
						}
					}
					export class Sofort extends com.stripe.android.model.PaymentMethod.TypeData {
						public static class: java.lang.Class<com.stripe.android.model.PaymentMethod.Sofort>;
						public country: string;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethod.Sofort>;
						public static $stable: number;
						public getType(): com.stripe.android.model.PaymentMethod.Type;
						public describeContents(): number;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public copy(param0: string): com.stripe.android.model.PaymentMethod.Sofort;
						public toString(): string;
						public constructor(param0: string);
					}
					export module Sofort {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethod.Sofort> {
							public static class: java.lang.Class<com.stripe.android.model.PaymentMethod.Sofort.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.PaymentMethod.Sofort;
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.PaymentMethod.Sofort>;
						}
					}
					export class Type extends globalAndroid.os.Parcelable {
						public static class: java.lang.Class<com.stripe.android.model.PaymentMethod.Type>;
						public static Companion: com.stripe.android.model.PaymentMethod.Type.Companion;
						public code: string;
						public isReusable: boolean;
						public isVoucher: boolean;
						public requiresMandate: boolean;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethod.Type>;
						public static Card: com.stripe.android.model.PaymentMethod.Type;
						public static CardPresent: com.stripe.android.model.PaymentMethod.Type;
						public static Fpx: com.stripe.android.model.PaymentMethod.Type;
						public static Ideal: com.stripe.android.model.PaymentMethod.Type;
						public static SepaDebit: com.stripe.android.model.PaymentMethod.Type;
						public static AuBecsDebit: com.stripe.android.model.PaymentMethod.Type;
						public static BacsDebit: com.stripe.android.model.PaymentMethod.Type;
						public static Sofort: com.stripe.android.model.PaymentMethod.Type;
						public static Upi: com.stripe.android.model.PaymentMethod.Type;
						public static P24: com.stripe.android.model.PaymentMethod.Type;
						public static Bancontact: com.stripe.android.model.PaymentMethod.Type;
						public static Giropay: com.stripe.android.model.PaymentMethod.Type;
						public static Eps: com.stripe.android.model.PaymentMethod.Type;
						public static Oxxo: com.stripe.android.model.PaymentMethod.Type;
						public static Alipay: com.stripe.android.model.PaymentMethod.Type;
						public static GrabPay: com.stripe.android.model.PaymentMethod.Type;
						public static PayPal: com.stripe.android.model.PaymentMethod.Type;
						public static AfterpayClearpay: com.stripe.android.model.PaymentMethod.Type;
						public static Netbanking: com.stripe.android.model.PaymentMethod.Type;
						public static Blik: com.stripe.android.model.PaymentMethod.Type;
						public static WeChatPay: com.stripe.android.model.PaymentMethod.Type;
						public static Klarna: com.stripe.android.model.PaymentMethod.Type;
						public describeContents(): number;
						public static values(): androidNative.Array<com.stripe.android.model.PaymentMethod.Type>;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public static valueOf(param0: string): com.stripe.android.model.PaymentMethod.Type;
						public hasDelayedSettlement(): boolean;
						public toString(): string;
					}
					export module Type {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.PaymentMethod.Type.Companion>;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethod.Type> {
							public static class: java.lang.Class<com.stripe.android.model.PaymentMethod.Type.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.PaymentMethod.Type>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.PaymentMethod.Type;
						}
					}
					export abstract class TypeData extends com.stripe.android.core.model.StripeModel {
						public static class: java.lang.Class<com.stripe.android.model.PaymentMethod.TypeData>;
						public static $stable: number;
						public getType(): com.stripe.android.model.PaymentMethod.Type;
						public hashCode(): number;
						public equals(param0: any): boolean;
					}
					export class Upi extends com.stripe.android.model.PaymentMethod.TypeData {
						public static class: java.lang.Class<com.stripe.android.model.PaymentMethod.Upi>;
						public vpa: string;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethod.Upi>;
						public static $stable: number;
						public getType(): com.stripe.android.model.PaymentMethod.Type;
						public describeContents(): number;
						public copy(param0: string): com.stripe.android.model.PaymentMethod.Upi;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public toString(): string;
						public constructor(param0: string);
					}
					export module Upi {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethod.Upi> {
							public static class: java.lang.Class<com.stripe.android.model.PaymentMethod.Upi.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.PaymentMethod.Upi>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.PaymentMethod.Upi;
						}
					}
					export class WhenMappings {
						public static class: java.lang.Class<com.stripe.android.model.PaymentMethod.WhenMappings>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class PaymentMethodCreateParams extends com.stripe.android.model.StripeParamsModel {
					public static class: java.lang.Class<com.stripe.android.model.PaymentMethodCreateParams>;
					public static Companion: com.stripe.android.model.PaymentMethodCreateParams.Companion;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethodCreateParams>;
					public static $stable: number;
					public static create(param0: com.stripe.android.model.PaymentMethodCreateParams.AuBecsDebit, param1: com.stripe.android.model.PaymentMethod.BillingDetails): com.stripe.android.model.PaymentMethodCreateParams;
					public static createOxxo(param0: com.stripe.android.model.PaymentMethod.BillingDetails, param1: java.util.Map<string, string>): com.stripe.android.model.PaymentMethodCreateParams;
					public static create(param0: com.stripe.android.model.PaymentMethodCreateParams.BacsDebit, param1: com.stripe.android.model.PaymentMethod.BillingDetails): com.stripe.android.model.PaymentMethodCreateParams;
					public static createOxxo(param0: com.stripe.android.model.PaymentMethod.BillingDetails): com.stripe.android.model.PaymentMethodCreateParams;
					public static createWeChatPay(param0: com.stripe.android.model.PaymentMethod.BillingDetails): com.stripe.android.model.PaymentMethodCreateParams;
					public static create(param0: com.stripe.android.model.PaymentMethodCreateParams.Ideal, param1: com.stripe.android.model.PaymentMethod.BillingDetails, param2: java.util.Map<string, string>): com.stripe.android.model.PaymentMethodCreateParams;
					public getTypeCode(): string;
					public static create(param0: com.stripe.android.model.PaymentMethodCreateParams.Netbanking, param1: com.stripe.android.model.PaymentMethod.BillingDetails, param2: java.util.Map<string, string>): com.stripe.android.model.PaymentMethodCreateParams;
					public static createPayPal(param0: java.util.Map<string, string>): com.stripe.android.model.PaymentMethodCreateParams;
					public static create(param0: com.stripe.android.model.PaymentMethodCreateParams.Netbanking, param1: com.stripe.android.model.PaymentMethod.BillingDetails): com.stripe.android.model.PaymentMethodCreateParams;
					public static create(param0: com.stripe.android.model.PaymentMethodCreateParams.SepaDebit): com.stripe.android.model.PaymentMethodCreateParams;
					public static createAfterpayClearpay(): com.stripe.android.model.PaymentMethodCreateParams;
					public static create(param0: com.stripe.android.model.PaymentMethodCreateParams.BacsDebit, param1: com.stripe.android.model.PaymentMethod.BillingDetails, param2: java.util.Map<string, string>): com.stripe.android.model.PaymentMethodCreateParams;
					public static createBancontact(param0: com.stripe.android.model.PaymentMethod.BillingDetails): com.stripe.android.model.PaymentMethodCreateParams;
					public static create(param0: com.stripe.android.model.PaymentMethodCreateParams.Card, param1: com.stripe.android.model.PaymentMethod.BillingDetails): com.stripe.android.model.PaymentMethodCreateParams;
					public static createWeChatPay(): com.stripe.android.model.PaymentMethodCreateParams;
					public static createKlarna(): com.stripe.android.model.PaymentMethodCreateParams;
					public static createGrabPay(param0: com.stripe.android.model.PaymentMethod.BillingDetails): com.stripe.android.model.PaymentMethodCreateParams;
					public static createEps(param0: com.stripe.android.model.PaymentMethod.BillingDetails, param1: java.util.Map<string, string>): com.stripe.android.model.PaymentMethodCreateParams;
					public static create(param0: com.stripe.android.model.PaymentMethodCreateParams.Sofort): com.stripe.android.model.PaymentMethodCreateParams;
					public static createBancontact(param0: com.stripe.android.model.PaymentMethod.BillingDetails, param1: java.util.Map<string, string>): com.stripe.android.model.PaymentMethodCreateParams;
					public static createKlarna(param0: com.stripe.android.model.PaymentMethod.BillingDetails, param1: java.util.Map<string, string>): com.stripe.android.model.PaymentMethodCreateParams;
					public static create(param0: com.stripe.android.model.PaymentMethodCreateParams.Ideal): com.stripe.android.model.PaymentMethodCreateParams;
					public static createP24(param0: com.stripe.android.model.PaymentMethod.BillingDetails): com.stripe.android.model.PaymentMethodCreateParams;
					public static createGrabPay(param0: com.stripe.android.model.PaymentMethod.BillingDetails, param1: java.util.Map<string, string>): com.stripe.android.model.PaymentMethodCreateParams;
					public static createPayPal(): com.stripe.android.model.PaymentMethodCreateParams;
					public static create(param0: com.stripe.android.model.PaymentMethodCreateParams.SepaDebit, param1: com.stripe.android.model.PaymentMethod.BillingDetails, param2: java.util.Map<string, string>): com.stripe.android.model.PaymentMethodCreateParams;
					public static createAlipay(): com.stripe.android.model.PaymentMethodCreateParams;
					public static createGiropay(param0: com.stripe.android.model.PaymentMethod.BillingDetails, param1: java.util.Map<string, string>): com.stripe.android.model.PaymentMethodCreateParams;
					public static createGiropay(param0: com.stripe.android.model.PaymentMethod.BillingDetails): com.stripe.android.model.PaymentMethodCreateParams;
					public static create(param0: com.stripe.android.model.PaymentMethodCreateParams.Sofort, param1: com.stripe.android.model.PaymentMethod.BillingDetails, param2: java.util.Map<string, string>): com.stripe.android.model.PaymentMethodCreateParams;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public static createBlik(param0: com.stripe.android.model.PaymentMethod.BillingDetails): com.stripe.android.model.PaymentMethodCreateParams;
					public static createAfterpayClearpay(param0: com.stripe.android.model.PaymentMethod.BillingDetails): com.stripe.android.model.PaymentMethodCreateParams;
					public constructor(param0: com.stripe.android.model.PaymentMethod.Type, param1: com.stripe.android.model.PaymentMethodCreateParams.Card, param2: com.stripe.android.model.PaymentMethodCreateParams.Ideal, param3: com.stripe.android.model.PaymentMethodCreateParams.Fpx, param4: com.stripe.android.model.PaymentMethodCreateParams.SepaDebit, param5: com.stripe.android.model.PaymentMethodCreateParams.AuBecsDebit, param6: com.stripe.android.model.PaymentMethodCreateParams.BacsDebit, param7: com.stripe.android.model.PaymentMethodCreateParams.Sofort, param8: com.stripe.android.model.PaymentMethodCreateParams.Upi, param9: com.stripe.android.model.PaymentMethodCreateParams.Netbanking, param10: com.stripe.android.model.PaymentMethod.BillingDetails, param11: java.util.Map<string, string>, param12: java.util.Set<string>, param13: java.util.Map<string, any>);
					public static createAfterpayClearpay(param0: com.stripe.android.model.PaymentMethod.BillingDetails, param1: java.util.Map<string, string>): com.stripe.android.model.PaymentMethodCreateParams;
					public getBillingDetails(): com.stripe.android.model.PaymentMethod.BillingDetails;
					public static create(param0: com.stripe.android.model.PaymentMethodCreateParams.Fpx): com.stripe.android.model.PaymentMethodCreateParams;
					public static create(param0: com.stripe.android.model.PaymentMethodCreateParams.Ideal, param1: com.stripe.android.model.PaymentMethod.BillingDetails): com.stripe.android.model.PaymentMethodCreateParams;
					public static create(param0: com.stripe.android.model.PaymentMethodCreateParams.Upi): com.stripe.android.model.PaymentMethodCreateParams;
					public static createCard(param0: com.stripe.android.model.CardParams): com.stripe.android.model.PaymentMethodCreateParams;
					public static createFromGooglePay(param0: org.json.JSONObject): com.stripe.android.model.PaymentMethodCreateParams;
					public component2(): com.stripe.android.model.PaymentMethodCreateParams.Card;
					public static createBlik(param0: com.stripe.android.model.PaymentMethod.BillingDetails, param1: java.util.Map<string, string>): com.stripe.android.model.PaymentMethodCreateParams;
					public toString(): string;
					public static createEps(param0: com.stripe.android.model.PaymentMethod.BillingDetails): com.stripe.android.model.PaymentMethodCreateParams;
					public component11(): com.stripe.android.model.PaymentMethod.BillingDetails;
					public static createWeChatPay(param0: com.stripe.android.model.PaymentMethod.BillingDetails, param1: java.util.Map<string, string>): com.stripe.android.model.PaymentMethodCreateParams;
					public static createKlarna(param0: com.stripe.android.model.PaymentMethod.BillingDetails): com.stripe.android.model.PaymentMethodCreateParams;
					public hashCode(): number;
					public static create(param0: com.stripe.android.model.PaymentMethodCreateParams.AuBecsDebit, param1: com.stripe.android.model.PaymentMethod.BillingDetails, param2: java.util.Map<string, string>): com.stripe.android.model.PaymentMethodCreateParams;
					public static create(param0: com.stripe.android.model.PaymentMethodCreateParams.Upi, param1: com.stripe.android.model.PaymentMethod.BillingDetails, param2: java.util.Map<string, string>): com.stripe.android.model.PaymentMethodCreateParams;
					public static create(param0: com.stripe.android.model.PaymentMethodCreateParams.SepaDebit, param1: com.stripe.android.model.PaymentMethod.BillingDetails): com.stripe.android.model.PaymentMethodCreateParams;
					public copy(param0: com.stripe.android.model.PaymentMethod.Type, param1: com.stripe.android.model.PaymentMethodCreateParams.Card, param2: com.stripe.android.model.PaymentMethodCreateParams.Ideal, param3: com.stripe.android.model.PaymentMethodCreateParams.Fpx, param4: com.stripe.android.model.PaymentMethodCreateParams.SepaDebit, param5: com.stripe.android.model.PaymentMethodCreateParams.AuBecsDebit, param6: com.stripe.android.model.PaymentMethodCreateParams.BacsDebit, param7: com.stripe.android.model.PaymentMethodCreateParams.Sofort, param8: com.stripe.android.model.PaymentMethodCreateParams.Upi, param9: com.stripe.android.model.PaymentMethodCreateParams.Netbanking, param10: com.stripe.android.model.PaymentMethod.BillingDetails, param11: java.util.Map<string, string>, param12: java.util.Set<string>, param13: java.util.Map<string, any>): com.stripe.android.model.PaymentMethodCreateParams;
					public describeContents(): number;
					public static create(param0: com.stripe.android.model.PaymentMethodCreateParams.Card): com.stripe.android.model.PaymentMethodCreateParams;
					public component1$payments_core_release(): com.stripe.android.model.PaymentMethod.Type;
					public static create(param0: com.stripe.android.model.PaymentMethodCreateParams.Card, param1: com.stripe.android.model.PaymentMethod.BillingDetails, param2: java.util.Map<string, string>): com.stripe.android.model.PaymentMethodCreateParams;
					public getType$payments_core_release(): com.stripe.android.model.PaymentMethod.Type;
					public toParamMap(): java.util.Map<string, any>;
					public static create(param0: com.stripe.android.model.PaymentMethodCreateParams.Netbanking): com.stripe.android.model.PaymentMethodCreateParams;
					public getCard(): com.stripe.android.model.PaymentMethodCreateParams.Card;
					public equals(param0: any): boolean;
					public static create(param0: com.stripe.android.model.PaymentMethodCreateParams.Upi, param1: com.stripe.android.model.PaymentMethod.BillingDetails): com.stripe.android.model.PaymentMethodCreateParams;
					public static createP24(param0: com.stripe.android.model.PaymentMethod.BillingDetails, param1: java.util.Map<string, string>): com.stripe.android.model.PaymentMethodCreateParams;
					public static create(param0: com.stripe.android.model.PaymentMethodCreateParams.Fpx, param1: com.stripe.android.model.PaymentMethod.BillingDetails, param2: java.util.Map<string, string>): com.stripe.android.model.PaymentMethodCreateParams;
					public static create(param0: com.stripe.android.model.PaymentMethodCreateParams.Sofort, param1: com.stripe.android.model.PaymentMethod.BillingDetails): com.stripe.android.model.PaymentMethodCreateParams;
					public static createAlipay(param0: java.util.Map<string, string>): com.stripe.android.model.PaymentMethodCreateParams;
					public static create(param0: com.stripe.android.model.PaymentMethodCreateParams.Fpx, param1: com.stripe.android.model.PaymentMethod.BillingDetails): com.stripe.android.model.PaymentMethodCreateParams;
					public static createBlik(): com.stripe.android.model.PaymentMethodCreateParams;
				}
				export module PaymentMethodCreateParams {
					export class AuBecsDebit extends com.stripe.android.model.StripeParamsModel {
						public static class: java.lang.Class<com.stripe.android.model.PaymentMethodCreateParams.AuBecsDebit>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethodCreateParams.AuBecsDebit>;
						public static $stable: number;
						public getAccountNumber(): string;
						public copy(param0: string, param1: string): com.stripe.android.model.PaymentMethodCreateParams.AuBecsDebit;
						public describeContents(): number;
						public setAccountNumber(param0: string): void;
						public toParamMap(): java.util.Map<string, any>;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getBsbNumber(): string;
						public toString(): string;
						public component2(): string;
						public constructor(param0: string, param1: string);
						public setBsbNumber(param0: string): void;
					}
					export module AuBecsDebit {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.PaymentMethodCreateParams.AuBecsDebit.Companion>;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethodCreateParams.AuBecsDebit> {
							public static class: java.lang.Class<com.stripe.android.model.PaymentMethodCreateParams.AuBecsDebit.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.PaymentMethodCreateParams.AuBecsDebit>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.PaymentMethodCreateParams.AuBecsDebit;
						}
					}
					export class BacsDebit extends com.stripe.android.model.StripeParamsModel {
						public static class: java.lang.Class<com.stripe.android.model.PaymentMethodCreateParams.BacsDebit>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethodCreateParams.BacsDebit>;
						public static $stable: number;
						public getAccountNumber(): string;
						public describeContents(): number;
						public setAccountNumber(param0: string): void;
						public toParamMap(): java.util.Map<string, any>;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public setSortCode(param0: string): void;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public copy(param0: string, param1: string): com.stripe.android.model.PaymentMethodCreateParams.BacsDebit;
						public toString(): string;
						public component2(): string;
						public constructor(param0: string, param1: string);
						public getSortCode(): string;
					}
					export module BacsDebit {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.PaymentMethodCreateParams.BacsDebit.Companion>;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethodCreateParams.BacsDebit> {
							public static class: java.lang.Class<com.stripe.android.model.PaymentMethodCreateParams.BacsDebit.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.PaymentMethodCreateParams.BacsDebit>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.PaymentMethodCreateParams.BacsDebit;
						}
					}
					export class Card extends com.stripe.android.model.StripeParamsModel {
						public static class: java.lang.Class<com.stripe.android.model.PaymentMethodCreateParams.Card>;
						public static Companion: com.stripe.android.model.PaymentMethodCreateParams.Card.Companion;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethodCreateParams.Card>;
						public static $stable: number;
						public constructor(param0: string, param1: java.lang.Integer, param2: java.lang.Integer, param3: string, param4: string, param5: java.util.Set<string>);
						public describeContents(): number;
						public constructor();
						public toParamMap(): java.util.Map<string, any>;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getAttribution$payments_core_release(): java.util.Set<string>;
						public component6$payments_core_release(): java.util.Set<string>;
						public getBrand$payments_core_release(): com.stripe.android.model.CardBrand;
						public getExpiryMonth$payments_core_release(): java.lang.Integer;
						public toString(): string;
						public getExpiryYear$payments_core_release(): java.lang.Integer;
						public component4$payments_core_release(): string;
						public getLast4(): string;
						public getCvc$payments_core_release(): string;
						public component1$payments_core_release(): string;
						public copy(param0: string, param1: java.lang.Integer, param2: java.lang.Integer, param3: string, param4: string, param5: java.util.Set<string>): com.stripe.android.model.PaymentMethodCreateParams.Card;
						public getNumber$payments_core_release(): string;
						public component2$payments_core_release(): java.lang.Integer;
						public static create(param0: string): com.stripe.android.model.PaymentMethodCreateParams.Card;
						public getLast4$payments_core_release(): string;
						public component3$payments_core_release(): java.lang.Integer;
					}
					export module Card {
						export class Builder extends com.stripe.android.ObjectBuilder<com.stripe.android.model.PaymentMethodCreateParams.Card> {
							public static class: java.lang.Class<com.stripe.android.model.PaymentMethodCreateParams.Card.Builder>;
							public static $stable: number;
							public constructor();
							public build(): com.stripe.android.model.PaymentMethodCreateParams.Card;
							public setExpiryMonth(param0: java.lang.Integer): com.stripe.android.model.PaymentMethodCreateParams.Card.Builder;
							public build(): any;
							public setCvc(param0: string): com.stripe.android.model.PaymentMethodCreateParams.Card.Builder;
							public setNumber(param0: string): com.stripe.android.model.PaymentMethodCreateParams.Card.Builder;
							public setExpiryYear(param0: java.lang.Integer): com.stripe.android.model.PaymentMethodCreateParams.Card.Builder;
						}
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.PaymentMethodCreateParams.Card.Companion>;
							public create(param0: string): com.stripe.android.model.PaymentMethodCreateParams.Card;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethodCreateParams.Card> {
							public static class: java.lang.Class<com.stripe.android.model.PaymentMethodCreateParams.Card.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.PaymentMethodCreateParams.Card;
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.PaymentMethodCreateParams.Card>;
						}
					}
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.model.PaymentMethodCreateParams.Companion>;
						public createEps(param0: com.stripe.android.model.PaymentMethod.BillingDetails): com.stripe.android.model.PaymentMethodCreateParams;
						public createBlik(param0: com.stripe.android.model.PaymentMethod.BillingDetails, param1: java.util.Map<string, string>): com.stripe.android.model.PaymentMethodCreateParams;
						public createKlarna(param0: com.stripe.android.model.PaymentMethod.BillingDetails): com.stripe.android.model.PaymentMethodCreateParams;
						public create(param0: com.stripe.android.model.PaymentMethodCreateParams.Card, param1: com.stripe.android.model.PaymentMethod.BillingDetails, param2: java.util.Map<string, string>): com.stripe.android.model.PaymentMethodCreateParams;
						public createGiropay(param0: com.stripe.android.model.PaymentMethod.BillingDetails, param1: java.util.Map<string, string>): com.stripe.android.model.PaymentMethodCreateParams;
						public create(param0: com.stripe.android.model.PaymentMethodCreateParams.Ideal, param1: com.stripe.android.model.PaymentMethod.BillingDetails, param2: java.util.Map<string, string>): com.stripe.android.model.PaymentMethodCreateParams;
						public createAlipay(): com.stripe.android.model.PaymentMethodCreateParams;
						public createWeChatPay(param0: com.stripe.android.model.PaymentMethod.BillingDetails): com.stripe.android.model.PaymentMethodCreateParams;
						public createAfterpayClearpay(param0: com.stripe.android.model.PaymentMethod.BillingDetails): com.stripe.android.model.PaymentMethodCreateParams;
						public create(param0: com.stripe.android.model.PaymentMethodCreateParams.SepaDebit, param1: com.stripe.android.model.PaymentMethod.BillingDetails): com.stripe.android.model.PaymentMethodCreateParams;
						public create(param0: com.stripe.android.model.PaymentMethodCreateParams.Fpx, param1: com.stripe.android.model.PaymentMethod.BillingDetails, param2: java.util.Map<string, string>): com.stripe.android.model.PaymentMethodCreateParams;
						public create(param0: com.stripe.android.model.PaymentMethodCreateParams.Ideal): com.stripe.android.model.PaymentMethodCreateParams;
						public createEps(param0: com.stripe.android.model.PaymentMethod.BillingDetails, param1: java.util.Map<string, string>): com.stripe.android.model.PaymentMethodCreateParams;
						public createPayPal(): com.stripe.android.model.PaymentMethodCreateParams;
						public createAfterpayClearpay(param0: com.stripe.android.model.PaymentMethod.BillingDetails, param1: java.util.Map<string, string>): com.stripe.android.model.PaymentMethodCreateParams;
						public createCard(param0: com.stripe.android.model.CardParams): com.stripe.android.model.PaymentMethodCreateParams;
						public createPayPal(param0: java.util.Map<string, string>): com.stripe.android.model.PaymentMethodCreateParams;
						public create(param0: com.stripe.android.model.PaymentMethodCreateParams.Card, param1: com.stripe.android.model.PaymentMethod.BillingDetails): com.stripe.android.model.PaymentMethodCreateParams;
						public create(param0: com.stripe.android.model.PaymentMethodCreateParams.Sofort, param1: com.stripe.android.model.PaymentMethod.BillingDetails, param2: java.util.Map<string, string>): com.stripe.android.model.PaymentMethodCreateParams;
						public create(param0: com.stripe.android.model.PaymentMethodCreateParams.Sofort, param1: com.stripe.android.model.PaymentMethod.BillingDetails): com.stripe.android.model.PaymentMethodCreateParams;
						public create(param0: com.stripe.android.model.PaymentMethodCreateParams.Upi, param1: com.stripe.android.model.PaymentMethod.BillingDetails): com.stripe.android.model.PaymentMethodCreateParams;
						public createAfterpayClearpay(): com.stripe.android.model.PaymentMethodCreateParams;
						public create(param0: com.stripe.android.model.PaymentMethodCreateParams.Fpx, param1: com.stripe.android.model.PaymentMethod.BillingDetails): com.stripe.android.model.PaymentMethodCreateParams;
						public create(param0: com.stripe.android.model.PaymentMethodCreateParams.BacsDebit, param1: com.stripe.android.model.PaymentMethod.BillingDetails, param2: java.util.Map<string, string>): com.stripe.android.model.PaymentMethodCreateParams;
						public create(param0: com.stripe.android.model.PaymentMethodCreateParams.Ideal, param1: com.stripe.android.model.PaymentMethod.BillingDetails): com.stripe.android.model.PaymentMethodCreateParams;
						public createKlarna(param0: com.stripe.android.model.PaymentMethod.BillingDetails, param1: java.util.Map<string, string>): com.stripe.android.model.PaymentMethodCreateParams;
						public create(param0: com.stripe.android.model.PaymentMethodCreateParams.Netbanking, param1: com.stripe.android.model.PaymentMethod.BillingDetails, param2: java.util.Map<string, string>): com.stripe.android.model.PaymentMethodCreateParams;
						public createGrabPay(param0: com.stripe.android.model.PaymentMethod.BillingDetails): com.stripe.android.model.PaymentMethodCreateParams;
						public createFromGooglePay(param0: org.json.JSONObject): com.stripe.android.model.PaymentMethodCreateParams;
						public create(param0: com.stripe.android.model.PaymentMethodCreateParams.SepaDebit): com.stripe.android.model.PaymentMethodCreateParams;
						public createP24(param0: com.stripe.android.model.PaymentMethod.BillingDetails): com.stripe.android.model.PaymentMethodCreateParams;
						public createWithOverride(param0: com.stripe.android.model.PaymentMethod.Type, param1: java.util.Map<string, any>, param2: java.util.Set<string>): com.stripe.android.model.PaymentMethodCreateParams;
						public createOxxo(param0: com.stripe.android.model.PaymentMethod.BillingDetails): com.stripe.android.model.PaymentMethodCreateParams;
						public createP24(param0: com.stripe.android.model.PaymentMethod.BillingDetails, param1: java.util.Map<string, string>): com.stripe.android.model.PaymentMethodCreateParams;
						public createKlarna(): com.stripe.android.model.PaymentMethodCreateParams;
						public createOxxo(param0: com.stripe.android.model.PaymentMethod.BillingDetails, param1: java.util.Map<string, string>): com.stripe.android.model.PaymentMethodCreateParams;
						public create(param0: com.stripe.android.model.PaymentMethodCreateParams.SepaDebit, param1: com.stripe.android.model.PaymentMethod.BillingDetails, param2: java.util.Map<string, string>): com.stripe.android.model.PaymentMethodCreateParams;
						public createAlipay(param0: java.util.Map<string, string>): com.stripe.android.model.PaymentMethodCreateParams;
						public createBlik(): com.stripe.android.model.PaymentMethodCreateParams;
						public createWeChatPay(): com.stripe.android.model.PaymentMethodCreateParams;
						public create(param0: com.stripe.android.model.PaymentMethodCreateParams.AuBecsDebit, param1: com.stripe.android.model.PaymentMethod.BillingDetails, param2: java.util.Map<string, string>): com.stripe.android.model.PaymentMethodCreateParams;
						public create(param0: com.stripe.android.model.PaymentMethodCreateParams.Card): com.stripe.android.model.PaymentMethodCreateParams;
						public create(param0: com.stripe.android.model.PaymentMethodCreateParams.AuBecsDebit, param1: com.stripe.android.model.PaymentMethod.BillingDetails): com.stripe.android.model.PaymentMethodCreateParams;
						public createBancontact(param0: com.stripe.android.model.PaymentMethod.BillingDetails): com.stripe.android.model.PaymentMethodCreateParams;
						public create(param0: com.stripe.android.model.PaymentMethodCreateParams.BacsDebit, param1: com.stripe.android.model.PaymentMethod.BillingDetails): com.stripe.android.model.PaymentMethodCreateParams;
						public create(param0: com.stripe.android.model.PaymentMethodCreateParams.Sofort): com.stripe.android.model.PaymentMethodCreateParams;
						public createBlik(param0: com.stripe.android.model.PaymentMethod.BillingDetails): com.stripe.android.model.PaymentMethodCreateParams;
						public createGrabPay(param0: com.stripe.android.model.PaymentMethod.BillingDetails, param1: java.util.Map<string, string>): com.stripe.android.model.PaymentMethodCreateParams;
						public createBancontact(param0: com.stripe.android.model.PaymentMethod.BillingDetails, param1: java.util.Map<string, string>): com.stripe.android.model.PaymentMethodCreateParams;
						public create(param0: com.stripe.android.model.PaymentMethodCreateParams.Netbanking): com.stripe.android.model.PaymentMethodCreateParams;
						public createWeChatPay(param0: com.stripe.android.model.PaymentMethod.BillingDetails, param1: java.util.Map<string, string>): com.stripe.android.model.PaymentMethodCreateParams;
						public create(param0: com.stripe.android.model.PaymentMethodCreateParams.Upi): com.stripe.android.model.PaymentMethodCreateParams;
						public create(param0: com.stripe.android.model.PaymentMethodCreateParams.Upi, param1: com.stripe.android.model.PaymentMethod.BillingDetails, param2: java.util.Map<string, string>): com.stripe.android.model.PaymentMethodCreateParams;
						public create(param0: com.stripe.android.model.PaymentMethodCreateParams.Netbanking, param1: com.stripe.android.model.PaymentMethod.BillingDetails): com.stripe.android.model.PaymentMethodCreateParams;
						public create(param0: com.stripe.android.model.PaymentMethodCreateParams.Fpx): com.stripe.android.model.PaymentMethodCreateParams;
						public createGiropay(param0: com.stripe.android.model.PaymentMethod.BillingDetails): com.stripe.android.model.PaymentMethodCreateParams;
					}
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethodCreateParams> {
						public static class: java.lang.Class<com.stripe.android.model.PaymentMethodCreateParams.Creator>;
						public constructor();
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.PaymentMethodCreateParams;
						public newArray(param0: number): androidNative.Array<com.stripe.android.model.PaymentMethodCreateParams>;
					}
					export class Fpx extends com.stripe.android.model.StripeParamsModel {
						public static class: java.lang.Class<com.stripe.android.model.PaymentMethodCreateParams.Fpx>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethodCreateParams.Fpx>;
						public static $stable: number;
						public getBank(): string;
						public copy(param0: string): com.stripe.android.model.PaymentMethodCreateParams.Fpx;
						public describeContents(): number;
						public toParamMap(): java.util.Map<string, any>;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public setBank(param0: string): void;
						public toString(): string;
						public constructor(param0: string);
					}
					export module Fpx {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.PaymentMethodCreateParams.Fpx.Companion>;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethodCreateParams.Fpx> {
							public static class: java.lang.Class<com.stripe.android.model.PaymentMethodCreateParams.Fpx.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.PaymentMethodCreateParams.Fpx;
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.PaymentMethodCreateParams.Fpx>;
						}
					}
					export class Ideal extends com.stripe.android.model.StripeParamsModel {
						public static class: java.lang.Class<com.stripe.android.model.PaymentMethodCreateParams.Ideal>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethodCreateParams.Ideal>;
						public static $stable: number;
						public getBank(): string;
						public describeContents(): number;
						public toParamMap(): java.util.Map<string, any>;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public copy(param0: string): com.stripe.android.model.PaymentMethodCreateParams.Ideal;
						public setBank(param0: string): void;
						public toString(): string;
						public constructor(param0: string);
					}
					export module Ideal {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.PaymentMethodCreateParams.Ideal.Companion>;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethodCreateParams.Ideal> {
							public static class: java.lang.Class<com.stripe.android.model.PaymentMethodCreateParams.Ideal.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.PaymentMethodCreateParams.Ideal;
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.PaymentMethodCreateParams.Ideal>;
						}
					}
					export class Netbanking extends com.stripe.android.model.StripeParamsModel {
						public static class: java.lang.Class<com.stripe.android.model.PaymentMethodCreateParams.Netbanking>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethodCreateParams.Netbanking>;
						public static $stable: number;
						public component1$payments_core_release(): string;
						public describeContents(): number;
						public getBank$payments_core_release(): string;
						public setBank$payments_core_release(param0: string): void;
						public toParamMap(): java.util.Map<string, any>;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public copy(param0: string): com.stripe.android.model.PaymentMethodCreateParams.Netbanking;
						public toString(): string;
						public constructor(param0: string);
					}
					export module Netbanking {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.PaymentMethodCreateParams.Netbanking.Companion>;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethodCreateParams.Netbanking> {
							public static class: java.lang.Class<com.stripe.android.model.PaymentMethodCreateParams.Netbanking.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.PaymentMethodCreateParams.Netbanking;
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.PaymentMethodCreateParams.Netbanking>;
						}
					}
					export class SepaDebit extends com.stripe.android.model.StripeParamsModel {
						public static class: java.lang.Class<com.stripe.android.model.PaymentMethodCreateParams.SepaDebit>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethodCreateParams.SepaDebit>;
						public static $stable: number;
						public describeContents(): number;
						public setIban(param0: string): void;
						public toParamMap(): java.util.Map<string, any>;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public copy(param0: string): com.stripe.android.model.PaymentMethodCreateParams.SepaDebit;
						public getIban(): string;
						public toString(): string;
						public constructor(param0: string);
					}
					export module SepaDebit {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.PaymentMethodCreateParams.SepaDebit.Companion>;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethodCreateParams.SepaDebit> {
							public static class: java.lang.Class<com.stripe.android.model.PaymentMethodCreateParams.SepaDebit.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.PaymentMethodCreateParams.SepaDebit;
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.PaymentMethodCreateParams.SepaDebit>;
						}
					}
					export class Sofort extends com.stripe.android.model.StripeParamsModel {
						public static class: java.lang.Class<com.stripe.android.model.PaymentMethodCreateParams.Sofort>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethodCreateParams.Sofort>;
						public static $stable: number;
						public component1$payments_core_release(): string;
						public describeContents(): number;
						public getCountry$payments_core_release(): string;
						public toParamMap(): java.util.Map<string, any>;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public setCountry$payments_core_release(param0: string): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public toString(): string;
						public constructor(param0: string);
						public copy(param0: string): com.stripe.android.model.PaymentMethodCreateParams.Sofort;
					}
					export module Sofort {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.PaymentMethodCreateParams.Sofort.Companion>;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethodCreateParams.Sofort> {
							public static class: java.lang.Class<com.stripe.android.model.PaymentMethodCreateParams.Sofort.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.PaymentMethodCreateParams.Sofort>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.PaymentMethodCreateParams.Sofort;
						}
					}
					export class Upi extends com.stripe.android.model.StripeParamsModel {
						public static class: java.lang.Class<com.stripe.android.model.PaymentMethodCreateParams.Upi>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethodCreateParams.Upi>;
						public static $stable: number;
						public describeContents(): number;
						public toParamMap(): java.util.Map<string, any>;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public copy(param0: string): com.stripe.android.model.PaymentMethodCreateParams.Upi;
						public toString(): string;
						public constructor(param0: string);
					}
					export module Upi {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.PaymentMethodCreateParams.Upi.Companion>;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethodCreateParams.Upi> {
							public static class: java.lang.Class<com.stripe.android.model.PaymentMethodCreateParams.Upi.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.PaymentMethodCreateParams.Upi;
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.PaymentMethodCreateParams.Upi>;
						}
					}
					export class WhenMappings {
						public static class: java.lang.Class<com.stripe.android.model.PaymentMethodCreateParams.WhenMappings>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export abstract class PaymentMethodOptionsParams extends com.stripe.android.model.StripeParamsModel {
					public static class: java.lang.Class<com.stripe.android.model.PaymentMethodOptionsParams>;
					public static $stable: number;
					public createTypeParams$payments_core_release(): java.util.List<kotlin.Pair<string, any>>;
					public toParamMap(): java.util.Map<string, any>;
					public getType(): com.stripe.android.model.PaymentMethod.Type;
				}
				export module PaymentMethodOptionsParams {
					export class Blik extends com.stripe.android.model.PaymentMethodOptionsParams {
						public static class: java.lang.Class<com.stripe.android.model.PaymentMethodOptionsParams.Blik>;
						public static Companion: com.stripe.android.model.PaymentMethodOptionsParams.Blik.Companion;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethodOptionsParams.Blik>;
						public static $stable: number;
						public static PARAM_CODE: string;
						public describeContents(): number;
						public toParamMap(): java.util.Map<string, any>;
						public setCode(param0: string): void;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public copy(param0: string): com.stripe.android.model.PaymentMethodOptionsParams.Blik;
						public getCode(): string;
						public createTypeParams$payments_core_release(): java.util.List<kotlin.Pair<string, any>>;
						public toString(): string;
						public constructor(param0: string);
					}
					export module Blik {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.PaymentMethodOptionsParams.Blik.Companion>;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethodOptionsParams.Blik> {
							public static class: java.lang.Class<com.stripe.android.model.PaymentMethodOptionsParams.Blik.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.PaymentMethodOptionsParams.Blik;
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.PaymentMethodOptionsParams.Blik>;
						}
					}
					export class Card extends com.stripe.android.model.PaymentMethodOptionsParams {
						public static class: java.lang.Class<com.stripe.android.model.PaymentMethodOptionsParams.Card>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethodOptionsParams.Card>;
						public static $stable: number;
						public copy(param0: string, param1: string): com.stripe.android.model.PaymentMethodOptionsParams.Card;
						public describeContents(): number;
						public constructor();
						public toParamMap(): java.util.Map<string, any>;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getNetwork(): string;
						public toString(): string;
						public component2(): string;
						public setCvc(param0: string): void;
						public setNetwork(param0: string): void;
						public constructor(param0: string, param1: string);
						public createTypeParams$payments_core_release(): java.util.List<kotlin.Pair<string, any>>;
						public getCvc(): string;
					}
					export module Card {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.PaymentMethodOptionsParams.Card.Companion>;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethodOptionsParams.Card> {
							public static class: java.lang.Class<com.stripe.android.model.PaymentMethodOptionsParams.Card.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.PaymentMethodOptionsParams.Card>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.PaymentMethodOptionsParams.Card;
						}
					}
					export class WeChatPay extends com.stripe.android.model.PaymentMethodOptionsParams {
						public static class: java.lang.Class<com.stripe.android.model.PaymentMethodOptionsParams.WeChatPay>;
						public static Companion: com.stripe.android.model.PaymentMethodOptionsParams.WeChatPay.Companion;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethodOptionsParams.WeChatPay>;
						public static $stable: number;
						public static PARAM_CLIENT: string;
						public static PARAM_APP_ID: string;
						public describeContents(): number;
						public copy(param0: string): com.stripe.android.model.PaymentMethodOptionsParams.WeChatPay;
						public toParamMap(): java.util.Map<string, any>;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getAppId(): string;
						public setAppId(param0: string): void;
						public createTypeParams$payments_core_release(): java.util.List<kotlin.Pair<string, any>>;
						public toString(): string;
						public constructor(param0: string);
					}
					export module WeChatPay {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.PaymentMethodOptionsParams.WeChatPay.Companion>;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethodOptionsParams.WeChatPay> {
							public static class: java.lang.Class<com.stripe.android.model.PaymentMethodOptionsParams.WeChatPay.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.PaymentMethodOptionsParams.WeChatPay;
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.PaymentMethodOptionsParams.WeChatPay>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class PaymentMethodsList extends com.stripe.android.core.model.StripeModel {
					public static class: java.lang.Class<com.stripe.android.model.PaymentMethodsList>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethodsList>;
					public equals(param0: any): boolean;
					public constructor(param0: java.util.List<com.stripe.android.model.PaymentMethod>);
					public toString(): string;
					public describeContents(): number;
					public copy(param0: java.util.List<com.stripe.android.model.PaymentMethod>): com.stripe.android.model.PaymentMethodsList;
					public component1(): java.util.List<com.stripe.android.model.PaymentMethod>;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public hashCode(): number;
					public getPaymentMethods(): java.util.List<com.stripe.android.model.PaymentMethod>;
				}
				export module PaymentMethodsList {
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PaymentMethodsList> {
						public static class: java.lang.Class<com.stripe.android.model.PaymentMethodsList.Creator>;
						public constructor();
						public newArray(param0: number): androidNative.Array<com.stripe.android.model.PaymentMethodsList>;
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.PaymentMethodsList;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class PersonTokenParams extends com.stripe.android.model.TokenParams {
					public static class: java.lang.Class<com.stripe.android.model.PersonTokenParams>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PersonTokenParams>;
					public static $stable: number;
					public constructor(param0: com.stripe.android.model.Token.Type, param1: java.util.Set<string>);
					public component5(): string;
					public getTypeDataParams(): java.util.Map<string, any>;
					public getFirstNameKana(): string;
					public getLastNameKana(): string;
					public component8(): string;
					public constructor();
					public getDateOfBirth(): com.stripe.android.model.DateOfBirth;
					public component12(): string;
					public getPhone(): string;
					public constructor(param0: com.stripe.android.model.Address, param1: com.stripe.android.model.AddressJapanParams, param2: com.stripe.android.model.AddressJapanParams, param3: com.stripe.android.model.DateOfBirth, param4: string, param5: string, param6: string, param7: string, param8: string, param9: string, param10: string, param11: string, param12: string, param13: string, param14: java.util.Map<string, string>, param15: string, param16: com.stripe.android.model.PersonTokenParams.Relationship, param17: string, param18: com.stripe.android.model.PersonTokenParams.Verification);
					public getEmail(): string;
					public getVerification(): com.stripe.android.model.PersonTokenParams.Verification;
					public getMaidenName(): string;
					public getRelationship(): com.stripe.android.model.PersonTokenParams.Relationship;
					public getLastName(): string;
					public component2(): com.stripe.android.model.AddressJapanParams;
					public getMetadata(): java.util.Map<string, string>;
					public component3(): com.stripe.android.model.AddressJapanParams;
					public component9(): string;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public getAddress(): com.stripe.android.model.Address;
					public component14(): string;
					public component16(): string;
					public component17(): com.stripe.android.model.PersonTokenParams.Relationship;
					public getAddressKana(): com.stripe.android.model.AddressJapanParams;
					public component13(): string;
					public getAddressKanji(): com.stripe.android.model.AddressJapanParams;
					public toString(): string;
					public getFirstName(): string;
					public getGender(): string;
					public hashCode(): number;
					public component11(): string;
					public component7(): string;
					public describeContents(): number;
					public component1(): com.stripe.android.model.Address;
					public component4(): com.stripe.android.model.DateOfBirth;
					public toParamMap(): java.util.Map<string, any>;
					public getLastNameKanji(): string;
					public getSsnLast4(): string;
					public component10(): string;
					public equals(param0: any): boolean;
					public component15(): java.util.Map<string, string>;
					public component19(): com.stripe.android.model.PersonTokenParams.Verification;
					public getFirstNameKanji(): string;
					public copy(param0: com.stripe.android.model.Address, param1: com.stripe.android.model.AddressJapanParams, param2: com.stripe.android.model.AddressJapanParams, param3: com.stripe.android.model.DateOfBirth, param4: string, param5: string, param6: string, param7: string, param8: string, param9: string, param10: string, param11: string, param12: string, param13: string, param14: java.util.Map<string, string>, param15: string, param16: com.stripe.android.model.PersonTokenParams.Relationship, param17: string, param18: com.stripe.android.model.PersonTokenParams.Verification): com.stripe.android.model.PersonTokenParams;
					public component6(): string;
					public getIdNumber(): string;
					public component18(): string;
				}
				export module PersonTokenParams {
					export class Builder extends com.stripe.android.ObjectBuilder<com.stripe.android.model.PersonTokenParams> {
						public static class: java.lang.Class<com.stripe.android.model.PersonTokenParams.Builder>;
						public static $stable: number;
						public constructor();
						public setIdNumber(param0: string): com.stripe.android.model.PersonTokenParams.Builder;
						public setLastName(param0: string): com.stripe.android.model.PersonTokenParams.Builder;
						public setFirstName(param0: string): com.stripe.android.model.PersonTokenParams.Builder;
						public setFirstNameKanji(param0: string): com.stripe.android.model.PersonTokenParams.Builder;
						public setAddressKanji(param0: com.stripe.android.model.AddressJapanParams): com.stripe.android.model.PersonTokenParams.Builder;
						public setSsnLast4(param0: string): com.stripe.android.model.PersonTokenParams.Builder;
						public setFirstNameKana(param0: string): com.stripe.android.model.PersonTokenParams.Builder;
						public setPhone(param0: string): com.stripe.android.model.PersonTokenParams.Builder;
						public setRelationship(param0: com.stripe.android.model.PersonTokenParams.Relationship): com.stripe.android.model.PersonTokenParams.Builder;
						public setEmail(param0: string): com.stripe.android.model.PersonTokenParams.Builder;
						public setLastNameKanji(param0: string): com.stripe.android.model.PersonTokenParams.Builder;
						public setAddress(param0: com.stripe.android.model.Address): com.stripe.android.model.PersonTokenParams.Builder;
						public setDateOfBirth(param0: com.stripe.android.model.DateOfBirth): com.stripe.android.model.PersonTokenParams.Builder;
						public build(): any;
						public setAddressKana(param0: com.stripe.android.model.AddressJapanParams): com.stripe.android.model.PersonTokenParams.Builder;
						public setVerification(param0: com.stripe.android.model.PersonTokenParams.Verification): com.stripe.android.model.PersonTokenParams.Builder;
						public setMaidenName(param0: string): com.stripe.android.model.PersonTokenParams.Builder;
						public setGender(param0: string): com.stripe.android.model.PersonTokenParams.Builder;
						public setMetadata(param0: java.util.Map<string, string>): com.stripe.android.model.PersonTokenParams.Builder;
						public setLastNameKana(param0: string): com.stripe.android.model.PersonTokenParams.Builder;
						public build(): com.stripe.android.model.PersonTokenParams;
					}
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.model.PersonTokenParams.Companion>;
					}
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PersonTokenParams> {
						public static class: java.lang.Class<com.stripe.android.model.PersonTokenParams.Creator>;
						public constructor();
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.PersonTokenParams;
						public newArray(param0: number): androidNative.Array<com.stripe.android.model.PersonTokenParams>;
					}
					export class Document extends com.stripe.android.model.StripeParamsModel {
						public static class: java.lang.Class<com.stripe.android.model.PersonTokenParams.Document>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PersonTokenParams.Document>;
						public static $stable: number;
						public describeContents(): number;
						public constructor();
						public copy(param0: string, param1: string): com.stripe.android.model.PersonTokenParams.Document;
						public getFront(): string;
						public toParamMap(): java.util.Map<string, any>;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getBack(): string;
						public toString(): string;
						public component2(): string;
						public constructor(param0: string, param1: string);
						public constructor(param0: string);
					}
					export module Document {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.PersonTokenParams.Document.Companion>;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PersonTokenParams.Document> {
							public static class: java.lang.Class<com.stripe.android.model.PersonTokenParams.Document.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.PersonTokenParams.Document>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.PersonTokenParams.Document;
						}
					}
					export class Relationship extends com.stripe.android.model.StripeParamsModel {
						public static class: java.lang.Class<com.stripe.android.model.PersonTokenParams.Relationship>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PersonTokenParams.Relationship>;
						public static $stable: number;
						public describeContents(): number;
						public constructor();
						public getExecutive(): java.lang.Boolean;
						public toParamMap(): java.util.Map<string, any>;
						public component5(): java.lang.Boolean;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public component3(): java.lang.Boolean;
						public component1(): java.lang.Boolean;
						public toString(): string;
						public getTitle(): string;
						public getRepresentative(): java.lang.Boolean;
						public getPercentOwnership(): java.lang.Integer;
						public constructor(param0: java.lang.Boolean, param1: java.lang.Boolean, param2: java.lang.Boolean, param3: java.lang.Integer, param4: java.lang.Boolean, param5: string);
						public copy(param0: java.lang.Boolean, param1: java.lang.Boolean, param2: java.lang.Boolean, param3: java.lang.Integer, param4: java.lang.Boolean, param5: string): com.stripe.android.model.PersonTokenParams.Relationship;
						public component4(): java.lang.Integer;
						public getOwner(): java.lang.Boolean;
						public component6(): string;
						public component2(): java.lang.Boolean;
						public getDirector(): java.lang.Boolean;
					}
					export module Relationship {
						export class Builder extends com.stripe.android.ObjectBuilder<com.stripe.android.model.PersonTokenParams.Relationship> {
							public static class: java.lang.Class<com.stripe.android.model.PersonTokenParams.Relationship.Builder>;
							public static $stable: number;
							public constructor();
							public setPercentOwnership(param0: java.lang.Integer): com.stripe.android.model.PersonTokenParams.Relationship.Builder;
							public setExecutive(param0: java.lang.Boolean): com.stripe.android.model.PersonTokenParams.Relationship.Builder;
							public setDirector(param0: java.lang.Boolean): com.stripe.android.model.PersonTokenParams.Relationship.Builder;
							public setRepresentative(param0: java.lang.Boolean): com.stripe.android.model.PersonTokenParams.Relationship.Builder;
							public build(): any;
							public setOwner(param0: java.lang.Boolean): com.stripe.android.model.PersonTokenParams.Relationship.Builder;
							public setTitle(param0: string): com.stripe.android.model.PersonTokenParams.Relationship.Builder;
							public build(): com.stripe.android.model.PersonTokenParams.Relationship;
						}
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.PersonTokenParams.Relationship.Companion>;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PersonTokenParams.Relationship> {
							public static class: java.lang.Class<com.stripe.android.model.PersonTokenParams.Relationship.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.PersonTokenParams.Relationship;
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.PersonTokenParams.Relationship>;
						}
					}
					export class Verification extends com.stripe.android.model.StripeParamsModel {
						public static class: java.lang.Class<com.stripe.android.model.PersonTokenParams.Verification>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PersonTokenParams.Verification>;
						public static $stable: number;
						public describeContents(): number;
						public constructor();
						public copy(param0: com.stripe.android.model.PersonTokenParams.Document, param1: com.stripe.android.model.PersonTokenParams.Document): com.stripe.android.model.PersonTokenParams.Verification;
						public constructor(param0: com.stripe.android.model.PersonTokenParams.Document, param1: com.stripe.android.model.PersonTokenParams.Document);
						public getAdditionalDocument(): com.stripe.android.model.PersonTokenParams.Document;
						public toParamMap(): java.util.Map<string, any>;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public component2(): com.stripe.android.model.PersonTokenParams.Document;
						public constructor(param0: com.stripe.android.model.PersonTokenParams.Document);
						public toString(): string;
						public getDocument(): com.stripe.android.model.PersonTokenParams.Document;
						public component1(): com.stripe.android.model.PersonTokenParams.Document;
					}
					export module Verification {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.PersonTokenParams.Verification.Companion>;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PersonTokenParams.Verification> {
							public static class: java.lang.Class<com.stripe.android.model.PersonTokenParams.Verification.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.PersonTokenParams.Verification>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.PersonTokenParams.Verification;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class PiiTokenParams extends com.stripe.android.model.TokenParams {
					public static class: java.lang.Class<com.stripe.android.model.PiiTokenParams>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PiiTokenParams>;
					public constructor(param0: com.stripe.android.model.Token.Type, param1: java.util.Set<string>);
					public equals(param0: any): boolean;
					public toString(): string;
					public constructor(param0: string);
					public copy(param0: string): com.stripe.android.model.PiiTokenParams;
					public getTypeDataParams(): java.util.Map<string, any>;
					public describeContents(): number;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public hashCode(): number;
					public toParamMap(): java.util.Map<string, any>;
				}
				export module PiiTokenParams {
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.PiiTokenParams> {
						public static class: java.lang.Class<com.stripe.android.model.PiiTokenParams.Creator>;
						public constructor();
						public newArray(param0: number): androidNative.Array<com.stripe.android.model.PiiTokenParams>;
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.PiiTokenParams;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class RadarSession extends com.stripe.android.core.model.StripeModel {
					public static class: java.lang.Class<com.stripe.android.model.RadarSession>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.RadarSession>;
					public static $stable: number;
					public equals(param0: any): boolean;
					public toString(): string;
					public getId(): string;
					public component1(): string;
					public constructor(param0: string);
					public describeContents(): number;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public copy(param0: string): com.stripe.android.model.RadarSession;
					public hashCode(): number;
				}
				export module RadarSession {
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.RadarSession> {
						public static class: java.lang.Class<com.stripe.android.model.RadarSession.Creator>;
						public constructor();
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.RadarSession;
						public newArray(param0: number): androidNative.Array<com.stripe.android.model.RadarSession>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class SetupIntent extends com.stripe.android.model.StripeIntent {
					public static class: java.lang.Class<com.stripe.android.model.SetupIntent>;
					public static Companion: com.stripe.android.model.SetupIntent.Companion;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.SetupIntent>;
					public static $stable: number;
					public component10(): com.stripe.android.model.StripeIntent.Status;
					public getId(): string;
					public getUsage(): com.stripe.android.model.StripeIntent.Usage;
					public requiresConfirmation(): boolean;
					public component5(): string;
					public component13(): java.util.List<string>;
					public component3(): number;
					public static fromJson(param0: org.json.JSONObject): com.stripe.android.model.SetupIntent;
					public component14(): com.stripe.android.model.StripeIntent.NextActionData;
					public component11(): com.stripe.android.model.StripeIntent.Usage;
					public getLastErrorMessage(): string;
					public component6(): boolean;
					public getClientSecret(): string;
					public getNextActionType(): com.stripe.android.model.StripeIntent.NextActionType;
					public toString(): string;
					public getCancellationReason(): com.stripe.android.model.SetupIntent.CancellationReason;
					public isLiveMode(): boolean;
					public component8(): string;
					public getPaymentMethodTypes(): java.util.List<string>;
					public component4(): string;
					public hashCode(): number;
					public getPaymentMethodId(): string;
					public copy(param0: string, param1: com.stripe.android.model.SetupIntent.CancellationReason, param2: number, param3: string, param4: string, param5: boolean, param6: com.stripe.android.model.PaymentMethod, param7: string, param8: java.util.List<string>, param9: com.stripe.android.model.StripeIntent.Status, param10: com.stripe.android.model.StripeIntent.Usage, param11: com.stripe.android.model.SetupIntent.Error, param12: java.util.List<string>, param13: com.stripe.android.model.StripeIntent.NextActionData): com.stripe.android.model.SetupIntent;
					public component2(): com.stripe.android.model.SetupIntent.CancellationReason;
					public getUnactivatedPaymentMethods(): java.util.List<string>;
					public component9(): java.util.List<string>;
					public getCreated(): number;
					public describeContents(): number;
					public getLastSetupError(): com.stripe.android.model.SetupIntent.Error;
					public getPaymentMethod(): com.stripe.android.model.PaymentMethod;
					public getNextActionData(): com.stripe.android.model.StripeIntent.NextActionData;
					public component12(): com.stripe.android.model.SetupIntent.Error;
					public equals(param0: any): boolean;
					public isConfirmed(): boolean;
					public getStatus(): com.stripe.android.model.StripeIntent.Status;
					public requiresAction(): boolean;
					public component1(): string;
					public constructor(param0: string, param1: com.stripe.android.model.SetupIntent.CancellationReason, param2: number, param3: string, param4: string, param5: boolean, param6: com.stripe.android.model.PaymentMethod, param7: string, param8: java.util.List<string>, param9: com.stripe.android.model.StripeIntent.Status, param10: com.stripe.android.model.StripeIntent.Usage, param11: com.stripe.android.model.SetupIntent.Error, param12: java.util.List<string>, param13: com.stripe.android.model.StripeIntent.NextActionData);
					public component7(): com.stripe.android.model.PaymentMethod;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public getDescription(): string;
				}
				export module SetupIntent {
					export class CancellationReason {
						public static class: java.lang.Class<com.stripe.android.model.SetupIntent.CancellationReason>;
						public static Companion: com.stripe.android.model.SetupIntent.CancellationReason.Companion;
						public static Duplicate: com.stripe.android.model.SetupIntent.CancellationReason;
						public static RequestedByCustomer: com.stripe.android.model.SetupIntent.CancellationReason;
						public static Abandoned: com.stripe.android.model.SetupIntent.CancellationReason;
						public static values(): androidNative.Array<com.stripe.android.model.SetupIntent.CancellationReason>;
						public static valueOf(param0: string): com.stripe.android.model.SetupIntent.CancellationReason;
					}
					export module CancellationReason {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.SetupIntent.CancellationReason.Companion>;
							public fromCode$payments_core_release(param0: string): com.stripe.android.model.SetupIntent.CancellationReason;
						}
					}
					export class ClientSecret {
						public static class: java.lang.Class<com.stripe.android.model.SetupIntent.ClientSecret>;
						public static Companion: com.stripe.android.model.SetupIntent.ClientSecret.Companion;
						public getValue$payments_core_release(): string;
						public component1$payments_core_release(): string;
						public copy(param0: string): com.stripe.android.model.SetupIntent.ClientSecret;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public toString(): string;
						public constructor(param0: string);
						public getSetupIntentId$payments_core_release(): string;
					}
					export module ClientSecret {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.SetupIntent.ClientSecret.Companion>;
							public isMatch(param0: string): boolean;
						}
					}
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.model.SetupIntent.Companion>;
						public fromJson(param0: org.json.JSONObject): com.stripe.android.model.SetupIntent;
					}
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.SetupIntent> {
						public static class: java.lang.Class<com.stripe.android.model.SetupIntent.Creator>;
						public constructor();
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.SetupIntent;
						public newArray(param0: number): androidNative.Array<com.stripe.android.model.SetupIntent>;
					}
					export class Error extends com.stripe.android.core.model.StripeModel {
						public static class: java.lang.Class<com.stripe.android.model.SetupIntent.Error>;
						public static Companion: com.stripe.android.model.SetupIntent.Error.Companion;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.SetupIntent.Error>;
						public static $stable: number;
						public static CODE_AUTHENTICATION_ERROR: string;
						public component7(): com.stripe.android.model.SetupIntent.Error.Type;
						public getMessage(): string;
						public component3(): string;
						public describeContents(): number;
						public component5(): string;
						public getDeclineCode(): string;
						public getParam(): string;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getPaymentMethod(): com.stripe.android.model.PaymentMethod;
						public copy(param0: string, param1: string, param2: string, param3: string, param4: string, param5: com.stripe.android.model.PaymentMethod, param6: com.stripe.android.model.SetupIntent.Error.Type): com.stripe.android.model.SetupIntent.Error;
						public toString(): string;
						public getDocUrl(): string;
						public component4(): string;
						public constructor(param0: string, param1: string, param2: string, param3: string, param4: string, param5: com.stripe.android.model.PaymentMethod, param6: com.stripe.android.model.SetupIntent.Error.Type);
						public getType(): com.stripe.android.model.SetupIntent.Error.Type;
						public component2(): string;
						public getCode(): string;
						public component6(): com.stripe.android.model.PaymentMethod;
					}
					export module Error {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.SetupIntent.Error.Companion>;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.SetupIntent.Error> {
							public static class: java.lang.Class<com.stripe.android.model.SetupIntent.Error.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.SetupIntent.Error;
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.SetupIntent.Error>;
						}
						export class Type {
							public static class: java.lang.Class<com.stripe.android.model.SetupIntent.Error.Type>;
							public static Companion: com.stripe.android.model.SetupIntent.Error.Type.Companion;
							public static ApiConnectionError: com.stripe.android.model.SetupIntent.Error.Type;
							public static ApiError: com.stripe.android.model.SetupIntent.Error.Type;
							public static AuthenticationError: com.stripe.android.model.SetupIntent.Error.Type;
							public static CardError: com.stripe.android.model.SetupIntent.Error.Type;
							public static IdempotencyError: com.stripe.android.model.SetupIntent.Error.Type;
							public static InvalidRequestError: com.stripe.android.model.SetupIntent.Error.Type;
							public static RateLimitError: com.stripe.android.model.SetupIntent.Error.Type;
							public getCode(): string;
							public static valueOf(param0: string): com.stripe.android.model.SetupIntent.Error.Type;
							public static values(): androidNative.Array<com.stripe.android.model.SetupIntent.Error.Type>;
						}
						export module Type {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.SetupIntent.Error.Type.Companion>;
								public fromCode$payments_core_release(param0: string): com.stripe.android.model.SetupIntent.Error.Type;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class ShippingInformation implements com.stripe.android.core.model.StripeModel, com.stripe.android.model.StripeParamsModel {
					public static class: java.lang.Class<com.stripe.android.model.ShippingInformation>;
					public static Companion: com.stripe.android.model.ShippingInformation.Companion;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.ShippingInformation>;
					public static $stable: number;
					public component2(): string;
					public copy(param0: com.stripe.android.model.Address, param1: string, param2: string): com.stripe.android.model.ShippingInformation;
					public constructor(param0: com.stripe.android.model.Address, param1: string, param2: string);
					public describeContents(): number;
					public component3(): string;
					public component1(): com.stripe.android.model.Address;
					public toParamMap(): java.util.Map<string, any>;
					public equals(param0: any): boolean;
					public toString(): string;
					public getName(): string;
					public constructor();
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public getPhone(): string;
					public hashCode(): number;
					public getAddress(): com.stripe.android.model.Address;
				}
				export module ShippingInformation {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.model.ShippingInformation.Companion>;
					}
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.ShippingInformation> {
						public static class: java.lang.Class<com.stripe.android.model.ShippingInformation.Creator>;
						public constructor();
						public newArray(param0: number): androidNative.Array<com.stripe.android.model.ShippingInformation>;
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.ShippingInformation;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class ShippingMethod extends com.stripe.android.core.model.StripeModel {
					public static class: java.lang.Class<com.stripe.android.model.ShippingMethod>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.ShippingMethod>;
					public static $stable: number;
					public getLabel(): string;
					public component2(): string;
					public component5(): string;
					public copy(param0: string, param1: string, param2: number, param3: java.util.Currency, param4: string): com.stripe.android.model.ShippingMethod;
					public component3(): number;
					public describeContents(): number;
					public component4(): java.util.Currency;
					public getIdentifier(): string;
					public constructor(param0: string, param1: string, param2: number, param3: java.util.Currency, param4: string);
					public equals(param0: any): boolean;
					public getAmount(): number;
					public toString(): string;
					public component1(): string;
					public constructor(param0: string, param1: string, param2: number, param3: string, param4: string);
					public constructor(param0: string, param1: string, param2: number, param3: java.util.Currency);
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public constructor(param0: string, param1: string, param2: number, param3: string);
					public getDetail(): string;
					public hashCode(): number;
					public getCurrency(): java.util.Currency;
				}
				export module ShippingMethod {
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.ShippingMethod> {
						public static class: java.lang.Class<com.stripe.android.model.ShippingMethod.Creator>;
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.ShippingMethod;
						public constructor();
						public newArray(param0: number): androidNative.Array<com.stripe.android.model.ShippingMethod>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class Source implements com.stripe.android.core.model.StripeModel, com.stripe.android.model.StripePaymentSource {
					public static class: java.lang.Class<com.stripe.android.model.Source>;
					public static Companion: com.stripe.android.model.Source.Companion;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.Source>;
					public static $stable: number;
					public static EURO: string;
					public static USD: string;
					public copy(param0: string, param1: java.lang.Long, param2: string, param3: com.stripe.android.model.Source.CodeVerification, param4: java.lang.Long, param5: string, param6: com.stripe.android.model.Source.Flow, param7: java.lang.Boolean, param8: com.stripe.android.model.Source.Owner, param9: com.stripe.android.model.Source.Receiver, param10: com.stripe.android.model.Source.Redirect, param11: com.stripe.android.model.Source.Status, param12: java.util.Map<string, any>, param13: com.stripe.android.model.SourceTypeModel, param14: string, param15: string, param16: com.stripe.android.model.Source.Usage, param17: com.stripe.android.model.WeChat, param18: com.stripe.android.model.Source.Klarna, param19: com.stripe.android.model.SourceOrder, param20: string): com.stripe.android.model.Source;
					public getId(): string;
					public component10(): com.stripe.android.model.Source.Receiver;
					public getStatus(): com.stripe.android.model.Source.Status;
					public component13(): java.util.Map<string, any>;
					public getFlow(): com.stripe.android.model.Source.Flow;
					public component2(): java.lang.Long;
					public getCodeVerification(): com.stripe.android.model.Source.CodeVerification;
					public component17(): com.stripe.android.model.Source.Usage;
					public component3(): string;
					public static asSourceType(param0: string): string;
					public getTypeRaw(): string;
					public component15(): string;
					public component1(): string;
					public component20(): com.stripe.android.model.SourceOrder;
					public getCreated(): java.lang.Long;
					public component9(): com.stripe.android.model.Source.Owner;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public component8(): java.lang.Boolean;
					public component16(): string;
					public getWeChat(): com.stripe.android.model.WeChat;
					public getCurrency(): string;
					public getRedirect(): com.stripe.android.model.Source.Redirect;
					public getSourceTypeModel(): com.stripe.android.model.SourceTypeModel;
					public getUsage(): com.stripe.android.model.Source.Usage;
					public getClientSecret(): string;
					public toString(): string;
					public getOwner(): com.stripe.android.model.Source.Owner;
					public static fromJson(param0: org.json.JSONObject): com.stripe.android.model.Source;
					public getSourceOrder(): com.stripe.android.model.SourceOrder;
					public constructor(param0: string, param1: java.lang.Long, param2: string, param3: com.stripe.android.model.Source.CodeVerification, param4: java.lang.Long, param5: string, param6: com.stripe.android.model.Source.Flow, param7: java.lang.Boolean, param8: com.stripe.android.model.Source.Owner, param9: com.stripe.android.model.Source.Receiver, param10: com.stripe.android.model.Source.Redirect, param11: com.stripe.android.model.Source.Status, param12: java.util.Map<string, any>, param13: com.stripe.android.model.SourceTypeModel, param14: string, param15: string, param16: com.stripe.android.model.Source.Usage, param17: com.stripe.android.model.WeChat, param18: com.stripe.android.model.Source.Klarna, param19: com.stripe.android.model.SourceOrder, param20: string);
					public getType(): string;
					public hashCode(): number;
					public getAmount(): java.lang.Long;
					public component5(): java.lang.Long;
					public describeContents(): number;
					public getSourceTypeData(): java.util.Map<string, any>;
					public getReceiver(): com.stripe.android.model.Source.Receiver;
					public component11(): com.stripe.android.model.Source.Redirect;
					public component4(): com.stripe.android.model.Source.CodeVerification;
					public component21(): string;
					public equals(param0: any): boolean;
					public component12(): com.stripe.android.model.Source.Status;
					public component6(): string;
					public getStatementDescriptor(): string;
					public component14(): com.stripe.android.model.SourceTypeModel;
					public isLiveMode(): java.lang.Boolean;
					public component7(): com.stripe.android.model.Source.Flow;
					public getKlarna(): com.stripe.android.model.Source.Klarna;
				}
				export module Source {
					export class CodeVerification extends com.stripe.android.core.model.StripeModel {
						public static class: java.lang.Class<com.stripe.android.model.Source.CodeVerification>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.Source.CodeVerification>;
						public static $stable: number;
						public describeContents(): number;
						public getStatus(): com.stripe.android.model.Source.CodeVerification.Status;
						public component2(): com.stripe.android.model.Source.CodeVerification.Status;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public copy(param0: number, param1: com.stripe.android.model.Source.CodeVerification.Status): com.stripe.android.model.Source.CodeVerification;
						public getAttemptsRemaining(): number;
						public component1(): number;
						public constructor(param0: number, param1: com.stripe.android.model.Source.CodeVerification.Status);
						public toString(): string;
					}
					export module CodeVerification {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.Source.CodeVerification> {
							public static class: java.lang.Class<com.stripe.android.model.Source.CodeVerification.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.Source.CodeVerification;
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.Source.CodeVerification>;
						}
						export class Status {
							public static class: java.lang.Class<com.stripe.android.model.Source.CodeVerification.Status>;
							public static Companion: com.stripe.android.model.Source.CodeVerification.Status.Companion;
							public static Pending: com.stripe.android.model.Source.CodeVerification.Status;
							public static Succeeded: com.stripe.android.model.Source.CodeVerification.Status;
							public static Failed: com.stripe.android.model.Source.CodeVerification.Status;
							public toString(): string;
							public static valueOf(param0: string): com.stripe.android.model.Source.CodeVerification.Status;
							public static values(): androidNative.Array<com.stripe.android.model.Source.CodeVerification.Status>;
						}
						export module Status {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.Source.CodeVerification.Status.Companion>;
								public fromCode(param0: string): com.stripe.android.model.Source.CodeVerification.Status;
							}
						}
					}
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.model.Source.Companion>;
						public fromJson(param0: org.json.JSONObject): com.stripe.android.model.Source;
						public asSourceType(param0: string): string;
					}
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.Source> {
						public static class: java.lang.Class<com.stripe.android.model.Source.Creator>;
						public constructor();
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.Source;
						public newArray(param0: number): androidNative.Array<com.stripe.android.model.Source>;
					}
					export class Flow {
						public static class: java.lang.Class<com.stripe.android.model.Source.Flow>;
						public static Companion: com.stripe.android.model.Source.Flow.Companion;
						public static Redirect: com.stripe.android.model.Source.Flow;
						public static Receiver: com.stripe.android.model.Source.Flow;
						public static CodeVerification: com.stripe.android.model.Source.Flow;
						public static None: com.stripe.android.model.Source.Flow;
						public static values(): androidNative.Array<com.stripe.android.model.Source.Flow>;
						public toString(): string;
						public getCode$payments_core_release(): string;
						public static valueOf(param0: string): com.stripe.android.model.Source.Flow;
					}
					export module Flow {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.Source.Flow.Companion>;
							public fromCode(param0: string): com.stripe.android.model.Source.Flow;
						}
					}
					export class Klarna extends com.stripe.android.core.model.StripeModel {
						public static class: java.lang.Class<com.stripe.android.model.Source.Klarna>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.Source.Klarna>;
						public static $stable: number;
						public component18(): java.util.Set<string>;
						public component5(): string;
						public component15(): string;
						public getCustomPaymentMethods(): java.util.Set<string>;
						public getPayLaterRedirectUrl(): string;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getPayNowAssetUrlsDescriptive(): string;
						public getPayOverTimeName(): string;
						public component11(): string;
						public component9(): string;
						public component4(): string;
						public component14(): string;
						public component17(): java.util.Set<string>;
						public getPayNowAssetUrlsStandard(): string;
						public getFirstName(): string;
						public getPayLaterAssetUrlsDescriptive(): string;
						public component10(): string;
						public copy(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string, param7: string, param8: string, param9: string, param10: string, param11: string, param12: string, param13: string, param14: string, param15: string, param16: java.util.Set<string>, param17: java.util.Set<string>): com.stripe.android.model.Source.Klarna;
						public component8(): string;
						public getClientToken(): string;
						public component3(): string;
						public component13(): string;
						public describeContents(): number;
						public constructor(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string, param7: string, param8: string, param9: string, param10: string, param11: string, param12: string, param13: string, param14: string, param15: string, param16: java.util.Set<string>, param17: java.util.Set<string>);
						public component7(): string;
						public getPayNowRedirectUrl(): string;
						public getPayLaterAssetUrlsStandard(): string;
						public toString(): string;
						public getPayOverTimeAssetUrlsDescriptive(): string;
						public getPayNowName(): string;
						public getPayLaterName(): string;
						public getPaymentMethodCategories(): java.util.Set<string>;
						public component12(): string;
						public getPayOverTimeRedirectUrl(): string;
						public component2(): string;
						public getLastName(): string;
						public getPurchaseCountry(): string;
						public component16(): string;
						public getPayOverTimeAssetUrlsStandard(): string;
						public component6(): string;
					}
					export module Klarna {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.Source.Klarna> {
							public static class: java.lang.Class<com.stripe.android.model.Source.Klarna.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.Source.Klarna>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.Source.Klarna;
						}
					}
					export class Owner extends com.stripe.android.core.model.StripeModel {
						public static class: java.lang.Class<com.stripe.android.model.Source.Owner>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.Source.Owner>;
						public static $stable: number;
						public component3(): string;
						public describeContents(): number;
						public getEmail(): string;
						public getPhone(): string;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public component7(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public constructor(param0: com.stripe.android.model.Address, param1: string, param2: string, param3: string, param4: com.stripe.android.model.Address, param5: string, param6: string, param7: string);
						public getName(): string;
						public component5(): com.stripe.android.model.Address;
						public toString(): string;
						public copy(param0: com.stripe.android.model.Address, param1: string, param2: string, param3: string, param4: com.stripe.android.model.Address, param5: string, param6: string, param7: string): com.stripe.android.model.Source.Owner;
						public component4(): string;
						public component1(): com.stripe.android.model.Address;
						public getVerifiedName(): string;
						public getVerifiedPhone(): string;
						public component2(): string;
						public getVerifiedAddress(): com.stripe.android.model.Address;
						public getVerifiedEmail(): string;
						public getAddress(): com.stripe.android.model.Address;
						public component6(): string;
						public component8(): string;
					}
					export module Owner {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.Source.Owner> {
							public static class: java.lang.Class<com.stripe.android.model.Source.Owner.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.Source.Owner;
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.Source.Owner>;
						}
					}
					export class Receiver extends com.stripe.android.core.model.StripeModel {
						public static class: java.lang.Class<com.stripe.android.model.Source.Receiver>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.Source.Receiver>;
						public static $stable: number;
						public describeContents(): number;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getAddress(): string;
						public component4(): number;
						public toString(): string;
						public getAmountReturned(): number;
						public component2(): number;
						public getAmountReceived(): number;
						public constructor(param0: string, param1: number, param2: number, param3: number);
						public getAmountCharged(): number;
						public copy(param0: string, param1: number, param2: number, param3: number): com.stripe.android.model.Source.Receiver;
						public component3(): number;
					}
					export module Receiver {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.Source.Receiver> {
							public static class: java.lang.Class<com.stripe.android.model.Source.Receiver.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.Source.Receiver;
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.Source.Receiver>;
						}
					}
					export class Redirect extends com.stripe.android.core.model.StripeModel {
						public static class: java.lang.Class<com.stripe.android.model.Source.Redirect>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.Source.Redirect>;
						public static $stable: number;
						public component3(): string;
						public copy(param0: string, param1: com.stripe.android.model.Source.Redirect.Status, param2: string): com.stripe.android.model.Source.Redirect;
						public describeContents(): number;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getUrl(): string;
						public getReturnUrl(): string;
						public toString(): string;
						public component2(): com.stripe.android.model.Source.Redirect.Status;
						public constructor(param0: string, param1: com.stripe.android.model.Source.Redirect.Status, param2: string);
						public getStatus(): com.stripe.android.model.Source.Redirect.Status;
					}
					export module Redirect {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.Source.Redirect> {
							public static class: java.lang.Class<com.stripe.android.model.Source.Redirect.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.Source.Redirect>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.Source.Redirect;
						}
						export class Status {
							public static class: java.lang.Class<com.stripe.android.model.Source.Redirect.Status>;
							public static Companion: com.stripe.android.model.Source.Redirect.Status.Companion;
							public static Pending: com.stripe.android.model.Source.Redirect.Status;
							public static Succeeded: com.stripe.android.model.Source.Redirect.Status;
							public static NotRequired: com.stripe.android.model.Source.Redirect.Status;
							public static Failed: com.stripe.android.model.Source.Redirect.Status;
							public static values(): androidNative.Array<com.stripe.android.model.Source.Redirect.Status>;
							public static valueOf(param0: string): com.stripe.android.model.Source.Redirect.Status;
							public toString(): string;
						}
						export module Status {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.Source.Redirect.Status.Companion>;
								public fromCode(param0: string): com.stripe.android.model.Source.Redirect.Status;
							}
						}
					}
					export class SourceType {
						public static class: java.lang.Class<com.stripe.android.model.Source.SourceType>;
						/**
						 * Constructs a new instance of the com.stripe.android.model.Source$SourceType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							<clinit>(): void;
						});
						public constructor();
						public static IDEAL: string;
						public static P24: string;
						public static ALIPAY: string;
						public static THREE_D_SECURE: string;
						public static SOFORT: string;
						public static UNKNOWN: string;
						public static GIROPAY: string;
						public static BANCONTACT: string;
						public static SEPA_DEBIT: string;
						public static MULTIBANCO: string;
						public static Companion: com.stripe.android.model.Source.SourceType.Companion;
						public static WECHAT: string;
						public static EPS: string;
						public static KLARNA: string;
						public static CARD: string;
					}
					export module SourceType {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.Source.SourceType.Companion>;
							public static ALIPAY: string;
							public static CARD: string;
							public static THREE_D_SECURE: string;
							public static GIROPAY: string;
							public static SEPA_DEBIT: string;
							public static IDEAL: string;
							public static SOFORT: string;
							public static BANCONTACT: string;
							public static P24: string;
							public static EPS: string;
							public static MULTIBANCO: string;
							public static WECHAT: string;
							public static KLARNA: string;
							public static UNKNOWN: string;
						}
					}
					export class Status {
						public static class: java.lang.Class<com.stripe.android.model.Source.Status>;
						public static Companion: com.stripe.android.model.Source.Status.Companion;
						public static Canceled: com.stripe.android.model.Source.Status;
						public static Chargeable: com.stripe.android.model.Source.Status;
						public static Consumed: com.stripe.android.model.Source.Status;
						public static Failed: com.stripe.android.model.Source.Status;
						public static Pending: com.stripe.android.model.Source.Status;
						public static valueOf(param0: string): com.stripe.android.model.Source.Status;
						public static values(): androidNative.Array<com.stripe.android.model.Source.Status>;
						public toString(): string;
					}
					export module Status {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.Source.Status.Companion>;
							public fromCode(param0: string): com.stripe.android.model.Source.Status;
						}
					}
					export class Usage {
						public static class: java.lang.Class<com.stripe.android.model.Source.Usage>;
						public static Companion: com.stripe.android.model.Source.Usage.Companion;
						public static Reusable: com.stripe.android.model.Source.Usage;
						public static SingleUse: com.stripe.android.model.Source.Usage;
						public static valueOf(param0: string): com.stripe.android.model.Source.Usage;
						public toString(): string;
						public getCode$payments_core_release(): string;
						public static values(): androidNative.Array<com.stripe.android.model.Source.Usage>;
					}
					export module Usage {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.Source.Usage.Companion>;
							public fromCode(param0: string): com.stripe.android.model.Source.Usage;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class SourceOrder extends com.stripe.android.core.model.StripeModel {
					public static class: java.lang.Class<com.stripe.android.model.SourceOrder>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.SourceOrder>;
					public static $stable: number;
					public component2(): string;
					public getCurrency(): string;
					public describeContents(): number;
					public component3(): string;
					public getItems(): java.util.List<com.stripe.android.model.SourceOrder.Item>;
					public getShipping(): com.stripe.android.model.SourceOrder.Shipping;
					public component1(): java.lang.Integer;
					public getAmount(): java.lang.Integer;
					public component5(): com.stripe.android.model.SourceOrder.Shipping;
					public constructor(param0: java.lang.Integer, param1: string, param2: string, param3: java.util.List<com.stripe.android.model.SourceOrder.Item>, param4: com.stripe.android.model.SourceOrder.Shipping);
					public equals(param0: any): boolean;
					public toString(): string;
					public constructor();
					public copy(param0: java.lang.Integer, param1: string, param2: string, param3: java.util.List<com.stripe.android.model.SourceOrder.Item>, param4: com.stripe.android.model.SourceOrder.Shipping): com.stripe.android.model.SourceOrder;
					public component4(): java.util.List<com.stripe.android.model.SourceOrder.Item>;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public hashCode(): number;
					public getEmail(): string;
				}
				export module SourceOrder {
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.SourceOrder> {
						public static class: java.lang.Class<com.stripe.android.model.SourceOrder.Creator>;
						public constructor();
						public newArray(param0: number): androidNative.Array<com.stripe.android.model.SourceOrder>;
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.SourceOrder;
					}
					export class Item extends com.stripe.android.core.model.StripeModel {
						public static class: java.lang.Class<com.stripe.android.model.SourceOrder.Item>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.SourceOrder.Item>;
						public static $stable: number;
						public copy(param0: com.stripe.android.model.SourceOrder.Item.Type, param1: java.lang.Integer, param2: string, param3: string, param4: java.lang.Integer): com.stripe.android.model.SourceOrder.Item;
						public component3(): string;
						public describeContents(): number;
						public component5(): java.lang.Integer;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getAmount(): java.lang.Integer;
						public component2(): java.lang.Integer;
						public getQuantity(): java.lang.Integer;
						public toString(): string;
						public component4(): string;
						public getType(): com.stripe.android.model.SourceOrder.Item.Type;
						public constructor(param0: com.stripe.android.model.SourceOrder.Item.Type, param1: java.lang.Integer, param2: string, param3: string, param4: java.lang.Integer);
						public getDescription(): string;
						public component1(): com.stripe.android.model.SourceOrder.Item.Type;
						public getCurrency(): string;
					}
					export module Item {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.SourceOrder.Item> {
							public static class: java.lang.Class<com.stripe.android.model.SourceOrder.Item.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.SourceOrder.Item;
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.SourceOrder.Item>;
						}
						export class Type {
							public static class: java.lang.Class<com.stripe.android.model.SourceOrder.Item.Type>;
							public static Companion: com.stripe.android.model.SourceOrder.Item.Type.Companion;
							public static Sku: com.stripe.android.model.SourceOrder.Item.Type;
							public static Tax: com.stripe.android.model.SourceOrder.Item.Type;
							public static Shipping: com.stripe.android.model.SourceOrder.Item.Type;
							public static valueOf(param0: string): com.stripe.android.model.SourceOrder.Item.Type;
							public static values(): androidNative.Array<com.stripe.android.model.SourceOrder.Item.Type>;
						}
						export module Type {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.SourceOrder.Item.Type.Companion>;
							}
						}
					}
					export class Shipping extends com.stripe.android.core.model.StripeModel {
						public static class: java.lang.Class<com.stripe.android.model.SourceOrder.Shipping>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.SourceOrder.Shipping>;
						public static $stable: number;
						public component3(): string;
						public describeContents(): number;
						public constructor();
						public component5(): string;
						public getTrackingNumber(): string;
						public getPhone(): string;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public copy(param0: com.stripe.android.model.Address, param1: string, param2: string, param3: string, param4: string): com.stripe.android.model.SourceOrder.Shipping;
						public getCarrier(): string;
						public getName(): string;
						public toString(): string;
						public component4(): string;
						public component1(): com.stripe.android.model.Address;
						public constructor(param0: com.stripe.android.model.Address, param1: string, param2: string, param3: string, param4: string);
						public component2(): string;
						public getAddress(): com.stripe.android.model.Address;
					}
					export module Shipping {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.SourceOrder.Shipping> {
							public static class: java.lang.Class<com.stripe.android.model.SourceOrder.Shipping.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.SourceOrder.Shipping>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.SourceOrder.Shipping;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class SourceOrderParams extends com.stripe.android.model.StripeParamsModel {
					public static class: java.lang.Class<com.stripe.android.model.SourceOrderParams>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.SourceOrderParams>;
					public static $stable: number;
					public getShipping(): com.stripe.android.model.SourceOrderParams.Shipping;
					public getItems(): java.util.List<com.stripe.android.model.SourceOrderParams.Item>;
					public describeContents(): number;
					public toParamMap(): java.util.Map<string, any>;
					public constructor(param0: java.util.List<com.stripe.android.model.SourceOrderParams.Item>, param1: com.stripe.android.model.SourceOrderParams.Shipping);
					public equals(param0: any): boolean;
					public toString(): string;
					public constructor();
					public constructor(param0: java.util.List<com.stripe.android.model.SourceOrderParams.Item>);
					public copy(param0: java.util.List<com.stripe.android.model.SourceOrderParams.Item>, param1: com.stripe.android.model.SourceOrderParams.Shipping): com.stripe.android.model.SourceOrderParams;
					public component1(): java.util.List<com.stripe.android.model.SourceOrderParams.Item>;
					public component2(): com.stripe.android.model.SourceOrderParams.Shipping;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public hashCode(): number;
				}
				export module SourceOrderParams {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.model.SourceOrderParams.Companion>;
					}
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.SourceOrderParams> {
						public static class: java.lang.Class<com.stripe.android.model.SourceOrderParams.Creator>;
						public constructor();
						public newArray(param0: number): androidNative.Array<com.stripe.android.model.SourceOrderParams>;
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.SourceOrderParams;
					}
					export class Item extends com.stripe.android.model.StripeParamsModel {
						public static class: java.lang.Class<com.stripe.android.model.SourceOrderParams.Item>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.SourceOrderParams.Item>;
						public static $stable: number;
						public component3(): string;
						public describeContents(): number;
						public constructor();
						public component5(): string;
						public toParamMap(): java.util.Map<string, any>;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getAmount(): java.lang.Integer;
						public component2(): java.lang.Integer;
						public getQuantity(): java.lang.Integer;
						public component1(): com.stripe.android.model.SourceOrderParams.Item.Type;
						public getParent(): string;
						public toString(): string;
						public component4(): string;
						public copy(param0: com.stripe.android.model.SourceOrderParams.Item.Type, param1: java.lang.Integer, param2: string, param3: string, param4: string, param5: java.lang.Integer): com.stripe.android.model.SourceOrderParams.Item;
						public getType(): com.stripe.android.model.SourceOrderParams.Item.Type;
						public constructor(param0: com.stripe.android.model.SourceOrderParams.Item.Type, param1: java.lang.Integer, param2: string, param3: string, param4: string, param5: java.lang.Integer);
						public getDescription(): string;
						public component6(): java.lang.Integer;
						public getCurrency(): string;
					}
					export module Item {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.SourceOrderParams.Item.Companion>;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.SourceOrderParams.Item> {
							public static class: java.lang.Class<com.stripe.android.model.SourceOrderParams.Item.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.SourceOrderParams.Item>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.SourceOrderParams.Item;
						}
						export class Type {
							public static class: java.lang.Class<com.stripe.android.model.SourceOrderParams.Item.Type>;
							public static Sku: com.stripe.android.model.SourceOrderParams.Item.Type;
							public static Tax: com.stripe.android.model.SourceOrderParams.Item.Type;
							public static Shipping: com.stripe.android.model.SourceOrderParams.Item.Type;
							public static values(): androidNative.Array<com.stripe.android.model.SourceOrderParams.Item.Type>;
							public static valueOf(param0: string): com.stripe.android.model.SourceOrderParams.Item.Type;
							public getCode$payments_core_release(): string;
						}
					}
					export class Shipping extends com.stripe.android.model.StripeParamsModel {
						public static class: java.lang.Class<com.stripe.android.model.SourceOrderParams.Shipping>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.SourceOrderParams.Shipping>;
						public static $stable: number;
						public component3(): string;
						public describeContents(): number;
						public component5(): string;
						public getTrackingNumber(): string;
						public toParamMap(): java.util.Map<string, any>;
						public getPhone(): string;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getCarrier(): string;
						public getName(): string;
						public toString(): string;
						public component4(): string;
						public component1(): com.stripe.android.model.Address;
						public constructor(param0: com.stripe.android.model.Address, param1: string, param2: string, param3: string, param4: string);
						public component2(): string;
						public getAddress(): com.stripe.android.model.Address;
						public copy(param0: com.stripe.android.model.Address, param1: string, param2: string, param3: string, param4: string): com.stripe.android.model.SourceOrderParams.Shipping;
					}
					export module Shipping {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.SourceOrderParams.Shipping.Companion>;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.SourceOrderParams.Shipping> {
							public static class: java.lang.Class<com.stripe.android.model.SourceOrderParams.Shipping.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.SourceOrderParams.Shipping;
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.SourceOrderParams.Shipping>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class SourceParams extends com.stripe.android.model.StripeParamsModel {
					public static class: java.lang.Class<com.stripe.android.model.SourceParams>;
					public static Companion: com.stripe.android.model.SourceParams.Companion;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.SourceParams>;
					public static $stable: number;
					public setTypeData$payments_core_release(param0: com.stripe.android.model.SourceParams.TypeData): void;
					public static createBancontactParams(param0: number, param1: string, param2: string, param3: string, param4: string): com.stripe.android.model.SourceParams;
					public static createVisaCheckoutParams(param0: string): com.stripe.android.model.SourceParams;
					public static createKlarna(param0: string, param1: string, param2: com.stripe.android.model.KlarnaSourceParams): com.stripe.android.model.SourceParams;
					public component9(): com.stripe.android.model.SourceOrderParams;
					public setFlow(param0: com.stripe.android.model.SourceParams.Flow): void;
					public static createSofortParams(param0: number, param1: string, param2: string, param3: string): com.stripe.android.model.SourceParams;
					public static createIdealParams(param0: number, param1: string, param2: string, param3: string, param4: string): com.stripe.android.model.SourceParams;
					public getApiParameterMap(): java.util.Map<string, any>;
					public component5(): com.stripe.android.model.SourceParams.OwnerParams;
					public static createThreeDSecureParams(param0: number, param1: string, param2: string, param3: string): com.stripe.android.model.SourceParams;
					public getTypeRaw(): string;
					public component14$payments_core_release(): java.util.Set<string>;
					public setCurrency(param0: string): void;
					public setApiParameterMap(param0: java.util.Map<string, any>): com.stripe.android.model.SourceParams;
					public setUsage(param0: com.stripe.android.model.Source.Usage): void;
					public static createAlipaySingleUseParams(param0: number, param1: string, param2: string, param3: string, param4: string): com.stripe.android.model.SourceParams;
					public component1(): string;
					public getSourceOrder(): com.stripe.android.model.SourceOrderParams;
					public getMetadata(): java.util.Map<string, string>;
					public getAttribution$payments_core_release(): java.util.Set<string>;
					public static createCustomParams(param0: string): com.stripe.android.model.SourceParams;
					public static createCardParamsFromGooglePay(param0: org.json.JSONObject): com.stripe.android.model.SourceParams;
					public constructor(param0: string, param1: com.stripe.android.model.SourceParams.TypeData, param2: java.lang.Long, param3: string, param4: com.stripe.android.model.SourceParams.OwnerParams, param5: com.stripe.android.model.Source.Usage, param6: string, param7: com.stripe.android.model.SourceParams.Flow, param8: com.stripe.android.model.SourceOrderParams, param9: string, param10: java.util.Map<string, string>, param11: com.stripe.android.model.SourceParams.WeChatParams, param12: com.stripe.android.model.SourceParams.ApiParams, param13: java.util.Set<string>);
					public getReturnUrl(): string;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public setMetadata(param0: java.util.Map<string, string>): void;
					public component8(): com.stripe.android.model.SourceParams.Flow;
					public static createSepaDebitParams(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string): com.stripe.android.model.SourceParams;
					public static createMasterpassParams(param0: string, param1: string): com.stripe.android.model.SourceParams;
					public static createSourceFromTokenParams(param0: string): com.stripe.android.model.SourceParams;
					public getCurrency(): string;
					public getToken(): string;
					public getFlow(): com.stripe.android.model.SourceParams.Flow;
					public getUsage(): com.stripe.android.model.Source.Usage;
					public component2$payments_core_release(): com.stripe.android.model.SourceParams.TypeData;
					public static createEPSParams(param0: number, param1: string, param2: string, param3: string): com.stripe.android.model.SourceParams;
					public toString(): string;
					public setOwner(param0: com.stripe.android.model.SourceParams.OwnerParams): void;
					public component3(): java.lang.Long;
					public setAmount(param0: java.lang.Long): void;
					public component4(): string;
					public setToken(param0: string): void;
					public copy(param0: string, param1: com.stripe.android.model.SourceParams.TypeData, param2: java.lang.Long, param3: string, param4: com.stripe.android.model.SourceParams.OwnerParams, param5: com.stripe.android.model.Source.Usage, param6: string, param7: com.stripe.android.model.SourceParams.Flow, param8: com.stripe.android.model.SourceOrderParams, param9: string, param10: java.util.Map<string, string>, param11: com.stripe.android.model.SourceParams.WeChatParams, param12: com.stripe.android.model.SourceParams.ApiParams, param13: java.util.Set<string>): com.stripe.android.model.SourceParams;
					public static createSepaDebitParams(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string): com.stripe.android.model.SourceParams;
					public getType(): string;
					public hashCode(): number;
					public static createGiropayParams(param0: number, param1: string, param2: string, param3: string): com.stripe.android.model.SourceParams;
					public static createMultibancoParams(param0: number, param1: string, param2: string): com.stripe.android.model.SourceParams;
					public setSourceOrder(param0: com.stripe.android.model.SourceOrderParams): void;
					public setReturnUrl(param0: string): void;
					public getTypeData$payments_core_release(): com.stripe.android.model.SourceParams.TypeData;
					public getAmount(): java.lang.Long;
					public component7(): string;
					public describeContents(): number;
					public static createAlipayReusableParams(param0: string, param1: string, param2: string, param3: string): com.stripe.android.model.SourceParams;
					public toParamMap(): java.util.Map<string, any>;
					public component11(): java.util.Map<string, string>;
					public component10(): string;
					public equals(param0: any): boolean;
					public static createRetrieveSourceParams(param0: string): java.util.Map<string, string>;
					public static createWeChatPayParams(param0: number, param1: string, param2: string, param3: string): com.stripe.android.model.SourceParams;
					public getOwner(): com.stripe.android.model.SourceParams.OwnerParams;
					public static createP24Params(param0: number, param1: string, param2: string, param3: string, param4: string): com.stripe.android.model.SourceParams;
					public static createCardParams(param0: com.stripe.android.model.CardParams): com.stripe.android.model.SourceParams;
					public component6(): com.stripe.android.model.Source.Usage;
				}
				export module SourceParams {
					export class ApiParams {
						public static class: java.lang.Class<com.stripe.android.model.SourceParams.ApiParams>;
						public static Companion: com.stripe.android.model.SourceParams.ApiParams.Companion;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.SourceParams.ApiParams>;
						public describeContents(): number;
						public constructor();
						public component1(): java.util.Map<string, any>;
						public getValue(): java.util.Map<string, any>;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public constructor(param0: java.util.Map<string, any>);
						public hashCode(): number;
						public equals(param0: any): boolean;
						public copy(param0: java.util.Map<string, any>): com.stripe.android.model.SourceParams.ApiParams;
						public toString(): string;
					}
					export module ApiParams {
						export class Companion extends kotlinx.parcelize.Parceler<com.stripe.android.model.SourceParams.ApiParams> {
							public static class: java.lang.Class<com.stripe.android.model.SourceParams.ApiParams.Companion>;
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.SourceParams.ApiParams>;
							public write(param0: com.stripe.android.model.SourceParams.ApiParams, param1: globalAndroid.os.Parcel, param2: number): void;
							public create(param0: globalAndroid.os.Parcel): com.stripe.android.model.SourceParams.ApiParams;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.SourceParams.ApiParams> {
							public static class: java.lang.Class<com.stripe.android.model.SourceParams.ApiParams.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.SourceParams.ApiParams;
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.SourceParams.ApiParams>;
						}
					}
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.model.SourceParams.Companion>;
						public createWeChatPayParams(param0: number, param1: string, param2: string, param3: string): com.stripe.android.model.SourceParams;
						public createAlipaySingleUseParams(param0: number, param1: string, param2: string, param3: string, param4: string): com.stripe.android.model.SourceParams;
						public createVisaCheckoutParams(param0: string): com.stripe.android.model.SourceParams;
						public createGiropayParams(param0: number, param1: string, param2: string, param3: string): com.stripe.android.model.SourceParams;
						public createSepaDebitParams(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string): com.stripe.android.model.SourceParams;
						public createKlarna(param0: string, param1: string, param2: com.stripe.android.model.KlarnaSourceParams): com.stripe.android.model.SourceParams;
						public createSourceFromTokenParams(param0: string): com.stripe.android.model.SourceParams;
						public createAlipayReusableParams(param0: string, param1: string, param2: string, param3: string): com.stripe.android.model.SourceParams;
						public createCardParamsFromGooglePay(param0: org.json.JSONObject): com.stripe.android.model.SourceParams;
						public createCardParams(param0: com.stripe.android.model.CardParams): com.stripe.android.model.SourceParams;
						public createSofortParams(param0: number, param1: string, param2: string, param3: string): com.stripe.android.model.SourceParams;
						public createBancontactParams(param0: number, param1: string, param2: string, param3: string, param4: string): com.stripe.android.model.SourceParams;
						public createIdealParams(param0: number, param1: string, param2: string, param3: string, param4: string): com.stripe.android.model.SourceParams;
						public createMasterpassParams(param0: string, param1: string): com.stripe.android.model.SourceParams;
						public createSepaDebitParams(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string): com.stripe.android.model.SourceParams;
						public createThreeDSecureParams(param0: number, param1: string, param2: string, param3: string): com.stripe.android.model.SourceParams;
						public createEPSParams(param0: number, param1: string, param2: string, param3: string): com.stripe.android.model.SourceParams;
						public createMultibancoParams(param0: number, param1: string, param2: string): com.stripe.android.model.SourceParams;
						public createRetrieveSourceParams(param0: string): java.util.Map<string, string>;
						public createP24Params(param0: number, param1: string, param2: string, param3: string, param4: string): com.stripe.android.model.SourceParams;
						public createCustomParams(param0: string): com.stripe.android.model.SourceParams;
					}
					export module Companion {
						export class WhenMappings {
							public static class: java.lang.Class<com.stripe.android.model.SourceParams.Companion.WhenMappings>;
						}
					}
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.SourceParams> {
						public static class: java.lang.Class<com.stripe.android.model.SourceParams.Creator>;
						public constructor();
						public newArray(param0: number): androidNative.Array<com.stripe.android.model.SourceParams>;
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.SourceParams;
					}
					export class Flow {
						public static class: java.lang.Class<com.stripe.android.model.SourceParams.Flow>;
						public static Redirect: com.stripe.android.model.SourceParams.Flow;
						public static Receiver: com.stripe.android.model.SourceParams.Flow;
						public static CodeVerification: com.stripe.android.model.SourceParams.Flow;
						public static None: com.stripe.android.model.SourceParams.Flow;
						public static values(): androidNative.Array<com.stripe.android.model.SourceParams.Flow>;
						public static valueOf(param0: string): com.stripe.android.model.SourceParams.Flow;
						public getCode$payments_core_release(): string;
					}
					export class OwnerParams extends com.stripe.android.model.StripeParamsModel {
						public static class: java.lang.Class<com.stripe.android.model.SourceParams.OwnerParams>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.SourceParams.OwnerParams>;
						public static $stable: number;
						public describeContents(): number;
						public constructor();
						public component1$payments_core_release(): com.stripe.android.model.Address;
						public setPhone$payments_core_release(param0: string): void;
						public toParamMap(): java.util.Map<string, any>;
						public constructor(param0: com.stripe.android.model.Address);
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getPhone$payments_core_release(): string;
						public setName$payments_core_release(param0: string): void;
						public getEmail$payments_core_release(): string;
						public setEmail$payments_core_release(param0: string): void;
						public toString(): string;
						public getAddress$payments_core_release(): com.stripe.android.model.Address;
						public component4$payments_core_release(): string;
						public component3$payments_core_release(): string;
						public constructor(param0: com.stripe.android.model.Address, param1: string);
						public component2$payments_core_release(): string;
						public copy(param0: com.stripe.android.model.Address, param1: string, param2: string, param3: string): com.stripe.android.model.SourceParams.OwnerParams;
						public constructor(param0: com.stripe.android.model.Address, param1: string, param2: string, param3: string);
						public setAddress$payments_core_release(param0: com.stripe.android.model.Address): void;
						public getName$payments_core_release(): string;
						public constructor(param0: com.stripe.android.model.Address, param1: string, param2: string);
					}
					export module OwnerParams {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.SourceParams.OwnerParams.Companion>;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.SourceParams.OwnerParams> {
							public static class: java.lang.Class<com.stripe.android.model.SourceParams.OwnerParams.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.SourceParams.OwnerParams>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.SourceParams.OwnerParams;
						}
					}
					export abstract class TypeData {
						public static class: java.lang.Class<com.stripe.android.model.SourceParams.TypeData>;
						public getParams(): java.util.List<kotlin.Pair<string, any>>;
						public createParams(): java.util.Map<string, java.util.Map<string, any>>;
						public getType(): string;
					}
					export module TypeData {
						export class Bancontact extends com.stripe.android.model.SourceParams.TypeData {
							public static class: java.lang.Class<com.stripe.android.model.SourceParams.TypeData.Bancontact>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.SourceParams.TypeData.Bancontact>;
							public static $stable: number;
							public constructor();
							public component2(): string;
							public hashCode(): number;
							public constructor(param0: string, param1: string);
							public toString(): string;
							public getParams(): java.util.List<kotlin.Pair<string, any>>;
							public component1(): string;
							public getPreferredLanguage(): string;
							public setPreferredLanguage(param0: string): void;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public describeContents(): number;
							public getStatementDescriptor(): string;
							public copy(param0: string, param1: string): com.stripe.android.model.SourceParams.TypeData.Bancontact;
							public equals(param0: any): boolean;
							public getParams(): java.util.List<kotlin.Pair<string, string>>;
							public getType(): string;
							public setStatementDescriptor(param0: string): void;
						}
						export module Bancontact {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.SourceParams.TypeData.Bancontact.Companion>;
							}
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.SourceParams.TypeData.Bancontact> {
								public static class: java.lang.Class<com.stripe.android.model.SourceParams.TypeData.Bancontact.Creator>;
								public newArray(param0: number): androidNative.Array<com.stripe.android.model.SourceParams.TypeData.Bancontact>;
								public constructor();
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.SourceParams.TypeData.Bancontact;
							}
						}
						export class Card extends com.stripe.android.model.SourceParams.TypeData {
							public static class: java.lang.Class<com.stripe.android.model.SourceParams.TypeData.Card>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.SourceParams.TypeData.Card>;
							public static $stable: number;
							public getExpMonth(): java.lang.Integer;
							public hashCode(): number;
							public constructor(param0: string, param1: java.lang.Integer, param2: java.lang.Integer, param3: string);
							public getCvc(): string;
							public component3(): java.lang.Integer;
							public toString(): string;
							public getParams(): java.util.List<kotlin.Pair<string, any>>;
							public component1(): string;
							public copy(param0: string, param1: java.lang.Integer, param2: java.lang.Integer, param3: string): com.stripe.android.model.SourceParams.TypeData.Card;
							public getExpYear(): java.lang.Integer;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public getNumber(): string;
							public describeContents(): number;
							public component2(): java.lang.Integer;
							public component4(): string;
							public equals(param0: any): boolean;
							public getType(): string;
						}
						export module Card {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.SourceParams.TypeData.Card.Companion>;
							}
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.SourceParams.TypeData.Card> {
								public static class: java.lang.Class<com.stripe.android.model.SourceParams.TypeData.Card.Creator>;
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.SourceParams.TypeData.Card;
								public newArray(param0: number): androidNative.Array<com.stripe.android.model.SourceParams.TypeData.Card>;
								public constructor();
							}
						}
						export class Eps extends com.stripe.android.model.SourceParams.TypeData {
							public static class: java.lang.Class<com.stripe.android.model.SourceParams.TypeData.Eps>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.SourceParams.TypeData.Eps>;
							public static $stable: number;
							public constructor();
							public hashCode(): number;
							public copy(param0: string): com.stripe.android.model.SourceParams.TypeData.Eps;
							public toString(): string;
							public getParams(): java.util.List<kotlin.Pair<string, any>>;
							public component1(): string;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public constructor(param0: string);
							public describeContents(): number;
							public getStatementDescriptor(): string;
							public equals(param0: any): boolean;
							public getParams(): java.util.List<kotlin.Pair<string, string>>;
							public getType(): string;
							public setStatementDescriptor(param0: string): void;
						}
						export module Eps {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.SourceParams.TypeData.Eps.Companion>;
							}
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.SourceParams.TypeData.Eps> {
								public static class: java.lang.Class<com.stripe.android.model.SourceParams.TypeData.Eps.Creator>;
								public newArray(param0: number): androidNative.Array<com.stripe.android.model.SourceParams.TypeData.Eps>;
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.SourceParams.TypeData.Eps;
								public constructor();
							}
						}
						export class Giropay extends com.stripe.android.model.SourceParams.TypeData {
							public static class: java.lang.Class<com.stripe.android.model.SourceParams.TypeData.Giropay>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.SourceParams.TypeData.Giropay>;
							public static $stable: number;
							public constructor();
							public hashCode(): number;
							public copy(param0: string): com.stripe.android.model.SourceParams.TypeData.Giropay;
							public toString(): string;
							public getParams(): java.util.List<kotlin.Pair<string, any>>;
							public component1(): string;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public constructor(param0: string);
							public describeContents(): number;
							public getStatementDescriptor(): string;
							public equals(param0: any): boolean;
							public getParams(): java.util.List<kotlin.Pair<string, string>>;
							public getType(): string;
							public setStatementDescriptor(param0: string): void;
						}
						export module Giropay {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.SourceParams.TypeData.Giropay.Companion>;
							}
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.SourceParams.TypeData.Giropay> {
								public static class: java.lang.Class<com.stripe.android.model.SourceParams.TypeData.Giropay.Creator>;
								public newArray(param0: number): androidNative.Array<com.stripe.android.model.SourceParams.TypeData.Giropay>;
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.SourceParams.TypeData.Giropay;
								public constructor();
							}
						}
						export class Ideal extends com.stripe.android.model.SourceParams.TypeData {
							public static class: java.lang.Class<com.stripe.android.model.SourceParams.TypeData.Ideal>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.SourceParams.TypeData.Ideal>;
							public static $stable: number;
							public constructor();
							public component2(): string;
							public hashCode(): number;
							public constructor(param0: string, param1: string);
							public toString(): string;
							public getParams(): java.util.List<kotlin.Pair<string, any>>;
							public component1(): string;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public setBank(param0: string): void;
							public getBank(): string;
							public describeContents(): number;
							public getStatementDescriptor(): string;
							public equals(param0: any): boolean;
							public getParams(): java.util.List<kotlin.Pair<string, string>>;
							public getType(): string;
							public copy(param0: string, param1: string): com.stripe.android.model.SourceParams.TypeData.Ideal;
							public setStatementDescriptor(param0: string): void;
						}
						export module Ideal {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.SourceParams.TypeData.Ideal.Companion>;
							}
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.SourceParams.TypeData.Ideal> {
								public static class: java.lang.Class<com.stripe.android.model.SourceParams.TypeData.Ideal.Creator>;
								public newArray(param0: number): androidNative.Array<com.stripe.android.model.SourceParams.TypeData.Ideal>;
								public constructor();
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.SourceParams.TypeData.Ideal;
							}
						}
						export class Masterpass extends com.stripe.android.model.SourceParams.TypeData {
							public static class: java.lang.Class<com.stripe.android.model.SourceParams.TypeData.Masterpass>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.SourceParams.TypeData.Masterpass>;
							public static $stable: number;
							public component2(): string;
							public hashCode(): number;
							public constructor(param0: string, param1: string);
							public getCartId(): string;
							public toString(): string;
							public getParams(): java.util.List<kotlin.Pair<string, any>>;
							public getParams(): java.util.List<kotlin.Pair<string, java.util.Map<string, string>>>;
							public component1(): string;
							public copy(param0: string, param1: string): com.stripe.android.model.SourceParams.TypeData.Masterpass;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public setTransactionId(param0: string): void;
							public describeContents(): number;
							public getTransactionId(): string;
							public setCartId(param0: string): void;
							public equals(param0: any): boolean;
							public getType(): string;
						}
						export module Masterpass {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.SourceParams.TypeData.Masterpass.Companion>;
							}
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.SourceParams.TypeData.Masterpass> {
								public static class: java.lang.Class<com.stripe.android.model.SourceParams.TypeData.Masterpass.Creator>;
								public newArray(param0: number): androidNative.Array<com.stripe.android.model.SourceParams.TypeData.Masterpass>;
								public constructor();
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.SourceParams.TypeData.Masterpass;
							}
						}
						export class SepaDebit extends com.stripe.android.model.SourceParams.TypeData {
							public static class: java.lang.Class<com.stripe.android.model.SourceParams.TypeData.SepaDebit>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.SourceParams.TypeData.SepaDebit>;
							public static $stable: number;
							public getIban(): string;
							public hashCode(): number;
							public toString(): string;
							public getParams(): java.util.List<kotlin.Pair<string, any>>;
							public component1(): string;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public constructor(param0: string);
							public describeContents(): number;
							public copy(param0: string): com.stripe.android.model.SourceParams.TypeData.SepaDebit;
							public equals(param0: any): boolean;
							public getParams(): java.util.List<kotlin.Pair<string, string>>;
							public getType(): string;
							public setIban(param0: string): void;
						}
						export module SepaDebit {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.SourceParams.TypeData.SepaDebit.Companion>;
							}
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.SourceParams.TypeData.SepaDebit> {
								public static class: java.lang.Class<com.stripe.android.model.SourceParams.TypeData.SepaDebit.Creator>;
								public newArray(param0: number): androidNative.Array<com.stripe.android.model.SourceParams.TypeData.SepaDebit>;
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.SourceParams.TypeData.SepaDebit;
								public constructor();
							}
						}
						export class Sofort extends com.stripe.android.model.SourceParams.TypeData {
							public static class: java.lang.Class<com.stripe.android.model.SourceParams.TypeData.Sofort>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.SourceParams.TypeData.Sofort>;
							public static $stable: number;
							public component2(): string;
							public hashCode(): number;
							public constructor(param0: string, param1: string);
							public toString(): string;
							public getParams(): java.util.List<kotlin.Pair<string, any>>;
							public getCountry(): string;
							public component1(): string;
							public setCountry(param0: string): void;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public describeContents(): number;
							public getStatementDescriptor(): string;
							public equals(param0: any): boolean;
							public getParams(): java.util.List<kotlin.Pair<string, string>>;
							public getType(): string;
							public copy(param0: string, param1: string): com.stripe.android.model.SourceParams.TypeData.Sofort;
							public setStatementDescriptor(param0: string): void;
						}
						export module Sofort {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.SourceParams.TypeData.Sofort.Companion>;
							}
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.SourceParams.TypeData.Sofort> {
								public static class: java.lang.Class<com.stripe.android.model.SourceParams.TypeData.Sofort.Creator>;
								public newArray(param0: number): androidNative.Array<com.stripe.android.model.SourceParams.TypeData.Sofort>;
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.SourceParams.TypeData.Sofort;
								public constructor();
							}
						}
						export class ThreeDSecure extends com.stripe.android.model.SourceParams.TypeData {
							public static class: java.lang.Class<com.stripe.android.model.SourceParams.TypeData.ThreeDSecure>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.SourceParams.TypeData.ThreeDSecure>;
							public static $stable: number;
							public hashCode(): number;
							public toString(): string;
							public getParams(): java.util.List<kotlin.Pair<string, any>>;
							public component1(): string;
							public copy(param0: string): com.stripe.android.model.SourceParams.TypeData.ThreeDSecure;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public constructor(param0: string);
							public describeContents(): number;
							public setCardId(param0: string): void;
							public equals(param0: any): boolean;
							public getCardId(): string;
							public getParams(): java.util.List<kotlin.Pair<string, string>>;
							public getType(): string;
						}
						export module ThreeDSecure {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.SourceParams.TypeData.ThreeDSecure.Companion>;
							}
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.SourceParams.TypeData.ThreeDSecure> {
								public static class: java.lang.Class<com.stripe.android.model.SourceParams.TypeData.ThreeDSecure.Creator>;
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.SourceParams.TypeData.ThreeDSecure;
								public newArray(param0: number): androidNative.Array<com.stripe.android.model.SourceParams.TypeData.ThreeDSecure>;
								public constructor();
							}
						}
						export class VisaCheckout extends com.stripe.android.model.SourceParams.TypeData {
							public static class: java.lang.Class<com.stripe.android.model.SourceParams.TypeData.VisaCheckout>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.SourceParams.TypeData.VisaCheckout>;
							public static $stable: number;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public hashCode(): number;
							public constructor(param0: string);
							public getCallId(): string;
							public describeContents(): number;
							public copy(param0: string): com.stripe.android.model.SourceParams.TypeData.VisaCheckout;
							public toString(): string;
							public setCallId(param0: string): void;
							public getParams(): java.util.List<kotlin.Pair<string, any>>;
							public equals(param0: any): boolean;
							public getType(): string;
							public component1(): string;
						}
						export module VisaCheckout {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.SourceParams.TypeData.VisaCheckout.Companion>;
							}
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.SourceParams.TypeData.VisaCheckout> {
								public static class: java.lang.Class<com.stripe.android.model.SourceParams.TypeData.VisaCheckout.Creator>;
								public newArray(param0: number): androidNative.Array<com.stripe.android.model.SourceParams.TypeData.VisaCheckout>;
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.SourceParams.TypeData.VisaCheckout;
								public constructor();
							}
						}
					}
					export class WeChatParams extends com.stripe.android.model.StripeParamsModel {
						public static class: java.lang.Class<com.stripe.android.model.SourceParams.WeChatParams>;
						public static Companion: com.stripe.android.model.SourceParams.WeChatParams.Companion;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.SourceParams.WeChatParams>;
						public describeContents(): number;
						public constructor();
						public copy(param0: string, param1: string): com.stripe.android.model.SourceParams.WeChatParams;
						public toParamMap(): java.util.Map<string, any>;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public constructor(param0: string, param1: string);
						public toString(): string;
					}
					export module WeChatParams {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.SourceParams.WeChatParams.Companion>;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.SourceParams.WeChatParams> {
							public static class: java.lang.Class<com.stripe.android.model.SourceParams.WeChatParams.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.SourceParams.WeChatParams;
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.SourceParams.WeChatParams>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export abstract class SourceTypeModel extends com.stripe.android.core.model.StripeModel {
					public static class: java.lang.Class<com.stripe.android.model.SourceTypeModel>;
					public static $stable: number;
					public equals(param0: any): boolean;
					public hashCode(): number;
				}
				export module SourceTypeModel {
					export class Card extends com.stripe.android.model.SourceTypeModel {
						public static class: java.lang.Class<com.stripe.android.model.SourceTypeModel.Card>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.SourceTypeModel.Card>;
						public static $stable: number;
						public component5(): string;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public component11(): com.stripe.android.model.SourceTypeModel.Card.ThreeDSecureStatus;
						public getExpiryYear(): java.lang.Integer;
						public getFunding(): com.stripe.android.model.CardFunding;
						public component7(): java.lang.Integer;
						public component4(): string;
						public copy(param0: string, param1: string, param2: com.stripe.android.model.CardBrand, param3: string, param4: string, param5: string, param6: java.lang.Integer, param7: java.lang.Integer, param8: com.stripe.android.model.CardFunding, param9: string, param10: com.stripe.android.model.SourceTypeModel.Card.ThreeDSecureStatus, param11: com.stripe.android.model.TokenizationMethod): com.stripe.android.model.SourceTypeModel.Card;
						public getExpiryMonth(): java.lang.Integer;
						public component12(): com.stripe.android.model.TokenizationMethod;
						public component10(): string;
						public getAddressLine1Check(): string;
						public getBrand(): com.stripe.android.model.CardBrand;
						public getTokenizationMethod(): com.stripe.android.model.TokenizationMethod;
						public getAddressZipCheck(): string;
						public component3(): com.stripe.android.model.CardBrand;
						public getDynamicLast4(): string;
						public describeContents(): number;
						public toString(): string;
						public getCountry(): string;
						public getLast4(): string;
						public component8(): java.lang.Integer;
						public getThreeDSecureStatus(): com.stripe.android.model.SourceTypeModel.Card.ThreeDSecureStatus;
						public component9(): com.stripe.android.model.CardFunding;
						public component2(): string;
						public constructor(param0: string, param1: string, param2: com.stripe.android.model.CardBrand, param3: string, param4: string, param5: string, param6: java.lang.Integer, param7: java.lang.Integer, param8: com.stripe.android.model.CardFunding, param9: string, param10: com.stripe.android.model.SourceTypeModel.Card.ThreeDSecureStatus, param11: com.stripe.android.model.TokenizationMethod);
						public component6(): string;
						public getCvcCheck(): string;
					}
					export module Card {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.SourceTypeModel.Card> {
							public static class: java.lang.Class<com.stripe.android.model.SourceTypeModel.Card.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.SourceTypeModel.Card>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.SourceTypeModel.Card;
						}
						export class ThreeDSecureStatus {
							public static class: java.lang.Class<com.stripe.android.model.SourceTypeModel.Card.ThreeDSecureStatus>;
							public static Companion: com.stripe.android.model.SourceTypeModel.Card.ThreeDSecureStatus.Companion;
							public static Required: com.stripe.android.model.SourceTypeModel.Card.ThreeDSecureStatus;
							public static Optional: com.stripe.android.model.SourceTypeModel.Card.ThreeDSecureStatus;
							public static NotSupported: com.stripe.android.model.SourceTypeModel.Card.ThreeDSecureStatus;
							public static Recommended: com.stripe.android.model.SourceTypeModel.Card.ThreeDSecureStatus;
							public static Unknown: com.stripe.android.model.SourceTypeModel.Card.ThreeDSecureStatus;
							public static values(): androidNative.Array<com.stripe.android.model.SourceTypeModel.Card.ThreeDSecureStatus>;
							public toString(): string;
							public static valueOf(param0: string): com.stripe.android.model.SourceTypeModel.Card.ThreeDSecureStatus;
						}
						export module ThreeDSecureStatus {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.SourceTypeModel.Card.ThreeDSecureStatus.Companion>;
								public fromCode(param0: string): com.stripe.android.model.SourceTypeModel.Card.ThreeDSecureStatus;
							}
						}
					}
					export class SepaDebit extends com.stripe.android.model.SourceTypeModel {
						public static class: java.lang.Class<com.stripe.android.model.SourceTypeModel.SepaDebit>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.SourceTypeModel.SepaDebit>;
						public static $stable: number;
						public getBranchCode(): string;
						public component3(): string;
						public describeContents(): number;
						public component5(): string;
						public constructor(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string);
						public copy(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string): com.stripe.android.model.SourceTypeModel.SepaDebit;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public getBankCode(): string;
						public component1(): string;
						public component7(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public toString(): string;
						public component4(): string;
						public getCountry(): string;
						public getFingerPrint(): string;
						public getLast4(): string;
						public component2(): string;
						public getMandateReference(): string;
						public component6(): string;
						public getMandateUrl(): string;
					}
					export module SepaDebit {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.SourceTypeModel.SepaDebit> {
							public static class: java.lang.Class<com.stripe.android.model.SourceTypeModel.SepaDebit.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.SourceTypeModel.SepaDebit>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.SourceTypeModel.SepaDebit;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class Stripe3ds2AuthParams extends com.stripe.android.model.StripeParamsModel {
					public static class: java.lang.Class<com.stripe.android.model.Stripe3ds2AuthParams>;
					public static Companion: com.stripe.android.model.Stripe3ds2AuthParams.Companion;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.Stripe3ds2AuthParams>;
					public static FIELD_APP: string;
					public static FIELD_SOURCE: string;
					public static FIELD_FALLBACK_RETURN_URL: string;
					public equals(param0: any): boolean;
					public copy(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string, param7: number, param8: string): com.stripe.android.model.Stripe3ds2AuthParams;
					public toString(): string;
					public describeContents(): number;
					public constructor(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string, param7: number, param8: string);
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public hashCode(): number;
					public toParamMap(): java.util.Map<string, any>;
				}
				export module Stripe3ds2AuthParams {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.model.Stripe3ds2AuthParams.Companion>;
					}
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.Stripe3ds2AuthParams> {
						public static class: java.lang.Class<com.stripe.android.model.Stripe3ds2AuthParams.Creator>;
						public constructor();
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.Stripe3ds2AuthParams;
						public newArray(param0: number): androidNative.Array<com.stripe.android.model.Stripe3ds2AuthParams>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class Stripe3ds2AuthResult extends com.stripe.android.core.model.StripeModel {
					public static class: java.lang.Class<com.stripe.android.model.Stripe3ds2AuthResult>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.Stripe3ds2AuthResult>;
					public getId(): string;
					public component5(): string;
					public getSource(): string;
					public component2(): com.stripe.android.model.Stripe3ds2AuthResult.Ares;
					public getError(): com.stripe.android.model.Stripe3ds2AuthResult.ThreeDS2Error;
					public describeContents(): number;
					public constructor(param0: string, param1: com.stripe.android.model.Stripe3ds2AuthResult.Ares, param2: java.lang.Long, param3: string, param4: string, param5: boolean, param6: com.stripe.android.model.Stripe3ds2AuthResult.ThreeDS2Error, param7: string, param8: string);
					public getState(): string;
					public getCreq(): string;
					public equals(param0: any): boolean;
					public getFallbackRedirectUrl(): string;
					public toString(): string;
					public component1(): string;
					public getCreated(): java.lang.Long;
					public component3(): java.lang.Long;
					public component8(): string;
					public component4(): string;
					public component9(): string;
					public component7(): com.stripe.android.model.Stripe3ds2AuthResult.ThreeDS2Error;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public getAres(): com.stripe.android.model.Stripe3ds2AuthResult.Ares;
					public hashCode(): number;
					public copy(param0: string, param1: com.stripe.android.model.Stripe3ds2AuthResult.Ares, param2: java.lang.Long, param3: string, param4: string, param5: boolean, param6: com.stripe.android.model.Stripe3ds2AuthResult.ThreeDS2Error, param7: string, param8: string): com.stripe.android.model.Stripe3ds2AuthResult;
				}
				export module Stripe3ds2AuthResult {
					export class Ares extends com.stripe.android.core.model.StripeModel {
						public static class: java.lang.Class<com.stripe.android.model.Stripe3ds2AuthResult.Ares>;
						public static Companion: com.stripe.android.model.Stripe3ds2AuthResult.Ares.Companion;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.Stripe3ds2AuthResult.Ares>;
						public static VALUE_CHALLENGE: string;
						public copy(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string, param7: java.util.List<com.stripe.android.model.Stripe3ds2AuthResult.MessageExtension>, param8: string, param9: string, param10: string, param11: string): com.stripe.android.model.Stripe3ds2AuthResult.Ares;
						public describeContents(): number;
						public constructor(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string, param7: java.util.List<com.stripe.android.model.Stripe3ds2AuthResult.MessageExtension>, param8: string, param9: string, param10: string, param11: string);
						public getAcsTransId$payments_core_release(): string;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public toString(): string;
						public isChallenge(): boolean;
						public component4$payments_core_release(): string;
						public component3$payments_core_release(): string;
						public component1$payments_core_release(): string;
						public getAcsSignedContent$payments_core_release(): string;
						public getThreeDSServerTransId$payments_core_release(): string;
					}
					export module Ares {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.Stripe3ds2AuthResult.Ares.Companion>;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.Stripe3ds2AuthResult.Ares> {
							public static class: java.lang.Class<com.stripe.android.model.Stripe3ds2AuthResult.Ares.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.Stripe3ds2AuthResult.Ares>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.Stripe3ds2AuthResult.Ares;
						}
					}
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.Stripe3ds2AuthResult> {
						public static class: java.lang.Class<com.stripe.android.model.Stripe3ds2AuthResult.Creator>;
						public constructor();
						public newArray(param0: number): androidNative.Array<com.stripe.android.model.Stripe3ds2AuthResult>;
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.Stripe3ds2AuthResult;
					}
					export class MessageExtension extends com.stripe.android.core.model.StripeModel {
						public static class: java.lang.Class<com.stripe.android.model.Stripe3ds2AuthResult.MessageExtension>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.Stripe3ds2AuthResult.MessageExtension>;
						public component3(): string;
						public describeContents(): number;
						public constructor(param0: string, param1: boolean, param2: string, param3: java.util.Map<string, string>);
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public getData(): java.util.Map<string, string>;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public copy(param0: string, param1: boolean, param2: string, param3: java.util.Map<string, string>): com.stripe.android.model.Stripe3ds2AuthResult.MessageExtension;
						public getName(): string;
						public toString(): string;
						public component4(): java.util.Map<string, string>;
						public getId(): string;
					}
					export module MessageExtension {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.Stripe3ds2AuthResult.MessageExtension> {
							public static class: java.lang.Class<com.stripe.android.model.Stripe3ds2AuthResult.MessageExtension.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.Stripe3ds2AuthResult.MessageExtension;
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.Stripe3ds2AuthResult.MessageExtension>;
						}
					}
					export class ThreeDS2Error extends com.stripe.android.core.model.StripeModel {
						public static class: java.lang.Class<com.stripe.android.model.Stripe3ds2AuthResult.ThreeDS2Error>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.Stripe3ds2AuthResult.ThreeDS2Error>;
						public static $stable: number;
						public getErrorDetail(): string;
						public component5(): string;
						public getErrorDescription(): string;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public getErrorCode(): string;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public component11(): string;
						public component9(): string;
						public getMessageVersion(): string;
						public component4(): string;
						public getErrorMessageType(): string;
						public getThreeDSServerTransId(): string;
						public component10(): string;
						public getAcsTransId(): string;
						public component8(): string;
						public component3(): string;
						public describeContents(): number;
						public copy(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string, param7: string, param8: string, param9: string, param10: string): com.stripe.android.model.Stripe3ds2AuthResult.ThreeDS2Error;
						public getSdkTransId(): string;
						public component7(): string;
						public toString(): string;
						public constructor(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string, param7: string, param8: string, param9: string, param10: string);
						public component2(): string;
						public component6(): string;
						public getDsTransId(): string;
						public getErrorComponent(): string;
						public getMessageType(): string;
					}
					export module ThreeDS2Error {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.Stripe3ds2AuthResult.ThreeDS2Error> {
							public static class: java.lang.Class<com.stripe.android.model.Stripe3ds2AuthResult.ThreeDS2Error.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.Stripe3ds2AuthResult.ThreeDS2Error;
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.Stripe3ds2AuthResult.ThreeDS2Error>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class Stripe3ds2Fingerprint {
					public static class: java.lang.Class<com.stripe.android.model.Stripe3ds2Fingerprint>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.Stripe3ds2Fingerprint>;
					public component2(): string;
					public getSource(): string;
					public getDirectoryServerName(): string;
					public describeContents(): number;
					public constructor(param0: string, param1: string, param2: string, param3: com.stripe.android.model.Stripe3ds2Fingerprint.DirectoryServerEncryption);
					public constructor(param0: com.stripe.android.model.StripeIntent.NextActionData.SdkData.Use3DS2);
					public component3(): string;
					public component4(): com.stripe.android.model.Stripe3ds2Fingerprint.DirectoryServerEncryption;
					public equals(param0: any): boolean;
					public toString(): string;
					public component1(): string;
					public getDirectoryServerEncryption(): com.stripe.android.model.Stripe3ds2Fingerprint.DirectoryServerEncryption;
					public copy(param0: string, param1: string, param2: string, param3: com.stripe.android.model.Stripe3ds2Fingerprint.DirectoryServerEncryption): com.stripe.android.model.Stripe3ds2Fingerprint;
					public getServerTransactionId(): string;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public hashCode(): number;
				}
				export module Stripe3ds2Fingerprint {
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.Stripe3ds2Fingerprint> {
						public static class: java.lang.Class<com.stripe.android.model.Stripe3ds2Fingerprint.Creator>;
						public constructor();
						public newArray(param0: number): androidNative.Array<com.stripe.android.model.Stripe3ds2Fingerprint>;
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.Stripe3ds2Fingerprint;
					}
					export class DirectoryServerEncryption {
						public static class: java.lang.Class<com.stripe.android.model.Stripe3ds2Fingerprint.DirectoryServerEncryption>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.Stripe3ds2Fingerprint.DirectoryServerEncryption>;
						public describeContents(): number;
						public constructor(param0: string, param1: string, param2: java.util.List<string>, param3: string);
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public getRootCerts(): java.util.List<java.security.cert.X509Certificate>;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getDirectoryServerId(): string;
						public copy(param0: string, param1: java.security.PublicKey, param2: java.util.List<any>, param3: string): com.stripe.android.model.Stripe3ds2Fingerprint.DirectoryServerEncryption;
						public toString(): string;
						public component2(): java.security.PublicKey;
						public component4(): string;
						public getDirectoryServerPublicKey(): java.security.PublicKey;
						public component3(): java.util.List<java.security.cert.X509Certificate>;
						public getKeyId(): string;
						public constructor(param0: string, param1: java.security.PublicKey, param2: java.util.List<any>, param3: string);
					}
					export module DirectoryServerEncryption {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.Stripe3ds2Fingerprint.DirectoryServerEncryption.Companion>;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.Stripe3ds2Fingerprint.DirectoryServerEncryption> {
							public static class: java.lang.Class<com.stripe.android.model.Stripe3ds2Fingerprint.DirectoryServerEncryption.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.Stripe3ds2Fingerprint.DirectoryServerEncryption;
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.Stripe3ds2Fingerprint.DirectoryServerEncryption>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class StripeErrorJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.core.StripeError> {
					public static class: java.lang.Class<com.stripe.android.model.StripeErrorJsonParser>;
					public static Companion: com.stripe.android.model.StripeErrorJsonParser.Companion;
					public static MALFORMED_RESPONSE_MESSAGE: string;
					public parse(param0: org.json.JSONObject): any;
					public constructor();
					public parse(param0: org.json.JSONObject): com.stripe.android.core.StripeError;
				}
				export module StripeErrorJsonParser {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.model.StripeErrorJsonParser.Companion>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class StripeFile extends com.stripe.android.core.model.StripeModel {
					public static class: java.lang.Class<com.stripe.android.model.StripeFile>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.StripeFile>;
					public static $stable: number;
					public getTitle(): string;
					public component5(): java.lang.Integer;
					public copy(param0: string, param1: java.lang.Long, param2: string, param3: com.stripe.android.model.StripeFilePurpose, param4: java.lang.Integer, param5: string, param6: string, param7: string): com.stripe.android.model.StripeFile;
					public getId(): string;
					public component7(): string;
					public describeContents(): number;
					public component3(): string;
					public equals(param0: any): boolean;
					public toString(): string;
					public component1(): string;
					public component2(): java.lang.Long;
					public getCreated(): java.lang.Long;
					public getUrl(): string;
					public component8(): string;
					public component4(): com.stripe.android.model.StripeFilePurpose;
					public constructor();
					public getFilename(): string;
					public component6(): string;
					public constructor(param0: string, param1: java.lang.Long, param2: string, param3: com.stripe.android.model.StripeFilePurpose, param4: java.lang.Integer, param5: string, param6: string, param7: string);
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public getPurpose(): com.stripe.android.model.StripeFilePurpose;
					public getType(): string;
					public hashCode(): number;
					public getSize(): java.lang.Integer;
				}
				export module StripeFile {
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.StripeFile> {
						public static class: java.lang.Class<com.stripe.android.model.StripeFile.Creator>;
						public constructor();
						public newArray(param0: number): androidNative.Array<com.stripe.android.model.StripeFile>;
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.StripeFile;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class StripeFileParams {
					public static class: java.lang.Class<com.stripe.android.model.StripeFileParams>;
					public static $stable: number;
					public getPurpose$payments_core_release(): com.stripe.android.model.StripeFilePurpose;
					public equals(param0: any): boolean;
					public getFile$payments_core_release(): java.io.File;
					public toString(): string;
					public copy(param0: java.io.File, param1: com.stripe.android.model.StripeFilePurpose): com.stripe.android.model.StripeFileParams;
					public component2$payments_core_release(): com.stripe.android.model.StripeFilePurpose;
					public constructor(param0: java.io.File, param1: com.stripe.android.model.StripeFilePurpose);
					public hashCode(): number;
					public component1$payments_core_release(): java.io.File;
				}
				export module StripeFileParams {
					export class FileLink {
						public static class: java.lang.Class<com.stripe.android.model.StripeFileParams.FileLink>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.StripeFileParams.FileLink>;
						public static $stable: number;
						public constructor(param0: boolean, param1: java.lang.Long);
						public describeContents(): number;
						public constructor();
						public constructor(param0: boolean, param1: java.lang.Long, param2: java.util.Map<string, string>);
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public copy(param0: boolean, param1: java.lang.Long, param2: java.util.Map<string, string>): com.stripe.android.model.StripeFileParams.FileLink;
						public constructor(param0: boolean);
						public toString(): string;
					}
					export module FileLink {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.StripeFileParams.FileLink> {
							public static class: java.lang.Class<com.stripe.android.model.StripeFileParams.FileLink.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.StripeFileParams.FileLink;
							public newArray(param0: number): androidNative.Array<com.stripe.android.model.StripeFileParams.FileLink>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class StripeFilePurpose {
					public static class: java.lang.Class<com.stripe.android.model.StripeFilePurpose>;
					public static Companion: com.stripe.android.model.StripeFilePurpose.Companion;
					public static BusinessIcon: com.stripe.android.model.StripeFilePurpose;
					public static BusinessLogo: com.stripe.android.model.StripeFilePurpose;
					public static CustomerSignature: com.stripe.android.model.StripeFilePurpose;
					public static DisputeEvidence: com.stripe.android.model.StripeFilePurpose;
					public static IdentityDocument: com.stripe.android.model.StripeFilePurpose;
					public static PciDocument: com.stripe.android.model.StripeFilePurpose;
					public static TaxDocumentUserUpload: com.stripe.android.model.StripeFilePurpose;
					public getCode$payments_core_release(): string;
					public static values(): androidNative.Array<com.stripe.android.model.StripeFilePurpose>;
					public static valueOf(param0: string): com.stripe.android.model.StripeFilePurpose;
				}
				export module StripeFilePurpose {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.model.StripeFilePurpose.Companion>;
						public fromCode(param0: string): com.stripe.android.model.StripeFilePurpose;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class StripeIntent extends com.stripe.android.core.model.StripeModel {
					public static class: java.lang.Class<com.stripe.android.model.StripeIntent>;
					/**
					 * Constructs a new instance of the com.stripe.android.model.StripeIntent interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getId(): string;
						getCreated(): number;
						getDescription(): string;
						isLiveMode(): boolean;
						getPaymentMethod(): com.stripe.android.model.PaymentMethod;
						getPaymentMethodId(): string;
						getPaymentMethodTypes(): java.util.List<string>;
						getNextActionType(): com.stripe.android.model.StripeIntent.NextActionType;
						getClientSecret(): string;
						getStatus(): com.stripe.android.model.StripeIntent.Status;
						getNextActionData(): com.stripe.android.model.StripeIntent.NextActionData;
						isConfirmed(): boolean;
						getLastErrorMessage(): string;
						getUnactivatedPaymentMethods(): java.util.List<string>;
						requiresAction(): boolean;
						requiresConfirmation(): boolean;
						hashCode(): number;
						equals(param0: any): boolean;
					});
					public constructor();
					public getId(): string;
					public getUnactivatedPaymentMethods(): java.util.List<string>;
					public requiresConfirmation(): boolean;
					public getCreated(): number;
					public getLastErrorMessage(): string;
					public getClientSecret(): string;
					public getPaymentMethod(): com.stripe.android.model.PaymentMethod;
					public getNextActionData(): com.stripe.android.model.StripeIntent.NextActionData;
					public equals(param0: any): boolean;
					public getNextActionType(): com.stripe.android.model.StripeIntent.NextActionType;
					public isConfirmed(): boolean;
					public getStatus(): com.stripe.android.model.StripeIntent.Status;
					public requiresAction(): boolean;
					public isLiveMode(): boolean;
					public getPaymentMethodTypes(): java.util.List<string>;
					public getDescription(): string;
					public hashCode(): number;
					public getPaymentMethodId(): string;
				}
				export module StripeIntent {
					export abstract class NextActionData extends com.stripe.android.core.model.StripeModel {
						public static class: java.lang.Class<com.stripe.android.model.StripeIntent.NextActionData>;
						public static $stable: number;
						public hashCode(): number;
						public equals(param0: any): boolean;
					}
					export module NextActionData {
						export class AlipayRedirect extends com.stripe.android.model.StripeIntent.NextActionData {
							public static class: java.lang.Class<com.stripe.android.model.StripeIntent.NextActionData.AlipayRedirect>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.StripeIntent.NextActionData.AlipayRedirect>;
							public component2(): string;
							public hashCode(): number;
							public toString(): string;
							public constructor(param0: string, param1: string, param2: globalAndroid.net.Uri, param3: string);
							public component1(): string;
							public component3(): globalAndroid.net.Uri;
							public getData(): string;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public getAuthCompleteUrl(): string;
							public describeContents(): number;
							public getReturnUrl(): string;
							public constructor(param0: string, param1: string, param2: string);
							public component4(): string;
							public getWebViewUrl(): globalAndroid.net.Uri;
							public equals(param0: any): boolean;
							public copy(param0: string, param1: string, param2: globalAndroid.net.Uri, param3: string): com.stripe.android.model.StripeIntent.NextActionData.AlipayRedirect;
						}
						export module AlipayRedirect {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.StripeIntent.NextActionData.AlipayRedirect.Companion>;
							}
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.StripeIntent.NextActionData.AlipayRedirect> {
								public static class: java.lang.Class<com.stripe.android.model.StripeIntent.NextActionData.AlipayRedirect.Creator>;
								public newArray(param0: number): androidNative.Array<com.stripe.android.model.StripeIntent.NextActionData.AlipayRedirect>;
								public constructor();
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.StripeIntent.NextActionData.AlipayRedirect;
							}
						}
						export class BlikAuthorize extends com.stripe.android.model.StripeIntent.NextActionData {
							public static class: java.lang.Class<com.stripe.android.model.StripeIntent.NextActionData.BlikAuthorize>;
							public static INSTANCE: com.stripe.android.model.StripeIntent.NextActionData.BlikAuthorize;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.StripeIntent.NextActionData.BlikAuthorize>;
							public static $stable: number;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public hashCode(): number;
							public describeContents(): number;
							public equals(param0: any): boolean;
						}
						export module BlikAuthorize {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.StripeIntent.NextActionData.BlikAuthorize> {
								public static class: java.lang.Class<com.stripe.android.model.StripeIntent.NextActionData.BlikAuthorize.Creator>;
								public newArray(param0: number): androidNative.Array<com.stripe.android.model.StripeIntent.NextActionData.BlikAuthorize>;
								public constructor();
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.StripeIntent.NextActionData.BlikAuthorize;
							}
						}
						export class DisplayOxxoDetails extends com.stripe.android.model.StripeIntent.NextActionData {
							public static class: java.lang.Class<com.stripe.android.model.StripeIntent.NextActionData.DisplayOxxoDetails>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.StripeIntent.NextActionData.DisplayOxxoDetails>;
							public static $stable: number;
							public getHostedVoucherUrl(): string;
							public constructor();
							public component2(): string;
							public hashCode(): number;
							public toString(): string;
							public component3(): string;
							public component1(): number;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public constructor(param0: number, param1: string, param2: string);
							public getExpiresAfter(): number;
							public getNumber(): string;
							public describeContents(): number;
							public equals(param0: any): boolean;
							public copy(param0: number, param1: string, param2: string): com.stripe.android.model.StripeIntent.NextActionData.DisplayOxxoDetails;
						}
						export module DisplayOxxoDetails {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.StripeIntent.NextActionData.DisplayOxxoDetails> {
								public static class: java.lang.Class<com.stripe.android.model.StripeIntent.NextActionData.DisplayOxxoDetails.Creator>;
								public newArray(param0: number): androidNative.Array<com.stripe.android.model.StripeIntent.NextActionData.DisplayOxxoDetails>;
								public constructor();
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.StripeIntent.NextActionData.DisplayOxxoDetails;
							}
						}
						export class RedirectToUrl extends com.stripe.android.model.StripeIntent.NextActionData {
							public static class: java.lang.Class<com.stripe.android.model.StripeIntent.NextActionData.RedirectToUrl>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.StripeIntent.NextActionData.RedirectToUrl>;
							public static $stable: number;
							public component2(): string;
							public getUrl(): globalAndroid.net.Uri;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public hashCode(): number;
							public constructor(param0: globalAndroid.net.Uri, param1: string);
							public describeContents(): number;
							public getReturnUrl(): string;
							public component1(): globalAndroid.net.Uri;
							public toString(): string;
							public equals(param0: any): boolean;
							public copy(param0: globalAndroid.net.Uri, param1: string): com.stripe.android.model.StripeIntent.NextActionData.RedirectToUrl;
						}
						export module RedirectToUrl {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.StripeIntent.NextActionData.RedirectToUrl> {
								public static class: java.lang.Class<com.stripe.android.model.StripeIntent.NextActionData.RedirectToUrl.Creator>;
								public newArray(param0: number): androidNative.Array<com.stripe.android.model.StripeIntent.NextActionData.RedirectToUrl>;
								public constructor();
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.StripeIntent.NextActionData.RedirectToUrl;
							}
						}
						export abstract class SdkData extends com.stripe.android.model.StripeIntent.NextActionData {
							public static class: java.lang.Class<com.stripe.android.model.StripeIntent.NextActionData.SdkData>;
							public static $stable: number;
							public hashCode(): number;
							public equals(param0: any): boolean;
						}
						export module SdkData {
							export class Use3DS1 extends com.stripe.android.model.StripeIntent.NextActionData.SdkData {
								public static class: java.lang.Class<com.stripe.android.model.StripeIntent.NextActionData.SdkData.Use3DS1>;
								public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.StripeIntent.NextActionData.SdkData.Use3DS1>;
								public static $stable: number;
								public component1(): string;
								public toString(): string;
								public describeContents(): number;
								public equals(param0: any): boolean;
								public getUrl(): string;
								public copy(param0: string): com.stripe.android.model.StripeIntent.NextActionData.SdkData.Use3DS1;
								public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
								public constructor(param0: string);
								public hashCode(): number;
							}
							export module Use3DS1 {
								export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.StripeIntent.NextActionData.SdkData.Use3DS1> {
									public static class: java.lang.Class<com.stripe.android.model.StripeIntent.NextActionData.SdkData.Use3DS1.Creator>;
									public constructor();
									public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.StripeIntent.NextActionData.SdkData.Use3DS1;
									public newArray(param0: number): androidNative.Array<com.stripe.android.model.StripeIntent.NextActionData.SdkData.Use3DS1>;
								}
							}
							export class Use3DS2 extends com.stripe.android.model.StripeIntent.NextActionData.SdkData {
								public static class: java.lang.Class<com.stripe.android.model.StripeIntent.NextActionData.SdkData.Use3DS2>;
								public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.StripeIntent.NextActionData.SdkData.Use3DS2>;
								public static $stable: number;
								public toString(): string;
								public equals(param0: any): boolean;
								public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
								public getServerEncryption(): com.stripe.android.model.StripeIntent.NextActionData.SdkData.Use3DS2.DirectoryServerEncryption;
								public component2(): string;
								public component1(): string;
								public describeContents(): number;
								public constructor(param0: string, param1: string, param2: string, param3: com.stripe.android.model.StripeIntent.NextActionData.SdkData.Use3DS2.DirectoryServerEncryption);
								public getServerName(): string;
								public component4(): com.stripe.android.model.StripeIntent.NextActionData.SdkData.Use3DS2.DirectoryServerEncryption;
								public copy(param0: string, param1: string, param2: string, param3: com.stripe.android.model.StripeIntent.NextActionData.SdkData.Use3DS2.DirectoryServerEncryption): com.stripe.android.model.StripeIntent.NextActionData.SdkData.Use3DS2;
								public getTransactionId(): string;
								public component3(): string;
								public hashCode(): number;
								public getSource(): string;
							}
							export module Use3DS2 {
								export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.StripeIntent.NextActionData.SdkData.Use3DS2> {
									public static class: java.lang.Class<com.stripe.android.model.StripeIntent.NextActionData.SdkData.Use3DS2.Creator>;
									public constructor();
									public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.StripeIntent.NextActionData.SdkData.Use3DS2;
									public newArray(param0: number): androidNative.Array<com.stripe.android.model.StripeIntent.NextActionData.SdkData.Use3DS2>;
								}
								export class DirectoryServerEncryption {
									public static class: java.lang.Class<com.stripe.android.model.StripeIntent.NextActionData.SdkData.Use3DS2.DirectoryServerEncryption>;
									public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.StripeIntent.NextActionData.SdkData.Use3DS2.DirectoryServerEncryption>;
									public static $stable: number;
									public component2(): string;
									public component3(): java.util.List<string>;
									public hashCode(): number;
									public getDirectoryServerId(): string;
									public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
									public constructor(param0: string, param1: string, param2: java.util.List<string>, param3: string);
									public equals(param0: any): boolean;
									public copy(param0: string, param1: string, param2: java.util.List<string>, param3: string): com.stripe.android.model.StripeIntent.NextActionData.SdkData.Use3DS2.DirectoryServerEncryption;
									public toString(): string;
									public component1(): string;
									public getRootCertsData(): java.util.List<string>;
									public describeContents(): number;
									public getKeyId(): string;
									public getDsCertificateData(): string;
									public component4(): string;
								}
								export module DirectoryServerEncryption {
									export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.StripeIntent.NextActionData.SdkData.Use3DS2.DirectoryServerEncryption> {
										public static class: java.lang.Class<com.stripe.android.model.StripeIntent.NextActionData.SdkData.Use3DS2.DirectoryServerEncryption.Creator>;
										public newArray(param0: number): androidNative.Array<com.stripe.android.model.StripeIntent.NextActionData.SdkData.Use3DS2.DirectoryServerEncryption>;
										public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.StripeIntent.NextActionData.SdkData.Use3DS2.DirectoryServerEncryption;
										public constructor();
									}
								}
							}
						}
						export class WeChatPayRedirect extends com.stripe.android.model.StripeIntent.NextActionData {
							public static class: java.lang.Class<com.stripe.android.model.StripeIntent.NextActionData.WeChatPayRedirect>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.StripeIntent.NextActionData.WeChatPayRedirect>;
							public static $stable: number;
							public constructor(param0: com.stripe.android.model.WeChat);
							public getWeChat(): com.stripe.android.model.WeChat;
							public component1(): com.stripe.android.model.WeChat;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public hashCode(): number;
							public describeContents(): number;
							public copy(param0: com.stripe.android.model.WeChat): com.stripe.android.model.StripeIntent.NextActionData.WeChatPayRedirect;
							public toString(): string;
							public equals(param0: any): boolean;
						}
						export module WeChatPayRedirect {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.StripeIntent.NextActionData.WeChatPayRedirect> {
								public static class: java.lang.Class<com.stripe.android.model.StripeIntent.NextActionData.WeChatPayRedirect.Creator>;
								public newArray(param0: number): androidNative.Array<com.stripe.android.model.StripeIntent.NextActionData.WeChatPayRedirect>;
								public constructor();
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.StripeIntent.NextActionData.WeChatPayRedirect;
							}
						}
					}
					export class NextActionType {
						public static class: java.lang.Class<com.stripe.android.model.StripeIntent.NextActionType>;
						public static Companion: com.stripe.android.model.StripeIntent.NextActionType.Companion;
						public static RedirectToUrl: com.stripe.android.model.StripeIntent.NextActionType;
						public static UseStripeSdk: com.stripe.android.model.StripeIntent.NextActionType;
						public static DisplayOxxoDetails: com.stripe.android.model.StripeIntent.NextActionType;
						public static AlipayRedirect: com.stripe.android.model.StripeIntent.NextActionType;
						public static BlikAuthorize: com.stripe.android.model.StripeIntent.NextActionType;
						public static WeChatPayRedirect: com.stripe.android.model.StripeIntent.NextActionType;
						public static values(): androidNative.Array<com.stripe.android.model.StripeIntent.NextActionType>;
						public static valueOf(param0: string): com.stripe.android.model.StripeIntent.NextActionType;
						public getCode(): string;
						public toString(): string;
					}
					export module NextActionType {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.StripeIntent.NextActionType.Companion>;
							public fromCode$payments_core_release(param0: string): com.stripe.android.model.StripeIntent.NextActionType;
						}
					}
					export class Status {
						public static class: java.lang.Class<com.stripe.android.model.StripeIntent.Status>;
						public static Companion: com.stripe.android.model.StripeIntent.Status.Companion;
						public static Canceled: com.stripe.android.model.StripeIntent.Status;
						public static Processing: com.stripe.android.model.StripeIntent.Status;
						public static RequiresAction: com.stripe.android.model.StripeIntent.Status;
						public static RequiresConfirmation: com.stripe.android.model.StripeIntent.Status;
						public static RequiresPaymentMethod: com.stripe.android.model.StripeIntent.Status;
						public static Succeeded: com.stripe.android.model.StripeIntent.Status;
						public static RequiresCapture: com.stripe.android.model.StripeIntent.Status;
						public static valueOf(param0: string): com.stripe.android.model.StripeIntent.Status;
						public getCode(): string;
						public static values(): androidNative.Array<com.stripe.android.model.StripeIntent.Status>;
						public toString(): string;
					}
					export module Status {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.StripeIntent.Status.Companion>;
							public fromCode$payments_core_release(param0: string): com.stripe.android.model.StripeIntent.Status;
						}
					}
					export class Usage {
						public static class: java.lang.Class<com.stripe.android.model.StripeIntent.Usage>;
						public static Companion: com.stripe.android.model.StripeIntent.Usage.Companion;
						public static OnSession: com.stripe.android.model.StripeIntent.Usage;
						public static OffSession: com.stripe.android.model.StripeIntent.Usage;
						public static OneTime: com.stripe.android.model.StripeIntent.Usage;
						public static valueOf(param0: string): com.stripe.android.model.StripeIntent.Usage;
						public getCode(): string;
						public toString(): string;
						public static values(): androidNative.Array<com.stripe.android.model.StripeIntent.Usage>;
					}
					export module Usage {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.StripeIntent.Usage.Companion>;
							public fromCode$payments_core_release(param0: string): com.stripe.android.model.StripeIntent.Usage;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class StripeIntentKtxKt {
					public static class: java.lang.Class<com.stripe.android.model.StripeIntentKtxKt>;
					public static getREFRESHABLE_PAYMENT_METHODS(): java.util.Set<com.stripe.android.model.PaymentMethod.Type>;
					public static getRequestCode(param0: com.stripe.android.model.StripeIntent): number;
					public static shouldRefresh(param0: com.stripe.android.model.StripeIntent): boolean;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class StripeJsonUtils {
					public static class: java.lang.Class<com.stripe.android.model.StripeJsonUtils>;
					public static INSTANCE: com.stripe.android.model.StripeJsonUtils;
					public static optString(param0: org.json.JSONObject, param1: string): string;
					public mapToJsonObject$payments_core_release(param0: java.util.Map<string, any>): org.json.JSONObject;
					public static optCurrency$payments_core_release(param0: org.json.JSONObject, param1: string): string;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class StripeParamsModel {
					public static class: java.lang.Class<com.stripe.android.model.StripeParamsModel>;
					/**
					 * Constructs a new instance of the com.stripe.android.model.StripeParamsModel interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						toParamMap(): java.util.Map<string, any>;
					});
					public constructor();
					public toParamMap(): java.util.Map<string, any>;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class StripePaymentSource {
					public static class: java.lang.Class<com.stripe.android.model.StripePaymentSource>;
					/**
					 * Constructs a new instance of the com.stripe.android.model.StripePaymentSource interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getId(): string;
					});
					public constructor();
					public getId(): string;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class Token implements com.stripe.android.core.model.StripeModel, com.stripe.android.model.StripePaymentSource {
					public static class: java.lang.Class<com.stripe.android.model.Token>;
					public static Companion: com.stripe.android.model.Token.Companion;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.Token>;
					public static $stable: number;
					public getId(): string;
					public describeContents(): number;
					public getUsed(): boolean;
					public component5(): boolean;
					public static fromJson(param0: org.json.JSONObject): com.stripe.android.model.Token;
					public component2(): com.stripe.android.model.Token.Type;
					public getCard(): com.stripe.android.model.Card;
					public equals(param0: any): boolean;
					public toString(): string;
					public component1(): string;
					public component7(): com.stripe.android.model.Card;
					public copy(param0: string, param1: com.stripe.android.model.Token.Type, param2: java.util.Date, param3: boolean, param4: boolean, param5: com.stripe.android.model.BankAccount, param6: com.stripe.android.model.Card): com.stripe.android.model.Token;
					public component4(): boolean;
					public constructor(param0: string, param1: com.stripe.android.model.Token.Type, param2: java.util.Date, param3: boolean, param4: boolean, param5: com.stripe.android.model.BankAccount, param6: com.stripe.android.model.Card);
					public component6(): com.stripe.android.model.BankAccount;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public getBankAccount(): com.stripe.android.model.BankAccount;
					public hashCode(): number;
					public getCreated(): java.util.Date;
					public getLivemode(): boolean;
					public component3(): java.util.Date;
					public getType(): com.stripe.android.model.Token.Type;
				}
				export module Token {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.model.Token.Companion>;
						public fromJson(param0: org.json.JSONObject): com.stripe.android.model.Token;
					}
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.Token> {
						public static class: java.lang.Class<com.stripe.android.model.Token.Creator>;
						public constructor();
						public newArray(param0: number): androidNative.Array<com.stripe.android.model.Token>;
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.Token;
					}
					export class Type {
						public static class: java.lang.Class<com.stripe.android.model.Token.Type>;
						public static Companion: com.stripe.android.model.Token.Type.Companion;
						public static Card: com.stripe.android.model.Token.Type;
						public static BankAccount: com.stripe.android.model.Token.Type;
						public static Pii: com.stripe.android.model.Token.Type;
						public static Account: com.stripe.android.model.Token.Type;
						public static CvcUpdate: com.stripe.android.model.Token.Type;
						public static Person: com.stripe.android.model.Token.Type;
						public static valueOf(param0: string): com.stripe.android.model.Token.Type;
						public static values(): androidNative.Array<com.stripe.android.model.Token.Type>;
						public getCode$payments_core_release(): string;
					}
					export module Type {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.Token.Type.Companion>;
							public fromCode(param0: string): com.stripe.android.model.Token.Type;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export abstract class TokenParams extends com.stripe.android.model.StripeParamsModel {
					public static class: java.lang.Class<com.stripe.android.model.TokenParams>;
					public static $stable: number;
					public constructor(param0: com.stripe.android.model.Token.Type, param1: java.util.Set<string>);
					public getAttribution$payments_core_release(): java.util.Set<string>;
					public getTypeDataParams(): java.util.Map<string, any>;
					public getTokenType$payments_core_release(): com.stripe.android.model.Token.Type;
					public toParamMap(): java.util.Map<string, any>;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class TokenizationMethod {
					public static class: java.lang.Class<com.stripe.android.model.TokenizationMethod>;
					public static Companion: com.stripe.android.model.TokenizationMethod.Companion;
					public static ApplePay: com.stripe.android.model.TokenizationMethod;
					public static GooglePay: com.stripe.android.model.TokenizationMethod;
					public static Masterpass: com.stripe.android.model.TokenizationMethod;
					public static VisaCheckout: com.stripe.android.model.TokenizationMethod;
					public static values(): androidNative.Array<com.stripe.android.model.TokenizationMethod>;
					public static valueOf(param0: string): com.stripe.android.model.TokenizationMethod;
				}
				export module TokenizationMethod {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.model.TokenizationMethod.Companion>;
						public fromCode$payments_core_release(param0: string): com.stripe.android.model.TokenizationMethod;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class WeChat extends com.stripe.android.core.model.StripeModel {
					public static class: java.lang.Class<com.stripe.android.model.WeChat>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.WeChat>;
					public static $stable: number;
					public copy(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string, param7: string, param8: string): com.stripe.android.model.WeChat;
					public constructor(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string, param7: string, param8: string);
					public component2(): string;
					public component5(): string;
					public toString(): string;
					public component8(): string;
					public getSign(): string;
					public component4(): string;
					public hashCode(): number;
					public getAppId(): string;
					public getNonce(): string;
					public component7(): string;
					public describeContents(): number;
					public getTimestamp(): string;
					public getQrCodeUrl(): string;
					public component3(): string;
					public getPackageValue(): string;
					public getPrepayId(): string;
					public equals(param0: any): boolean;
					public component1(): string;
					public component6(): string;
					public getStatementDescriptor(): string;
					public component9(): string;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public getPartnerId(): string;
				}
				export module WeChat {
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.WeChat> {
						public static class: java.lang.Class<com.stripe.android.model.WeChat.Creator>;
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.WeChat;
						public newArray(param0: number): androidNative.Array<com.stripe.android.model.WeChat>;
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export class WeChatPayNextAction extends com.stripe.android.core.model.StripeModel {
					public static class: java.lang.Class<com.stripe.android.model.WeChatPayNextAction>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.WeChatPayNextAction>;
					public static $stable: number;
					public getPaymentIntent(): com.stripe.android.model.PaymentIntent;
					public copy(param0: com.stripe.android.model.PaymentIntent, param1: com.stripe.android.model.WeChat): com.stripe.android.model.WeChatPayNextAction;
					public equals(param0: any): boolean;
					public component2(): com.stripe.android.model.WeChat;
					public constructor(param0: com.stripe.android.model.PaymentIntent, param1: com.stripe.android.model.WeChat);
					public toString(): string;
					public getWeChat(): com.stripe.android.model.WeChat;
					public describeContents(): number;
					public component1(): com.stripe.android.model.PaymentIntent;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public hashCode(): number;
				}
				export module WeChatPayNextAction {
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.WeChatPayNextAction> {
						public static class: java.lang.Class<com.stripe.android.model.WeChatPayNextAction.Creator>;
						public constructor();
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.WeChatPayNextAction;
						public newArray(param0: number): androidNative.Array<com.stripe.android.model.WeChatPayNextAction>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export module parsers {
					export class AccountRangeJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.AccountRange> {
						public static class: java.lang.Class<com.stripe.android.model.parsers.AccountRangeJsonParser>;
						public static FIELD_ACCOUNT_RANGE_HIGH: string;
						public static FIELD_ACCOUNT_RANGE_LOW: string;
						public static FIELD_PAN_LENGTH: string;
						public static FIELD_BRAND: string;
						public static FIELD_COUNTRY: string;
						public constructor();
						public parse(param0: org.json.JSONObject): com.stripe.android.model.AccountRange;
						public serialize(param0: com.stripe.android.model.AccountRange): org.json.JSONObject;
						public parse(param0: org.json.JSONObject): any;
					}
					export module AccountRangeJsonParser {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.parsers.AccountRangeJsonParser.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export module parsers {
					export class AddressJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.Address> {
						public static class: java.lang.Class<com.stripe.android.model.parsers.AddressJsonParser>;
						public static $stable: number;
						public constructor();
						public parse(param0: org.json.JSONObject): any;
						public parse(param0: org.json.JSONObject): com.stripe.android.model.Address;
					}
					export module AddressJsonParser {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.parsers.AddressJsonParser.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export module parsers {
					export class BankAccountJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.BankAccount> {
						public static class: java.lang.Class<com.stripe.android.model.parsers.BankAccountJsonParser>;
						public constructor();
						public parse(param0: org.json.JSONObject): any;
						public parse(param0: org.json.JSONObject): com.stripe.android.model.BankAccount;
					}
					export module BankAccountJsonParser {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.parsers.BankAccountJsonParser.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export module parsers {
					export class CardJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.Card> {
						public static class: java.lang.Class<com.stripe.android.model.parsers.CardJsonParser>;
						public static Companion: com.stripe.android.model.parsers.CardJsonParser.Companion;
						public static VALUE_CARD: string;
						public parse(param0: org.json.JSONObject): com.stripe.android.model.Card;
						public constructor();
						public parse(param0: org.json.JSONObject): any;
					}
					export module CardJsonParser {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.parsers.CardJsonParser.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export module parsers {
					export class CardMetadataJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.CardMetadata> {
						public static class: java.lang.Class<com.stripe.android.model.parsers.CardMetadataJsonParser>;
						public constructor(param0: com.stripe.android.cards.Bin);
						public parse(param0: org.json.JSONObject): any;
						public parse(param0: org.json.JSONObject): com.stripe.android.model.CardMetadata;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export module parsers {
					export class CustomerJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.Customer> {
						public static class: java.lang.Class<com.stripe.android.model.parsers.CustomerJsonParser>;
						public constructor();
						public parse(param0: org.json.JSONObject): com.stripe.android.model.Customer;
						public parse(param0: org.json.JSONObject): any;
					}
					export module CustomerJsonParser {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.parsers.CustomerJsonParser.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export module parsers {
					export class CustomerPaymentSourceJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.CustomerPaymentSource> {
						public static class: java.lang.Class<com.stripe.android.model.parsers.CustomerPaymentSourceJsonParser>;
						public constructor();
						public parse(param0: org.json.JSONObject): any;
						public parse(param0: org.json.JSONObject): com.stripe.android.model.CustomerPaymentSource;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export module parsers {
					export class EphemeralKeyJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.EphemeralKey> {
						public static class: java.lang.Class<com.stripe.android.model.parsers.EphemeralKeyJsonParser>;
						public constructor();
						public parse(param0: org.json.JSONObject): any;
						public parse(param0: org.json.JSONObject): com.stripe.android.EphemeralKey;
					}
					export module EphemeralKeyJsonParser {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.parsers.EphemeralKeyJsonParser.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export module parsers {
					export class FpxBankStatusesJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.BankStatuses> {
						public static class: java.lang.Class<com.stripe.android.model.parsers.FpxBankStatusesJsonParser>;
						public constructor();
						public parse(param0: org.json.JSONObject): com.stripe.android.model.BankStatuses;
						public parse(param0: org.json.JSONObject): any;
					}
					export module FpxBankStatusesJsonParser {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.parsers.FpxBankStatusesJsonParser.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export module parsers {
					export class FraudDetectionDataJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.networking.FraudDetectionData> {
						public static class: java.lang.Class<com.stripe.android.model.parsers.FraudDetectionDataJsonParser>;
						public parse(param0: org.json.JSONObject): any;
						public constructor(param0: kotlin.jvm.functions.Function0<java.lang.Long>);
						public parse(param0: org.json.JSONObject): com.stripe.android.networking.FraudDetectionData;
					}
					export module FraudDetectionDataJsonParser {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.parsers.FraudDetectionDataJsonParser.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export module parsers {
					export class IssuingCardPinJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.IssuingCardPin> {
						public static class: java.lang.Class<com.stripe.android.model.parsers.IssuingCardPinJsonParser>;
						public constructor();
						public parse(param0: org.json.JSONObject): com.stripe.android.model.IssuingCardPin;
						public parse(param0: org.json.JSONObject): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export module parsers {
					export class ModelJsonParser<ModelType> extends java.lang.Object {
						public static class: java.lang.Class<com.stripe.android.model.parsers.ModelJsonParser<any>>;
						/**
						 * Constructs a new instance of the com.stripe.android.model.parsers.ModelJsonParser<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							parse(param0: org.json.JSONObject): ModelType;
							<clinit>(): void;
						});
						public constructor();
						public static Companion: com.stripe.android.model.parsers.ModelJsonParser.Companion;
						public parse(param0: org.json.JSONObject): ModelType;
					}
					export module ModelJsonParser {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.parsers.ModelJsonParser.Companion>;
							public jsonArrayToList$payments_core_release(param0: org.json.JSONArray): java.util.List<string>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export module parsers {
					export class NextActionDataParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.StripeIntent.NextActionData> {
						public static class: java.lang.Class<com.stripe.android.model.parsers.NextActionDataParser>;
						public constructor();
						public parse(param0: org.json.JSONObject): any;
						public parse(param0: org.json.JSONObject): com.stripe.android.model.StripeIntent.NextActionData;
					}
					export module NextActionDataParser {
						export class AlipayRedirectParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.StripeIntent.NextActionData.AlipayRedirect> {
							public static class: java.lang.Class<com.stripe.android.model.parsers.NextActionDataParser.AlipayRedirectParser>;
							public static FIELD_NATIVE_DATA: string;
							public static FIELD_RETURN_URL: string;
							public static FIELD_URL: string;
							public constructor();
							public parse(param0: org.json.JSONObject): com.stripe.android.model.StripeIntent.NextActionData.AlipayRedirect;
							public parse(param0: org.json.JSONObject): any;
						}
						export module AlipayRedirectParser {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.parsers.NextActionDataParser.AlipayRedirectParser.Companion>;
							}
						}
						export class BlikAuthorizeParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.StripeIntent.NextActionData.BlikAuthorize> {
							public static class: java.lang.Class<com.stripe.android.model.parsers.NextActionDataParser.BlikAuthorizeParser>;
							public constructor();
							public parse(param0: org.json.JSONObject): any;
							public parse(param0: org.json.JSONObject): com.stripe.android.model.StripeIntent.NextActionData.BlikAuthorize;
						}
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.parsers.NextActionDataParser.Companion>;
						}
						export class DisplayOxxoDetailsJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.StripeIntent.NextActionData.DisplayOxxoDetails> {
							public static class: java.lang.Class<com.stripe.android.model.parsers.NextActionDataParser.DisplayOxxoDetailsJsonParser>;
							public constructor();
							public parse(param0: org.json.JSONObject): com.stripe.android.model.StripeIntent.NextActionData.DisplayOxxoDetails;
							public parse(param0: org.json.JSONObject): any;
						}
						export module DisplayOxxoDetailsJsonParser {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.parsers.NextActionDataParser.DisplayOxxoDetailsJsonParser.Companion>;
							}
						}
						export class RedirectToUrlParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.StripeIntent.NextActionData.RedirectToUrl> {
							public static class: java.lang.Class<com.stripe.android.model.parsers.NextActionDataParser.RedirectToUrlParser>;
							public static FIELD_URL: string;
							public static FIELD_RETURN_URL: string;
							public constructor();
							public parse(param0: org.json.JSONObject): com.stripe.android.model.StripeIntent.NextActionData.RedirectToUrl;
							public parse(param0: org.json.JSONObject): any;
						}
						export module RedirectToUrlParser {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.parsers.NextActionDataParser.RedirectToUrlParser.Companion>;
							}
						}
						export class SdkDataJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.StripeIntent.NextActionData.SdkData> {
							public static class: java.lang.Class<com.stripe.android.model.parsers.NextActionDataParser.SdkDataJsonParser>;
							public constructor();
							public parse(param0: org.json.JSONObject): com.stripe.android.model.StripeIntent.NextActionData.SdkData;
							public parse(param0: org.json.JSONObject): any;
						}
						export module SdkDataJsonParser {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.parsers.NextActionDataParser.SdkDataJsonParser.Companion>;
							}
						}
						export class WeChatPayRedirectParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.StripeIntent.NextActionData.WeChatPayRedirect> {
							public static class: java.lang.Class<com.stripe.android.model.parsers.NextActionDataParser.WeChatPayRedirectParser>;
							public constructor();
							public parse(param0: org.json.JSONObject): any;
							public parse(param0: org.json.JSONObject): com.stripe.android.model.StripeIntent.NextActionData.WeChatPayRedirect;
						}
						export module WeChatPayRedirectParser {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.parsers.NextActionDataParser.WeChatPayRedirectParser.Companion>;
							}
						}
						export class WhenMappings {
							public static class: java.lang.Class<com.stripe.android.model.parsers.NextActionDataParser.WhenMappings>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export module parsers {
					export class PaymentIntentJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.PaymentIntent> {
						public static class: java.lang.Class<com.stripe.android.model.parsers.PaymentIntentJsonParser>;
						public static $stable: number;
						public constructor();
						public parse(param0: org.json.JSONObject): com.stripe.android.model.PaymentIntent;
						public parse(param0: org.json.JSONObject): any;
					}
					export module PaymentIntentJsonParser {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.parsers.PaymentIntentJsonParser.Companion>;
						}
						export class ErrorJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.PaymentIntent.Error> {
							public static class: java.lang.Class<com.stripe.android.model.parsers.PaymentIntentJsonParser.ErrorJsonParser>;
							public constructor();
							public parse(param0: org.json.JSONObject): com.stripe.android.model.PaymentIntent.Error;
							public parse(param0: org.json.JSONObject): any;
						}
						export module ErrorJsonParser {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.parsers.PaymentIntentJsonParser.ErrorJsonParser.Companion>;
							}
						}
						export class ShippingJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.PaymentIntent.Shipping> {
							public static class: java.lang.Class<com.stripe.android.model.parsers.PaymentIntentJsonParser.ShippingJsonParser>;
							public constructor();
							public parse(param0: org.json.JSONObject): com.stripe.android.model.PaymentIntent.Shipping;
							public parse(param0: org.json.JSONObject): any;
						}
						export module ShippingJsonParser {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.parsers.PaymentIntentJsonParser.ShippingJsonParser.Companion>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export module parsers {
					export class PaymentMethodJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.PaymentMethod> {
						public static class: java.lang.Class<com.stripe.android.model.parsers.PaymentMethodJsonParser>;
						public static $stable: number;
						public constructor();
						public parse(param0: org.json.JSONObject): any;
						public parse(param0: org.json.JSONObject): com.stripe.android.model.PaymentMethod;
					}
					export module PaymentMethodJsonParser {
						export class AuBecsDebitJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.PaymentMethod.AuBecsDebit> {
							public static class: java.lang.Class<com.stripe.android.model.parsers.PaymentMethodJsonParser.AuBecsDebitJsonParser>;
							public constructor();
							public parse(param0: org.json.JSONObject): any;
							public parse(param0: org.json.JSONObject): com.stripe.android.model.PaymentMethod.AuBecsDebit;
						}
						export module AuBecsDebitJsonParser {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.parsers.PaymentMethodJsonParser.AuBecsDebitJsonParser.Companion>;
							}
						}
						export class BacsDebitJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.PaymentMethod.BacsDebit> {
							public static class: java.lang.Class<com.stripe.android.model.parsers.PaymentMethodJsonParser.BacsDebitJsonParser>;
							public constructor();
							public parse(param0: org.json.JSONObject): com.stripe.android.model.PaymentMethod.BacsDebit;
							public parse(param0: org.json.JSONObject): any;
						}
						export module BacsDebitJsonParser {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.parsers.PaymentMethodJsonParser.BacsDebitJsonParser.Companion>;
							}
						}
						export class BillingDetails extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.PaymentMethod.BillingDetails> {
							public static class: java.lang.Class<com.stripe.android.model.parsers.PaymentMethodJsonParser.BillingDetails>;
							public constructor();
							public parse(param0: org.json.JSONObject): com.stripe.android.model.PaymentMethod.BillingDetails;
							public parse(param0: org.json.JSONObject): any;
						}
						export module BillingDetails {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.parsers.PaymentMethodJsonParser.BillingDetails.Companion>;
							}
						}
						export class CardJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.PaymentMethod.Card> {
							public static class: java.lang.Class<com.stripe.android.model.parsers.PaymentMethodJsonParser.CardJsonParser>;
							public constructor();
							public parse(param0: org.json.JSONObject): any;
							public parse(param0: org.json.JSONObject): com.stripe.android.model.PaymentMethod.Card;
						}
						export module CardJsonParser {
							export class ChecksJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.PaymentMethod.Card.Checks> {
								public static class: java.lang.Class<com.stripe.android.model.parsers.PaymentMethodJsonParser.CardJsonParser.ChecksJsonParser>;
								public parse(param0: org.json.JSONObject): com.stripe.android.model.PaymentMethod.Card.Checks;
								public parse(param0: org.json.JSONObject): any;
								public constructor();
							}
							export module ChecksJsonParser {
								export class Companion {
									public static class: java.lang.Class<com.stripe.android.model.parsers.PaymentMethodJsonParser.CardJsonParser.ChecksJsonParser.Companion>;
								}
							}
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.parsers.PaymentMethodJsonParser.CardJsonParser.Companion>;
							}
							export class NetworksJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.PaymentMethod.Card.Networks> {
								public static class: java.lang.Class<com.stripe.android.model.parsers.PaymentMethodJsonParser.CardJsonParser.NetworksJsonParser>;
								public parse(param0: org.json.JSONObject): com.stripe.android.model.PaymentMethod.Card.Networks;
								public parse(param0: org.json.JSONObject): any;
								public constructor();
							}
							export module NetworksJsonParser {
								export class Companion {
									public static class: java.lang.Class<com.stripe.android.model.parsers.PaymentMethodJsonParser.CardJsonParser.NetworksJsonParser.Companion>;
								}
							}
							export class ThreeDSecureUsageJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.PaymentMethod.Card.ThreeDSecureUsage> {
								public static class: java.lang.Class<com.stripe.android.model.parsers.PaymentMethodJsonParser.CardJsonParser.ThreeDSecureUsageJsonParser>;
								public parse(param0: org.json.JSONObject): com.stripe.android.model.PaymentMethod.Card.ThreeDSecureUsage;
								public parse(param0: org.json.JSONObject): any;
								public constructor();
							}
							export module ThreeDSecureUsageJsonParser {
								export class Companion {
									public static class: java.lang.Class<com.stripe.android.model.parsers.PaymentMethodJsonParser.CardJsonParser.ThreeDSecureUsageJsonParser.Companion>;
								}
							}
						}
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.parsers.PaymentMethodJsonParser.Companion>;
						}
						export class FpxJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.PaymentMethod.Fpx> {
							public static class: java.lang.Class<com.stripe.android.model.parsers.PaymentMethodJsonParser.FpxJsonParser>;
							public constructor();
							public parse(param0: org.json.JSONObject): any;
							public parse(param0: org.json.JSONObject): com.stripe.android.model.PaymentMethod.Fpx;
						}
						export module FpxJsonParser {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.parsers.PaymentMethodJsonParser.FpxJsonParser.Companion>;
							}
						}
						export class IdealJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.PaymentMethod.Ideal> {
							public static class: java.lang.Class<com.stripe.android.model.parsers.PaymentMethodJsonParser.IdealJsonParser>;
							public constructor();
							public parse(param0: org.json.JSONObject): com.stripe.android.model.PaymentMethod.Ideal;
							public parse(param0: org.json.JSONObject): any;
						}
						export module IdealJsonParser {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.parsers.PaymentMethodJsonParser.IdealJsonParser.Companion>;
							}
						}
						export class NetbankingJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.PaymentMethod.Netbanking> {
							public static class: java.lang.Class<com.stripe.android.model.parsers.PaymentMethodJsonParser.NetbankingJsonParser>;
							public constructor();
							public parse(param0: org.json.JSONObject): any;
							public parse(param0: org.json.JSONObject): com.stripe.android.model.PaymentMethod.Netbanking;
						}
						export module NetbankingJsonParser {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.parsers.PaymentMethodJsonParser.NetbankingJsonParser.Companion>;
							}
						}
						export class SepaDebitJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.PaymentMethod.SepaDebit> {
							public static class: java.lang.Class<com.stripe.android.model.parsers.PaymentMethodJsonParser.SepaDebitJsonParser>;
							public constructor();
							public parse(param0: org.json.JSONObject): any;
							public parse(param0: org.json.JSONObject): com.stripe.android.model.PaymentMethod.SepaDebit;
						}
						export module SepaDebitJsonParser {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.parsers.PaymentMethodJsonParser.SepaDebitJsonParser.Companion>;
							}
						}
						export class SofortJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.PaymentMethod.Sofort> {
							public static class: java.lang.Class<com.stripe.android.model.parsers.PaymentMethodJsonParser.SofortJsonParser>;
							public constructor();
							public parse(param0: org.json.JSONObject): any;
							public parse(param0: org.json.JSONObject): com.stripe.android.model.PaymentMethod.Sofort;
						}
						export module SofortJsonParser {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.parsers.PaymentMethodJsonParser.SofortJsonParser.Companion>;
							}
						}
						export class UpiJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.PaymentMethod.Upi> {
							public static class: java.lang.Class<com.stripe.android.model.parsers.PaymentMethodJsonParser.UpiJsonParser>;
							public constructor();
							public parse(param0: org.json.JSONObject): any;
							public parse(param0: org.json.JSONObject): com.stripe.android.model.PaymentMethod.Upi;
						}
						export module UpiJsonParser {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.parsers.PaymentMethodJsonParser.UpiJsonParser.Companion>;
							}
						}
						export class WhenMappings {
							public static class: java.lang.Class<com.stripe.android.model.parsers.PaymentMethodJsonParser.WhenMappings>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export module parsers {
					export class PaymentMethodPreferenceForPaymentIntentJsonParser extends com.stripe.android.model.parsers.PaymentMethodPreferenceJsonParser<com.stripe.android.model.PaymentIntent> {
						public static class: java.lang.Class<com.stripe.android.model.parsers.PaymentMethodPreferenceForPaymentIntentJsonParser>;
						public constructor();
						public parse(param0: org.json.JSONObject): any;
						public getStripeIntentFieldName(): string;
						public parseStripeIntent(param0: org.json.JSONObject): com.stripe.android.model.PaymentIntent;
						public parseStripeIntent(param0: org.json.JSONObject): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export module parsers {
					export class PaymentMethodPreferenceForSetupIntentJsonParser extends com.stripe.android.model.parsers.PaymentMethodPreferenceJsonParser<com.stripe.android.model.SetupIntent> {
						public static class: java.lang.Class<com.stripe.android.model.parsers.PaymentMethodPreferenceForSetupIntentJsonParser>;
						public constructor();
						public parseStripeIntent(param0: org.json.JSONObject): com.stripe.android.model.SetupIntent;
						public parse(param0: org.json.JSONObject): any;
						public getStripeIntentFieldName(): string;
						public parseStripeIntent(param0: org.json.JSONObject): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export module parsers {
					export abstract class PaymentMethodPreferenceJsonParser<StripeIntentType> extends com.stripe.android.model.parsers.ModelJsonParser<any> {
						public static class: java.lang.Class<com.stripe.android.model.parsers.PaymentMethodPreferenceJsonParser<any>>;
						public static Companion: com.stripe.android.model.parsers.PaymentMethodPreferenceJsonParser.Companion;
						public parse(param0: org.json.JSONObject): any;
						public getStripeIntentFieldName(): string;
						public parseStripeIntent(param0: org.json.JSONObject): any;
					}
					export module PaymentMethodPreferenceJsonParser {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.parsers.PaymentMethodPreferenceJsonParser.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export module parsers {
					export class PaymentMethodsListJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.PaymentMethodsList> {
						public static class: java.lang.Class<com.stripe.android.model.parsers.PaymentMethodsListJsonParser>;
						public constructor();
						public parse(param0: org.json.JSONObject): any;
						public parse(param0: org.json.JSONObject): com.stripe.android.model.PaymentMethodsList;
					}
					export module PaymentMethodsListJsonParser {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.parsers.PaymentMethodsListJsonParser.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export module parsers {
					export class RadarSessionJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.RadarSession> {
						public static class: java.lang.Class<com.stripe.android.model.parsers.RadarSessionJsonParser>;
						public constructor();
						public parse(param0: org.json.JSONObject): any;
						public parse(param0: org.json.JSONObject): com.stripe.android.model.RadarSession;
					}
					export module RadarSessionJsonParser {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.parsers.RadarSessionJsonParser.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export module parsers {
					export class SetupIntentJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.SetupIntent> {
						public static class: java.lang.Class<com.stripe.android.model.parsers.SetupIntentJsonParser>;
						public static $stable: number;
						public constructor();
						public parse(param0: org.json.JSONObject): com.stripe.android.model.SetupIntent;
						public parse(param0: org.json.JSONObject): any;
					}
					export module SetupIntentJsonParser {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.parsers.SetupIntentJsonParser.Companion>;
						}
						export class ErrorJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.SetupIntent.Error> {
							public static class: java.lang.Class<com.stripe.android.model.parsers.SetupIntentJsonParser.ErrorJsonParser>;
							public constructor();
							public parse(param0: org.json.JSONObject): any;
							public parse(param0: org.json.JSONObject): com.stripe.android.model.SetupIntent.Error;
						}
						export module ErrorJsonParser {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.parsers.SetupIntentJsonParser.ErrorJsonParser.Companion>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export module parsers {
					export class ShippingInformationJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.ShippingInformation> {
						public static class: java.lang.Class<com.stripe.android.model.parsers.ShippingInformationJsonParser>;
						public constructor();
						public parse(param0: org.json.JSONObject): com.stripe.android.model.ShippingInformation;
						public parse(param0: org.json.JSONObject): any;
					}
					export module ShippingInformationJsonParser {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.parsers.ShippingInformationJsonParser.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export module parsers {
					export class SourceCardDataJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.SourceTypeModel.Card> {
						public static class: java.lang.Class<com.stripe.android.model.parsers.SourceCardDataJsonParser>;
						public static Companion: com.stripe.android.model.parsers.SourceCardDataJsonParser.Companion;
						public constructor();
						public parse(param0: org.json.JSONObject): com.stripe.android.model.SourceTypeModel.Card;
						public parse(param0: org.json.JSONObject): any;
					}
					export module SourceCardDataJsonParser {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.parsers.SourceCardDataJsonParser.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export module parsers {
					export class SourceJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.Source> {
						public static class: java.lang.Class<com.stripe.android.model.parsers.SourceJsonParser>;
						public constructor();
						public parse(param0: org.json.JSONObject): com.stripe.android.model.Source;
						public parse(param0: org.json.JSONObject): any;
					}
					export module SourceJsonParser {
						export class CodeVerificationJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.Source.CodeVerification> {
							public static class: java.lang.Class<com.stripe.android.model.parsers.SourceJsonParser.CodeVerificationJsonParser>;
							public constructor();
							public parse(param0: org.json.JSONObject): com.stripe.android.model.Source.CodeVerification;
							public parse(param0: org.json.JSONObject): any;
						}
						export module CodeVerificationJsonParser {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.parsers.SourceJsonParser.CodeVerificationJsonParser.Companion>;
							}
						}
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.parsers.SourceJsonParser.Companion>;
						}
						export class KlarnaJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.Source.Klarna> {
							public static class: java.lang.Class<com.stripe.android.model.parsers.SourceJsonParser.KlarnaJsonParser>;
							public constructor();
							public parse(param0: org.json.JSONObject): any;
							public parse(param0: org.json.JSONObject): com.stripe.android.model.Source.Klarna;
						}
						export module KlarnaJsonParser {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.parsers.SourceJsonParser.KlarnaJsonParser.Companion>;
							}
						}
						export class OwnerJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.Source.Owner> {
							public static class: java.lang.Class<com.stripe.android.model.parsers.SourceJsonParser.OwnerJsonParser>;
							public constructor();
							public parse(param0: org.json.JSONObject): com.stripe.android.model.Source.Owner;
							public parse(param0: org.json.JSONObject): any;
						}
						export module OwnerJsonParser {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.parsers.SourceJsonParser.OwnerJsonParser.Companion>;
							}
						}
						export class ReceiverJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.Source.Receiver> {
							public static class: java.lang.Class<com.stripe.android.model.parsers.SourceJsonParser.ReceiverJsonParser>;
							public constructor();
							public parse(param0: org.json.JSONObject): any;
							public parse(param0: org.json.JSONObject): com.stripe.android.model.Source.Receiver;
						}
						export module ReceiverJsonParser {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.parsers.SourceJsonParser.ReceiverJsonParser.Companion>;
							}
						}
						export class RedirectJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.Source.Redirect> {
							public static class: java.lang.Class<com.stripe.android.model.parsers.SourceJsonParser.RedirectJsonParser>;
							public static Companion: com.stripe.android.model.parsers.SourceJsonParser.RedirectJsonParser.Companion;
							public constructor();
							public parse(param0: org.json.JSONObject): com.stripe.android.model.Source.Redirect;
							public parse(param0: org.json.JSONObject): any;
						}
						export module RedirectJsonParser {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.parsers.SourceJsonParser.RedirectJsonParser.Companion>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export module parsers {
					export class SourceOrderJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.SourceOrder> {
						public static class: java.lang.Class<com.stripe.android.model.parsers.SourceOrderJsonParser>;
						public constructor();
						public parse(param0: org.json.JSONObject): any;
						public parse(param0: org.json.JSONObject): com.stripe.android.model.SourceOrder;
					}
					export module SourceOrderJsonParser {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.parsers.SourceOrderJsonParser.Companion>;
						}
						export class ItemJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.SourceOrder.Item> {
							public static class: java.lang.Class<com.stripe.android.model.parsers.SourceOrderJsonParser.ItemJsonParser>;
							public constructor();
							public parse(param0: org.json.JSONObject): com.stripe.android.model.SourceOrder.Item;
							public parse(param0: org.json.JSONObject): any;
						}
						export module ItemJsonParser {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.parsers.SourceOrderJsonParser.ItemJsonParser.Companion>;
							}
						}
						export class ShippingJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.SourceOrder.Shipping> {
							public static class: java.lang.Class<com.stripe.android.model.parsers.SourceOrderJsonParser.ShippingJsonParser>;
							public constructor();
							public parse(param0: org.json.JSONObject): com.stripe.android.model.SourceOrder.Shipping;
							public parse(param0: org.json.JSONObject): any;
						}
						export module ShippingJsonParser {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.parsers.SourceOrderJsonParser.ShippingJsonParser.Companion>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export module parsers {
					export class SourceOwnerJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.Source.Owner> {
						public static class: java.lang.Class<com.stripe.android.model.parsers.SourceOwnerJsonParser>;
						public constructor();
						public parse(param0: org.json.JSONObject): any;
						public parse(param0: org.json.JSONObject): com.stripe.android.model.Source.Owner;
					}
					export module SourceOwnerJsonParser {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.parsers.SourceOwnerJsonParser.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export module parsers {
					export class SourceSepaDebitDataJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.SourceTypeModel.SepaDebit> {
						public static class: java.lang.Class<com.stripe.android.model.parsers.SourceSepaDebitDataJsonParser>;
						public parse(param0: org.json.JSONObject): com.stripe.android.model.SourceTypeModel.SepaDebit;
						public constructor();
						public parse(param0: org.json.JSONObject): any;
					}
					export module SourceSepaDebitDataJsonParser {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.parsers.SourceSepaDebitDataJsonParser.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export module parsers {
					export class Stripe3ds2AuthResultJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.Stripe3ds2AuthResult> {
						public static class: java.lang.Class<com.stripe.android.model.parsers.Stripe3ds2AuthResultJsonParser>;
						public parse(param0: org.json.JSONObject): com.stripe.android.model.Stripe3ds2AuthResult;
						public constructor();
						public parse(param0: org.json.JSONObject): any;
					}
					export module Stripe3ds2AuthResultJsonParser {
						export class AresJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.Stripe3ds2AuthResult.Ares> {
							public static class: java.lang.Class<com.stripe.android.model.parsers.Stripe3ds2AuthResultJsonParser.AresJsonParser>;
							public constructor();
							public parse(param0: org.json.JSONObject): any;
							public parse(param0: org.json.JSONObject): com.stripe.android.model.Stripe3ds2AuthResult.Ares;
						}
						export module AresJsonParser {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.parsers.Stripe3ds2AuthResultJsonParser.AresJsonParser.Companion>;
							}
						}
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.parsers.Stripe3ds2AuthResultJsonParser.Companion>;
						}
						export class MessageExtensionJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.Stripe3ds2AuthResult.MessageExtension> {
							public static class: java.lang.Class<com.stripe.android.model.parsers.Stripe3ds2AuthResultJsonParser.MessageExtensionJsonParser>;
							public constructor();
							public parse(param0: org.json.JSONObject): com.stripe.android.model.Stripe3ds2AuthResult.MessageExtension;
							public parse(param0: org.json.JSONObject): any;
							public parse(param0: org.json.JSONArray): java.util.List<com.stripe.android.model.Stripe3ds2AuthResult.MessageExtension>;
						}
						export module MessageExtensionJsonParser {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.parsers.Stripe3ds2AuthResultJsonParser.MessageExtensionJsonParser.Companion>;
							}
						}
						export class ThreeDS2ErrorJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.Stripe3ds2AuthResult.ThreeDS2Error> {
							public static class: java.lang.Class<com.stripe.android.model.parsers.Stripe3ds2AuthResultJsonParser.ThreeDS2ErrorJsonParser>;
							public constructor();
							public parse(param0: org.json.JSONObject): any;
							public parse(param0: org.json.JSONObject): com.stripe.android.model.Stripe3ds2AuthResult.ThreeDS2Error;
						}
						export module ThreeDS2ErrorJsonParser {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.parsers.Stripe3ds2AuthResultJsonParser.ThreeDS2ErrorJsonParser.Companion>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export module parsers {
					export class StripeFileJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.StripeFile> {
						public static class: java.lang.Class<com.stripe.android.model.parsers.StripeFileJsonParser>;
						public constructor();
						public parse(param0: org.json.JSONObject): any;
						public parse(param0: org.json.JSONObject): com.stripe.android.model.StripeFile;
					}
					export module StripeFileJsonParser {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.parsers.StripeFileJsonParser.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export module parsers {
					export class TokenJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.Token> {
						public static class: java.lang.Class<com.stripe.android.model.parsers.TokenJsonParser>;
						public constructor();
						public parse(param0: org.json.JSONObject): com.stripe.android.model.Token;
						public parse(param0: org.json.JSONObject): any;
					}
					export module TokenJsonParser {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.parsers.TokenJsonParser.Companion>;
						}
						export class WhenMappings {
							public static class: java.lang.Class<com.stripe.android.model.parsers.TokenJsonParser.WhenMappings>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export module parsers {
					export class WalletJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.wallets.Wallet> {
						public static class: java.lang.Class<com.stripe.android.model.parsers.WalletJsonParser>;
						public constructor();
						public parse(param0: org.json.JSONObject): com.stripe.android.model.wallets.Wallet;
						public parse(param0: org.json.JSONObject): any;
					}
					export module WalletJsonParser {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.parsers.WalletJsonParser.Companion>;
						}
						export class WhenMappings {
							public static class: java.lang.Class<com.stripe.android.model.parsers.WalletJsonParser.WhenMappings>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export module parsers {
					export class WeChatJsonParser extends com.stripe.android.model.parsers.ModelJsonParser<com.stripe.android.model.WeChat> {
						public static class: java.lang.Class<com.stripe.android.model.parsers.WeChatJsonParser>;
						public parse(param0: org.json.JSONObject): com.stripe.android.model.WeChat;
						public constructor();
						public parse(param0: org.json.JSONObject): any;
					}
					export module WeChatJsonParser {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.model.parsers.WeChatJsonParser.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module model {
				export module wallets {
					export abstract class Wallet extends com.stripe.android.core.model.StripeModel {
						public static class: java.lang.Class<com.stripe.android.model.wallets.Wallet>;
						public static $stable: number;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getWalletType$payments_core_release(): com.stripe.android.model.wallets.Wallet.Type;
					}
					export module Wallet {
						export class AmexExpressCheckoutWallet extends com.stripe.android.model.wallets.Wallet {
							public static class: java.lang.Class<com.stripe.android.model.wallets.Wallet.AmexExpressCheckoutWallet>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.wallets.Wallet.AmexExpressCheckoutWallet>;
							public static $stable: number;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public hashCode(): number;
							public constructor(param0: string);
							public describeContents(): number;
							public copy(param0: string): com.stripe.android.model.wallets.Wallet.AmexExpressCheckoutWallet;
							public toString(): string;
							public equals(param0: any): boolean;
							public getDynamicLast4(): string;
							public component1(): string;
						}
						export module AmexExpressCheckoutWallet {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.wallets.Wallet.AmexExpressCheckoutWallet> {
								public static class: java.lang.Class<com.stripe.android.model.wallets.Wallet.AmexExpressCheckoutWallet.Creator>;
								public newArray(param0: number): androidNative.Array<com.stripe.android.model.wallets.Wallet.AmexExpressCheckoutWallet>;
								public constructor();
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.wallets.Wallet.AmexExpressCheckoutWallet;
							}
						}
						export class ApplePayWallet extends com.stripe.android.model.wallets.Wallet {
							public static class: java.lang.Class<com.stripe.android.model.wallets.Wallet.ApplePayWallet>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.wallets.Wallet.ApplePayWallet>;
							public static $stable: number;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public hashCode(): number;
							public constructor(param0: string);
							public describeContents(): number;
							public copy(param0: string): com.stripe.android.model.wallets.Wallet.ApplePayWallet;
							public toString(): string;
							public equals(param0: any): boolean;
							public getDynamicLast4(): string;
							public component1(): string;
						}
						export module ApplePayWallet {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.wallets.Wallet.ApplePayWallet> {
								public static class: java.lang.Class<com.stripe.android.model.wallets.Wallet.ApplePayWallet.Creator>;
								public constructor();
								public newArray(param0: number): androidNative.Array<com.stripe.android.model.wallets.Wallet.ApplePayWallet>;
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.wallets.Wallet.ApplePayWallet;
							}
						}
						export class GooglePayWallet extends com.stripe.android.model.wallets.Wallet {
							public static class: java.lang.Class<com.stripe.android.model.wallets.Wallet.GooglePayWallet>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.wallets.Wallet.GooglePayWallet>;
							public static $stable: number;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public hashCode(): number;
							public constructor(param0: string);
							public copy(param0: string): com.stripe.android.model.wallets.Wallet.GooglePayWallet;
							public describeContents(): number;
							public toString(): string;
							public equals(param0: any): boolean;
							public getDynamicLast4(): string;
							public component1(): string;
						}
						export module GooglePayWallet {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.wallets.Wallet.GooglePayWallet> {
								public static class: java.lang.Class<com.stripe.android.model.wallets.Wallet.GooglePayWallet.Creator>;
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.wallets.Wallet.GooglePayWallet;
								public newArray(param0: number): androidNative.Array<com.stripe.android.model.wallets.Wallet.GooglePayWallet>;
								public constructor();
							}
						}
						export class MasterpassWallet extends com.stripe.android.model.wallets.Wallet {
							public static class: java.lang.Class<com.stripe.android.model.wallets.Wallet.MasterpassWallet>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.wallets.Wallet.MasterpassWallet>;
							public static $stable: number;
							public component2(): string;
							public getBillingAddress(): com.stripe.android.model.Address;
							public component4(): com.stripe.android.model.Address;
							public hashCode(): number;
							public getShippingAddress(): com.stripe.android.model.Address;
							public constructor(param0: com.stripe.android.model.Address, param1: string, param2: string, param3: com.stripe.android.model.Address);
							public component1(): com.stripe.android.model.Address;
							public toString(): string;
							public component3(): string;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public copy(param0: com.stripe.android.model.Address, param1: string, param2: string, param3: com.stripe.android.model.Address): com.stripe.android.model.wallets.Wallet.MasterpassWallet;
							public getEmail(): string;
							public getName(): string;
							public describeContents(): number;
							public equals(param0: any): boolean;
						}
						export module MasterpassWallet {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.wallets.Wallet.MasterpassWallet> {
								public static class: java.lang.Class<com.stripe.android.model.wallets.Wallet.MasterpassWallet.Creator>;
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.wallets.Wallet.MasterpassWallet;
								public constructor();
								public newArray(param0: number): androidNative.Array<com.stripe.android.model.wallets.Wallet.MasterpassWallet>;
							}
						}
						export class SamsungPayWallet extends com.stripe.android.model.wallets.Wallet {
							public static class: java.lang.Class<com.stripe.android.model.wallets.Wallet.SamsungPayWallet>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.wallets.Wallet.SamsungPayWallet>;
							public static $stable: number;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public hashCode(): number;
							public constructor(param0: string);
							public describeContents(): number;
							public copy(param0: string): com.stripe.android.model.wallets.Wallet.SamsungPayWallet;
							public toString(): string;
							public equals(param0: any): boolean;
							public getDynamicLast4(): string;
							public component1(): string;
						}
						export module SamsungPayWallet {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.wallets.Wallet.SamsungPayWallet> {
								public static class: java.lang.Class<com.stripe.android.model.wallets.Wallet.SamsungPayWallet.Creator>;
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.wallets.Wallet.SamsungPayWallet;
								public newArray(param0: number): androidNative.Array<com.stripe.android.model.wallets.Wallet.SamsungPayWallet>;
								public constructor();
							}
						}
						export class Type {
							public static class: java.lang.Class<com.stripe.android.model.wallets.Wallet.Type>;
							public static Companion: com.stripe.android.model.wallets.Wallet.Type.Companion;
							public static AmexExpressCheckout: com.stripe.android.model.wallets.Wallet.Type;
							public static ApplePay: com.stripe.android.model.wallets.Wallet.Type;
							public static GooglePay: com.stripe.android.model.wallets.Wallet.Type;
							public static Masterpass: com.stripe.android.model.wallets.Wallet.Type;
							public static SamsungPay: com.stripe.android.model.wallets.Wallet.Type;
							public static VisaCheckout: com.stripe.android.model.wallets.Wallet.Type;
							public getCode(): string;
							public static valueOf(param0: string): com.stripe.android.model.wallets.Wallet.Type;
							public static values(): androidNative.Array<com.stripe.android.model.wallets.Wallet.Type>;
						}
						export module Type {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.model.wallets.Wallet.Type.Companion>;
								public fromCode$payments_core_release(param0: string): com.stripe.android.model.wallets.Wallet.Type;
							}
						}
						export class VisaCheckoutWallet extends com.stripe.android.model.wallets.Wallet {
							public static class: java.lang.Class<com.stripe.android.model.wallets.Wallet.VisaCheckoutWallet>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.model.wallets.Wallet.VisaCheckoutWallet>;
							public static $stable: number;
							public component2(): string;
							public getBillingAddress(): com.stripe.android.model.Address;
							public component4(): com.stripe.android.model.Address;
							public hashCode(): number;
							public getShippingAddress(): com.stripe.android.model.Address;
							public component1(): com.stripe.android.model.Address;
							public toString(): string;
							public component5(): string;
							public getDynamicLast4(): string;
							public component3(): string;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public constructor(param0: com.stripe.android.model.Address, param1: string, param2: string, param3: com.stripe.android.model.Address, param4: string);
							public copy(param0: com.stripe.android.model.Address, param1: string, param2: string, param3: com.stripe.android.model.Address, param4: string): com.stripe.android.model.wallets.Wallet.VisaCheckoutWallet;
							public getEmail(): string;
							public getName(): string;
							public describeContents(): number;
							public equals(param0: any): boolean;
						}
						export module VisaCheckoutWallet {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.model.wallets.Wallet.VisaCheckoutWallet> {
								public static class: java.lang.Class<com.stripe.android.model.wallets.Wallet.VisaCheckoutWallet.Creator>;
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.model.wallets.Wallet.VisaCheckoutWallet;
								public constructor();
								public newArray(param0: number): androidNative.Array<com.stripe.android.model.wallets.Wallet.VisaCheckoutWallet>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module networking {
				export class AlipayRepository {
					public static class: java.lang.Class<com.stripe.android.networking.AlipayRepository>;
					/**
					 * Constructs a new instance of the com.stripe.android.networking.AlipayRepository interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						authenticate(param0: com.stripe.android.model.PaymentIntent, param1: com.stripe.android.AlipayAuthenticator, param2: com.stripe.android.networking.ApiRequest.Options, param3: kotlin.coroutines.Continuation<any>): any;
					});
					public constructor();
					public authenticate(param0: com.stripe.android.model.PaymentIntent, param1: com.stripe.android.AlipayAuthenticator, param2: com.stripe.android.networking.ApiRequest.Options, param3: kotlin.coroutines.Continuation<any>): any;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module networking {
				export class ApiRequest extends com.stripe.android.core.networking.StripeRequest {
					public static class: java.lang.Class<com.stripe.android.networking.ApiRequest>;
					public static Companion: com.stripe.android.networking.ApiRequest.Companion;
					public static $stable: number;
					public static API_HOST: string;
					public getHeaders(): java.util.Map<string, string>;
					public getParams$payments_core_release(): java.util.Map<string, any>;
					public getMimeType(): com.stripe.android.core.networking.StripeRequest.MimeType;
					public writePostBody(param0: java.io.OutputStream): void;
					public component4$payments_core_release(): com.stripe.android.networking.ApiRequest.Options;
					public getOptions$payments_core_release(): com.stripe.android.networking.ApiRequest.Options;
					public getBaseUrl$payments_core_release(): string;
					public getPostHeaders(): java.util.Map<string, string>;
					public setPostHeaders(param0: java.util.Map<string, string>): void;
					public component2$payments_core_release(): string;
					public getMethod(): com.stripe.android.core.networking.StripeRequest.Method;
					public equals(param0: any): boolean;
					public constructor(param0: com.stripe.android.core.networking.StripeRequest.Method, param1: string, param2: java.util.Map<string, any>, param3: com.stripe.android.networking.ApiRequest.Options, param4: com.stripe.android.AppInfo, param5: string, param6: string);
					public toString(): string;
					public getUrl(): string;
					public constructor();
					public getRetryResponseCodes(): java.lang.Iterable<java.lang.Integer>;
					public component1(): com.stripe.android.core.networking.StripeRequest.Method;
					public copy(param0: com.stripe.android.core.networking.StripeRequest.Method, param1: string, param2: java.util.Map<string, any>, param3: com.stripe.android.networking.ApiRequest.Options, param4: com.stripe.android.AppInfo, param5: string, param6: string): com.stripe.android.networking.ApiRequest;
					public component3$payments_core_release(): java.util.Map<string, any>;
					public hashCode(): number;
				}
				export module ApiRequest {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.networking.ApiRequest.Companion>;
					}
					export class Factory {
						public static class: java.lang.Class<com.stripe.android.networking.ApiRequest.Factory>;
						public static $stable: number;
						public constructor();
						public createDelete(param0: string, param1: com.stripe.android.networking.ApiRequest.Options): com.stripe.android.networking.ApiRequest;
						public createGet(param0: string, param1: com.stripe.android.networking.ApiRequest.Options, param2: java.util.Map<string, any>): com.stripe.android.networking.ApiRequest;
						public createPost(param0: string, param1: com.stripe.android.networking.ApiRequest.Options, param2: java.util.Map<string, any>): com.stripe.android.networking.ApiRequest;
						public constructor(param0: com.stripe.android.AppInfo, param1: string, param2: string);
					}
					export class Options {
						public static class: java.lang.Class<com.stripe.android.networking.ApiRequest.Options>;
						public static Companion: com.stripe.android.networking.ApiRequest.Options.Companion;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.networking.ApiRequest.Options>;
						public static $stable: number;
						public static UNDEFINED_PUBLISHABLE_KEY: string;
						public describeContents(): number;
						public copy(param0: string, param1: string, param2: string): com.stripe.android.networking.ApiRequest.Options;
						public getStripeAccount$payments_core_release(): string;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getApiKey$payments_core_release(): string;
						public getIdempotencyKey$payments_core_release(): string;
						public toString(): string;
						public component3$payments_core_release(): string;
						public constructor(param0: kotlin.jvm.functions.Function0<string>, param1: kotlin.jvm.functions.Function0<string>);
						public component1$payments_core_release(): string;
						public component2$payments_core_release(): string;
						public constructor(param0: string, param1: string, param2: string);
					}
					export module Options {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.networking.ApiRequest.Options.Companion>;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.networking.ApiRequest.Options> {
							public static class: java.lang.Class<com.stripe.android.networking.ApiRequest.Options.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.networking.ApiRequest.Options>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.networking.ApiRequest.Options;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module networking {
				export class ApiRequest_Options_Factory extends dagger.internal.Factory<com.stripe.android.networking.ApiRequest.Options> {
					public static class: java.lang.Class<com.stripe.android.networking.ApiRequest_Options_Factory>;
					public get(): com.stripe.android.networking.ApiRequest.Options;
					public constructor(param0: javax.inject.Provider<kotlin.jvm.functions.Function0<string>>, param1: javax.inject.Provider<kotlin.jvm.functions.Function0<string>>);
					public static create(param0: javax.inject.Provider<kotlin.jvm.functions.Function0<string>>, param1: javax.inject.Provider<kotlin.jvm.functions.Function0<string>>): com.stripe.android.networking.ApiRequest_Options_Factory;
					public static newInstance(param0: kotlin.jvm.functions.Function0<string>, param1: kotlin.jvm.functions.Function0<string>): com.stripe.android.networking.ApiRequest.Options;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module networking {
				export class DefaultAlipayRepository extends com.stripe.android.networking.AlipayRepository {
					public static class: java.lang.Class<com.stripe.android.networking.DefaultAlipayRepository>;
					public authenticate(param0: com.stripe.android.model.PaymentIntent, param1: com.stripe.android.AlipayAuthenticator, param2: com.stripe.android.networking.ApiRequest.Options, param3: kotlin.coroutines.Continuation<any>): any;
					public constructor(param0: com.stripe.android.networking.StripeRepository);
				}
				export module DefaultAlipayRepository {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.networking.DefaultAlipayRepository.Companion>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module networking {
				export class DefaultFraudDetectionDataRequestFactory extends com.stripe.android.networking.FraudDetectionDataRequestFactory {
					public static class: java.lang.Class<com.stripe.android.networking.DefaultFraudDetectionDataRequestFactory>;
					public constructor(param0: globalAndroid.content.Context);
					public constructor(param0: com.stripe.android.networking.FraudDetectionDataRequestParamsFactory);
					public create(param0: com.stripe.android.networking.FraudDetectionData): com.stripe.android.networking.FraudDetectionDataRequest;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module networking {
				export class FileUploadRequest extends com.stripe.android.core.networking.StripeRequest {
					public static class: java.lang.Class<com.stripe.android.networking.FileUploadRequest>;
					public static Companion: com.stripe.android.networking.FileUploadRequest.Companion;
					public getFileMetadata$payments_core_release(): string;
					public getPurposeContents$payments_core_release(): string;
					public getHeaders(): java.util.Map<string, string>;
					public getMimeType(): com.stripe.android.core.networking.StripeRequest.MimeType;
					public writePostBody(param0: java.io.OutputStream): void;
					public getUrl(): string;
					public constructor();
					public getRetryResponseCodes(): java.lang.Iterable<java.lang.Integer>;
					public constructor(param0: com.stripe.android.model.StripeFileParams, param1: com.stripe.android.networking.ApiRequest.Options, param2: com.stripe.android.AppInfo, param3: string);
					public getPostHeaders(): java.util.Map<string, string>;
					public setPostHeaders(param0: java.util.Map<string, string>): void;
					public getMethod(): com.stripe.android.core.networking.StripeRequest.Method;
				}
				export module FileUploadRequest {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.networking.FileUploadRequest.Companion>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module networking {
				export class FraudDetectionData extends com.stripe.android.core.model.StripeModel {
					public static class: java.lang.Class<com.stripe.android.networking.FraudDetectionData>;
					public static Companion: com.stripe.android.networking.FraudDetectionData.Companion;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.networking.FraudDetectionData>;
					public static KEY_TIMESTAMP: string;
					public component4$payments_core_release(): number;
					public component1$payments_core_release(): string;
					public getParams(): java.util.Map<string, string>;
					public describeContents(): number;
					public copy(param0: string, param1: string, param2: string, param3: number): com.stripe.android.networking.FraudDetectionData;
					public getSid$payments_core_release(): string;
					public toJson(): org.json.JSONObject;
					public constructor(param0: string, param1: string, param2: string, param3: number);
					public component2$payments_core_release(): string;
					public component3$payments_core_release(): string;
					public equals(param0: any): boolean;
					public getMuid$payments_core_release(): string;
					public isExpired(param0: number): boolean;
					public toString(): string;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public hashCode(): number;
					public getTimestamp$payments_core_release(): number;
					public getGuid$payments_core_release(): string;
				}
				export module FraudDetectionData {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.networking.FraudDetectionData.Companion>;
					}
					export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.networking.FraudDetectionData> {
						public static class: java.lang.Class<com.stripe.android.networking.FraudDetectionData.Creator>;
						public constructor();
						public newArray(param0: number): androidNative.Array<com.stripe.android.networking.FraudDetectionData>;
						public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.networking.FraudDetectionData;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module networking {
				export class FraudDetectionDataParamsUtils {
					public static class: java.lang.Class<com.stripe.android.networking.FraudDetectionDataParamsUtils>;
					public constructor();
					public addFraudDetectionData$payments_core_release(param0: java.util.Map<string, any>, param1: com.stripe.android.networking.FraudDetectionData): java.util.Map<string, any>;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module networking {
				export class FraudDetectionDataRequest extends com.stripe.android.core.networking.StripeRequest {
					public static class: java.lang.Class<com.stripe.android.networking.FraudDetectionDataRequest>;
					public getHeaders(): java.util.Map<string, string>;
					public getMimeType(): com.stripe.android.core.networking.StripeRequest.MimeType;
					public writePostBody(param0: java.io.OutputStream): void;
					public constructor(param0: java.util.Map<string, any>, param1: string);
					public getUrl(): string;
					public constructor();
					public getRetryResponseCodes(): java.lang.Iterable<java.lang.Integer>;
					public getPostHeaders(): java.util.Map<string, string>;
					public setPostHeaders(param0: java.util.Map<string, string>): void;
					public getMethod(): com.stripe.android.core.networking.StripeRequest.Method;
				}
				export module FraudDetectionDataRequest {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.networking.FraudDetectionDataRequest.Companion>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module networking {
				export class FraudDetectionDataRequestFactory {
					public static class: java.lang.Class<com.stripe.android.networking.FraudDetectionDataRequestFactory>;
					/**
					 * Constructs a new instance of the com.stripe.android.networking.FraudDetectionDataRequestFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						create(param0: com.stripe.android.networking.FraudDetectionData): com.stripe.android.networking.FraudDetectionDataRequest;
					});
					public constructor();
					public create(param0: com.stripe.android.networking.FraudDetectionData): com.stripe.android.networking.FraudDetectionDataRequest;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module networking {
				export class FraudDetectionDataRequestParamsFactory {
					public static class: java.lang.Class<com.stripe.android.networking.FraudDetectionDataRequestParamsFactory>;
					public constructor(param0: globalAndroid.content.Context);
					public constructor(param0: globalAndroid.util.DisplayMetrics, param1: string, param2: string, param3: string);
				}
				export module FraudDetectionDataRequestParamsFactory {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.networking.FraudDetectionDataRequestParamsFactory.Companion>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module networking {
				export class PaymentAnalyticsEvent {
					public static class: java.lang.Class<com.stripe.android.networking.PaymentAnalyticsEvent>;
					public static TokenCreate: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static PaymentMethodCreate: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static CustomerRetrieve: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static CustomerRetrievePaymentMethods: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static CustomerAttachPaymentMethod: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static CustomerDetachPaymentMethod: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static CustomerDeleteSource: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static CustomerSetShippingInfo: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static CustomerAddSource: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static CustomerSetDefaultSource: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static IssuingRetrievePin: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static IssuingUpdatePin: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static SourceCreate: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static SourceRetrieve: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static PaymentIntentConfirm: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static PaymentIntentRetrieve: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static PaymentIntentCancelSource: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static PaymentIntentRefresh: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static SetupIntentConfirm: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static SetupIntentRetrieve: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static SetupIntentCancelSource: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static FileCreate: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static Auth3ds1Sdk: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static Auth3ds1ChallengeStart: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static Auth3ds1ChallengeError: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static Auth3ds1ChallengeComplete: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static AuthWithWebView: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static AuthWithCustomTabs: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static AuthWithDefaultBrowser: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static ConfirmReturnUrlNull: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static ConfirmReturnUrlDefault: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static ConfirmReturnUrlCustom: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static FpxBankStatusesRetrieve: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static StripeUrlRetrieve: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static Auth3ds2RequestParamsFailed: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static Auth3ds2Fingerprint: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static Auth3ds2Start: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static Auth3ds2Frictionless: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static Auth3ds2ChallengePresented: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static Auth3ds2ChallengeCanceled: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static Auth3ds2ChallengeCompleted: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static Auth3ds2ChallengeErrored: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static Auth3ds2ChallengeTimedOut: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static Auth3ds2Fallback: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static AuthRedirect: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static AuthError: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static AuthSourceStart: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static AuthSourceRedirect: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static AuthSourceResult: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static RadarSessionCreate: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static GooglePayLauncherInit: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static GooglePayPaymentMethodLauncherInit: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static CardMetadataPublishableKeyAvailable: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static CardMetadataPublishableKeyUnavailable: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static CardMetadataLoadedTooSlow: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static CardMetadataLoadFailure: com.stripe.android.networking.PaymentAnalyticsEvent;
					public static CardMetadataMissingRange: com.stripe.android.networking.PaymentAnalyticsEvent;
					public toString(): string;
					public getCode$payments_core_release(): string;
					public static values(): androidNative.Array<com.stripe.android.networking.PaymentAnalyticsEvent>;
					public static valueOf(param0: string): com.stripe.android.networking.PaymentAnalyticsEvent;
				}
				export module PaymentAnalyticsEvent {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.networking.PaymentAnalyticsEvent.Companion>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module networking {
				export class PaymentAnalyticsRequestFactory {
					public static class: java.lang.Class<com.stripe.android.networking.PaymentAnalyticsRequestFactory>;
					public static Companion: com.stripe.android.networking.PaymentAnalyticsRequestFactory.Companion;
					public static $stable: number;
					public static FIELD_PRODUCT_USAGE: string;
					public static FIELD_ANALYTICS_UA: string;
					public static FIELD_APP_NAME: string;
					public static FIELD_APP_VERSION: string;
					public static FIELD_BINDINGS_VERSION: string;
					public static FIELD_IS_DEVELOPMENT: string;
					public static FIELD_DEVICE_ID: string;
					public static FIELD_DEVICE_TYPE: string;
					public static FIELD_EVENT: string;
					public static FIELD_OS_NAME: string;
					public static FIELD_OS_RELEASE: string;
					public static FIELD_OS_VERSION: string;
					public static FIELD_PUBLISHABLE_KEY: string;
					public static FIELD_SOURCE_TYPE: string;
					public static FIELD_3DS2_UI_TYPE: string;
					public static FIELD_TOKEN_TYPE: string;
					public static ANALYTICS_UA: string;
					public createAppDataParams$payments_core_release(): java.util.Map<string, any>;
					public constructor(param0: globalAndroid.content.pm.PackageManager, param1: globalAndroid.content.pm.PackageInfo, param2: string, param3: javax.inject.Provider<string>, param4: java.util.Set<string>);
					public constructor(param0: globalAndroid.content.Context, param1: kotlin.jvm.functions.Function0<string>, param2: java.util.Set<string>);
					public getDefaultProductUsageTokens$payments_core_release(): java.util.Set<string>;
					public constructor(param0: globalAndroid.content.Context, param1: string, param2: java.util.Set<string>);
					public constructor(param0: globalAndroid.content.Context, param1: javax.inject.Provider<string>);
				}
				export module PaymentAnalyticsRequestFactory {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.networking.PaymentAnalyticsRequestFactory.Companion>;
						public getVALID_PARAM_FIELDS$payments_core_release(): java.util.Set<string>;
					}
					export class ThreeDS2UiType {
						public static class: java.lang.Class<com.stripe.android.networking.PaymentAnalyticsRequestFactory.ThreeDS2UiType>;
						public static Companion: com.stripe.android.networking.PaymentAnalyticsRequestFactory.ThreeDS2UiType.Companion;
						public static None: com.stripe.android.networking.PaymentAnalyticsRequestFactory.ThreeDS2UiType;
						public static Text: com.stripe.android.networking.PaymentAnalyticsRequestFactory.ThreeDS2UiType;
						public static SingleSelect: com.stripe.android.networking.PaymentAnalyticsRequestFactory.ThreeDS2UiType;
						public static MultiSelect: com.stripe.android.networking.PaymentAnalyticsRequestFactory.ThreeDS2UiType;
						public static Oob: com.stripe.android.networking.PaymentAnalyticsRequestFactory.ThreeDS2UiType;
						public static Html: com.stripe.android.networking.PaymentAnalyticsRequestFactory.ThreeDS2UiType;
						public static values(): androidNative.Array<com.stripe.android.networking.PaymentAnalyticsRequestFactory.ThreeDS2UiType>;
						public static valueOf(param0: string): com.stripe.android.networking.PaymentAnalyticsRequestFactory.ThreeDS2UiType;
						public toString(): string;
					}
					export module ThreeDS2UiType {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.networking.PaymentAnalyticsRequestFactory.ThreeDS2UiType.Companion>;
							public fromUiTypeCode(param0: string): com.stripe.android.networking.PaymentAnalyticsRequestFactory.ThreeDS2UiType;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module networking {
				export class PaymentAnalyticsRequestFactory_Factory extends dagger.internal.Factory<com.stripe.android.networking.PaymentAnalyticsRequestFactory> {
					public static class: java.lang.Class<com.stripe.android.networking.PaymentAnalyticsRequestFactory_Factory>;
					public static create(param0: javax.inject.Provider<globalAndroid.content.Context>, param1: javax.inject.Provider<kotlin.jvm.functions.Function0<string>>, param2: javax.inject.Provider<java.util.Set<string>>): com.stripe.android.networking.PaymentAnalyticsRequestFactory_Factory;
					public constructor(param0: javax.inject.Provider<globalAndroid.content.Context>, param1: javax.inject.Provider<kotlin.jvm.functions.Function0<string>>, param2: javax.inject.Provider<java.util.Set<string>>);
					public static newInstance(param0: globalAndroid.content.Context, param1: kotlin.jvm.functions.Function0<string>, param2: java.util.Set<string>): com.stripe.android.networking.PaymentAnalyticsRequestFactory;
					public get(): com.stripe.android.networking.PaymentAnalyticsRequestFactory;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module networking {
				export class PaymentNetworkConstantsKt {
					public static class: java.lang.Class<com.stripe.android.networking.PaymentNetworkConstantsKt>;
					public static getPAYMENT_RETRY_CODES(): java.lang.Iterable<java.lang.Integer>;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module networking {
				export abstract class RequestHeadersFactory {
					public static class: java.lang.Class<com.stripe.android.networking.RequestHeadersFactory>;
					public static Companion: com.stripe.android.networking.RequestHeadersFactory.Companion;
					public static HEADER_USER_AGENT: string;
					public static HEADER_ACCEPT_CHARSET: string;
					public static HEADER_ACCEPT_LANGUAGE: string;
					public static HEADER_CONTENT_TYPE: string;
					public static HEADER_ACCEPT: string;
					public static HEADER_STRIPE_VERSION: string;
					public static HEADER_STRIPE_ACCOUNT: string;
					public static HEADER_AUTHORIZATION: string;
					public static HEADER_IDEMPOTENCY_KEY: string;
					public createPostHeader(): java.util.Map<string, string>;
					public getExtraHeaders(): java.util.Map<string, string>;
					public getUserAgent(): string;
					public getPostHeaders(): java.util.Map<string, string>;
					public setPostHeaders(param0: java.util.Map<string, string>): void;
					public create(): java.util.Map<string, string>;
				}
				export module RequestHeadersFactory {
					export class Analytics extends com.stripe.android.networking.RequestHeadersFactory {
						public static class: java.lang.Class<com.stripe.android.networking.RequestHeadersFactory.Analytics>;
						public static INSTANCE: com.stripe.android.networking.RequestHeadersFactory.Analytics;
						public static $stable: number;
						public getUserAgent(): string;
						public getExtraHeaders(): java.util.Map<string, string>;
					}
					export class Api extends com.stripe.android.networking.RequestHeadersFactory.BasePaymentApiHeadersFactory {
						public static class: java.lang.Class<com.stripe.android.networking.RequestHeadersFactory.Api>;
						public static $stable: number;
						public setPostHeaders(param0: java.util.Map<string, string>): void;
						public constructor(param0: com.stripe.android.networking.ApiRequest.Options, param1: com.stripe.android.AppInfo, param2: java.util.Locale, param3: string, param4: string);
						public getPostHeaders(): java.util.Map<string, string>;
					}
					export class BasePaymentApiHeadersFactory extends com.stripe.android.networking.RequestHeadersFactory {
						public static class: java.lang.Class<com.stripe.android.networking.RequestHeadersFactory.BasePaymentApiHeadersFactory>;
						public static $stable: number;
						public constructor(param0: com.stripe.android.networking.ApiRequest.Options, param1: com.stripe.android.AppInfo, param2: java.util.Locale, param3: string, param4: string);
						public getUserAgent(): string;
						public getExtraHeaders(): java.util.Map<string, string>;
					}
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.networking.RequestHeadersFactory.Companion>;
						public getCHARSET$payments_core_release(): string;
						public getUserAgent$payments_core_release(param0: string): string;
					}
					export class FileUpload extends com.stripe.android.networking.RequestHeadersFactory.BasePaymentApiHeadersFactory {
						public static class: java.lang.Class<com.stripe.android.networking.RequestHeadersFactory.FileUpload>;
						public static $stable: number;
						public constructor(param0: com.stripe.android.networking.ApiRequest.Options, param1: com.stripe.android.AppInfo, param2: java.util.Locale, param3: string, param4: string, param5: string);
						public setPostHeaders(param0: java.util.Map<string, string>): void;
						public constructor(param0: com.stripe.android.networking.ApiRequest.Options, param1: com.stripe.android.AppInfo, param2: java.util.Locale, param3: string, param4: string);
						public getPostHeaders(): java.util.Map<string, string>;
					}
					export class FraudDetection extends com.stripe.android.networking.RequestHeadersFactory {
						public static class: java.lang.Class<com.stripe.android.networking.RequestHeadersFactory.FraudDetection>;
						public static Companion: com.stripe.android.networking.RequestHeadersFactory.FraudDetection.Companion;
						public static $stable: number;
						public static HEADER_COOKIE: string;
						public setPostHeaders(param0: java.util.Map<string, string>): void;
						public getUserAgent(): string;
						public getPostHeaders(): java.util.Map<string, string>;
						public getExtraHeaders(): java.util.Map<string, string>;
						public constructor(param0: string);
					}
					export module FraudDetection {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.networking.RequestHeadersFactory.FraudDetection.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module networking {
				export class StripeApiRepository extends com.stripe.android.networking.StripeRepository {
					public static class: java.lang.Class<com.stripe.android.networking.StripeApiRepository>;
					public static Companion: com.stripe.android.networking.StripeApiRepository.Companion;
					public refreshPaymentIntent$payments_core_release(param0: string, param1: com.stripe.android.networking.ApiRequest.Options, param2: kotlin.coroutines.Continuation<any>): any;
					public createPaymentMethod(param0: com.stripe.android.model.PaymentMethodCreateParams, param1: com.stripe.android.networking.ApiRequest.Options, param2: kotlin.coroutines.Continuation<any>): any;
					public getDetachPaymentMethodUrl$payments_core_release(param0: string): string;
					public cancelPaymentIntentSource$payments_core_release(param0: string, param1: string, param2: com.stripe.android.networking.ApiRequest.Options, param3: kotlin.coroutines.Continuation<any>): any;
					public retrieveSource$payments_core_release(param0: string, param1: string, param2: com.stripe.android.networking.ApiRequest.Options, param3: kotlin.coroutines.Continuation<any>): any;
					public retrievePaymentIntent(param0: string, param1: com.stripe.android.networking.ApiRequest.Options, param2: java.util.List<string>, param3: kotlin.coroutines.Continuation<any>): any;
					public getCardMetadata$payments_core_release(param0: com.stripe.android.cards.Bin, param1: com.stripe.android.networking.ApiRequest.Options, param2: kotlin.coroutines.Continuation<any>): any;
					public setDefaultCustomerSource$payments_core_release(param0: string, param1: string, param2: java.util.Set<string>, param3: string, param4: string, param5: com.stripe.android.networking.ApiRequest.Options, param6: kotlin.coroutines.Continuation<any>): any;
					public createToken$payments_core_release(param0: com.stripe.android.model.TokenParams, param1: com.stripe.android.networking.ApiRequest.Options, param2: kotlin.coroutines.Continuation<any>): any;
					public constructor(param0: globalAndroid.content.Context, param1: kotlin.jvm.functions.Function0<string>, param2: com.stripe.android.AppInfo, param3: com.stripe.android.core.Logger, param4: kotlin.coroutines.CoroutineContext, param5: java.util.Set<string>, param6: com.stripe.android.core.networking.StripeNetworkClient, param7: com.stripe.android.core.networking.AnalyticsRequestExecutor);
					public constructor();
					public confirmSetupIntent$payments_core_release(param0: com.stripe.android.model.ConfirmSetupIntentParams, param1: com.stripe.android.networking.ApiRequest.Options, param2: java.util.List<string>, param3: kotlin.coroutines.Continuation<any>): any;
					public retrieveIssuingCardPin$payments_core_release(param0: string, param1: string, param2: string, param3: com.stripe.android.networking.ApiRequest.Options, param4: kotlin.coroutines.Continuation<any>): any;
					public constructor(param0: globalAndroid.content.Context, param1: kotlin.jvm.functions.Function0<string>, param2: com.stripe.android.AppInfo, param3: com.stripe.android.core.Logger, param4: kotlin.coroutines.CoroutineContext, param5: java.util.Set<string>, param6: com.stripe.android.core.networking.StripeNetworkClient, param7: com.stripe.android.core.networking.AnalyticsRequestExecutor, param8: com.stripe.android.FraudDetectionDataRepository, param9: com.stripe.android.networking.PaymentAnalyticsRequestFactory);
					public constructor(param0: globalAndroid.content.Context, param1: kotlin.jvm.functions.Function0<string>, param2: com.stripe.android.AppInfo);
					public confirmPaymentIntent$payments_core_release(param0: com.stripe.android.model.ConfirmPaymentIntentParams, param1: com.stripe.android.networking.ApiRequest.Options, param2: java.util.List<string>, param3: kotlin.coroutines.Continuation<any>): any;
					public getPaymentMethods(param0: com.stripe.android.model.ListPaymentMethodsParams, param1: string, param2: java.util.Set<string>, param3: com.stripe.android.networking.ApiRequest.Options, param4: kotlin.coroutines.Continuation<any>): any;
					public retrieveSetupIntent(param0: string, param1: com.stripe.android.networking.ApiRequest.Options, param2: java.util.List<string>, param3: kotlin.coroutines.Continuation<any>): any;
					public retrieveStripeIntent$payments_core_release(param0: string, param1: com.stripe.android.networking.ApiRequest.Options, param2: java.util.List<string>, param3: kotlin.coroutines.Continuation<any>): any;
					public addCustomerSource$payments_core_release(param0: string, param1: string, param2: java.util.Set<string>, param3: string, param4: string, param5: com.stripe.android.networking.ApiRequest.Options, param6: kotlin.coroutines.Continuation<any>): any;
					public retrieveObject$payments_core_release(param0: string, param1: com.stripe.android.networking.ApiRequest.Options, param2: kotlin.coroutines.Continuation<any>): any;
					public constructor(param0: globalAndroid.content.Context, param1: kotlin.jvm.functions.Function0<string>, param2: kotlin.coroutines.CoroutineContext, param3: java.util.Set<string>, param4: com.stripe.android.networking.PaymentAnalyticsRequestFactory, param5: com.stripe.android.core.networking.AnalyticsRequestExecutor, param6: com.stripe.android.core.Logger);
					public constructor(param0: globalAndroid.content.Context, param1: kotlin.jvm.functions.Function0<string>, param2: com.stripe.android.AppInfo, param3: com.stripe.android.core.Logger, param4: kotlin.coroutines.CoroutineContext, param5: java.util.Set<string>);
					public setCustomerShippingInfo$payments_core_release(param0: string, param1: string, param2: java.util.Set<string>, param3: com.stripe.android.model.ShippingInformation, param4: com.stripe.android.networking.ApiRequest.Options, param5: kotlin.coroutines.Continuation<any>): any;
					public retrievePaymentIntentWithOrderedPaymentMethods(param0: string, param1: com.stripe.android.networking.ApiRequest.Options, param2: java.util.Locale, param3: kotlin.coroutines.Continuation<any>): any;
					public attachPaymentMethod(param0: string, param1: string, param2: java.util.Set<string>, param3: string, param4: com.stripe.android.networking.ApiRequest.Options, param5: kotlin.coroutines.Continuation<any>): any;
					public constructor(param0: globalAndroid.content.Context, param1: kotlin.jvm.functions.Function0<string>, param2: com.stripe.android.AppInfo, param3: com.stripe.android.core.Logger, param4: kotlin.coroutines.CoroutineContext, param5: java.util.Set<string>, param6: com.stripe.android.core.networking.StripeNetworkClient, param7: com.stripe.android.core.networking.AnalyticsRequestExecutor, param8: com.stripe.android.FraudDetectionDataRepository, param9: com.stripe.android.networking.PaymentAnalyticsRequestFactory, param10: com.stripe.android.networking.FraudDetectionDataParamsUtils);
					public cancelSetupIntentSource$payments_core_release(param0: string, param1: string, param2: com.stripe.android.networking.ApiRequest.Options, param3: kotlin.coroutines.Continuation<any>): any;
					public constructor(param0: globalAndroid.content.Context, param1: kotlin.jvm.functions.Function0<string>, param2: com.stripe.android.AppInfo, param3: com.stripe.android.core.Logger, param4: kotlin.coroutines.CoroutineContext, param5: java.util.Set<string>, param6: com.stripe.android.core.networking.StripeNetworkClient, param7: com.stripe.android.core.networking.AnalyticsRequestExecutor, param8: com.stripe.android.FraudDetectionDataRepository);
					public fireAnalyticsRequest$payments_core_release(param0: com.stripe.android.core.networking.AnalyticsRequest): void;
					public constructor(param0: globalAndroid.content.Context, param1: kotlin.jvm.functions.Function0<string>, param2: com.stripe.android.AppInfo, param3: com.stripe.android.core.Logger, param4: kotlin.coroutines.CoroutineContext, param5: java.util.Set<string>, param6: com.stripe.android.core.networking.StripeNetworkClient);
					public makeApiRequest$payments_core_release(param0: com.stripe.android.networking.ApiRequest, param1: kotlin.jvm.functions.Function0<kotlin.Unit>, param2: kotlin.coroutines.Continuation<any>): any;
					public constructor(param0: globalAndroid.content.Context, param1: kotlin.jvm.functions.Function0<string>, param2: com.stripe.android.AppInfo, param3: com.stripe.android.core.Logger, param4: kotlin.coroutines.CoroutineContext, param5: java.util.Set<string>, param6: com.stripe.android.core.networking.StripeNetworkClient, param7: com.stripe.android.core.networking.AnalyticsRequestExecutor, param8: com.stripe.android.FraudDetectionDataRepository, param9: com.stripe.android.networking.PaymentAnalyticsRequestFactory, param10: com.stripe.android.networking.FraudDetectionDataParamsUtils, param11: java.util.Set<any>, param12: string);
					public getFpxBankStatus$payments_core_release(param0: com.stripe.android.networking.ApiRequest.Options, param1: kotlin.coroutines.Continuation<any>): any;
					public createSource$payments_core_release(param0: com.stripe.android.model.SourceParams, param1: com.stripe.android.networking.ApiRequest.Options, param2: kotlin.coroutines.Continuation<any>): any;
					public makeFileUploadRequest$payments_core_release(param0: com.stripe.android.networking.FileUploadRequest, param1: kotlin.jvm.functions.Function1<any, kotlin.Unit>, param2: kotlin.coroutines.Continuation<any>): any;
					public constructor(param0: globalAndroid.content.Context, param1: kotlin.jvm.functions.Function0<string>, param2: com.stripe.android.AppInfo, param3: com.stripe.android.core.Logger, param4: kotlin.coroutines.CoroutineContext, param5: java.util.Set<string>, param6: com.stripe.android.core.networking.StripeNetworkClient, param7: com.stripe.android.core.networking.AnalyticsRequestExecutor, param8: com.stripe.android.FraudDetectionDataRepository, param9: com.stripe.android.networking.PaymentAnalyticsRequestFactory, param10: com.stripe.android.networking.FraudDetectionDataParamsUtils, param11: java.util.Set<any>);
					public constructor(param0: globalAndroid.content.Context, param1: kotlin.jvm.functions.Function0<string>, param2: com.stripe.android.AppInfo, param3: com.stripe.android.core.Logger, param4: kotlin.coroutines.CoroutineContext, param5: java.util.Set<string>, param6: com.stripe.android.core.networking.StripeNetworkClient, param7: com.stripe.android.core.networking.AnalyticsRequestExecutor, param8: com.stripe.android.FraudDetectionDataRepository, param9: com.stripe.android.networking.PaymentAnalyticsRequestFactory, param10: com.stripe.android.networking.FraudDetectionDataParamsUtils, param11: java.util.Set<any>, param12: string, param13: string);
					public constructor(param0: globalAndroid.content.Context, param1: kotlin.jvm.functions.Function0<string>, param2: com.stripe.android.AppInfo, param3: com.stripe.android.core.Logger, param4: kotlin.coroutines.CoroutineContext);
					public deleteCustomerSource$payments_core_release(param0: string, param1: string, param2: java.util.Set<string>, param3: string, param4: com.stripe.android.networking.ApiRequest.Options, param5: kotlin.coroutines.Continuation<any>): any;
					public start3ds2Auth$payments_core_release(param0: com.stripe.android.model.Stripe3ds2AuthParams, param1: com.stripe.android.networking.ApiRequest.Options, param2: kotlin.coroutines.Continuation<any>): any;
					public createFile$payments_core_release(param0: com.stripe.android.model.StripeFileParams, param1: com.stripe.android.networking.ApiRequest.Options, param2: kotlin.coroutines.Continuation<any>): any;
					public detachPaymentMethod(param0: string, param1: java.util.Set<string>, param2: string, param3: com.stripe.android.networking.ApiRequest.Options, param4: kotlin.coroutines.Continuation<any>): any;
					public createRadarSession$payments_core_release(param0: com.stripe.android.networking.ApiRequest.Options, param1: kotlin.coroutines.Continuation<any>): any;
					public constructor(param0: globalAndroid.content.Context, param1: kotlin.jvm.functions.Function0<string>);
					public complete3ds2Auth$payments_core_release(param0: string, param1: com.stripe.android.networking.ApiRequest.Options, param2: kotlin.coroutines.Continuation<any>): any;
					public retrieveSetupIntentWithOrderedPaymentMethods(param0: string, param1: com.stripe.android.networking.ApiRequest.Options, param2: java.util.Locale, param3: kotlin.coroutines.Continuation<any>): any;
					public retrieveCustomer$payments_core_release(param0: string, param1: java.util.Set<string>, param2: com.stripe.android.networking.ApiRequest.Options, param3: kotlin.coroutines.Continuation<any>): any;
					public updateIssuingCardPin$payments_core_release(param0: string, param1: string, param2: string, param3: string, param4: com.stripe.android.networking.ApiRequest.Options, param5: kotlin.coroutines.Continuation<any>): any;
					public constructor(param0: globalAndroid.content.Context, param1: kotlin.jvm.functions.Function0<string>, param2: com.stripe.android.AppInfo, param3: com.stripe.android.core.Logger);
				}
				export module StripeApiRepository {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.networking.StripeApiRepository.Companion>;
					}
					export abstract class DnsCacheData {
						public static class: java.lang.Class<com.stripe.android.networking.StripeApiRepository.DnsCacheData>;
					}
					export module DnsCacheData {
						export class Failure extends com.stripe.android.networking.StripeApiRepository.DnsCacheData {
							public static class: java.lang.Class<com.stripe.android.networking.StripeApiRepository.DnsCacheData.Failure>;
							public static INSTANCE: com.stripe.android.networking.StripeApiRepository.DnsCacheData.Failure;
							public static $stable: number;
						}
						export class Success extends com.stripe.android.networking.StripeApiRepository.DnsCacheData {
							public static class: java.lang.Class<com.stripe.android.networking.StripeApiRepository.DnsCacheData.Success>;
							public static $stable: number;
							public copy(param0: string): com.stripe.android.networking.StripeApiRepository.DnsCacheData.Success;
							public getOriginalDnsCacheTtl(): string;
							public hashCode(): number;
							public constructor(param0: string);
							public toString(): string;
							public equals(param0: any): boolean;
							public component1(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module networking {
				export class StripeApiRepository_Factory extends dagger.internal.Factory<com.stripe.android.networking.StripeApiRepository> {
					public static class: java.lang.Class<com.stripe.android.networking.StripeApiRepository_Factory>;
					public static newInstance(param0: globalAndroid.content.Context, param1: kotlin.jvm.functions.Function0<string>, param2: kotlin.coroutines.CoroutineContext, param3: java.util.Set<string>, param4: com.stripe.android.networking.PaymentAnalyticsRequestFactory, param5: com.stripe.android.core.networking.AnalyticsRequestExecutor, param6: com.stripe.android.core.Logger): com.stripe.android.networking.StripeApiRepository;
					public constructor(param0: javax.inject.Provider<globalAndroid.content.Context>, param1: javax.inject.Provider<kotlin.jvm.functions.Function0<string>>, param2: javax.inject.Provider<kotlin.coroutines.CoroutineContext>, param3: javax.inject.Provider<java.util.Set<string>>, param4: javax.inject.Provider<com.stripe.android.networking.PaymentAnalyticsRequestFactory>, param5: javax.inject.Provider<com.stripe.android.core.networking.AnalyticsRequestExecutor>, param6: javax.inject.Provider<com.stripe.android.core.Logger>);
					public static create(param0: javax.inject.Provider<globalAndroid.content.Context>, param1: javax.inject.Provider<kotlin.jvm.functions.Function0<string>>, param2: javax.inject.Provider<kotlin.coroutines.CoroutineContext>, param3: javax.inject.Provider<java.util.Set<string>>, param4: javax.inject.Provider<com.stripe.android.networking.PaymentAnalyticsRequestFactory>, param5: javax.inject.Provider<com.stripe.android.core.networking.AnalyticsRequestExecutor>, param6: javax.inject.Provider<com.stripe.android.core.Logger>): com.stripe.android.networking.StripeApiRepository_Factory;
					public get(): com.stripe.android.networking.StripeApiRepository;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module networking {
				export class StripeClientUserAgentHeaderFactory {
					public static class: java.lang.Class<com.stripe.android.networking.StripeClientUserAgentHeaderFactory>;
					public static Companion: com.stripe.android.networking.StripeClientUserAgentHeaderFactory.Companion;
					public static HEADER_STRIPE_CLIENT_USER_AGENT: string;
					public constructor(param0: kotlin.jvm.functions.Function1<any, string>);
					public createHeaderValue(param0: com.stripe.android.AppInfo): org.json.JSONObject;
					public constructor();
					public create(param0: com.stripe.android.AppInfo): java.util.Map<string, string>;
				}
				export module StripeClientUserAgentHeaderFactory {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.networking.StripeClientUserAgentHeaderFactory.Companion>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module networking {
				export abstract class StripeRepository {
					public static class: java.lang.Class<com.stripe.android.networking.StripeRepository>;
					public static $stable: number;
					public cancelSetupIntentSource$payments_core_release(param0: string, param1: string, param2: com.stripe.android.networking.ApiRequest.Options, param3: kotlin.coroutines.Continuation<any>): any;
					public refreshPaymentIntent$payments_core_release(param0: string, param1: com.stripe.android.networking.ApiRequest.Options, param2: kotlin.coroutines.Continuation<any>): any;
					public createPaymentMethod(param0: com.stripe.android.model.PaymentMethodCreateParams, param1: com.stripe.android.networking.ApiRequest.Options, param2: kotlin.coroutines.Continuation<any>): any;
					public cancelPaymentIntentSource$payments_core_release(param0: string, param1: string, param2: com.stripe.android.networking.ApiRequest.Options, param3: kotlin.coroutines.Continuation<any>): any;
					public getFpxBankStatus$payments_core_release(param0: com.stripe.android.networking.ApiRequest.Options, param1: kotlin.coroutines.Continuation<any>): any;
					public retrieveSource$payments_core_release(param0: string, param1: string, param2: com.stripe.android.networking.ApiRequest.Options, param3: kotlin.coroutines.Continuation<any>): any;
					public retrievePaymentIntent(param0: string, param1: com.stripe.android.networking.ApiRequest.Options, param2: java.util.List<string>, param3: kotlin.coroutines.Continuation<any>): any;
					public createSource$payments_core_release(param0: com.stripe.android.model.SourceParams, param1: com.stripe.android.networking.ApiRequest.Options, param2: kotlin.coroutines.Continuation<any>): any;
					public getCardMetadata$payments_core_release(param0: com.stripe.android.cards.Bin, param1: com.stripe.android.networking.ApiRequest.Options, param2: kotlin.coroutines.Continuation<any>): any;
					public setDefaultCustomerSource$payments_core_release(param0: string, param1: string, param2: java.util.Set<string>, param3: string, param4: string, param5: com.stripe.android.networking.ApiRequest.Options, param6: kotlin.coroutines.Continuation<any>): any;
					public createToken$payments_core_release(param0: com.stripe.android.model.TokenParams, param1: com.stripe.android.networking.ApiRequest.Options, param2: kotlin.coroutines.Continuation<any>): any;
					public constructor();
					public confirmSetupIntent$payments_core_release(param0: com.stripe.android.model.ConfirmSetupIntentParams, param1: com.stripe.android.networking.ApiRequest.Options, param2: java.util.List<string>, param3: kotlin.coroutines.Continuation<any>): any;
					public deleteCustomerSource$payments_core_release(param0: string, param1: string, param2: java.util.Set<string>, param3: string, param4: com.stripe.android.networking.ApiRequest.Options, param5: kotlin.coroutines.Continuation<any>): any;
					public retrieveIssuingCardPin$payments_core_release(param0: string, param1: string, param2: string, param3: com.stripe.android.networking.ApiRequest.Options, param4: kotlin.coroutines.Continuation<any>): any;
					public start3ds2Auth$payments_core_release(param0: com.stripe.android.model.Stripe3ds2AuthParams, param1: com.stripe.android.networking.ApiRequest.Options, param2: kotlin.coroutines.Continuation<any>): any;
					public createFile$payments_core_release(param0: com.stripe.android.model.StripeFileParams, param1: com.stripe.android.networking.ApiRequest.Options, param2: kotlin.coroutines.Continuation<any>): any;
					public confirmPaymentIntent$payments_core_release(param0: com.stripe.android.model.ConfirmPaymentIntentParams, param1: com.stripe.android.networking.ApiRequest.Options, param2: java.util.List<string>, param3: kotlin.coroutines.Continuation<any>): any;
					public detachPaymentMethod(param0: string, param1: java.util.Set<string>, param2: string, param3: com.stripe.android.networking.ApiRequest.Options, param4: kotlin.coroutines.Continuation<any>): any;
					public getPaymentMethods(param0: com.stripe.android.model.ListPaymentMethodsParams, param1: string, param2: java.util.Set<string>, param3: com.stripe.android.networking.ApiRequest.Options, param4: kotlin.coroutines.Continuation<any>): any;
					public retrieveSetupIntent(param0: string, param1: com.stripe.android.networking.ApiRequest.Options, param2: java.util.List<string>, param3: kotlin.coroutines.Continuation<any>): any;
					public retrieveStripeIntent$payments_core_release(param0: string, param1: com.stripe.android.networking.ApiRequest.Options, param2: java.util.List<string>, param3: kotlin.coroutines.Continuation<any>): any;
					public addCustomerSource$payments_core_release(param0: string, param1: string, param2: java.util.Set<string>, param3: string, param4: string, param5: com.stripe.android.networking.ApiRequest.Options, param6: kotlin.coroutines.Continuation<any>): any;
					public retrieveObject$payments_core_release(param0: string, param1: com.stripe.android.networking.ApiRequest.Options, param2: kotlin.coroutines.Continuation<any>): any;
					public createRadarSession$payments_core_release(param0: com.stripe.android.networking.ApiRequest.Options, param1: kotlin.coroutines.Continuation<any>): any;
					public complete3ds2Auth$payments_core_release(param0: string, param1: com.stripe.android.networking.ApiRequest.Options, param2: kotlin.coroutines.Continuation<any>): any;
					public retrieveSetupIntentWithOrderedPaymentMethods(param0: string, param1: com.stripe.android.networking.ApiRequest.Options, param2: java.util.Locale, param3: kotlin.coroutines.Continuation<any>): any;
					public retrieveCustomer$payments_core_release(param0: string, param1: java.util.Set<string>, param2: com.stripe.android.networking.ApiRequest.Options, param3: kotlin.coroutines.Continuation<any>): any;
					public setCustomerShippingInfo$payments_core_release(param0: string, param1: string, param2: java.util.Set<string>, param3: com.stripe.android.model.ShippingInformation, param4: com.stripe.android.networking.ApiRequest.Options, param5: kotlin.coroutines.Continuation<any>): any;
					public retrievePaymentIntentWithOrderedPaymentMethods(param0: string, param1: com.stripe.android.networking.ApiRequest.Options, param2: java.util.Locale, param3: kotlin.coroutines.Continuation<any>): any;
					public attachPaymentMethod(param0: string, param1: string, param2: java.util.Set<string>, param3: string, param4: com.stripe.android.networking.ApiRequest.Options, param5: kotlin.coroutines.Continuation<any>): any;
					public updateIssuingCardPin$payments_core_release(param0: string, param1: string, param2: string, param3: string, param4: com.stripe.android.networking.ApiRequest.Options, param5: kotlin.coroutines.Continuation<any>): any;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export class BrowserCapabilities {
					public static class: java.lang.Class<com.stripe.android.payments.BrowserCapabilities>;
					public static CustomTabs: com.stripe.android.payments.BrowserCapabilities;
					public static Unknown: com.stripe.android.payments.BrowserCapabilities;
					public static values(): androidNative.Array<com.stripe.android.payments.BrowserCapabilities>;
					public static valueOf(param0: string): com.stripe.android.payments.BrowserCapabilities;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export class BrowserCapabilitiesSupplier {
					public static class: java.lang.Class<com.stripe.android.payments.BrowserCapabilitiesSupplier>;
					public constructor(param0: globalAndroid.content.Context);
					public get(): com.stripe.android.payments.BrowserCapabilities;
				}
				export module BrowserCapabilitiesSupplier {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.payments.BrowserCapabilitiesSupplier.Companion>;
					}
					export class NoopCustomTabsServiceConnection {
						public static class: java.lang.Class<com.stripe.android.payments.BrowserCapabilitiesSupplier.NoopCustomTabsServiceConnection>;
						public constructor();
						public onCustomTabsServiceConnected(param0: globalAndroid.content.ComponentName, param1: androidx.browser.customtabs.CustomTabsClient): void;
						public onServiceDisconnected(param0: globalAndroid.content.ComponentName): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export class BuildConfig {
					public static class: java.lang.Class<com.stripe.android.payments.BuildConfig>;
					public static DEBUG: boolean;
					public static LIBRARY_PACKAGE_NAME: string;
					public static BUILD_TYPE: string;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export class DefaultReturnUrl {
					public static class: java.lang.Class<com.stripe.android.payments.DefaultReturnUrl>;
					public static Companion: com.stripe.android.payments.DefaultReturnUrl.Companion;
					public equals(param0: any): boolean;
					public getValue(): string;
					public toString(): string;
					public constructor(param0: string);
					public hashCode(): number;
					public copy(param0: string): com.stripe.android.payments.DefaultReturnUrl;
				}
				export module DefaultReturnUrl {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.payments.DefaultReturnUrl.Companion>;
						public create(param0: globalAndroid.content.Context): com.stripe.android.payments.DefaultReturnUrl;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export class PaymentFlowFailureMessageFactory {
					public static class: java.lang.Class<com.stripe.android.payments.PaymentFlowFailureMessageFactory>;
					public constructor(param0: globalAndroid.content.Context);
					public create(param0: com.stripe.android.model.StripeIntent, param1: number): string;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export abstract class PaymentFlowResult {
					public static class: java.lang.Class<com.stripe.android.payments.PaymentFlowResult>;
					public static $stable: number;
				}
				export module PaymentFlowResult {
					export class Unvalidated {
						public static class: java.lang.Class<com.stripe.android.payments.PaymentFlowResult.Unvalidated>;
						public static Companion: com.stripe.android.payments.PaymentFlowResult.Unvalidated.Companion;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.payments.PaymentFlowResult.Unvalidated>;
						public static $stable: number;
						public getStripeAccountId$payments_core_release(): string;
						public copy(param0: string, param1: number, param2: com.stripe.android.core.exception.StripeException, param3: boolean, param4: string, param5: com.stripe.android.model.Source, param6: string): com.stripe.android.payments.PaymentFlowResult.Unvalidated;
						public describeContents(): number;
						public constructor();
						public getException(): com.stripe.android.core.exception.StripeException;
						public validate$payments_core_release(): com.stripe.android.payments.PaymentFlowResult.Validated;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getSourceId$payments_core_release(): string;
						public getSource$payments_core_release(): com.stripe.android.model.Source;
						public component4$payments_core_release(): boolean;
						public toString(): string;
						public component5$payments_core_release(): string;
						public component2(): number;
						public component3(): com.stripe.android.core.exception.StripeException;
						public component7$payments_core_release(): string;
						public getFlowOutcome(): number;
						public constructor(param0: string, param1: number, param2: com.stripe.android.core.exception.StripeException, param3: boolean, param4: string, param5: com.stripe.android.model.Source, param6: string);
						public component6$payments_core_release(): com.stripe.android.model.Source;
						public getCanCancelSource$payments_core_release(): boolean;
						public getClientSecret(): string;
					}
					export module Unvalidated {
						export class Companion extends kotlinx.parcelize.Parceler<com.stripe.android.payments.PaymentFlowResult.Unvalidated> {
							public static class: java.lang.Class<com.stripe.android.payments.PaymentFlowResult.Unvalidated.Companion>;
							public newArray(param0: number): androidNative.Array<com.stripe.android.payments.PaymentFlowResult.Unvalidated>;
							public write(param0: com.stripe.android.payments.PaymentFlowResult.Unvalidated, param1: globalAndroid.os.Parcel, param2: number): void;
							public create(param0: globalAndroid.os.Parcel): com.stripe.android.payments.PaymentFlowResult.Unvalidated;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.payments.PaymentFlowResult.Unvalidated> {
							public static class: java.lang.Class<com.stripe.android.payments.PaymentFlowResult.Unvalidated.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.payments.PaymentFlowResult.Unvalidated;
							public newArray(param0: number): androidNative.Array<com.stripe.android.payments.PaymentFlowResult.Unvalidated>;
						}
					}
					export class Validated {
						public static class: java.lang.Class<com.stripe.android.payments.PaymentFlowResult.Validated>;
						public getStripeAccountId$payments_core_release(): string;
						public constructor(param0: string, param1: number, param2: boolean, param3: string, param4: com.stripe.android.model.Source, param5: string);
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getSourceId$payments_core_release(): string;
						public getSource$payments_core_release(): com.stripe.android.model.Source;
						public component3$payments_core_release(): boolean;
						public component5$payments_core_release(): com.stripe.android.model.Source;
						public toString(): string;
						public component4$payments_core_release(): string;
						public component6$payments_core_release(): string;
						public component2$payments_core_release(): number;
						public copy(param0: string, param1: number, param2: boolean, param3: string, param4: com.stripe.android.model.Source, param5: string): com.stripe.android.payments.PaymentFlowResult.Validated;
						public getCanCancelSource$payments_core_release(): boolean;
						public getClientSecret(): string;
						public getFlowOutcome$payments_core_release(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export abstract class PaymentFlowResultProcessor<T, S> extends java.lang.Object {
					public static class: java.lang.Class<com.stripe.android.payments.PaymentFlowResultProcessor<any, any>>;
					public static Companion: com.stripe.android.payments.PaymentFlowResultProcessor.Companion;
					public cancelStripeIntentSource(param0: T, param1: com.stripe.android.networking.ApiRequest.Options, param2: string, param3: kotlin.coroutines.Continuation<any>): any;
					public refreshStripeIntentUntilTerminalState(param0: string, param1: com.stripe.android.networking.ApiRequest.Options, param2: kotlin.coroutines.Continuation<any>): any;
					public getStripeRepository(): com.stripe.android.networking.StripeRepository;
					public retrieveStripeIntent(param0: string, param1: com.stripe.android.networking.ApiRequest.Options, param2: java.util.List<string>, param3: kotlin.coroutines.Continuation<any>): any;
					public createStripeIntentResult(param0: T, param1: number, param2: string): S;
					public processResult(param0: com.stripe.android.payments.PaymentFlowResult.Unvalidated, param1: kotlin.coroutines.Continuation<any>): any;
				}
				export module PaymentFlowResultProcessor {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.payments.PaymentFlowResultProcessor.Companion>;
						public getEXPAND_PAYMENT_METHOD(): java.util.List<string>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export class PaymentIntentFlowResultProcessor extends com.stripe.android.payments.PaymentFlowResultProcessor<com.stripe.android.model.PaymentIntent, com.stripe.android.PaymentIntentResult> {
					public static class: java.lang.Class<com.stripe.android.payments.PaymentIntentFlowResultProcessor>;
					public static Companion: com.stripe.android.payments.PaymentIntentFlowResultProcessor.Companion;
					public static MAX_RETRIES: number;
					public cancelStripeIntentSource(param0: com.stripe.android.model.PaymentIntent, param1: com.stripe.android.networking.ApiRequest.Options, param2: string, param3: kotlin.coroutines.Continuation<any>): any;
					public constructor(param0: globalAndroid.content.Context, param1: kotlin.jvm.functions.Function0<string>, param2: com.stripe.android.networking.StripeRepository, param3: com.stripe.android.core.Logger, param4: kotlin.coroutines.CoroutineContext, param5: com.stripe.android.core.networking.RetryDelaySupplier);
					public refreshStripeIntentUntilTerminalState(param0: string, param1: com.stripe.android.networking.ApiRequest.Options, param2: kotlin.coroutines.Continuation<any>): any;
					public retrieveStripeIntent(param0: string, param1: com.stripe.android.networking.ApiRequest.Options, param2: java.util.List<string>, param3: kotlin.coroutines.Continuation<any>): any;
					public createStripeIntentResult(param0: com.stripe.android.model.PaymentIntent, param1: number, param2: string): com.stripe.android.PaymentIntentResult;
					public cancelStripeIntentSource(param0: any, param1: com.stripe.android.networking.ApiRequest.Options, param2: string, param3: kotlin.coroutines.Continuation<any>): any;
					public createStripeIntentResult(param0: any, param1: number, param2: string): any;
					public getRetryDelaySupplier(): com.stripe.android.core.networking.RetryDelaySupplier;
				}
				export module PaymentIntentFlowResultProcessor {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.payments.PaymentIntentFlowResultProcessor.Companion>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export class PaymentIntentFlowResultProcessor_Factory extends dagger.internal.Factory<com.stripe.android.payments.PaymentIntentFlowResultProcessor> {
					public static class: java.lang.Class<com.stripe.android.payments.PaymentIntentFlowResultProcessor_Factory>;
					public static create(param0: javax.inject.Provider<globalAndroid.content.Context>, param1: javax.inject.Provider<kotlin.jvm.functions.Function0<string>>, param2: javax.inject.Provider<com.stripe.android.networking.StripeRepository>, param3: javax.inject.Provider<com.stripe.android.core.Logger>, param4: javax.inject.Provider<kotlin.coroutines.CoroutineContext>, param5: javax.inject.Provider<com.stripe.android.core.networking.RetryDelaySupplier>): com.stripe.android.payments.PaymentIntentFlowResultProcessor_Factory;
					public get(): com.stripe.android.payments.PaymentIntentFlowResultProcessor;
					public static newInstance(param0: globalAndroid.content.Context, param1: kotlin.jvm.functions.Function0<string>, param2: com.stripe.android.networking.StripeRepository, param3: com.stripe.android.core.Logger, param4: kotlin.coroutines.CoroutineContext, param5: com.stripe.android.core.networking.RetryDelaySupplier): com.stripe.android.payments.PaymentIntentFlowResultProcessor;
					public constructor(param0: javax.inject.Provider<globalAndroid.content.Context>, param1: javax.inject.Provider<kotlin.jvm.functions.Function0<string>>, param2: javax.inject.Provider<com.stripe.android.networking.StripeRepository>, param3: javax.inject.Provider<com.stripe.android.core.Logger>, param4: javax.inject.Provider<kotlin.coroutines.CoroutineContext>, param5: javax.inject.Provider<com.stripe.android.core.networking.RetryDelaySupplier>);
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export class SetupIntentFlowResultProcessor extends com.stripe.android.payments.PaymentFlowResultProcessor<com.stripe.android.model.SetupIntent, com.stripe.android.SetupIntentResult> {
					public static class: java.lang.Class<com.stripe.android.payments.SetupIntentFlowResultProcessor>;
					public constructor(param0: globalAndroid.content.Context, param1: kotlin.jvm.functions.Function0<string>, param2: com.stripe.android.networking.StripeRepository, param3: com.stripe.android.core.Logger, param4: kotlin.coroutines.CoroutineContext);
					public refreshStripeIntentUntilTerminalState(param0: string, param1: com.stripe.android.networking.ApiRequest.Options, param2: kotlin.coroutines.Continuation<any>): any;
					public retrieveStripeIntent(param0: string, param1: com.stripe.android.networking.ApiRequest.Options, param2: java.util.List<string>, param3: kotlin.coroutines.Continuation<any>): any;
					public cancelStripeIntentSource(param0: any, param1: com.stripe.android.networking.ApiRequest.Options, param2: string, param3: kotlin.coroutines.Continuation<any>): any;
					public cancelStripeIntentSource(param0: com.stripe.android.model.SetupIntent, param1: com.stripe.android.networking.ApiRequest.Options, param2: string, param3: kotlin.coroutines.Continuation<any>): any;
					public createStripeIntentResult(param0: any, param1: number, param2: string): any;
					public createStripeIntentResult(param0: com.stripe.android.model.SetupIntent, param1: number, param2: string): com.stripe.android.SetupIntentResult;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export class SetupIntentFlowResultProcessor_Factory extends dagger.internal.Factory<com.stripe.android.payments.SetupIntentFlowResultProcessor> {
					public static class: java.lang.Class<com.stripe.android.payments.SetupIntentFlowResultProcessor_Factory>;
					public static newInstance(param0: globalAndroid.content.Context, param1: kotlin.jvm.functions.Function0<string>, param2: com.stripe.android.networking.StripeRepository, param3: com.stripe.android.core.Logger, param4: kotlin.coroutines.CoroutineContext): com.stripe.android.payments.SetupIntentFlowResultProcessor;
					public static create(param0: javax.inject.Provider<globalAndroid.content.Context>, param1: javax.inject.Provider<kotlin.jvm.functions.Function0<string>>, param2: javax.inject.Provider<com.stripe.android.networking.StripeRepository>, param3: javax.inject.Provider<com.stripe.android.core.Logger>, param4: javax.inject.Provider<kotlin.coroutines.CoroutineContext>): com.stripe.android.payments.SetupIntentFlowResultProcessor_Factory;
					public get(): com.stripe.android.payments.SetupIntentFlowResultProcessor;
					public constructor(param0: javax.inject.Provider<globalAndroid.content.Context>, param1: javax.inject.Provider<kotlin.jvm.functions.Function0<string>>, param2: javax.inject.Provider<com.stripe.android.networking.StripeRepository>, param3: javax.inject.Provider<com.stripe.android.core.Logger>, param4: javax.inject.Provider<kotlin.coroutines.CoroutineContext>);
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export class StripeBrowserLauncherActivity {
					public static class: java.lang.Class<com.stripe.android.payments.StripeBrowserLauncherActivity>;
					public onCreate(param0: globalAndroid.os.Bundle): void;
					public onNewIntent(param0: globalAndroid.content.Intent): void;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export class StripeBrowserLauncherViewModel {
					public static class: java.lang.Class<com.stripe.android.payments.StripeBrowserLauncherViewModel>;
					public static Companion: com.stripe.android.payments.StripeBrowserLauncherViewModel.Companion;
					public static KEY_HAS_LAUNCHED: string;
					public logCapabilities(param0: boolean): void;
					public createLaunchIntent(param0: com.stripe.android.auth.PaymentBrowserAuthContract.Args): globalAndroid.content.Intent;
					public constructor(param0: com.stripe.android.core.networking.AnalyticsRequestExecutor, param1: com.stripe.android.networking.PaymentAnalyticsRequestFactory, param2: com.stripe.android.payments.BrowserCapabilities, param3: string, param4: androidx.lifecycle.SavedStateHandle);
					public getResultIntent(param0: com.stripe.android.auth.PaymentBrowserAuthContract.Args): globalAndroid.content.Intent;
					public getHasLaunched(): boolean;
					public setHasLaunched(param0: boolean): void;
				}
				export module StripeBrowserLauncherViewModel {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.payments.StripeBrowserLauncherViewModel.Companion>;
					}
					export class Factory {
						public static class: java.lang.Class<com.stripe.android.payments.StripeBrowserLauncherViewModel.Factory>;
						public static $stable: number;
						public create(param0: string, param1: java.lang.Class, param2: androidx.lifecycle.SavedStateHandle): androidx.lifecycle.ViewModel;
						public constructor(param0: globalAndroid.app.Application, param1: androidx.savedstate.SavedStateRegistryOwner);
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export class ActivityResultLauncherHost {
						public static class: java.lang.Class<com.stripe.android.payments.core.ActivityResultLauncherHost>;
						/**
						 * Constructs a new instance of the com.stripe.android.payments.core.ActivityResultLauncherHost interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onNewActivityResultCaller(param0: androidx.activity.result.ActivityResultCaller, param1: androidx.activity.result.ActivityResultCallback<com.stripe.android.payments.PaymentFlowResult.Unvalidated>): void;
							onLauncherInvalidated(): void;
						});
						public constructor();
						public onNewActivityResultCaller(param0: androidx.activity.result.ActivityResultCaller, param1: androidx.activity.result.ActivityResultCallback<com.stripe.android.payments.PaymentFlowResult.Unvalidated>): void;
						public onLauncherInvalidated(): void;
					}
					export module ActivityResultLauncherHost {
						export class DefaultImpls {
							public static class: java.lang.Class<com.stripe.android.payments.core.ActivityResultLauncherHost.DefaultImpls>;
							public static onLauncherInvalidated(param0: com.stripe.android.payments.core.ActivityResultLauncherHost): void;
							public static onNewActivityResultCaller(param0: com.stripe.android.payments.core.ActivityResultLauncherHost, param1: androidx.activity.result.ActivityResultCaller, param2: androidx.activity.result.ActivityResultCallback<com.stripe.android.payments.PaymentFlowResult.Unvalidated>): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module authentication {
						export class DefaultPaymentAuthenticatorRegistry implements com.stripe.android.payments.core.authentication.PaymentAuthenticatorRegistry, com.stripe.android.core.injection.Injector {
							public static class: java.lang.Class<com.stripe.android.payments.core.authentication.DefaultPaymentAuthenticatorRegistry>;
							public static Companion: com.stripe.android.payments.core.authentication.DefaultPaymentAuthenticatorRegistry.Companion;
							public authenticationComponent: com.stripe.android.payments.core.injection.AuthenticationComponent;
							public setPaymentRelayLauncher$payments_core_release(param0: androidx.activity.result.ActivityResultLauncher<com.stripe.android.PaymentRelayStarter.Args>): void;
							public onLauncherInvalidated(): void;
							public getPaymentBrowserAuthLauncher$payments_core_release(): androidx.activity.result.ActivityResultLauncher<com.stripe.android.auth.PaymentBrowserAuthContract.Args>;
							public getAuthenticator(param0: any): com.stripe.android.payments.core.authentication.PaymentAuthenticator<any>;
							public getAllAuthenticators$payments_core_release(): java.util.List<com.stripe.android.payments.core.authentication.PaymentAuthenticator<any>>;
							public getAuthenticationComponent(): com.stripe.android.payments.core.injection.AuthenticationComponent;
							public getPaymentRelayLauncher$payments_core_release(): androidx.activity.result.ActivityResultLauncher<com.stripe.android.PaymentRelayStarter.Args>;
							public inject(param0: com.stripe.android.core.injection.Injectable<any>): void;
							public constructor(param0: com.stripe.android.payments.core.authentication.NoOpIntentAuthenticator, param1: com.stripe.android.payments.core.authentication.SourceAuthenticator, param2: java.util.Map<java.lang.Class<any>, com.stripe.android.payments.core.authentication.PaymentAuthenticator<com.stripe.android.model.StripeIntent>>);
							public onNewActivityResultCaller(param0: androidx.activity.result.ActivityResultCaller, param1: androidx.activity.result.ActivityResultCallback<com.stripe.android.payments.PaymentFlowResult.Unvalidated>): void;
							public setPaymentBrowserAuthLauncher$payments_core_release(param0: androidx.activity.result.ActivityResultLauncher<com.stripe.android.auth.PaymentBrowserAuthContract.Args>): void;
							public setAuthenticationComponent(param0: com.stripe.android.payments.core.injection.AuthenticationComponent): void;
						}
						export module DefaultPaymentAuthenticatorRegistry {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.payments.core.authentication.DefaultPaymentAuthenticatorRegistry.Companion>;
								public createInstance(param0: globalAndroid.content.Context, param1: com.stripe.android.networking.StripeRepository, param2: com.stripe.android.core.networking.AnalyticsRequestExecutor, param3: com.stripe.android.networking.PaymentAnalyticsRequestFactory, param4: boolean, param5: kotlin.coroutines.CoroutineContext, param6: kotlin.coroutines.CoroutineContext, param7: java.util.Map<string, string>, param8: kotlin.jvm.functions.Function0<string>, param9: java.util.Set<string>, param10: boolean): com.stripe.android.payments.core.authentication.PaymentAuthenticatorRegistry;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module authentication {
						export class DefaultPaymentAuthenticatorRegistry_Factory extends dagger.internal.Factory<com.stripe.android.payments.core.authentication.DefaultPaymentAuthenticatorRegistry> {
							public static class: java.lang.Class<com.stripe.android.payments.core.authentication.DefaultPaymentAuthenticatorRegistry_Factory>;
							public static newInstance(param0: com.stripe.android.payments.core.authentication.NoOpIntentAuthenticator, param1: com.stripe.android.payments.core.authentication.SourceAuthenticator, param2: java.util.Map<java.lang.Class<any>, com.stripe.android.payments.core.authentication.PaymentAuthenticator<com.stripe.android.model.StripeIntent>>): com.stripe.android.payments.core.authentication.DefaultPaymentAuthenticatorRegistry;
							public constructor(param0: javax.inject.Provider<com.stripe.android.payments.core.authentication.NoOpIntentAuthenticator>, param1: javax.inject.Provider<com.stripe.android.payments.core.authentication.SourceAuthenticator>, param2: javax.inject.Provider<java.util.Map<java.lang.Class<any>, com.stripe.android.payments.core.authentication.PaymentAuthenticator<com.stripe.android.model.StripeIntent>>>);
							public get(): com.stripe.android.payments.core.authentication.DefaultPaymentAuthenticatorRegistry;
							public static create(param0: javax.inject.Provider<com.stripe.android.payments.core.authentication.NoOpIntentAuthenticator>, param1: javax.inject.Provider<com.stripe.android.payments.core.authentication.SourceAuthenticator>, param2: javax.inject.Provider<java.util.Map<java.lang.Class<any>, com.stripe.android.payments.core.authentication.PaymentAuthenticator<com.stripe.android.model.StripeIntent>>>): com.stripe.android.payments.core.authentication.DefaultPaymentAuthenticatorRegistry_Factory;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module authentication {
						export class NoOpIntentAuthenticator extends com.stripe.android.payments.core.authentication.PaymentAuthenticator<com.stripe.android.model.StripeIntent> {
							public static class: java.lang.Class<com.stripe.android.payments.core.authentication.NoOpIntentAuthenticator>;
							public constructor(param0: kotlin.jvm.functions.Function1<com.stripe.android.view.AuthActivityStarterHost, com.stripe.android.PaymentRelayStarter>);
							public onLauncherInvalidated(): void;
							public authenticate(param0: com.stripe.android.view.AuthActivityStarterHost, param1: com.stripe.android.model.StripeIntent, param2: com.stripe.android.networking.ApiRequest.Options, param3: kotlin.coroutines.Continuation<kotlin.Unit>): any;
							public onNewActivityResultCaller(param0: androidx.activity.result.ActivityResultCaller, param1: androidx.activity.result.ActivityResultCallback<com.stripe.android.payments.PaymentFlowResult.Unvalidated>): void;
							public authenticate(param0: com.stripe.android.view.AuthActivityStarterHost, param1: any, param2: com.stripe.android.networking.ApiRequest.Options, param3: kotlin.coroutines.Continuation<any>): any;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module authentication {
						export class NoOpIntentAuthenticator_Factory extends dagger.internal.Factory<com.stripe.android.payments.core.authentication.NoOpIntentAuthenticator> {
							public static class: java.lang.Class<com.stripe.android.payments.core.authentication.NoOpIntentAuthenticator_Factory>;
							public get(): com.stripe.android.payments.core.authentication.NoOpIntentAuthenticator;
							public static newInstance(param0: kotlin.jvm.functions.Function1<com.stripe.android.view.AuthActivityStarterHost, com.stripe.android.PaymentRelayStarter>): com.stripe.android.payments.core.authentication.NoOpIntentAuthenticator;
							public constructor(param0: javax.inject.Provider<kotlin.jvm.functions.Function1<com.stripe.android.view.AuthActivityStarterHost, com.stripe.android.PaymentRelayStarter>>);
							public static create(param0: javax.inject.Provider<kotlin.jvm.functions.Function1<com.stripe.android.view.AuthActivityStarterHost, com.stripe.android.PaymentRelayStarter>>): com.stripe.android.payments.core.authentication.NoOpIntentAuthenticator_Factory;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module authentication {
						export class OxxoAuthenticator extends com.stripe.android.payments.core.authentication.PaymentAuthenticator<com.stripe.android.model.StripeIntent> {
							public static class: java.lang.Class<com.stripe.android.payments.core.authentication.OxxoAuthenticator>;
							public onLauncherInvalidated(): void;
							public constructor(param0: com.stripe.android.payments.core.authentication.WebIntentAuthenticator, param1: com.stripe.android.payments.core.authentication.NoOpIntentAuthenticator);
							public onNewActivityResultCaller(param0: androidx.activity.result.ActivityResultCaller, param1: androidx.activity.result.ActivityResultCallback<com.stripe.android.payments.PaymentFlowResult.Unvalidated>): void;
							public authenticate(param0: com.stripe.android.view.AuthActivityStarterHost, param1: any, param2: com.stripe.android.networking.ApiRequest.Options, param3: kotlin.coroutines.Continuation<any>): any;
							public authenticate(param0: com.stripe.android.view.AuthActivityStarterHost, param1: com.stripe.android.model.StripeIntent, param2: com.stripe.android.networking.ApiRequest.Options, param3: kotlin.coroutines.Continuation<any>): any;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module authentication {
						export class OxxoAuthenticator_Factory extends dagger.internal.Factory<com.stripe.android.payments.core.authentication.OxxoAuthenticator> {
							public static class: java.lang.Class<com.stripe.android.payments.core.authentication.OxxoAuthenticator_Factory>;
							public static newInstance(param0: com.stripe.android.payments.core.authentication.WebIntentAuthenticator, param1: com.stripe.android.payments.core.authentication.NoOpIntentAuthenticator): com.stripe.android.payments.core.authentication.OxxoAuthenticator;
							public get(): com.stripe.android.payments.core.authentication.OxxoAuthenticator;
							public static create(param0: javax.inject.Provider<com.stripe.android.payments.core.authentication.WebIntentAuthenticator>, param1: javax.inject.Provider<com.stripe.android.payments.core.authentication.NoOpIntentAuthenticator>): com.stripe.android.payments.core.authentication.OxxoAuthenticator_Factory;
							public constructor(param0: javax.inject.Provider<com.stripe.android.payments.core.authentication.WebIntentAuthenticator>, param1: javax.inject.Provider<com.stripe.android.payments.core.authentication.NoOpIntentAuthenticator>);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module authentication {
						export class PaymentAuthenticator<Authenticatable> extends com.stripe.android.payments.core.ActivityResultLauncherHost {
							public static class: java.lang.Class<com.stripe.android.payments.core.authentication.PaymentAuthenticator<any>>;
							/**
							 * Constructs a new instance of the com.stripe.android.payments.core.authentication.PaymentAuthenticator<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								authenticate(param0: com.stripe.android.view.AuthActivityStarterHost, param1: any, param2: com.stripe.android.networking.ApiRequest.Options, param3: kotlin.coroutines.Continuation<any>): any;
								onNewActivityResultCaller(param0: androidx.activity.result.ActivityResultCaller, param1: androidx.activity.result.ActivityResultCallback<com.stripe.android.payments.PaymentFlowResult.Unvalidated>): void;
								onLauncherInvalidated(): void;
							});
							public constructor();
							public onLauncherInvalidated(): void;
							public onNewActivityResultCaller(param0: androidx.activity.result.ActivityResultCaller, param1: androidx.activity.result.ActivityResultCallback<com.stripe.android.payments.PaymentFlowResult.Unvalidated>): void;
							public authenticate(param0: com.stripe.android.view.AuthActivityStarterHost, param1: any, param2: com.stripe.android.networking.ApiRequest.Options, param3: kotlin.coroutines.Continuation<any>): any;
						}
						export module PaymentAuthenticator {
							export class DefaultImpls {
								public static class: java.lang.Class<com.stripe.android.payments.core.authentication.PaymentAuthenticator.DefaultImpls>;
								public static onLauncherInvalidated(param0: com.stripe.android.payments.core.authentication.PaymentAuthenticator<any>): void;
								public static onNewActivityResultCaller(param0: com.stripe.android.payments.core.authentication.PaymentAuthenticator<any>, param1: androidx.activity.result.ActivityResultCaller, param2: androidx.activity.result.ActivityResultCallback): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module authentication {
						export class PaymentAuthenticatorRegistry extends com.stripe.android.payments.core.ActivityResultLauncherHost {
							public static class: java.lang.Class<com.stripe.android.payments.core.authentication.PaymentAuthenticatorRegistry>;
							/**
							 * Constructs a new instance of the com.stripe.android.payments.core.authentication.PaymentAuthenticatorRegistry interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getAuthenticator(param0: any): com.stripe.android.payments.core.authentication.PaymentAuthenticator<any>;
								onNewActivityResultCaller(param0: androidx.activity.result.ActivityResultCaller, param1: androidx.activity.result.ActivityResultCallback<com.stripe.android.payments.PaymentFlowResult.Unvalidated>): void;
								onLauncherInvalidated(): void;
							});
							public constructor();
							public onLauncherInvalidated(): void;
							public getAuthenticator(param0: any): com.stripe.android.payments.core.authentication.PaymentAuthenticator<any>;
							public onNewActivityResultCaller(param0: androidx.activity.result.ActivityResultCaller, param1: androidx.activity.result.ActivityResultCallback<com.stripe.android.payments.PaymentFlowResult.Unvalidated>): void;
						}
						export module PaymentAuthenticatorRegistry {
							export class DefaultImpls {
								public static class: java.lang.Class<com.stripe.android.payments.core.authentication.PaymentAuthenticatorRegistry.DefaultImpls>;
								public static onNewActivityResultCaller(param0: com.stripe.android.payments.core.authentication.PaymentAuthenticatorRegistry, param1: androidx.activity.result.ActivityResultCaller, param2: androidx.activity.result.ActivityResultCallback<com.stripe.android.payments.PaymentFlowResult.Unvalidated>): void;
								public static onLauncherInvalidated(param0: com.stripe.android.payments.core.authentication.PaymentAuthenticatorRegistry): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module authentication {
						export class SourceAuthenticator extends com.stripe.android.payments.core.authentication.PaymentAuthenticator<com.stripe.android.model.Source> {
							public static class: java.lang.Class<com.stripe.android.payments.core.authentication.SourceAuthenticator>;
							public constructor(param0: kotlin.jvm.functions.Function1<com.stripe.android.view.AuthActivityStarterHost, com.stripe.android.PaymentBrowserAuthStarter>, param1: kotlin.jvm.functions.Function1<com.stripe.android.view.AuthActivityStarterHost, com.stripe.android.PaymentRelayStarter>, param2: com.stripe.android.core.networking.AnalyticsRequestExecutor, param3: com.stripe.android.networking.PaymentAnalyticsRequestFactory, param4: boolean, param5: kotlin.coroutines.CoroutineContext, param6: kotlin.jvm.functions.Function0<string>, param7: boolean);
							public authenticate(param0: com.stripe.android.view.AuthActivityStarterHost, param1: com.stripe.android.model.Source, param2: com.stripe.android.networking.ApiRequest.Options, param3: kotlin.coroutines.Continuation<kotlin.Unit>): any;
							public onLauncherInvalidated(): void;
							public onNewActivityResultCaller(param0: androidx.activity.result.ActivityResultCaller, param1: androidx.activity.result.ActivityResultCallback<com.stripe.android.payments.PaymentFlowResult.Unvalidated>): void;
							public authenticate(param0: com.stripe.android.view.AuthActivityStarterHost, param1: any, param2: com.stripe.android.networking.ApiRequest.Options, param3: kotlin.coroutines.Continuation<any>): any;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module authentication {
						export class SourceAuthenticator_Factory extends dagger.internal.Factory<com.stripe.android.payments.core.authentication.SourceAuthenticator> {
							public static class: java.lang.Class<com.stripe.android.payments.core.authentication.SourceAuthenticator_Factory>;
							public constructor(param0: javax.inject.Provider<kotlin.jvm.functions.Function1<com.stripe.android.view.AuthActivityStarterHost, com.stripe.android.PaymentBrowserAuthStarter>>, param1: javax.inject.Provider<kotlin.jvm.functions.Function1<com.stripe.android.view.AuthActivityStarterHost, com.stripe.android.PaymentRelayStarter>>, param2: javax.inject.Provider<com.stripe.android.core.networking.AnalyticsRequestExecutor>, param3: javax.inject.Provider<com.stripe.android.networking.PaymentAnalyticsRequestFactory>, param4: javax.inject.Provider<java.lang.Boolean>, param5: javax.inject.Provider<kotlin.coroutines.CoroutineContext>, param6: javax.inject.Provider<kotlin.jvm.functions.Function0<string>>, param7: javax.inject.Provider<java.lang.Boolean>);
							public get(): com.stripe.android.payments.core.authentication.SourceAuthenticator;
							public static newInstance(param0: kotlin.jvm.functions.Function1<com.stripe.android.view.AuthActivityStarterHost, com.stripe.android.PaymentBrowserAuthStarter>, param1: kotlin.jvm.functions.Function1<com.stripe.android.view.AuthActivityStarterHost, com.stripe.android.PaymentRelayStarter>, param2: com.stripe.android.core.networking.AnalyticsRequestExecutor, param3: com.stripe.android.networking.PaymentAnalyticsRequestFactory, param4: boolean, param5: kotlin.coroutines.CoroutineContext, param6: kotlin.jvm.functions.Function0<string>, param7: boolean): com.stripe.android.payments.core.authentication.SourceAuthenticator;
							public static create(param0: javax.inject.Provider<kotlin.jvm.functions.Function1<com.stripe.android.view.AuthActivityStarterHost, com.stripe.android.PaymentBrowserAuthStarter>>, param1: javax.inject.Provider<kotlin.jvm.functions.Function1<com.stripe.android.view.AuthActivityStarterHost, com.stripe.android.PaymentRelayStarter>>, param2: javax.inject.Provider<com.stripe.android.core.networking.AnalyticsRequestExecutor>, param3: javax.inject.Provider<com.stripe.android.networking.PaymentAnalyticsRequestFactory>, param4: javax.inject.Provider<java.lang.Boolean>, param5: javax.inject.Provider<kotlin.coroutines.CoroutineContext>, param6: javax.inject.Provider<kotlin.jvm.functions.Function0<string>>, param7: javax.inject.Provider<java.lang.Boolean>): com.stripe.android.payments.core.authentication.SourceAuthenticator_Factory;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module authentication {
						export class UnsupportedAuthenticator extends com.stripe.android.payments.core.authentication.PaymentAuthenticator<com.stripe.android.model.StripeIntent> {
							public static class: java.lang.Class<com.stripe.android.payments.core.authentication.UnsupportedAuthenticator>;
							public static Companion: com.stripe.android.payments.core.authentication.UnsupportedAuthenticator.Companion;
							public constructor(param0: kotlin.jvm.functions.Function1<com.stripe.android.view.AuthActivityStarterHost, com.stripe.android.PaymentRelayStarter>);
							public onLauncherInvalidated(): void;
							public authenticate(param0: com.stripe.android.view.AuthActivityStarterHost, param1: com.stripe.android.model.StripeIntent, param2: com.stripe.android.networking.ApiRequest.Options, param3: kotlin.coroutines.Continuation<kotlin.Unit>): any;
							public onNewActivityResultCaller(param0: androidx.activity.result.ActivityResultCaller, param1: androidx.activity.result.ActivityResultCallback<com.stripe.android.payments.PaymentFlowResult.Unvalidated>): void;
							public authenticate(param0: com.stripe.android.view.AuthActivityStarterHost, param1: any, param2: com.stripe.android.networking.ApiRequest.Options, param3: kotlin.coroutines.Continuation<any>): any;
						}
						export module UnsupportedAuthenticator {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.payments.core.authentication.UnsupportedAuthenticator.Companion>;
								public getACTION_DEPENDENCY_MAP(): java.util.Map<java.lang.Class<any>, string>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module authentication {
						export class UnsupportedAuthenticator_Factory extends dagger.internal.Factory<com.stripe.android.payments.core.authentication.UnsupportedAuthenticator> {
							public static class: java.lang.Class<com.stripe.android.payments.core.authentication.UnsupportedAuthenticator_Factory>;
							public static create(param0: javax.inject.Provider<kotlin.jvm.functions.Function1<com.stripe.android.view.AuthActivityStarterHost, com.stripe.android.PaymentRelayStarter>>): com.stripe.android.payments.core.authentication.UnsupportedAuthenticator_Factory;
							public constructor(param0: javax.inject.Provider<kotlin.jvm.functions.Function1<com.stripe.android.view.AuthActivityStarterHost, com.stripe.android.PaymentRelayStarter>>);
							public static newInstance(param0: kotlin.jvm.functions.Function1<com.stripe.android.view.AuthActivityStarterHost, com.stripe.android.PaymentRelayStarter>): com.stripe.android.payments.core.authentication.UnsupportedAuthenticator;
							public get(): com.stripe.android.payments.core.authentication.UnsupportedAuthenticator;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module authentication {
						export class WebIntentAuthenticator extends com.stripe.android.payments.core.authentication.PaymentAuthenticator<com.stripe.android.model.StripeIntent> {
							public static class: java.lang.Class<com.stripe.android.payments.core.authentication.WebIntentAuthenticator>;
							public onLauncherInvalidated(): void;
							public authenticate(param0: com.stripe.android.view.AuthActivityStarterHost, param1: com.stripe.android.model.StripeIntent, param2: com.stripe.android.networking.ApiRequest.Options, param3: kotlin.coroutines.Continuation<kotlin.Unit>): any;
							public constructor(param0: kotlin.jvm.functions.Function1<com.stripe.android.view.AuthActivityStarterHost, com.stripe.android.PaymentBrowserAuthStarter>, param1: com.stripe.android.core.networking.AnalyticsRequestExecutor, param2: com.stripe.android.networking.PaymentAnalyticsRequestFactory, param3: boolean, param4: kotlin.coroutines.CoroutineContext, param5: java.util.Map<string, string>, param6: kotlin.jvm.functions.Function0<string>, param7: boolean);
							public onNewActivityResultCaller(param0: androidx.activity.result.ActivityResultCaller, param1: androidx.activity.result.ActivityResultCallback<com.stripe.android.payments.PaymentFlowResult.Unvalidated>): void;
							public authenticate(param0: com.stripe.android.view.AuthActivityStarterHost, param1: any, param2: com.stripe.android.networking.ApiRequest.Options, param3: kotlin.coroutines.Continuation<any>): any;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module authentication {
						export class WebIntentAuthenticator_Factory extends dagger.internal.Factory<com.stripe.android.payments.core.authentication.WebIntentAuthenticator> {
							public static class: java.lang.Class<com.stripe.android.payments.core.authentication.WebIntentAuthenticator_Factory>;
							public get(): com.stripe.android.payments.core.authentication.WebIntentAuthenticator;
							public static create(param0: javax.inject.Provider<kotlin.jvm.functions.Function1<com.stripe.android.view.AuthActivityStarterHost, com.stripe.android.PaymentBrowserAuthStarter>>, param1: javax.inject.Provider<com.stripe.android.core.networking.AnalyticsRequestExecutor>, param2: javax.inject.Provider<com.stripe.android.networking.PaymentAnalyticsRequestFactory>, param3: javax.inject.Provider<java.lang.Boolean>, param4: javax.inject.Provider<kotlin.coroutines.CoroutineContext>, param5: javax.inject.Provider<java.util.Map<string, string>>, param6: javax.inject.Provider<kotlin.jvm.functions.Function0<string>>, param7: javax.inject.Provider<java.lang.Boolean>): com.stripe.android.payments.core.authentication.WebIntentAuthenticator_Factory;
							public constructor(param0: javax.inject.Provider<kotlin.jvm.functions.Function1<com.stripe.android.view.AuthActivityStarterHost, com.stripe.android.PaymentBrowserAuthStarter>>, param1: javax.inject.Provider<com.stripe.android.core.networking.AnalyticsRequestExecutor>, param2: javax.inject.Provider<com.stripe.android.networking.PaymentAnalyticsRequestFactory>, param3: javax.inject.Provider<java.lang.Boolean>, param4: javax.inject.Provider<kotlin.coroutines.CoroutineContext>, param5: javax.inject.Provider<java.util.Map<string, string>>, param6: javax.inject.Provider<kotlin.jvm.functions.Function0<string>>, param7: javax.inject.Provider<java.lang.Boolean>);
							public static newInstance(param0: kotlin.jvm.functions.Function1<com.stripe.android.view.AuthActivityStarterHost, com.stripe.android.PaymentBrowserAuthStarter>, param1: com.stripe.android.core.networking.AnalyticsRequestExecutor, param2: com.stripe.android.networking.PaymentAnalyticsRequestFactory, param3: boolean, param4: kotlin.coroutines.CoroutineContext, param5: java.util.Map<string, string>, param6: kotlin.jvm.functions.Function0<string>, param7: boolean): com.stripe.android.payments.core.authentication.WebIntentAuthenticator;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module authentication {
						export module threeds2 {
							export class DefaultStripe3ds2ChallengeResultProcessor extends com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2ChallengeResultProcessor {
								public static class: java.lang.Class<com.stripe.android.payments.core.authentication.threeds2.DefaultStripe3ds2ChallengeResultProcessor>;
								public constructor(param0: com.stripe.android.networking.StripeRepository, param1: com.stripe.android.core.networking.AnalyticsRequestExecutor, param2: com.stripe.android.networking.PaymentAnalyticsRequestFactory, param3: com.stripe.android.core.networking.RetryDelaySupplier, param4: com.stripe.android.core.Logger, param5: kotlin.coroutines.CoroutineContext);
								public process(param0: com.stripe.android.stripe3ds2.transaction.ChallengeResult, param1: kotlin.coroutines.Continuation<any>): any;
							}
							export module DefaultStripe3ds2ChallengeResultProcessor {
								export class Companion {
									public static class: java.lang.Class<com.stripe.android.payments.core.authentication.threeds2.DefaultStripe3ds2ChallengeResultProcessor.Companion>;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module authentication {
						export module threeds2 {
							export class DefaultStripe3ds2ChallengeResultProcessor_Factory extends dagger.internal.Factory<com.stripe.android.payments.core.authentication.threeds2.DefaultStripe3ds2ChallengeResultProcessor> {
								public static class: java.lang.Class<com.stripe.android.payments.core.authentication.threeds2.DefaultStripe3ds2ChallengeResultProcessor_Factory>;
								public get(): com.stripe.android.payments.core.authentication.threeds2.DefaultStripe3ds2ChallengeResultProcessor;
								public static newInstance(param0: com.stripe.android.networking.StripeRepository, param1: com.stripe.android.core.networking.AnalyticsRequestExecutor, param2: com.stripe.android.networking.PaymentAnalyticsRequestFactory, param3: com.stripe.android.core.networking.RetryDelaySupplier, param4: com.stripe.android.core.Logger, param5: kotlin.coroutines.CoroutineContext): com.stripe.android.payments.core.authentication.threeds2.DefaultStripe3ds2ChallengeResultProcessor;
								public constructor(param0: javax.inject.Provider<com.stripe.android.networking.StripeRepository>, param1: javax.inject.Provider<com.stripe.android.core.networking.AnalyticsRequestExecutor>, param2: javax.inject.Provider<com.stripe.android.networking.PaymentAnalyticsRequestFactory>, param3: javax.inject.Provider<com.stripe.android.core.networking.RetryDelaySupplier>, param4: javax.inject.Provider<com.stripe.android.core.Logger>, param5: javax.inject.Provider<kotlin.coroutines.CoroutineContext>);
								public static create(param0: javax.inject.Provider<com.stripe.android.networking.StripeRepository>, param1: javax.inject.Provider<com.stripe.android.core.networking.AnalyticsRequestExecutor>, param2: javax.inject.Provider<com.stripe.android.networking.PaymentAnalyticsRequestFactory>, param3: javax.inject.Provider<com.stripe.android.core.networking.RetryDelaySupplier>, param4: javax.inject.Provider<com.stripe.android.core.Logger>, param5: javax.inject.Provider<kotlin.coroutines.CoroutineContext>): com.stripe.android.payments.core.authentication.threeds2.DefaultStripe3ds2ChallengeResultProcessor_Factory;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module authentication {
						export module threeds2 {
							export abstract class NextStep {
								public static class: java.lang.Class<com.stripe.android.payments.core.authentication.threeds2.NextStep>;
							}
							export module NextStep {
								export class Complete extends com.stripe.android.payments.core.authentication.threeds2.NextStep {
									public static class: java.lang.Class<com.stripe.android.payments.core.authentication.threeds2.NextStep.Complete>;
									public static $stable: number;
									public hashCode(): number;
									public equals(param0: any): boolean;
									public copy(param0: com.stripe.android.payments.PaymentFlowResult.Unvalidated): com.stripe.android.payments.core.authentication.threeds2.NextStep.Complete;
									public getResult(): com.stripe.android.payments.PaymentFlowResult.Unvalidated;
									public toString(): string;
									public constructor(param0: com.stripe.android.payments.PaymentFlowResult.Unvalidated);
									public component1(): com.stripe.android.payments.PaymentFlowResult.Unvalidated;
								}
								export class StartChallenge extends com.stripe.android.payments.core.authentication.threeds2.NextStep {
									public static class: java.lang.Class<com.stripe.android.payments.core.authentication.threeds2.NextStep.StartChallenge>;
									public static $stable: number;
									public hashCode(): number;
									public getArgs(): com.stripe.android.stripe3ds2.transaction.InitChallengeArgs;
									public constructor(param0: com.stripe.android.stripe3ds2.transaction.InitChallengeArgs);
									public copy(param0: com.stripe.android.stripe3ds2.transaction.InitChallengeArgs): com.stripe.android.payments.core.authentication.threeds2.NextStep.StartChallenge;
									public equals(param0: any): boolean;
									public toString(): string;
									public component1(): com.stripe.android.stripe3ds2.transaction.InitChallengeArgs;
								}
								export class StartFallback extends com.stripe.android.payments.core.authentication.threeds2.NextStep {
									public static class: java.lang.Class<com.stripe.android.payments.core.authentication.threeds2.NextStep.StartFallback>;
									public static $stable: number;
									public copy(param0: com.stripe.android.auth.PaymentBrowserAuthContract.Args): com.stripe.android.payments.core.authentication.threeds2.NextStep.StartFallback;
									public hashCode(): number;
									public constructor(param0: com.stripe.android.auth.PaymentBrowserAuthContract.Args);
									public equals(param0: any): boolean;
									public component1(): com.stripe.android.auth.PaymentBrowserAuthContract.Args;
									public getArgs(): com.stripe.android.auth.PaymentBrowserAuthContract.Args;
									public toString(): string;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module authentication {
						export module threeds2 {
							export class Stripe3DS2Authenticator extends com.stripe.android.payments.core.authentication.PaymentAuthenticator<com.stripe.android.model.StripeIntent> {
								public static class: java.lang.Class<com.stripe.android.payments.core.authentication.threeds2.Stripe3DS2Authenticator>;
								public authenticate(param0: com.stripe.android.view.AuthActivityStarterHost, param1: any, param2: com.stripe.android.networking.ApiRequest.Options, param3: kotlin.coroutines.Continuation<any>): any;
								public setStripe3ds2CompletionLauncher$payments_core_release(param0: androidx.activity.result.ActivityResultLauncher<com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionContract.Args>): void;
								public getStripe3ds2CompletionLauncher$payments_core_release(): androidx.activity.result.ActivityResultLauncher<com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionContract.Args>;
								public constructor(param0: com.stripe.android.PaymentAuthConfig, param1: boolean, param2: string, param3: kotlin.jvm.functions.Function0<string>, param4: java.util.Set<string>);
								public onLauncherInvalidated(): void;
								public onNewActivityResultCaller(param0: androidx.activity.result.ActivityResultCaller, param1: androidx.activity.result.ActivityResultCallback<com.stripe.android.payments.PaymentFlowResult.Unvalidated>): void;
								public authenticate(param0: com.stripe.android.view.AuthActivityStarterHost, param1: com.stripe.android.model.StripeIntent, param2: com.stripe.android.networking.ApiRequest.Options, param3: kotlin.coroutines.Continuation<any>): any;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module authentication {
						export module threeds2 {
							export class Stripe3DS2Authenticator_Factory extends dagger.internal.Factory<com.stripe.android.payments.core.authentication.threeds2.Stripe3DS2Authenticator> {
								public static class: java.lang.Class<com.stripe.android.payments.core.authentication.threeds2.Stripe3DS2Authenticator_Factory>;
								public constructor(param0: javax.inject.Provider<com.stripe.android.PaymentAuthConfig>, param1: javax.inject.Provider<java.lang.Boolean>, param2: javax.inject.Provider<string>, param3: javax.inject.Provider<kotlin.jvm.functions.Function0<string>>, param4: javax.inject.Provider<java.util.Set<string>>);
								public get(): com.stripe.android.payments.core.authentication.threeds2.Stripe3DS2Authenticator;
								public static create(param0: javax.inject.Provider<com.stripe.android.PaymentAuthConfig>, param1: javax.inject.Provider<java.lang.Boolean>, param2: javax.inject.Provider<string>, param3: javax.inject.Provider<kotlin.jvm.functions.Function0<string>>, param4: javax.inject.Provider<java.util.Set<string>>): com.stripe.android.payments.core.authentication.threeds2.Stripe3DS2Authenticator_Factory;
								public static newInstance(param0: com.stripe.android.PaymentAuthConfig, param1: boolean, param2: string, param3: kotlin.jvm.functions.Function0<string>, param4: java.util.Set<string>): com.stripe.android.payments.core.authentication.threeds2.Stripe3DS2Authenticator;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module authentication {
						export module threeds2 {
							export class Stripe3ds2ChallengeResultProcessor {
								public static class: java.lang.Class<com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2ChallengeResultProcessor>;
								/**
								 * Constructs a new instance of the com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2ChallengeResultProcessor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									process(param0: com.stripe.android.stripe3ds2.transaction.ChallengeResult, param1: kotlin.coroutines.Continuation<any>): any;
								});
								public constructor();
								public process(param0: com.stripe.android.stripe3ds2.transaction.ChallengeResult, param1: kotlin.coroutines.Continuation<any>): any;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module authentication {
						export module threeds2 {
							export class Stripe3ds2TransactionActivity {
								public static class: java.lang.Class<com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionActivity>;
								public args: com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionContract.Args;
								public getArgs(): com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionContract.Args;
								public setViewModelFactory$payments_core_release(param0: androidx.lifecycle.ViewModelProvider.Factory): void;
								public setArgs(param0: com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionContract.Args): void;
								public getViewModelFactory$payments_core_release(): androidx.lifecycle.ViewModelProvider.Factory;
								public constructor();
								public onCreate(param0: globalAndroid.os.Bundle): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module authentication {
						export module threeds2 {
							export class Stripe3ds2TransactionContract extends androidx.activity.result.contract.ActivityResultContract<com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionContract.Args, com.stripe.android.payments.PaymentFlowResult.Unvalidated> {
								public static class: java.lang.Class<com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionContract>;
								public parseResult(param0: number, param1: globalAndroid.content.Intent): com.stripe.android.payments.PaymentFlowResult.Unvalidated;
								public constructor();
								public createIntent(param0: globalAndroid.content.Context, param1: com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionContract.Args): globalAndroid.content.Intent;
							}
							export module Stripe3ds2TransactionContract {
								export class Args {
									public static class: java.lang.Class<com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionContract.Args>;
									public static Companion: com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionContract.Args.Companion;
									public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionContract.Args>;
									public static $stable: number;
									public component2(): com.stripe.android.PaymentAuthConfig.Stripe3ds2Config;
									public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
									public copy(param0: com.stripe.android.stripe3ds2.transaction.SdkTransactionId, param1: com.stripe.android.PaymentAuthConfig.Stripe3ds2Config, param2: com.stripe.android.model.StripeIntent, param3: com.stripe.android.model.StripeIntent.NextActionData.SdkData.Use3DS2, param4: com.stripe.android.networking.ApiRequest.Options, param5: boolean, param6: java.lang.Integer, param7: string, param8: string, param9: java.util.Set<string>): com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionContract.Args;
									public component4(): com.stripe.android.model.StripeIntent.NextActionData.SdkData.Use3DS2;
									public component5(): com.stripe.android.networking.ApiRequest.Options;
									public getFingerprint(): com.stripe.android.model.Stripe3ds2Fingerprint;
									public getInjectorKey(): string;
									public describeContents(): number;
									public getNextActionData(): com.stripe.android.model.StripeIntent.NextActionData.SdkData.Use3DS2;
									public getRequestOptions(): com.stripe.android.networking.ApiRequest.Options;
									public constructor(param0: com.stripe.android.stripe3ds2.transaction.SdkTransactionId, param1: com.stripe.android.PaymentAuthConfig.Stripe3ds2Config, param2: com.stripe.android.model.StripeIntent, param3: com.stripe.android.model.StripeIntent.NextActionData.SdkData.Use3DS2, param4: com.stripe.android.networking.ApiRequest.Options, param5: boolean, param6: java.lang.Integer, param7: string, param8: string, param9: java.util.Set<string>);
									public getEnableLogging(): boolean;
									public component10(): java.util.Set<string>;
									public getProductUsage(): java.util.Set<string>;
									public getPublishableKey(): string;
									public hashCode(): number;
									public component7(): java.lang.Integer;
									public component9(): string;
									public equals(param0: any): boolean;
									public getStatusBarColor(): java.lang.Integer;
									public getStripeIntent(): com.stripe.android.model.StripeIntent;
									public toString(): string;
									public getConfig(): com.stripe.android.PaymentAuthConfig.Stripe3ds2Config;
									public component1(): com.stripe.android.stripe3ds2.transaction.SdkTransactionId;
									public getSdkTransactionId(): com.stripe.android.stripe3ds2.transaction.SdkTransactionId;
									public component8(): string;
									public component6(): boolean;
									public toBundle(): globalAndroid.os.Bundle;
									public component3(): com.stripe.android.model.StripeIntent;
								}
								export module Args {
									export class Companion {
										public static class: java.lang.Class<com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionContract.Args.Companion>;
										public fromIntent(param0: globalAndroid.content.Intent): com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionContract.Args;
									}
									export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionContract.Args> {
										public static class: java.lang.Class<com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionContract.Args.Creator>;
										public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionContract.Args;
										public newArray(param0: number): androidNative.Array<com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionContract.Args>;
										public constructor();
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module authentication {
						export module threeds2 {
							export class Stripe3ds2TransactionStarter extends com.stripe.android.view.AuthActivityStarter<com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionContract.Args> {
								public static class: java.lang.Class<com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionStarter>;
								/**
								 * Constructs a new instance of the com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionStarter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									start(param0: any): void;
								});
								public constructor();
								public start(param0: any): void;
							}
							export module Stripe3ds2TransactionStarter {
								export class Legacy extends com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionStarter {
									public static class: java.lang.Class<com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionStarter.Legacy>;
									public static $stable: number;
									public constructor(param0: com.stripe.android.view.AuthActivityStarterHost);
									public start(param0: any): void;
									public start(param0: com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionContract.Args): void;
								}
								export class Modern extends com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionStarter {
									public static class: java.lang.Class<com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionStarter.Modern>;
									public static $stable: number;
									public constructor(param0: androidx.activity.result.ActivityResultLauncher<com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionContract.Args>);
									public start(param0: any): void;
									public start(param0: com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionContract.Args): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module authentication {
						export module threeds2 {
							export class Stripe3ds2TransactionViewModel {
								public static class: java.lang.Class<com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionViewModel>;
								public start3ds2Flow(param0: kotlin.coroutines.Continuation<any>): any;
								public startChallengeFlow$payments_core_release(param0: com.stripe.android.model.Stripe3ds2AuthResult.Ares, param1: com.stripe.android.stripe3ds2.transaction.Transaction, param2: string, param3: number, param4: kotlin.coroutines.Continuation<any>): any;
								public processChallengeResult(param0: com.stripe.android.stripe3ds2.transaction.ChallengeResult, param1: kotlin.coroutines.Continuation<any>): any;
								public initChallenge(param0: com.stripe.android.stripe3ds2.transaction.InitChallengeArgs, param1: kotlin.coroutines.Continuation<any>): any;
								public constructor(param0: com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionContract.Args, param1: com.stripe.android.networking.StripeRepository, param2: com.stripe.android.core.networking.AnalyticsRequestExecutor, param3: com.stripe.android.networking.PaymentAnalyticsRequestFactory, param4: com.stripe.android.stripe3ds2.service.StripeThreeDs2Service, param5: com.stripe.android.stripe3ds2.transaction.MessageVersionRegistry, param6: com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2ChallengeResultProcessor, param7: com.stripe.android.stripe3ds2.transaction.InitChallengeRepository, param8: kotlin.coroutines.CoroutineContext, param9: androidx.lifecycle.SavedStateHandle, param10: boolean);
								public on3ds2AuthSuccess$payments_core_release(param0: com.stripe.android.model.Stripe3ds2AuthResult, param1: com.stripe.android.stripe3ds2.transaction.Transaction, param2: string, param3: number, param4: kotlin.coroutines.Continuation<any>): any;
								public getHasCompleted(): boolean;
								public setHasCompleted(param0: boolean): void;
							}
							export module Stripe3ds2TransactionViewModel {
								export class Companion {
									public static class: java.lang.Class<com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionViewModel.Companion>;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module authentication {
						export module threeds2 {
							export class Stripe3ds2TransactionViewModelFactory extends androidx.lifecycle.AbstractSavedStateViewModelFactory implements com.stripe.android.core.injection.Injectable<com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionViewModelFactory.FallbackInitializeParam>  {
								public static class: java.lang.Class<com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionViewModelFactory>;
								public subComponentBuilder: com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelSubcomponent.Builder;
								public constructor(param0: kotlin.jvm.functions.Function0<any>, param1: androidx.savedstate.SavedStateRegistryOwner, param2: kotlin.jvm.functions.Function0<com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionContract.Args>);
								public fallbackInitialize(param0: com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionViewModelFactory.FallbackInitializeParam): void;
								public setSubComponentBuilder(param0: com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelSubcomponent.Builder): void;
								public create(param0: string, param1: java.lang.Class, param2: androidx.lifecycle.SavedStateHandle): androidx.lifecycle.ViewModel;
								public fallbackInitialize(param0: any): void;
								public getSubComponentBuilder(): com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelSubcomponent.Builder;
							}
							export module Stripe3ds2TransactionViewModelFactory {
								export class FallbackInitializeParam {
									public static class: java.lang.Class<com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionViewModelFactory.FallbackInitializeParam>;
									public getProductUsage(): java.util.Set<string>;
									public copy(param0: globalAndroid.app.Application, param1: boolean, param2: string, param3: java.util.Set<string>): com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionViewModelFactory.FallbackInitializeParam;
									public getPublishableKey(): string;
									public hashCode(): number;
									public component1(): globalAndroid.app.Application;
									public equals(param0: any): boolean;
									public toString(): string;
									public component4(): java.util.Set<string>;
									public component3(): string;
									public component2(): boolean;
									public constructor(param0: globalAndroid.app.Application, param1: boolean, param2: string, param3: java.util.Set<string>);
									public getEnableLogging(): boolean;
									public getApplication(): globalAndroid.app.Application;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module authentication {
						export module threeds2 {
							export class Stripe3ds2TransactionViewModelFactory_MembersInjector extends dagger.MembersInjector<com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionViewModelFactory> {
								public static class: java.lang.Class<com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionViewModelFactory_MembersInjector>;
								public injectMembers(param0: com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionViewModelFactory): void;
								public static injectSubComponentBuilder(param0: com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionViewModelFactory, param1: com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelSubcomponent.Builder): void;
								public static create(param0: javax.inject.Provider<com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelSubcomponent.Builder>): dagger.MembersInjector<com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionViewModelFactory>;
								public constructor(param0: javax.inject.Provider<com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelSubcomponent.Builder>);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module authentication {
						export module threeds2 {
							export class Stripe3ds2TransactionViewModel_Factory extends dagger.internal.Factory<com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionViewModel> {
								public static class: java.lang.Class<com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionViewModel_Factory>;
								public get(): com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionViewModel;
								public static newInstance(param0: com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionContract.Args, param1: com.stripe.android.networking.StripeRepository, param2: com.stripe.android.core.networking.AnalyticsRequestExecutor, param3: com.stripe.android.networking.PaymentAnalyticsRequestFactory, param4: com.stripe.android.stripe3ds2.service.StripeThreeDs2Service, param5: com.stripe.android.stripe3ds2.transaction.MessageVersionRegistry, param6: com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2ChallengeResultProcessor, param7: com.stripe.android.stripe3ds2.transaction.InitChallengeRepository, param8: kotlin.coroutines.CoroutineContext, param9: androidx.lifecycle.SavedStateHandle, param10: boolean): com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionViewModel;
								public constructor(param0: javax.inject.Provider<com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionContract.Args>, param1: javax.inject.Provider<com.stripe.android.networking.StripeRepository>, param2: javax.inject.Provider<com.stripe.android.core.networking.AnalyticsRequestExecutor>, param3: javax.inject.Provider<com.stripe.android.networking.PaymentAnalyticsRequestFactory>, param4: javax.inject.Provider<com.stripe.android.stripe3ds2.service.StripeThreeDs2Service>, param5: javax.inject.Provider<com.stripe.android.stripe3ds2.transaction.MessageVersionRegistry>, param6: javax.inject.Provider<com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2ChallengeResultProcessor>, param7: javax.inject.Provider<com.stripe.android.stripe3ds2.transaction.InitChallengeRepository>, param8: javax.inject.Provider<kotlin.coroutines.CoroutineContext>, param9: javax.inject.Provider<androidx.lifecycle.SavedStateHandle>, param10: javax.inject.Provider<java.lang.Boolean>);
								public static create(param0: javax.inject.Provider<com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionContract.Args>, param1: javax.inject.Provider<com.stripe.android.networking.StripeRepository>, param2: javax.inject.Provider<com.stripe.android.core.networking.AnalyticsRequestExecutor>, param3: javax.inject.Provider<com.stripe.android.networking.PaymentAnalyticsRequestFactory>, param4: javax.inject.Provider<com.stripe.android.stripe3ds2.service.StripeThreeDs2Service>, param5: javax.inject.Provider<com.stripe.android.stripe3ds2.transaction.MessageVersionRegistry>, param6: javax.inject.Provider<com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2ChallengeResultProcessor>, param7: javax.inject.Provider<com.stripe.android.stripe3ds2.transaction.InitChallengeRepository>, param8: javax.inject.Provider<kotlin.coroutines.CoroutineContext>, param9: javax.inject.Provider<androidx.lifecycle.SavedStateHandle>, param10: javax.inject.Provider<java.lang.Boolean>): com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionViewModel_Factory;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module injection {
						export class AuthenticationComponent {
							public static class: java.lang.Class<com.stripe.android.payments.core.injection.AuthenticationComponent>;
							/**
							 * Constructs a new instance of the com.stripe.android.payments.core.injection.AuthenticationComponent interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getRegistry(): com.stripe.android.payments.core.authentication.DefaultPaymentAuthenticatorRegistry;
								inject(param0: com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionViewModelFactory): void;
							});
							public constructor();
							public getRegistry(): com.stripe.android.payments.core.authentication.DefaultPaymentAuthenticatorRegistry;
							public inject(param0: com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionViewModelFactory): void;
						}
						export module AuthenticationComponent {
							export class Builder {
								public static class: java.lang.Class<com.stripe.android.payments.core.injection.AuthenticationComponent.Builder>;
								/**
								 * Constructs a new instance of the com.stripe.android.payments.core.injection.AuthenticationComponent$Builder interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									context(param0: globalAndroid.content.Context): com.stripe.android.payments.core.injection.AuthenticationComponent.Builder;
									stripeRepository(param0: com.stripe.android.networking.StripeRepository): com.stripe.android.payments.core.injection.AuthenticationComponent.Builder;
									analyticsRequestExecutor(param0: com.stripe.android.core.networking.AnalyticsRequestExecutor): com.stripe.android.payments.core.injection.AuthenticationComponent.Builder;
									analyticsRequestFactory(param0: com.stripe.android.networking.PaymentAnalyticsRequestFactory): com.stripe.android.payments.core.injection.AuthenticationComponent.Builder;
									enableLogging(param0: boolean): com.stripe.android.payments.core.injection.AuthenticationComponent.Builder;
									workContext(param0: kotlin.coroutines.CoroutineContext): com.stripe.android.payments.core.injection.AuthenticationComponent.Builder;
									uiContext(param0: kotlin.coroutines.CoroutineContext): com.stripe.android.payments.core.injection.AuthenticationComponent.Builder;
									threeDs1IntentReturnUrlMap(param0: java.util.Map<string, string>): com.stripe.android.payments.core.injection.AuthenticationComponent.Builder;
									injectorKey(param0: string): com.stripe.android.payments.core.injection.AuthenticationComponent.Builder;
									publishableKeyProvider(param0: kotlin.jvm.functions.Function0<string>): com.stripe.android.payments.core.injection.AuthenticationComponent.Builder;
									productUsage(param0: java.util.Set<string>): com.stripe.android.payments.core.injection.AuthenticationComponent.Builder;
									isInstantApp(param0: boolean): com.stripe.android.payments.core.injection.AuthenticationComponent.Builder;
									build(): com.stripe.android.payments.core.injection.AuthenticationComponent;
								});
								public constructor();
								public context(param0: globalAndroid.content.Context): com.stripe.android.payments.core.injection.AuthenticationComponent.Builder;
								public threeDs1IntentReturnUrlMap(param0: java.util.Map<string, string>): com.stripe.android.payments.core.injection.AuthenticationComponent.Builder;
								public build(): com.stripe.android.payments.core.injection.AuthenticationComponent;
								public uiContext(param0: kotlin.coroutines.CoroutineContext): com.stripe.android.payments.core.injection.AuthenticationComponent.Builder;
								public analyticsRequestExecutor(param0: com.stripe.android.core.networking.AnalyticsRequestExecutor): com.stripe.android.payments.core.injection.AuthenticationComponent.Builder;
								public enableLogging(param0: boolean): com.stripe.android.payments.core.injection.AuthenticationComponent.Builder;
								public injectorKey(param0: string): com.stripe.android.payments.core.injection.AuthenticationComponent.Builder;
								public publishableKeyProvider(param0: kotlin.jvm.functions.Function0<string>): com.stripe.android.payments.core.injection.AuthenticationComponent.Builder;
								public stripeRepository(param0: com.stripe.android.networking.StripeRepository): com.stripe.android.payments.core.injection.AuthenticationComponent.Builder;
								public productUsage(param0: java.util.Set<string>): com.stripe.android.payments.core.injection.AuthenticationComponent.Builder;
								public isInstantApp(param0: boolean): com.stripe.android.payments.core.injection.AuthenticationComponent.Builder;
								public analyticsRequestFactory(param0: com.stripe.android.networking.PaymentAnalyticsRequestFactory): com.stripe.android.payments.core.injection.AuthenticationComponent.Builder;
								public workContext(param0: kotlin.coroutines.CoroutineContext): com.stripe.android.payments.core.injection.AuthenticationComponent.Builder;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module injection {
						export abstract class AuthenticationModule {
							public static class: java.lang.Class<com.stripe.android.payments.core.injection.AuthenticationModule>;
							public static Companion: com.stripe.android.payments.core.injection.AuthenticationModule.Companion;
							public constructor();
							public bindsRedirectAuthenticator(param0: com.stripe.android.payments.core.authentication.WebIntentAuthenticator): com.stripe.android.payments.core.authentication.PaymentAuthenticator<com.stripe.android.model.StripeIntent>;
							public bindsOxxoAuthenticator(param0: com.stripe.android.payments.core.authentication.OxxoAuthenticator): com.stripe.android.payments.core.authentication.PaymentAuthenticator<com.stripe.android.model.StripeIntent>;
							public binds3DS1Authenticator(param0: com.stripe.android.payments.core.authentication.WebIntentAuthenticator): com.stripe.android.payments.core.authentication.PaymentAuthenticator<com.stripe.android.model.StripeIntent>;
							public bindsAlipayRedirectAuthenticator(param0: com.stripe.android.payments.core.authentication.WebIntentAuthenticator): com.stripe.android.payments.core.authentication.PaymentAuthenticator<com.stripe.android.model.StripeIntent>;
						}
						export module AuthenticationModule {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.payments.core.injection.AuthenticationModule.Companion>;
								public providePaymentRelayStarterFactory(param0: dagger.Lazy<com.stripe.android.payments.core.authentication.DefaultPaymentAuthenticatorRegistry>): kotlin.jvm.functions.Function1<com.stripe.android.view.AuthActivityStarterHost, com.stripe.android.PaymentRelayStarter>;
								public providePaymentBrowserAuthStarterFactory(param0: dagger.Lazy<com.stripe.android.payments.core.authentication.DefaultPaymentAuthenticatorRegistry>, param1: com.stripe.android.payments.DefaultReturnUrl): kotlin.jvm.functions.Function1<com.stripe.android.view.AuthActivityStarterHost, com.stripe.android.PaymentBrowserAuthStarter>;
								public provideDefaultReturnUrl(param0: globalAndroid.content.Context): com.stripe.android.payments.DefaultReturnUrl;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module injection {
						export class AuthenticationModule_Companion_ProvideDefaultReturnUrlFactory extends dagger.internal.Factory<com.stripe.android.payments.DefaultReturnUrl> {
							public static class: java.lang.Class<com.stripe.android.payments.core.injection.AuthenticationModule_Companion_ProvideDefaultReturnUrlFactory>;
							public static provideDefaultReturnUrl(param0: globalAndroid.content.Context): com.stripe.android.payments.DefaultReturnUrl;
							public constructor(param0: javax.inject.Provider<globalAndroid.content.Context>);
							public get(): com.stripe.android.payments.DefaultReturnUrl;
							public static create(param0: javax.inject.Provider<globalAndroid.content.Context>): com.stripe.android.payments.core.injection.AuthenticationModule_Companion_ProvideDefaultReturnUrlFactory;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module injection {
						export class AuthenticationModule_Companion_ProvidePaymentBrowserAuthStarterFactoryFactory extends dagger.internal.Factory<kotlin.jvm.functions.Function1<com.stripe.android.view.AuthActivityStarterHost, com.stripe.android.PaymentBrowserAuthStarter>> {
							public static class: java.lang.Class<com.stripe.android.payments.core.injection.AuthenticationModule_Companion_ProvidePaymentBrowserAuthStarterFactoryFactory>;
							public static providePaymentBrowserAuthStarterFactory(param0: dagger.Lazy<com.stripe.android.payments.core.authentication.DefaultPaymentAuthenticatorRegistry>, param1: com.stripe.android.payments.DefaultReturnUrl): kotlin.jvm.functions.Function1<com.stripe.android.view.AuthActivityStarterHost, com.stripe.android.PaymentBrowserAuthStarter>;
							public static create(param0: javax.inject.Provider<com.stripe.android.payments.core.authentication.DefaultPaymentAuthenticatorRegistry>, param1: javax.inject.Provider<com.stripe.android.payments.DefaultReturnUrl>): com.stripe.android.payments.core.injection.AuthenticationModule_Companion_ProvidePaymentBrowserAuthStarterFactoryFactory;
							public get(): kotlin.jvm.functions.Function1<com.stripe.android.view.AuthActivityStarterHost, com.stripe.android.PaymentBrowserAuthStarter>;
							public constructor(param0: javax.inject.Provider<com.stripe.android.payments.core.authentication.DefaultPaymentAuthenticatorRegistry>, param1: javax.inject.Provider<com.stripe.android.payments.DefaultReturnUrl>);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module injection {
						export class AuthenticationModule_Companion_ProvidePaymentRelayStarterFactoryFactory extends dagger.internal.Factory<kotlin.jvm.functions.Function1<com.stripe.android.view.AuthActivityStarterHost, com.stripe.android.PaymentRelayStarter>> {
							public static class: java.lang.Class<com.stripe.android.payments.core.injection.AuthenticationModule_Companion_ProvidePaymentRelayStarterFactoryFactory>;
							public static providePaymentRelayStarterFactory(param0: dagger.Lazy<com.stripe.android.payments.core.authentication.DefaultPaymentAuthenticatorRegistry>): kotlin.jvm.functions.Function1<com.stripe.android.view.AuthActivityStarterHost, com.stripe.android.PaymentRelayStarter>;
							public constructor(param0: javax.inject.Provider<com.stripe.android.payments.core.authentication.DefaultPaymentAuthenticatorRegistry>);
							public static create(param0: javax.inject.Provider<com.stripe.android.payments.core.authentication.DefaultPaymentAuthenticatorRegistry>): com.stripe.android.payments.core.injection.AuthenticationModule_Companion_ProvidePaymentRelayStarterFactoryFactory;
							public get(): kotlin.jvm.functions.Function1<com.stripe.android.view.AuthActivityStarterHost, com.stripe.android.PaymentRelayStarter>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module injection {
						export class DaggerAuthenticationComponent extends com.stripe.android.payments.core.injection.AuthenticationComponent {
							public static class: java.lang.Class<com.stripe.android.payments.core.injection.DaggerAuthenticationComponent>;
							public static builder(): com.stripe.android.payments.core.injection.AuthenticationComponent.Builder;
							public getRegistry(): com.stripe.android.payments.core.authentication.DefaultPaymentAuthenticatorRegistry;
							public inject(param0: com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionViewModelFactory): void;
						}
						export module DaggerAuthenticationComponent {
							export class Builder extends com.stripe.android.payments.core.injection.AuthenticationComponent.Builder {
								public static class: java.lang.Class<com.stripe.android.payments.core.injection.DaggerAuthenticationComponent.Builder>;
								public threeDs1IntentReturnUrlMap(param0: java.util.Map<string, string>): com.stripe.android.payments.core.injection.AuthenticationComponent.Builder;
								public uiContext(param0: kotlin.coroutines.CoroutineContext): com.stripe.android.payments.core.injection.AuthenticationComponent.Builder;
								public threeDs1IntentReturnUrlMap(param0: java.util.Map<string, string>): com.stripe.android.payments.core.injection.DaggerAuthenticationComponent.Builder;
								public analyticsRequestExecutor(param0: com.stripe.android.core.networking.AnalyticsRequestExecutor): com.stripe.android.payments.core.injection.AuthenticationComponent.Builder;
								public enableLogging(param0: boolean): com.stripe.android.payments.core.injection.AuthenticationComponent.Builder;
								public stripeRepository(param0: com.stripe.android.networking.StripeRepository): com.stripe.android.payments.core.injection.DaggerAuthenticationComponent.Builder;
								public injectorKey(param0: string): com.stripe.android.payments.core.injection.AuthenticationComponent.Builder;
								public productUsage(param0: java.util.Set<string>): com.stripe.android.payments.core.injection.DaggerAuthenticationComponent.Builder;
								public publishableKeyProvider(param0: kotlin.jvm.functions.Function0<string>): com.stripe.android.payments.core.injection.AuthenticationComponent.Builder;
								public enableLogging(param0: boolean): com.stripe.android.payments.core.injection.DaggerAuthenticationComponent.Builder;
								public productUsage(param0: java.util.Set<string>): com.stripe.android.payments.core.injection.AuthenticationComponent.Builder;
								public isInstantApp(param0: boolean): com.stripe.android.payments.core.injection.AuthenticationComponent.Builder;
								public injectorKey(param0: string): com.stripe.android.payments.core.injection.DaggerAuthenticationComponent.Builder;
								public build(): com.stripe.android.payments.core.injection.AuthenticationComponent;
								public context(param0: globalAndroid.content.Context): com.stripe.android.payments.core.injection.AuthenticationComponent.Builder;
								public workContext(param0: kotlin.coroutines.CoroutineContext): com.stripe.android.payments.core.injection.DaggerAuthenticationComponent.Builder;
								public publishableKeyProvider(param0: kotlin.jvm.functions.Function0<string>): com.stripe.android.payments.core.injection.DaggerAuthenticationComponent.Builder;
								public analyticsRequestFactory(param0: com.stripe.android.networking.PaymentAnalyticsRequestFactory): com.stripe.android.payments.core.injection.DaggerAuthenticationComponent.Builder;
								public uiContext(param0: kotlin.coroutines.CoroutineContext): com.stripe.android.payments.core.injection.DaggerAuthenticationComponent.Builder;
								public stripeRepository(param0: com.stripe.android.networking.StripeRepository): com.stripe.android.payments.core.injection.AuthenticationComponent.Builder;
								public isInstantApp(param0: boolean): com.stripe.android.payments.core.injection.DaggerAuthenticationComponent.Builder;
								public analyticsRequestExecutor(param0: com.stripe.android.core.networking.AnalyticsRequestExecutor): com.stripe.android.payments.core.injection.DaggerAuthenticationComponent.Builder;
								public analyticsRequestFactory(param0: com.stripe.android.networking.PaymentAnalyticsRequestFactory): com.stripe.android.payments.core.injection.AuthenticationComponent.Builder;
								public workContext(param0: kotlin.coroutines.CoroutineContext): com.stripe.android.payments.core.injection.AuthenticationComponent.Builder;
								public context(param0: globalAndroid.content.Context): com.stripe.android.payments.core.injection.DaggerAuthenticationComponent.Builder;
							}
							export class Stripe3ds2TransactionViewModelSubcomponentBuilder extends com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelSubcomponent.Builder {
								public static class: java.lang.Class<com.stripe.android.payments.core.injection.DaggerAuthenticationComponent.Stripe3ds2TransactionViewModelSubcomponentBuilder>;
								public build(): com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelSubcomponent;
								public savedStateHandle(param0: androidx.lifecycle.SavedStateHandle): com.stripe.android.payments.core.injection.DaggerAuthenticationComponent.Stripe3ds2TransactionViewModelSubcomponentBuilder;
								public args(param0: com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionContract.Args): com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelSubcomponent.Builder;
								public savedStateHandle(param0: androidx.lifecycle.SavedStateHandle): com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelSubcomponent.Builder;
								public application(param0: globalAndroid.app.Application): com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelSubcomponent.Builder;
								public application(param0: globalAndroid.app.Application): com.stripe.android.payments.core.injection.DaggerAuthenticationComponent.Stripe3ds2TransactionViewModelSubcomponentBuilder;
								public args(param0: com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionContract.Args): com.stripe.android.payments.core.injection.DaggerAuthenticationComponent.Stripe3ds2TransactionViewModelSubcomponentBuilder;
							}
							export class Stripe3ds2TransactionViewModelSubcomponentImpl extends com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelSubcomponent {
								public static class: java.lang.Class<com.stripe.android.payments.core.injection.DaggerAuthenticationComponent.Stripe3ds2TransactionViewModelSubcomponentImpl>;
								public getViewModel(): com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionViewModel;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module injection {
						export class DaggerPaymentLauncherComponent extends com.stripe.android.payments.core.injection.PaymentLauncherComponent {
							public static class: java.lang.Class<com.stripe.android.payments.core.injection.DaggerPaymentLauncherComponent>;
							public inject(param0: com.stripe.android.payments.paymentlauncher.PaymentLauncherViewModel.Factory): void;
							public static builder(): com.stripe.android.payments.core.injection.PaymentLauncherComponent.Builder;
						}
						export module DaggerPaymentLauncherComponent {
							export class Builder extends com.stripe.android.payments.core.injection.PaymentLauncherComponent.Builder {
								public static class: java.lang.Class<com.stripe.android.payments.core.injection.DaggerPaymentLauncherComponent.Builder>;
								public publishableKeyProvider(param0: kotlin.jvm.functions.Function0<string>): com.stripe.android.payments.core.injection.PaymentLauncherComponent.Builder;
								public ioContext(param0: kotlin.coroutines.CoroutineContext): com.stripe.android.payments.core.injection.PaymentLauncherComponent.Builder;
								public stripeRepository(param0: com.stripe.android.networking.StripeRepository): com.stripe.android.payments.core.injection.DaggerPaymentLauncherComponent.Builder;
								public stripeAccountIdProvider(param0: kotlin.jvm.functions.Function0<string>): com.stripe.android.payments.core.injection.PaymentLauncherComponent.Builder;
								public publishableKeyProvider(param0: kotlin.jvm.functions.Function0<string>): com.stripe.android.payments.core.injection.DaggerPaymentLauncherComponent.Builder;
								public stripeAccountIdProvider(param0: kotlin.jvm.functions.Function0<string>): com.stripe.android.payments.core.injection.DaggerPaymentLauncherComponent.Builder;
								public context(param0: globalAndroid.content.Context): com.stripe.android.payments.core.injection.PaymentLauncherComponent.Builder;
								public analyticsRequestFactory(param0: com.stripe.android.networking.PaymentAnalyticsRequestFactory): com.stripe.android.payments.core.injection.PaymentLauncherComponent.Builder;
								public build(): com.stripe.android.payments.core.injection.PaymentLauncherComponent;
								public enableLogging(param0: boolean): com.stripe.android.payments.core.injection.PaymentLauncherComponent.Builder;
								public context(param0: globalAndroid.content.Context): com.stripe.android.payments.core.injection.DaggerPaymentLauncherComponent.Builder;
								public enableLogging(param0: boolean): com.stripe.android.payments.core.injection.DaggerPaymentLauncherComponent.Builder;
								public uiContext(param0: kotlin.coroutines.CoroutineContext): com.stripe.android.payments.core.injection.PaymentLauncherComponent.Builder;
								public stripeRepository(param0: com.stripe.android.networking.StripeRepository): com.stripe.android.payments.core.injection.PaymentLauncherComponent.Builder;
								public productUsage(param0: java.util.Set<string>): com.stripe.android.payments.core.injection.PaymentLauncherComponent.Builder;
								public analyticsRequestFactory(param0: com.stripe.android.networking.PaymentAnalyticsRequestFactory): com.stripe.android.payments.core.injection.DaggerPaymentLauncherComponent.Builder;
								public productUsage(param0: java.util.Set<string>): com.stripe.android.payments.core.injection.DaggerPaymentLauncherComponent.Builder;
								public ioContext(param0: kotlin.coroutines.CoroutineContext): com.stripe.android.payments.core.injection.DaggerPaymentLauncherComponent.Builder;
								public uiContext(param0: kotlin.coroutines.CoroutineContext): com.stripe.android.payments.core.injection.DaggerPaymentLauncherComponent.Builder;
							}
							export class PaymentLauncherViewModelSubcomponentBuilder extends com.stripe.android.payments.core.injection.PaymentLauncherViewModelSubcomponent.Builder {
								public static class: java.lang.Class<com.stripe.android.payments.core.injection.DaggerPaymentLauncherComponent.PaymentLauncherViewModelSubcomponentBuilder>;
								public authActivityStarterHost(param0: com.stripe.android.view.AuthActivityStarterHost): com.stripe.android.payments.core.injection.PaymentLauncherViewModelSubcomponent.Builder;
								public isPaymentIntent(param0: boolean): com.stripe.android.payments.core.injection.DaggerPaymentLauncherComponent.PaymentLauncherViewModelSubcomponentBuilder;
								public build(): com.stripe.android.payments.core.injection.PaymentLauncherViewModelSubcomponent;
								public isPaymentIntent(param0: boolean): com.stripe.android.payments.core.injection.PaymentLauncherViewModelSubcomponent.Builder;
								public activityResultCaller(param0: androidx.activity.result.ActivityResultCaller): com.stripe.android.payments.core.injection.PaymentLauncherViewModelSubcomponent.Builder;
								public authActivityStarterHost(param0: com.stripe.android.view.AuthActivityStarterHost): com.stripe.android.payments.core.injection.DaggerPaymentLauncherComponent.PaymentLauncherViewModelSubcomponentBuilder;
								public activityResultCaller(param0: androidx.activity.result.ActivityResultCaller): com.stripe.android.payments.core.injection.DaggerPaymentLauncherComponent.PaymentLauncherViewModelSubcomponentBuilder;
								public savedStateHandle(param0: androidx.lifecycle.SavedStateHandle): com.stripe.android.payments.core.injection.DaggerPaymentLauncherComponent.PaymentLauncherViewModelSubcomponentBuilder;
								public savedStateHandle(param0: androidx.lifecycle.SavedStateHandle): com.stripe.android.payments.core.injection.PaymentLauncherViewModelSubcomponent.Builder;
							}
							export class PaymentLauncherViewModelSubcomponentImpl extends com.stripe.android.payments.core.injection.PaymentLauncherViewModelSubcomponent {
								public static class: java.lang.Class<com.stripe.android.payments.core.injection.DaggerPaymentLauncherComponent.PaymentLauncherViewModelSubcomponentImpl>;
								public getViewModel(): com.stripe.android.payments.paymentlauncher.PaymentLauncherViewModel;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module injection {
						export class DaggerPaymentLauncherViewModelFactoryComponent extends com.stripe.android.payments.core.injection.PaymentLauncherViewModelFactoryComponent {
							public static class: java.lang.Class<com.stripe.android.payments.core.injection.DaggerPaymentLauncherViewModelFactoryComponent>;
							public static builder(): com.stripe.android.payments.core.injection.PaymentLauncherViewModelFactoryComponent.Builder;
							public inject(param0: com.stripe.android.payments.paymentlauncher.PaymentLauncherViewModel.Factory): void;
						}
						export module DaggerPaymentLauncherViewModelFactoryComponent {
							export class Builder extends com.stripe.android.payments.core.injection.PaymentLauncherViewModelFactoryComponent.Builder {
								public static class: java.lang.Class<com.stripe.android.payments.core.injection.DaggerPaymentLauncherViewModelFactoryComponent.Builder>;
								public stripeAccountIdProvider(param0: kotlin.jvm.functions.Function0<string>): com.stripe.android.payments.core.injection.DaggerPaymentLauncherViewModelFactoryComponent.Builder;
								public context(param0: globalAndroid.content.Context): com.stripe.android.payments.core.injection.PaymentLauncherViewModelFactoryComponent.Builder;
								public context(param0: globalAndroid.content.Context): com.stripe.android.payments.core.injection.DaggerPaymentLauncherViewModelFactoryComponent.Builder;
								public enableLogging(param0: boolean): com.stripe.android.payments.core.injection.DaggerPaymentLauncherViewModelFactoryComponent.Builder;
								public stripeAccountIdProvider(param0: kotlin.jvm.functions.Function0<string>): com.stripe.android.payments.core.injection.PaymentLauncherViewModelFactoryComponent.Builder;
								public publishableKeyProvider(param0: kotlin.jvm.functions.Function0<string>): com.stripe.android.payments.core.injection.DaggerPaymentLauncherViewModelFactoryComponent.Builder;
								public publishableKeyProvider(param0: kotlin.jvm.functions.Function0<string>): com.stripe.android.payments.core.injection.PaymentLauncherViewModelFactoryComponent.Builder;
								public productUsage(param0: java.util.Set<string>): com.stripe.android.payments.core.injection.PaymentLauncherViewModelFactoryComponent.Builder;
								public productUsage(param0: java.util.Set<string>): com.stripe.android.payments.core.injection.DaggerPaymentLauncherViewModelFactoryComponent.Builder;
								public enableLogging(param0: boolean): com.stripe.android.payments.core.injection.PaymentLauncherViewModelFactoryComponent.Builder;
								public build(): com.stripe.android.payments.core.injection.PaymentLauncherViewModelFactoryComponent;
							}
							export class PaymentLauncherViewModelSubcomponentBuilder extends com.stripe.android.payments.core.injection.PaymentLauncherViewModelSubcomponent.Builder {
								public static class: java.lang.Class<com.stripe.android.payments.core.injection.DaggerPaymentLauncherViewModelFactoryComponent.PaymentLauncherViewModelSubcomponentBuilder>;
								public authActivityStarterHost(param0: com.stripe.android.view.AuthActivityStarterHost): com.stripe.android.payments.core.injection.PaymentLauncherViewModelSubcomponent.Builder;
								public savedStateHandle(param0: androidx.lifecycle.SavedStateHandle): com.stripe.android.payments.core.injection.DaggerPaymentLauncherViewModelFactoryComponent.PaymentLauncherViewModelSubcomponentBuilder;
								public build(): com.stripe.android.payments.core.injection.PaymentLauncherViewModelSubcomponent;
								public isPaymentIntent(param0: boolean): com.stripe.android.payments.core.injection.PaymentLauncherViewModelSubcomponent.Builder;
								public activityResultCaller(param0: androidx.activity.result.ActivityResultCaller): com.stripe.android.payments.core.injection.PaymentLauncherViewModelSubcomponent.Builder;
								public isPaymentIntent(param0: boolean): com.stripe.android.payments.core.injection.DaggerPaymentLauncherViewModelFactoryComponent.PaymentLauncherViewModelSubcomponentBuilder;
								public authActivityStarterHost(param0: com.stripe.android.view.AuthActivityStarterHost): com.stripe.android.payments.core.injection.DaggerPaymentLauncherViewModelFactoryComponent.PaymentLauncherViewModelSubcomponentBuilder;
								public activityResultCaller(param0: androidx.activity.result.ActivityResultCaller): com.stripe.android.payments.core.injection.DaggerPaymentLauncherViewModelFactoryComponent.PaymentLauncherViewModelSubcomponentBuilder;
								public savedStateHandle(param0: androidx.lifecycle.SavedStateHandle): com.stripe.android.payments.core.injection.PaymentLauncherViewModelSubcomponent.Builder;
							}
							export class PaymentLauncherViewModelSubcomponentImpl extends com.stripe.android.payments.core.injection.PaymentLauncherViewModelSubcomponent {
								public static class: java.lang.Class<com.stripe.android.payments.core.injection.DaggerPaymentLauncherViewModelFactoryComponent.PaymentLauncherViewModelSubcomponentImpl>;
								public getViewModel(): com.stripe.android.payments.paymentlauncher.PaymentLauncherViewModel;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module injection {
						export class DaggerStripe3ds2TransactionViewModelFactoryComponent extends com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelFactoryComponent {
							public static class: java.lang.Class<com.stripe.android.payments.core.injection.DaggerStripe3ds2TransactionViewModelFactoryComponent>;
							public static builder(): com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelFactoryComponent.Builder;
							public inject(param0: com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionViewModelFactory): void;
						}
						export module DaggerStripe3ds2TransactionViewModelFactoryComponent {
							export class Builder extends com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelFactoryComponent.Builder {
								public static class: java.lang.Class<com.stripe.android.payments.core.injection.DaggerStripe3ds2TransactionViewModelFactoryComponent.Builder>;
								public publishableKeyProvider(param0: kotlin.jvm.functions.Function0<string>): com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelFactoryComponent.Builder;
								public isInstantApp(param0: boolean): com.stripe.android.payments.core.injection.DaggerStripe3ds2TransactionViewModelFactoryComponent.Builder;
								public enableLogging(param0: boolean): com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelFactoryComponent.Builder;
								public productUsage(param0: java.util.Set<string>): com.stripe.android.payments.core.injection.DaggerStripe3ds2TransactionViewModelFactoryComponent.Builder;
								public enableLogging(param0: boolean): com.stripe.android.payments.core.injection.DaggerStripe3ds2TransactionViewModelFactoryComponent.Builder;
								public context(param0: globalAndroid.content.Context): com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelFactoryComponent.Builder;
								public context(param0: globalAndroid.content.Context): com.stripe.android.payments.core.injection.DaggerStripe3ds2TransactionViewModelFactoryComponent.Builder;
								public publishableKeyProvider(param0: kotlin.jvm.functions.Function0<string>): com.stripe.android.payments.core.injection.DaggerStripe3ds2TransactionViewModelFactoryComponent.Builder;
								public productUsage(param0: java.util.Set<string>): com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelFactoryComponent.Builder;
								public isInstantApp(param0: boolean): com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelFactoryComponent.Builder;
								public build(): com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelFactoryComponent;
							}
							export class Stripe3ds2TransactionViewModelSubcomponentBuilder extends com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelSubcomponent.Builder {
								public static class: java.lang.Class<com.stripe.android.payments.core.injection.DaggerStripe3ds2TransactionViewModelFactoryComponent.Stripe3ds2TransactionViewModelSubcomponentBuilder>;
								public build(): com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelSubcomponent;
								public args(param0: com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionContract.Args): com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelSubcomponent.Builder;
								public savedStateHandle(param0: androidx.lifecycle.SavedStateHandle): com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelSubcomponent.Builder;
								public savedStateHandle(param0: androidx.lifecycle.SavedStateHandle): com.stripe.android.payments.core.injection.DaggerStripe3ds2TransactionViewModelFactoryComponent.Stripe3ds2TransactionViewModelSubcomponentBuilder;
								public application(param0: globalAndroid.app.Application): com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelSubcomponent.Builder;
								public application(param0: globalAndroid.app.Application): com.stripe.android.payments.core.injection.DaggerStripe3ds2TransactionViewModelFactoryComponent.Stripe3ds2TransactionViewModelSubcomponentBuilder;
								public args(param0: com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionContract.Args): com.stripe.android.payments.core.injection.DaggerStripe3ds2TransactionViewModelFactoryComponent.Stripe3ds2TransactionViewModelSubcomponentBuilder;
							}
							export class Stripe3ds2TransactionViewModelSubcomponentImpl extends com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelSubcomponent {
								public static class: java.lang.Class<com.stripe.android.payments.core.injection.DaggerStripe3ds2TransactionViewModelFactoryComponent.Stripe3ds2TransactionViewModelSubcomponentImpl>;
								public getViewModel(): com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionViewModel;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module injection {
						export class IntentAuthenticatorKey {
							public static class: java.lang.Class<com.stripe.android.payments.core.injection.IntentAuthenticatorKey>;
							/**
							 * Constructs a new instance of the com.stripe.android.payments.core.injection.IntentAuthenticatorKey interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								value(): java.lang.Class<any>;
							});
							public constructor();
							public value(): java.lang.Class<any>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module injection {
						export class IntentAuthenticatorMap {
							public static class: java.lang.Class<com.stripe.android.payments.core.injection.IntentAuthenticatorMap>;
							/**
							 * Constructs a new instance of the com.stripe.android.payments.core.injection.IntentAuthenticatorMap interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
							});
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module injection {
						export class NamedConstantsKt {
							public static class: java.lang.Class<com.stripe.android.payments.core.injection.NamedConstantsKt>;
							public static PRODUCT_USAGE: string;
							public static PUBLISHABLE_KEY: string;
							public static STRIPE_ACCOUNT_ID: string;
							public static IS_PAYMENT_INTENT: string;
							public static IS_INSTANT_APP: string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module injection {
						export class PaymentLauncherComponent {
							public static class: java.lang.Class<com.stripe.android.payments.core.injection.PaymentLauncherComponent>;
							/**
							 * Constructs a new instance of the com.stripe.android.payments.core.injection.PaymentLauncherComponent interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								inject(param0: com.stripe.android.payments.paymentlauncher.PaymentLauncherViewModel.Factory): void;
							});
							public constructor();
							public inject(param0: com.stripe.android.payments.paymentlauncher.PaymentLauncherViewModel.Factory): void;
						}
						export module PaymentLauncherComponent {
							export class Builder {
								public static class: java.lang.Class<com.stripe.android.payments.core.injection.PaymentLauncherComponent.Builder>;
								/**
								 * Constructs a new instance of the com.stripe.android.payments.core.injection.PaymentLauncherComponent$Builder interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									context(param0: globalAndroid.content.Context): com.stripe.android.payments.core.injection.PaymentLauncherComponent.Builder;
									enableLogging(param0: boolean): com.stripe.android.payments.core.injection.PaymentLauncherComponent.Builder;
									ioContext(param0: kotlin.coroutines.CoroutineContext): com.stripe.android.payments.core.injection.PaymentLauncherComponent.Builder;
									uiContext(param0: kotlin.coroutines.CoroutineContext): com.stripe.android.payments.core.injection.PaymentLauncherComponent.Builder;
									stripeRepository(param0: com.stripe.android.networking.StripeRepository): com.stripe.android.payments.core.injection.PaymentLauncherComponent.Builder;
									analyticsRequestFactory(param0: com.stripe.android.networking.PaymentAnalyticsRequestFactory): com.stripe.android.payments.core.injection.PaymentLauncherComponent.Builder;
									publishableKeyProvider(param0: kotlin.jvm.functions.Function0<string>): com.stripe.android.payments.core.injection.PaymentLauncherComponent.Builder;
									stripeAccountIdProvider(param0: kotlin.jvm.functions.Function0<string>): com.stripe.android.payments.core.injection.PaymentLauncherComponent.Builder;
									productUsage(param0: java.util.Set<string>): com.stripe.android.payments.core.injection.PaymentLauncherComponent.Builder;
									build(): com.stripe.android.payments.core.injection.PaymentLauncherComponent;
								});
								public constructor();
								public publishableKeyProvider(param0: kotlin.jvm.functions.Function0<string>): com.stripe.android.payments.core.injection.PaymentLauncherComponent.Builder;
								public analyticsRequestFactory(param0: com.stripe.android.networking.PaymentAnalyticsRequestFactory): com.stripe.android.payments.core.injection.PaymentLauncherComponent.Builder;
								public build(): com.stripe.android.payments.core.injection.PaymentLauncherComponent;
								public ioContext(param0: kotlin.coroutines.CoroutineContext): com.stripe.android.payments.core.injection.PaymentLauncherComponent.Builder;
								public enableLogging(param0: boolean): com.stripe.android.payments.core.injection.PaymentLauncherComponent.Builder;
								public uiContext(param0: kotlin.coroutines.CoroutineContext): com.stripe.android.payments.core.injection.PaymentLauncherComponent.Builder;
								public stripeRepository(param0: com.stripe.android.networking.StripeRepository): com.stripe.android.payments.core.injection.PaymentLauncherComponent.Builder;
								public productUsage(param0: java.util.Set<string>): com.stripe.android.payments.core.injection.PaymentLauncherComponent.Builder;
								public stripeAccountIdProvider(param0: kotlin.jvm.functions.Function0<string>): com.stripe.android.payments.core.injection.PaymentLauncherComponent.Builder;
								public context(param0: globalAndroid.content.Context): com.stripe.android.payments.core.injection.PaymentLauncherComponent.Builder;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module injection {
						export class PaymentLauncherModule {
							public static class: java.lang.Class<com.stripe.android.payments.core.injection.PaymentLauncherModule>;
							public constructor();
							public provideThreeDs1IntentReturnUrlMap(): java.util.Map<string, string>;
							public provideDefaultReturnUrl(param0: globalAndroid.content.Context): com.stripe.android.payments.DefaultReturnUrl;
							public providePaymentAuthenticatorRegistry(param0: globalAndroid.content.Context, param1: com.stripe.android.networking.StripeRepository, param2: boolean, param3: kotlin.coroutines.CoroutineContext, param4: kotlin.coroutines.CoroutineContext, param5: java.util.Map<string, string>, param6: com.stripe.android.core.networking.DefaultAnalyticsRequestExecutor, param7: com.stripe.android.networking.PaymentAnalyticsRequestFactory, param8: kotlin.jvm.functions.Function0<string>, param9: java.util.Set<string>, param10: boolean): com.stripe.android.payments.core.authentication.PaymentAuthenticatorRegistry;
							public provideIsInstantApp(param0: globalAndroid.content.Context): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module injection {
						export class PaymentLauncherModule_ProvideDefaultReturnUrlFactory extends dagger.internal.Factory<com.stripe.android.payments.DefaultReturnUrl> {
							public static class: java.lang.Class<com.stripe.android.payments.core.injection.PaymentLauncherModule_ProvideDefaultReturnUrlFactory>;
							public get(): com.stripe.android.payments.DefaultReturnUrl;
							public constructor(param0: com.stripe.android.payments.core.injection.PaymentLauncherModule, param1: javax.inject.Provider<globalAndroid.content.Context>);
							public static create(param0: com.stripe.android.payments.core.injection.PaymentLauncherModule, param1: javax.inject.Provider<globalAndroid.content.Context>): com.stripe.android.payments.core.injection.PaymentLauncherModule_ProvideDefaultReturnUrlFactory;
							public static provideDefaultReturnUrl(param0: com.stripe.android.payments.core.injection.PaymentLauncherModule, param1: globalAndroid.content.Context): com.stripe.android.payments.DefaultReturnUrl;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module injection {
						export class PaymentLauncherModule_ProvideIsInstantAppFactory extends dagger.internal.Factory<java.lang.Boolean> {
							public static class: java.lang.Class<com.stripe.android.payments.core.injection.PaymentLauncherModule_ProvideIsInstantAppFactory>;
							public static provideIsInstantApp(param0: com.stripe.android.payments.core.injection.PaymentLauncherModule, param1: globalAndroid.content.Context): boolean;
							public get(): java.lang.Boolean;
							public static create(param0: com.stripe.android.payments.core.injection.PaymentLauncherModule, param1: javax.inject.Provider<globalAndroid.content.Context>): com.stripe.android.payments.core.injection.PaymentLauncherModule_ProvideIsInstantAppFactory;
							public constructor(param0: com.stripe.android.payments.core.injection.PaymentLauncherModule, param1: javax.inject.Provider<globalAndroid.content.Context>);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module injection {
						export class PaymentLauncherModule_ProvidePaymentAuthenticatorRegistryFactory extends dagger.internal.Factory<com.stripe.android.payments.core.authentication.PaymentAuthenticatorRegistry> {
							public static class: java.lang.Class<com.stripe.android.payments.core.injection.PaymentLauncherModule_ProvidePaymentAuthenticatorRegistryFactory>;
							public get(): com.stripe.android.payments.core.authentication.PaymentAuthenticatorRegistry;
							public static create(param0: com.stripe.android.payments.core.injection.PaymentLauncherModule, param1: javax.inject.Provider<globalAndroid.content.Context>, param2: javax.inject.Provider<com.stripe.android.networking.StripeRepository>, param3: javax.inject.Provider<java.lang.Boolean>, param4: javax.inject.Provider<kotlin.coroutines.CoroutineContext>, param5: javax.inject.Provider<kotlin.coroutines.CoroutineContext>, param6: javax.inject.Provider<java.util.Map<string, string>>, param7: javax.inject.Provider<com.stripe.android.core.networking.DefaultAnalyticsRequestExecutor>, param8: javax.inject.Provider<com.stripe.android.networking.PaymentAnalyticsRequestFactory>, param9: javax.inject.Provider<kotlin.jvm.functions.Function0<string>>, param10: javax.inject.Provider<java.util.Set<string>>, param11: javax.inject.Provider<java.lang.Boolean>): com.stripe.android.payments.core.injection.PaymentLauncherModule_ProvidePaymentAuthenticatorRegistryFactory;
							public static providePaymentAuthenticatorRegistry(param0: com.stripe.android.payments.core.injection.PaymentLauncherModule, param1: globalAndroid.content.Context, param2: com.stripe.android.networking.StripeRepository, param3: boolean, param4: kotlin.coroutines.CoroutineContext, param5: kotlin.coroutines.CoroutineContext, param6: java.util.Map<string, string>, param7: com.stripe.android.core.networking.DefaultAnalyticsRequestExecutor, param8: com.stripe.android.networking.PaymentAnalyticsRequestFactory, param9: kotlin.jvm.functions.Function0<string>, param10: java.util.Set<string>, param11: boolean): com.stripe.android.payments.core.authentication.PaymentAuthenticatorRegistry;
							public constructor(param0: com.stripe.android.payments.core.injection.PaymentLauncherModule, param1: javax.inject.Provider<globalAndroid.content.Context>, param2: javax.inject.Provider<com.stripe.android.networking.StripeRepository>, param3: javax.inject.Provider<java.lang.Boolean>, param4: javax.inject.Provider<kotlin.coroutines.CoroutineContext>, param5: javax.inject.Provider<kotlin.coroutines.CoroutineContext>, param6: javax.inject.Provider<java.util.Map<string, string>>, param7: javax.inject.Provider<com.stripe.android.core.networking.DefaultAnalyticsRequestExecutor>, param8: javax.inject.Provider<com.stripe.android.networking.PaymentAnalyticsRequestFactory>, param9: javax.inject.Provider<kotlin.jvm.functions.Function0<string>>, param10: javax.inject.Provider<java.util.Set<string>>, param11: javax.inject.Provider<java.lang.Boolean>);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module injection {
						export class PaymentLauncherModule_ProvideThreeDs1IntentReturnUrlMapFactory extends dagger.internal.Factory<java.util.Map<string, string>> {
							public static class: java.lang.Class<com.stripe.android.payments.core.injection.PaymentLauncherModule_ProvideThreeDs1IntentReturnUrlMapFactory>;
							public static provideThreeDs1IntentReturnUrlMap(param0: com.stripe.android.payments.core.injection.PaymentLauncherModule): java.util.Map<string, string>;
							public static create(param0: com.stripe.android.payments.core.injection.PaymentLauncherModule): com.stripe.android.payments.core.injection.PaymentLauncherModule_ProvideThreeDs1IntentReturnUrlMapFactory;
							public constructor(param0: com.stripe.android.payments.core.injection.PaymentLauncherModule);
							public get(): java.util.Map<string, string>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module injection {
						export class PaymentLauncherViewModelFactoryComponent {
							public static class: java.lang.Class<com.stripe.android.payments.core.injection.PaymentLauncherViewModelFactoryComponent>;
							/**
							 * Constructs a new instance of the com.stripe.android.payments.core.injection.PaymentLauncherViewModelFactoryComponent interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								inject(param0: com.stripe.android.payments.paymentlauncher.PaymentLauncherViewModel.Factory): void;
							});
							public constructor();
							public inject(param0: com.stripe.android.payments.paymentlauncher.PaymentLauncherViewModel.Factory): void;
						}
						export module PaymentLauncherViewModelFactoryComponent {
							export class Builder {
								public static class: java.lang.Class<com.stripe.android.payments.core.injection.PaymentLauncherViewModelFactoryComponent.Builder>;
								/**
								 * Constructs a new instance of the com.stripe.android.payments.core.injection.PaymentLauncherViewModelFactoryComponent$Builder interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									context(param0: globalAndroid.content.Context): com.stripe.android.payments.core.injection.PaymentLauncherViewModelFactoryComponent.Builder;
									enableLogging(param0: boolean): com.stripe.android.payments.core.injection.PaymentLauncherViewModelFactoryComponent.Builder;
									publishableKeyProvider(param0: kotlin.jvm.functions.Function0<string>): com.stripe.android.payments.core.injection.PaymentLauncherViewModelFactoryComponent.Builder;
									stripeAccountIdProvider(param0: kotlin.jvm.functions.Function0<string>): com.stripe.android.payments.core.injection.PaymentLauncherViewModelFactoryComponent.Builder;
									productUsage(param0: java.util.Set<string>): com.stripe.android.payments.core.injection.PaymentLauncherViewModelFactoryComponent.Builder;
									build(): com.stripe.android.payments.core.injection.PaymentLauncherViewModelFactoryComponent;
								});
								public constructor();
								public context(param0: globalAndroid.content.Context): com.stripe.android.payments.core.injection.PaymentLauncherViewModelFactoryComponent.Builder;
								public stripeAccountIdProvider(param0: kotlin.jvm.functions.Function0<string>): com.stripe.android.payments.core.injection.PaymentLauncherViewModelFactoryComponent.Builder;
								public publishableKeyProvider(param0: kotlin.jvm.functions.Function0<string>): com.stripe.android.payments.core.injection.PaymentLauncherViewModelFactoryComponent.Builder;
								public productUsage(param0: java.util.Set<string>): com.stripe.android.payments.core.injection.PaymentLauncherViewModelFactoryComponent.Builder;
								public enableLogging(param0: boolean): com.stripe.android.payments.core.injection.PaymentLauncherViewModelFactoryComponent.Builder;
								public build(): com.stripe.android.payments.core.injection.PaymentLauncherViewModelFactoryComponent;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module injection {
						export class PaymentLauncherViewModelSubcomponent {
							public static class: java.lang.Class<com.stripe.android.payments.core.injection.PaymentLauncherViewModelSubcomponent>;
							/**
							 * Constructs a new instance of the com.stripe.android.payments.core.injection.PaymentLauncherViewModelSubcomponent interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getViewModel(): com.stripe.android.payments.paymentlauncher.PaymentLauncherViewModel;
							});
							public constructor();
							public getViewModel(): com.stripe.android.payments.paymentlauncher.PaymentLauncherViewModel;
						}
						export module PaymentLauncherViewModelSubcomponent {
							export class Builder {
								public static class: java.lang.Class<com.stripe.android.payments.core.injection.PaymentLauncherViewModelSubcomponent.Builder>;
								/**
								 * Constructs a new instance of the com.stripe.android.payments.core.injection.PaymentLauncherViewModelSubcomponent$Builder interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									isPaymentIntent(param0: boolean): com.stripe.android.payments.core.injection.PaymentLauncherViewModelSubcomponent.Builder;
									savedStateHandle(param0: androidx.lifecycle.SavedStateHandle): com.stripe.android.payments.core.injection.PaymentLauncherViewModelSubcomponent.Builder;
									authActivityStarterHost(param0: com.stripe.android.view.AuthActivityStarterHost): com.stripe.android.payments.core.injection.PaymentLauncherViewModelSubcomponent.Builder;
									activityResultCaller(param0: androidx.activity.result.ActivityResultCaller): com.stripe.android.payments.core.injection.PaymentLauncherViewModelSubcomponent.Builder;
									build(): com.stripe.android.payments.core.injection.PaymentLauncherViewModelSubcomponent;
								});
								public constructor();
								public authActivityStarterHost(param0: com.stripe.android.view.AuthActivityStarterHost): com.stripe.android.payments.core.injection.PaymentLauncherViewModelSubcomponent.Builder;
								public isPaymentIntent(param0: boolean): com.stripe.android.payments.core.injection.PaymentLauncherViewModelSubcomponent.Builder;
								public activityResultCaller(param0: androidx.activity.result.ActivityResultCaller): com.stripe.android.payments.core.injection.PaymentLauncherViewModelSubcomponent.Builder;
								public build(): com.stripe.android.payments.core.injection.PaymentLauncherViewModelSubcomponent;
								public savedStateHandle(param0: androidx.lifecycle.SavedStateHandle): com.stripe.android.payments.core.injection.PaymentLauncherViewModelSubcomponent.Builder;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module injection {
						export abstract class Stripe3DSAuthenticatorModule {
							public static class: java.lang.Class<com.stripe.android.payments.core.injection.Stripe3DSAuthenticatorModule>;
							public static Companion: com.stripe.android.payments.core.injection.Stripe3DSAuthenticatorModule.Companion;
							public constructor();
							public bindsStripe3DSAuthenticator(param0: com.stripe.android.payments.core.authentication.threeds2.Stripe3DS2Authenticator): com.stripe.android.payments.core.authentication.PaymentAuthenticator<com.stripe.android.model.StripeIntent>;
						}
						export module Stripe3DSAuthenticatorModule {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.payments.core.injection.Stripe3DSAuthenticatorModule.Companion>;
								public providePaymentAuthConfig(): com.stripe.android.PaymentAuthConfig;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module injection {
						export class Stripe3DSAuthenticatorModule_Companion_ProvidePaymentAuthConfigFactory extends dagger.internal.Factory<com.stripe.android.PaymentAuthConfig> {
							public static class: java.lang.Class<com.stripe.android.payments.core.injection.Stripe3DSAuthenticatorModule_Companion_ProvidePaymentAuthConfigFactory>;
							public constructor();
							public static create(): com.stripe.android.payments.core.injection.Stripe3DSAuthenticatorModule_Companion_ProvidePaymentAuthConfigFactory;
							public static providePaymentAuthConfig(): com.stripe.android.PaymentAuthConfig;
							public get(): com.stripe.android.PaymentAuthConfig;
						}
						export module Stripe3DSAuthenticatorModule_Companion_ProvidePaymentAuthConfigFactory {
							export class InstanceHolder {
								public static class: java.lang.Class<com.stripe.android.payments.core.injection.Stripe3DSAuthenticatorModule_Companion_ProvidePaymentAuthConfigFactory.InstanceHolder>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module injection {
						export abstract class Stripe3ds2TransactionModule {
							public static class: java.lang.Class<com.stripe.android.payments.core.injection.Stripe3ds2TransactionModule>;
							public static Companion: com.stripe.android.payments.core.injection.Stripe3ds2TransactionModule.Companion;
							public constructor();
							public bindsStripe3ds2ChallengeResultProcessor(param0: com.stripe.android.payments.core.authentication.threeds2.DefaultStripe3ds2ChallengeResultProcessor): com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2ChallengeResultProcessor;
						}
						export module Stripe3ds2TransactionModule {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.payments.core.injection.Stripe3ds2TransactionModule.Companion>;
								public provideStripeThreeDs2Service(param0: globalAndroid.content.Context, param1: boolean, param2: kotlin.coroutines.CoroutineContext): com.stripe.android.stripe3ds2.service.StripeThreeDs2Service;
								public provideMessageVersionRegistry(): com.stripe.android.stripe3ds2.transaction.MessageVersionRegistry;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module injection {
						export class Stripe3ds2TransactionModule_Companion_ProvideMessageVersionRegistryFactory extends dagger.internal.Factory<com.stripe.android.stripe3ds2.transaction.MessageVersionRegistry> {
							public static class: java.lang.Class<com.stripe.android.payments.core.injection.Stripe3ds2TransactionModule_Companion_ProvideMessageVersionRegistryFactory>;
							public constructor();
							public static create(): com.stripe.android.payments.core.injection.Stripe3ds2TransactionModule_Companion_ProvideMessageVersionRegistryFactory;
							public static provideMessageVersionRegistry(): com.stripe.android.stripe3ds2.transaction.MessageVersionRegistry;
							public get(): com.stripe.android.stripe3ds2.transaction.MessageVersionRegistry;
						}
						export module Stripe3ds2TransactionModule_Companion_ProvideMessageVersionRegistryFactory {
							export class InstanceHolder {
								public static class: java.lang.Class<com.stripe.android.payments.core.injection.Stripe3ds2TransactionModule_Companion_ProvideMessageVersionRegistryFactory.InstanceHolder>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module injection {
						export class Stripe3ds2TransactionModule_Companion_ProvideStripeThreeDs2ServiceFactory extends dagger.internal.Factory<com.stripe.android.stripe3ds2.service.StripeThreeDs2Service> {
							public static class: java.lang.Class<com.stripe.android.payments.core.injection.Stripe3ds2TransactionModule_Companion_ProvideStripeThreeDs2ServiceFactory>;
							public get(): com.stripe.android.stripe3ds2.service.StripeThreeDs2Service;
							public static provideStripeThreeDs2Service(param0: globalAndroid.content.Context, param1: boolean, param2: kotlin.coroutines.CoroutineContext): com.stripe.android.stripe3ds2.service.StripeThreeDs2Service;
							public constructor(param0: javax.inject.Provider<globalAndroid.content.Context>, param1: javax.inject.Provider<java.lang.Boolean>, param2: javax.inject.Provider<kotlin.coroutines.CoroutineContext>);
							public static create(param0: javax.inject.Provider<globalAndroid.content.Context>, param1: javax.inject.Provider<java.lang.Boolean>, param2: javax.inject.Provider<kotlin.coroutines.CoroutineContext>): com.stripe.android.payments.core.injection.Stripe3ds2TransactionModule_Companion_ProvideStripeThreeDs2ServiceFactory;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module injection {
						export class Stripe3ds2TransactionViewModelFactoryComponent {
							public static class: java.lang.Class<com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelFactoryComponent>;
							/**
							 * Constructs a new instance of the com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelFactoryComponent interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								inject(param0: com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionViewModelFactory): void;
							});
							public constructor();
							public inject(param0: com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionViewModelFactory): void;
						}
						export module Stripe3ds2TransactionViewModelFactoryComponent {
							export class Builder {
								public static class: java.lang.Class<com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelFactoryComponent.Builder>;
								/**
								 * Constructs a new instance of the com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelFactoryComponent$Builder interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									context(param0: globalAndroid.content.Context): com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelFactoryComponent.Builder;
									enableLogging(param0: boolean): com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelFactoryComponent.Builder;
									publishableKeyProvider(param0: kotlin.jvm.functions.Function0<string>): com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelFactoryComponent.Builder;
									productUsage(param0: java.util.Set<string>): com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelFactoryComponent.Builder;
									isInstantApp(param0: boolean): com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelFactoryComponent.Builder;
									build(): com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelFactoryComponent;
								});
								public constructor();
								public publishableKeyProvider(param0: kotlin.jvm.functions.Function0<string>): com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelFactoryComponent.Builder;
								public enableLogging(param0: boolean): com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelFactoryComponent.Builder;
								public context(param0: globalAndroid.content.Context): com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelFactoryComponent.Builder;
								public productUsage(param0: java.util.Set<string>): com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelFactoryComponent.Builder;
								public isInstantApp(param0: boolean): com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelFactoryComponent.Builder;
								public build(): com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelFactoryComponent;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module injection {
						export class Stripe3ds2TransactionViewModelSubcomponent {
							public static class: java.lang.Class<com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelSubcomponent>;
							/**
							 * Constructs a new instance of the com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelSubcomponent interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getViewModel(): com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionViewModel;
							});
							public constructor();
							public getViewModel(): com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionViewModel;
						}
						export module Stripe3ds2TransactionViewModelSubcomponent {
							export class Builder {
								public static class: java.lang.Class<com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelSubcomponent.Builder>;
								/**
								 * Constructs a new instance of the com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelSubcomponent$Builder interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									args(param0: com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionContract.Args): com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelSubcomponent.Builder;
									savedStateHandle(param0: androidx.lifecycle.SavedStateHandle): com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelSubcomponent.Builder;
									application(param0: globalAndroid.app.Application): com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelSubcomponent.Builder;
									build(): com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelSubcomponent;
								});
								public constructor();
								public build(): com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelSubcomponent;
								public args(param0: com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionContract.Args): com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelSubcomponent.Builder;
								public savedStateHandle(param0: androidx.lifecycle.SavedStateHandle): com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelSubcomponent.Builder;
								public application(param0: globalAndroid.app.Application): com.stripe.android.payments.core.injection.Stripe3ds2TransactionViewModelSubcomponent.Builder;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module injection {
						export class Stripe3dsTransactionViewModelModule {
							public static class: java.lang.Class<com.stripe.android.payments.core.injection.Stripe3dsTransactionViewModelModule>;
							public constructor();
							public providesInitChallengeRepository(param0: globalAndroid.app.Application, param1: com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionContract.Args, param2: kotlin.coroutines.CoroutineContext): com.stripe.android.stripe3ds2.transaction.InitChallengeRepository;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module injection {
						export class Stripe3dsTransactionViewModelModule_ProvidesInitChallengeRepositoryFactory extends dagger.internal.Factory<com.stripe.android.stripe3ds2.transaction.InitChallengeRepository> {
							public static class: java.lang.Class<com.stripe.android.payments.core.injection.Stripe3dsTransactionViewModelModule_ProvidesInitChallengeRepositoryFactory>;
							public static create(param0: com.stripe.android.payments.core.injection.Stripe3dsTransactionViewModelModule, param1: javax.inject.Provider<globalAndroid.app.Application>, param2: javax.inject.Provider<com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionContract.Args>, param3: javax.inject.Provider<kotlin.coroutines.CoroutineContext>): com.stripe.android.payments.core.injection.Stripe3dsTransactionViewModelModule_ProvidesInitChallengeRepositoryFactory;
							public static providesInitChallengeRepository(param0: com.stripe.android.payments.core.injection.Stripe3dsTransactionViewModelModule, param1: globalAndroid.app.Application, param2: com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionContract.Args, param3: kotlin.coroutines.CoroutineContext): com.stripe.android.stripe3ds2.transaction.InitChallengeRepository;
							public constructor(param0: com.stripe.android.payments.core.injection.Stripe3dsTransactionViewModelModule, param1: javax.inject.Provider<globalAndroid.app.Application>, param2: javax.inject.Provider<com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionContract.Args>, param3: javax.inject.Provider<kotlin.coroutines.CoroutineContext>);
							public get(): com.stripe.android.stripe3ds2.transaction.InitChallengeRepository;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module injection {
						export abstract class StripeRepositoryModule {
							public static class: java.lang.Class<com.stripe.android.payments.core.injection.StripeRepositoryModule>;
							public static $stable: number;
							public constructor();
							public bindsAnalyticsRequestExecutor$payments_core_release(param0: com.stripe.android.core.networking.DefaultAnalyticsRequestExecutor): com.stripe.android.core.networking.AnalyticsRequestExecutor;
							public bindsStripeRepository$payments_core_release(param0: com.stripe.android.networking.StripeApiRepository): com.stripe.android.networking.StripeRepository;
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module paymentlauncher {
					export class PaymentLauncher {
						public static class: java.lang.Class<com.stripe.android.payments.paymentlauncher.PaymentLauncher>;
						/**
						 * Constructs a new instance of the com.stripe.android.payments.paymentlauncher.PaymentLauncher interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							confirm(param0: com.stripe.android.model.ConfirmPaymentIntentParams): void;
							confirm(param0: com.stripe.android.model.ConfirmSetupIntentParams): void;
							handleNextActionForPaymentIntent(param0: string): void;
							handleNextActionForSetupIntent(param0: string): void;
							<clinit>(): void;
						});
						public constructor();
						public static Companion: com.stripe.android.payments.paymentlauncher.PaymentLauncher.Companion;
						public confirm(param0: com.stripe.android.model.ConfirmSetupIntentParams): void;
						public confirm(param0: com.stripe.android.model.ConfirmPaymentIntentParams): void;
						public handleNextActionForSetupIntent(param0: string): void;
						public handleNextActionForPaymentIntent(param0: string): void;
					}
					export module PaymentLauncher {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.payments.paymentlauncher.PaymentLauncher.Companion>;
							public createForCompose(param0: string, param1: string, param2: com.stripe.android.payments.paymentlauncher.PaymentLauncher.PaymentResultCallback, param3: androidx.compose.runtime.Composer, param4: number, param5: number): com.stripe.android.payments.paymentlauncher.PaymentLauncher;
							public create(param0: androidx.fragment.app.Fragment, param1: string, param2: string, param3: com.stripe.android.payments.paymentlauncher.PaymentLauncher.PaymentResultCallback): com.stripe.android.payments.paymentlauncher.PaymentLauncher;
							public create(param0: androidx.activity.ComponentActivity, param1: string, param2: string, param3: com.stripe.android.payments.paymentlauncher.PaymentLauncher.PaymentResultCallback): com.stripe.android.payments.paymentlauncher.PaymentLauncher;
						}
						export class PaymentResultCallback {
							public static class: java.lang.Class<com.stripe.android.payments.paymentlauncher.PaymentLauncher.PaymentResultCallback>;
							/**
							 * Constructs a new instance of the com.stripe.android.payments.paymentlauncher.PaymentLauncher$PaymentResultCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onPaymentResult(param0: com.stripe.android.payments.paymentlauncher.PaymentResult): void;
							});
							public constructor();
							public onPaymentResult(param0: com.stripe.android.payments.paymentlauncher.PaymentResult): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module paymentlauncher {
					export class PaymentLauncherConfirmationActivity {
						public static class: java.lang.Class<com.stripe.android.payments.paymentlauncher.PaymentLauncherConfirmationActivity>;
						public static Companion: com.stripe.android.payments.paymentlauncher.PaymentLauncherConfirmationActivity.Companion;
						public static EMPTY_ARG_ERROR: string;
						public constructor();
						public onDestroy(): void;
						public finish(): void;
						public getViewModel$payments_core_release(): com.stripe.android.payments.paymentlauncher.PaymentLauncherViewModel;
						public onCreate(param0: globalAndroid.os.Bundle): void;
						public getViewModelFactory$payments_core_release(): androidx.lifecycle.ViewModelProvider.Factory;
						public setViewModelFactory$payments_core_release(param0: androidx.lifecycle.ViewModelProvider.Factory): void;
					}
					export module PaymentLauncherConfirmationActivity {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.payments.paymentlauncher.PaymentLauncherConfirmationActivity.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module paymentlauncher {
					export class PaymentLauncherContract extends androidx.activity.result.contract.ActivityResultContract<com.stripe.android.payments.paymentlauncher.PaymentLauncherContract.Args, com.stripe.android.payments.paymentlauncher.PaymentResult> {
						public static class: java.lang.Class<com.stripe.android.payments.paymentlauncher.PaymentLauncherContract>;
						public static $stable: number;
						public parseResult(param0: number, param1: globalAndroid.content.Intent): com.stripe.android.payments.paymentlauncher.PaymentResult;
						public constructor();
						public createIntent(param0: globalAndroid.content.Context, param1: com.stripe.android.payments.paymentlauncher.PaymentLauncherContract.Args): globalAndroid.content.Intent;
					}
					export module PaymentLauncherContract {
						export abstract class Args {
							public static class: java.lang.Class<com.stripe.android.payments.paymentlauncher.PaymentLauncherContract.Args>;
							public static Companion: com.stripe.android.payments.paymentlauncher.PaymentLauncherContract.Args.Companion;
							public static $stable: number;
							public getInjectorKey(): string;
							public getProductUsage(): java.util.Set<string>;
							public getEnableLogging(): boolean;
							public toBundle(): globalAndroid.os.Bundle;
							public getStripeAccountId(): string;
							public getPublishableKey(): string;
						}
						export module Args {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.payments.paymentlauncher.PaymentLauncherContract.Args.Companion>;
								public fromIntent(param0: globalAndroid.content.Intent): com.stripe.android.payments.paymentlauncher.PaymentLauncherContract.Args;
							}
							export class IntentConfirmationArgs extends com.stripe.android.payments.paymentlauncher.PaymentLauncherContract.Args {
								public static class: java.lang.Class<com.stripe.android.payments.paymentlauncher.PaymentLauncherContract.Args.IntentConfirmationArgs>;
								public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.payments.paymentlauncher.PaymentLauncherContract.Args.IntentConfirmationArgs>;
								public static $stable: number;
								public copy(param0: string, param1: string, param2: string, param3: boolean, param4: java.util.Set<string>, param5: com.stripe.android.model.ConfirmStripeIntentParams): com.stripe.android.payments.paymentlauncher.PaymentLauncherContract.Args.IntentConfirmationArgs;
								public toString(): string;
								public component6(): com.stripe.android.model.ConfirmStripeIntentParams;
								public getInjectorKey(): string;
								public equals(param0: any): boolean;
								public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
								public getStripeAccountId(): string;
								public component5(): java.util.Set<string>;
								public component2(): string;
								public constructor(param0: string, param1: string, param2: string, param3: boolean, param4: java.util.Set<string>, param5: com.stripe.android.model.ConfirmStripeIntentParams);
								public component4(): boolean;
								public component1(): string;
								public getConfirmStripeIntentParams(): com.stripe.android.model.ConfirmStripeIntentParams;
								public getEnableLogging(): boolean;
								public describeContents(): number;
								public getProductUsage(): java.util.Set<string>;
								public getPublishableKey(): string;
								public component3(): string;
								public hashCode(): number;
							}
							export module IntentConfirmationArgs {
								export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.payments.paymentlauncher.PaymentLauncherContract.Args.IntentConfirmationArgs> {
									public static class: java.lang.Class<com.stripe.android.payments.paymentlauncher.PaymentLauncherContract.Args.IntentConfirmationArgs.Creator>;
									public constructor();
									public newArray(param0: number): androidNative.Array<com.stripe.android.payments.paymentlauncher.PaymentLauncherContract.Args.IntentConfirmationArgs>;
									public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.payments.paymentlauncher.PaymentLauncherContract.Args.IntentConfirmationArgs;
								}
							}
							export class PaymentIntentNextActionArgs extends com.stripe.android.payments.paymentlauncher.PaymentLauncherContract.Args {
								public static class: java.lang.Class<com.stripe.android.payments.paymentlauncher.PaymentLauncherContract.Args.PaymentIntentNextActionArgs>;
								public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.payments.paymentlauncher.PaymentLauncherContract.Args.PaymentIntentNextActionArgs>;
								public static $stable: number;
								public toString(): string;
								public getInjectorKey(): string;
								public equals(param0: any): boolean;
								public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
								public getStripeAccountId(): string;
								public getPaymentIntentClientSecret(): string;
								public component5(): java.util.Set<string>;
								public component2(): string;
								public component4(): boolean;
								public component1(): string;
								public constructor(param0: string, param1: string, param2: string, param3: boolean, param4: java.util.Set<string>, param5: string);
								public getEnableLogging(): boolean;
								public describeContents(): number;
								public component6(): string;
								public getProductUsage(): java.util.Set<string>;
								public getPublishableKey(): string;
								public component3(): string;
								public hashCode(): number;
								public copy(param0: string, param1: string, param2: string, param3: boolean, param4: java.util.Set<string>, param5: string): com.stripe.android.payments.paymentlauncher.PaymentLauncherContract.Args.PaymentIntentNextActionArgs;
							}
							export module PaymentIntentNextActionArgs {
								export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.payments.paymentlauncher.PaymentLauncherContract.Args.PaymentIntentNextActionArgs> {
									public static class: java.lang.Class<com.stripe.android.payments.paymentlauncher.PaymentLauncherContract.Args.PaymentIntentNextActionArgs.Creator>;
									public constructor();
									public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.payments.paymentlauncher.PaymentLauncherContract.Args.PaymentIntentNextActionArgs;
									public newArray(param0: number): androidNative.Array<com.stripe.android.payments.paymentlauncher.PaymentLauncherContract.Args.PaymentIntentNextActionArgs>;
								}
							}
							export class SetupIntentNextActionArgs extends com.stripe.android.payments.paymentlauncher.PaymentLauncherContract.Args {
								public static class: java.lang.Class<com.stripe.android.payments.paymentlauncher.PaymentLauncherContract.Args.SetupIntentNextActionArgs>;
								public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.payments.paymentlauncher.PaymentLauncherContract.Args.SetupIntentNextActionArgs>;
								public static $stable: number;
								public toString(): string;
								public getInjectorKey(): string;
								public equals(param0: any): boolean;
								public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
								public getStripeAccountId(): string;
								public component5(): java.util.Set<string>;
								public component2(): string;
								public component4(): boolean;
								public component1(): string;
								public constructor(param0: string, param1: string, param2: string, param3: boolean, param4: java.util.Set<string>, param5: string);
								public getEnableLogging(): boolean;
								public describeContents(): number;
								public component6(): string;
								public getProductUsage(): java.util.Set<string>;
								public getSetupIntentClientSecret(): string;
								public copy(param0: string, param1: string, param2: string, param3: boolean, param4: java.util.Set<string>, param5: string): com.stripe.android.payments.paymentlauncher.PaymentLauncherContract.Args.SetupIntentNextActionArgs;
								public getPublishableKey(): string;
								public component3(): string;
								public hashCode(): number;
							}
							export module SetupIntentNextActionArgs {
								export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.payments.paymentlauncher.PaymentLauncherContract.Args.SetupIntentNextActionArgs> {
									public static class: java.lang.Class<com.stripe.android.payments.paymentlauncher.PaymentLauncherContract.Args.SetupIntentNextActionArgs.Creator>;
									public constructor();
									public newArray(param0: number): androidNative.Array<com.stripe.android.payments.paymentlauncher.PaymentLauncherContract.Args.SetupIntentNextActionArgs>;
									public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.payments.paymentlauncher.PaymentLauncherContract.Args.SetupIntentNextActionArgs;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module paymentlauncher {
					export class PaymentLauncherFactory {
						public static class: java.lang.Class<com.stripe.android.payments.paymentlauncher.PaymentLauncherFactory>;
						public static $stable: number;
						public constructor(param0: androidx.fragment.app.Fragment, param1: com.stripe.android.payments.paymentlauncher.PaymentLauncher.PaymentResultCallback);
						public constructor(param0: androidx.activity.ComponentActivity, param1: com.stripe.android.payments.paymentlauncher.PaymentLauncher.PaymentResultCallback);
						public constructor(param0: globalAndroid.content.Context, param1: androidx.activity.result.ActivityResultLauncher<com.stripe.android.payments.paymentlauncher.PaymentLauncherContract.Args>);
						public create(param0: string, param1: string): com.stripe.android.payments.paymentlauncher.PaymentLauncher;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module paymentlauncher {
					export class PaymentLauncherViewModel {
						public static class: java.lang.Class<com.stripe.android.payments.paymentlauncher.PaymentLauncherViewModel>;
						public static Companion: com.stripe.android.payments.paymentlauncher.PaymentLauncherViewModel.Companion;
						public static TIMEOUT_ERROR: string;
						public static UNKNOWN_ERROR: string;
						public static REQUIRED_ERROR: string;
						public static KEY_HAS_STARTED: string;
						public confirmStripeIntent$payments_core_release(param0: com.stripe.android.model.ConfirmStripeIntentParams, param1: kotlin.coroutines.Continuation<any>): any;
						public onPaymentFlowResult$payments_core_release(param0: com.stripe.android.payments.PaymentFlowResult.Unvalidated): void;
						public constructor(param0: boolean, param1: com.stripe.android.networking.StripeRepository, param2: com.stripe.android.payments.core.authentication.PaymentAuthenticatorRegistry, param3: com.stripe.android.payments.DefaultReturnUrl, param4: javax.inject.Provider<com.stripe.android.networking.ApiRequest.Options>, param5: java.util.Map<string, string>, param6: dagger.Lazy<com.stripe.android.payments.PaymentIntentFlowResultProcessor>, param7: dagger.Lazy<com.stripe.android.payments.SetupIntentFlowResultProcessor>, param8: com.stripe.android.core.networking.DefaultAnalyticsRequestExecutor, param9: com.stripe.android.networking.PaymentAnalyticsRequestFactory, param10: kotlin.coroutines.CoroutineContext, param11: com.stripe.android.view.AuthActivityStarterHost, param12: androidx.activity.result.ActivityResultCaller, param13: androidx.lifecycle.SavedStateHandle, param14: boolean);
						public handleNextActionForStripeIntent$payments_core_release(param0: string, param1: kotlin.coroutines.Continuation<any>): any;
						public cleanUp$payments_core_release(): void;
						public getHasStarted$payments_core_release(): boolean;
						public getPaymentLauncherResult$payments_core_release(): androidx.lifecycle.MutableLiveData<com.stripe.android.payments.paymentlauncher.PaymentResult>;
					}
					export module PaymentLauncherViewModel {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.payments.paymentlauncher.PaymentLauncherViewModel.Companion>;
							public getEXPAND_PAYMENT_METHOD(): java.util.List<string>;
						}
						export class Factory extends androidx.lifecycle.AbstractSavedStateViewModelFactory implements com.stripe.android.core.injection.Injectable<com.stripe.android.payments.paymentlauncher.PaymentLauncherViewModel.Factory.FallbackInitializeParam>  {
							public static class: java.lang.Class<com.stripe.android.payments.paymentlauncher.PaymentLauncherViewModel.Factory>;
							public subComponentBuilderProvider: javax.inject.Provider<com.stripe.android.payments.core.injection.PaymentLauncherViewModelSubcomponent.Builder>;
							public constructor(param0: kotlin.jvm.functions.Function0<any>, param1: kotlin.jvm.functions.Function0<any>, param2: kotlin.jvm.functions.Function0<any>, param3: androidx.activity.result.ActivityResultCaller, param4: androidx.savedstate.SavedStateRegistryOwner);
							public fallbackInitialize(param0: com.stripe.android.payments.paymentlauncher.PaymentLauncherViewModel.Factory.FallbackInitializeParam): void;
							public fallbackInitialize(param0: any): void;
							public create(param0: string, param1: java.lang.Class, param2: androidx.lifecycle.SavedStateHandle): androidx.lifecycle.ViewModel;
							public getSubComponentBuilderProvider(): javax.inject.Provider<com.stripe.android.payments.core.injection.PaymentLauncherViewModelSubcomponent.Builder>;
							public setSubComponentBuilderProvider(param0: javax.inject.Provider<com.stripe.android.payments.core.injection.PaymentLauncherViewModelSubcomponent.Builder>): void;
						}
						export module Factory {
							export class FallbackInitializeParam {
								public static class: java.lang.Class<com.stripe.android.payments.paymentlauncher.PaymentLauncherViewModel.Factory.FallbackInitializeParam>;
								public toString(): string;
								public component2(): boolean;
								public copy(param0: globalAndroid.app.Application, param1: boolean, param2: string, param3: string, param4: java.util.Set<string>): com.stripe.android.payments.paymentlauncher.PaymentLauncherViewModel.Factory.FallbackInitializeParam;
								public equals(param0: any): boolean;
								public constructor(param0: globalAndroid.app.Application, param1: boolean, param2: string, param3: string, param4: java.util.Set<string>);
								public component4(): string;
								public getStripeAccountId(): string;
								public component5(): java.util.Set<string>;
								public component1(): globalAndroid.app.Application;
								public getEnableLogging(): boolean;
								public getProductUsage(): java.util.Set<string>;
								public getPublishableKey(): string;
								public component3(): string;
								public hashCode(): number;
								public getApplication(): globalAndroid.app.Application;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module paymentlauncher {
					export class PaymentLauncherViewModel_Factory extends dagger.internal.Factory<com.stripe.android.payments.paymentlauncher.PaymentLauncherViewModel> {
						public static class: java.lang.Class<com.stripe.android.payments.paymentlauncher.PaymentLauncherViewModel_Factory>;
						public static newInstance(param0: boolean, param1: com.stripe.android.networking.StripeRepository, param2: com.stripe.android.payments.core.authentication.PaymentAuthenticatorRegistry, param3: com.stripe.android.payments.DefaultReturnUrl, param4: javax.inject.Provider<com.stripe.android.networking.ApiRequest.Options>, param5: java.util.Map<string, string>, param6: dagger.Lazy<com.stripe.android.payments.PaymentIntentFlowResultProcessor>, param7: dagger.Lazy<com.stripe.android.payments.SetupIntentFlowResultProcessor>, param8: com.stripe.android.core.networking.DefaultAnalyticsRequestExecutor, param9: com.stripe.android.networking.PaymentAnalyticsRequestFactory, param10: kotlin.coroutines.CoroutineContext, param11: com.stripe.android.view.AuthActivityStarterHost, param12: androidx.activity.result.ActivityResultCaller, param13: androidx.lifecycle.SavedStateHandle, param14: boolean): com.stripe.android.payments.paymentlauncher.PaymentLauncherViewModel;
						public static create(param0: javax.inject.Provider<java.lang.Boolean>, param1: javax.inject.Provider<com.stripe.android.networking.StripeRepository>, param2: javax.inject.Provider<com.stripe.android.payments.core.authentication.PaymentAuthenticatorRegistry>, param3: javax.inject.Provider<com.stripe.android.payments.DefaultReturnUrl>, param4: javax.inject.Provider<com.stripe.android.networking.ApiRequest.Options>, param5: javax.inject.Provider<java.util.Map<string, string>>, param6: javax.inject.Provider<com.stripe.android.payments.PaymentIntentFlowResultProcessor>, param7: javax.inject.Provider<com.stripe.android.payments.SetupIntentFlowResultProcessor>, param8: javax.inject.Provider<com.stripe.android.core.networking.DefaultAnalyticsRequestExecutor>, param9: javax.inject.Provider<com.stripe.android.networking.PaymentAnalyticsRequestFactory>, param10: javax.inject.Provider<kotlin.coroutines.CoroutineContext>, param11: javax.inject.Provider<com.stripe.android.view.AuthActivityStarterHost>, param12: javax.inject.Provider<androidx.activity.result.ActivityResultCaller>, param13: javax.inject.Provider<androidx.lifecycle.SavedStateHandle>, param14: javax.inject.Provider<java.lang.Boolean>): com.stripe.android.payments.paymentlauncher.PaymentLauncherViewModel_Factory;
						public constructor(param0: javax.inject.Provider<java.lang.Boolean>, param1: javax.inject.Provider<com.stripe.android.networking.StripeRepository>, param2: javax.inject.Provider<com.stripe.android.payments.core.authentication.PaymentAuthenticatorRegistry>, param3: javax.inject.Provider<com.stripe.android.payments.DefaultReturnUrl>, param4: javax.inject.Provider<com.stripe.android.networking.ApiRequest.Options>, param5: javax.inject.Provider<java.util.Map<string, string>>, param6: javax.inject.Provider<com.stripe.android.payments.PaymentIntentFlowResultProcessor>, param7: javax.inject.Provider<com.stripe.android.payments.SetupIntentFlowResultProcessor>, param8: javax.inject.Provider<com.stripe.android.core.networking.DefaultAnalyticsRequestExecutor>, param9: javax.inject.Provider<com.stripe.android.networking.PaymentAnalyticsRequestFactory>, param10: javax.inject.Provider<kotlin.coroutines.CoroutineContext>, param11: javax.inject.Provider<com.stripe.android.view.AuthActivityStarterHost>, param12: javax.inject.Provider<androidx.activity.result.ActivityResultCaller>, param13: javax.inject.Provider<androidx.lifecycle.SavedStateHandle>, param14: javax.inject.Provider<java.lang.Boolean>);
						public get(): com.stripe.android.payments.paymentlauncher.PaymentLauncherViewModel;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module paymentlauncher {
					export class PaymentLauncherViewModel_Factory_MembersInjector extends dagger.MembersInjector<com.stripe.android.payments.paymentlauncher.PaymentLauncherViewModel.Factory> {
						public static class: java.lang.Class<com.stripe.android.payments.paymentlauncher.PaymentLauncherViewModel_Factory_MembersInjector>;
						public constructor(param0: javax.inject.Provider<com.stripe.android.payments.core.injection.PaymentLauncherViewModelSubcomponent.Builder>);
						public static injectSubComponentBuilderProvider(param0: com.stripe.android.payments.paymentlauncher.PaymentLauncherViewModel.Factory, param1: javax.inject.Provider<com.stripe.android.payments.core.injection.PaymentLauncherViewModelSubcomponent.Builder>): void;
						public static create(param0: javax.inject.Provider<com.stripe.android.payments.core.injection.PaymentLauncherViewModelSubcomponent.Builder>): dagger.MembersInjector<com.stripe.android.payments.paymentlauncher.PaymentLauncherViewModel.Factory>;
						public injectMembers(param0: com.stripe.android.payments.paymentlauncher.PaymentLauncherViewModel.Factory): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module paymentlauncher {
					export abstract class PaymentResult {
						public static class: java.lang.Class<com.stripe.android.payments.paymentlauncher.PaymentResult>;
						public static Companion: com.stripe.android.payments.paymentlauncher.PaymentResult.Companion;
						public static $stable: number;
					}
					export module PaymentResult {
						export class Canceled extends com.stripe.android.payments.paymentlauncher.PaymentResult {
							public static class: java.lang.Class<com.stripe.android.payments.paymentlauncher.PaymentResult.Canceled>;
							public static INSTANCE: com.stripe.android.payments.paymentlauncher.PaymentResult.Canceled;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.payments.paymentlauncher.PaymentResult.Canceled>;
							public static $stable: number;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public describeContents(): number;
						}
						export module Canceled {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.payments.paymentlauncher.PaymentResult.Canceled> {
								public static class: java.lang.Class<com.stripe.android.payments.paymentlauncher.PaymentResult.Canceled.Creator>;
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.payments.paymentlauncher.PaymentResult.Canceled;
								public newArray(param0: number): androidNative.Array<com.stripe.android.payments.paymentlauncher.PaymentResult.Canceled>;
								public constructor();
							}
						}
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.payments.paymentlauncher.PaymentResult.Companion>;
						}
						export class Completed extends com.stripe.android.payments.paymentlauncher.PaymentResult {
							public static class: java.lang.Class<com.stripe.android.payments.paymentlauncher.PaymentResult.Completed>;
							public static INSTANCE: com.stripe.android.payments.paymentlauncher.PaymentResult.Completed;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.payments.paymentlauncher.PaymentResult.Completed>;
							public static $stable: number;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public describeContents(): number;
						}
						export module Completed {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.payments.paymentlauncher.PaymentResult.Completed> {
								public static class: java.lang.Class<com.stripe.android.payments.paymentlauncher.PaymentResult.Completed.Creator>;
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.payments.paymentlauncher.PaymentResult.Completed;
								public newArray(param0: number): androidNative.Array<com.stripe.android.payments.paymentlauncher.PaymentResult.Completed>;
								public constructor();
							}
						}
						export class Failed extends com.stripe.android.payments.paymentlauncher.PaymentResult {
							public static class: java.lang.Class<com.stripe.android.payments.paymentlauncher.PaymentResult.Failed>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.payments.paymentlauncher.PaymentResult.Failed>;
							public static $stable: number;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public constructor(param0: java.lang.Throwable);
							public describeContents(): number;
							public getThrowable(): java.lang.Throwable;
						}
						export module Failed {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.payments.paymentlauncher.PaymentResult.Failed> {
								public static class: java.lang.Class<com.stripe.android.payments.paymentlauncher.PaymentResult.Failed.Creator>;
								public newArray(param0: number): androidNative.Array<com.stripe.android.payments.paymentlauncher.PaymentResult.Failed>;
								public constructor();
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.payments.paymentlauncher.PaymentResult.Failed;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module paymentlauncher {
					export class StripePaymentLauncher implements com.stripe.android.payments.paymentlauncher.PaymentLauncher, com.stripe.android.core.injection.Injector {
						public static class: java.lang.Class<com.stripe.android.payments.paymentlauncher.StripePaymentLauncher>;
						public static $stable: number;
						public inject(param0: com.stripe.android.core.injection.Injectable<any>): void;
						public confirm(param0: com.stripe.android.model.ConfirmSetupIntentParams): void;
						public confirm(param0: com.stripe.android.model.ConfirmPaymentIntentParams): void;
						public handleNextActionForSetupIntent(param0: string): void;
						public constructor(param0: kotlin.jvm.functions.Function0<string>, param1: kotlin.jvm.functions.Function0<string>, param2: androidx.activity.result.ActivityResultLauncher<com.stripe.android.payments.paymentlauncher.PaymentLauncherContract.Args>, param3: globalAndroid.content.Context, param4: boolean, param5: kotlin.coroutines.CoroutineContext, param6: kotlin.coroutines.CoroutineContext, param7: com.stripe.android.networking.StripeRepository, param8: com.stripe.android.networking.PaymentAnalyticsRequestFactory, param9: java.util.Set<string>);
						public handleNextActionForPaymentIntent(param0: string): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module paymentlauncher {
					export class StripePaymentLauncherAssistedFactory {
						public static class: java.lang.Class<com.stripe.android.payments.paymentlauncher.StripePaymentLauncherAssistedFactory>;
						/**
						 * Constructs a new instance of the com.stripe.android.payments.paymentlauncher.StripePaymentLauncherAssistedFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							create(param0: kotlin.jvm.functions.Function0<string>, param1: kotlin.jvm.functions.Function0<string>, param2: androidx.activity.result.ActivityResultLauncher<com.stripe.android.payments.paymentlauncher.PaymentLauncherContract.Args>): com.stripe.android.payments.paymentlauncher.StripePaymentLauncher;
						});
						public constructor();
						public create(param0: kotlin.jvm.functions.Function0<string>, param1: kotlin.jvm.functions.Function0<string>, param2: androidx.activity.result.ActivityResultLauncher<com.stripe.android.payments.paymentlauncher.PaymentLauncherContract.Args>): com.stripe.android.payments.paymentlauncher.StripePaymentLauncher;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module paymentlauncher {
					export class StripePaymentLauncherAssistedFactory_Impl extends com.stripe.android.payments.paymentlauncher.StripePaymentLauncherAssistedFactory {
						public static class: java.lang.Class<com.stripe.android.payments.paymentlauncher.StripePaymentLauncherAssistedFactory_Impl>;
						public create(param0: kotlin.jvm.functions.Function0<string>, param1: kotlin.jvm.functions.Function0<string>, param2: androidx.activity.result.ActivityResultLauncher<com.stripe.android.payments.paymentlauncher.PaymentLauncherContract.Args>): com.stripe.android.payments.paymentlauncher.StripePaymentLauncher;
						public static create(param0: com.stripe.android.payments.paymentlauncher.StripePaymentLauncher_Factory): javax.inject.Provider<com.stripe.android.payments.paymentlauncher.StripePaymentLauncherAssistedFactory>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module paymentlauncher {
					export class StripePaymentLauncher_Factory {
						public static class: java.lang.Class<com.stripe.android.payments.paymentlauncher.StripePaymentLauncher_Factory>;
						public constructor(param0: javax.inject.Provider<globalAndroid.content.Context>, param1: javax.inject.Provider<java.lang.Boolean>, param2: javax.inject.Provider<kotlin.coroutines.CoroutineContext>, param3: javax.inject.Provider<kotlin.coroutines.CoroutineContext>, param4: javax.inject.Provider<com.stripe.android.networking.StripeRepository>, param5: javax.inject.Provider<com.stripe.android.networking.PaymentAnalyticsRequestFactory>, param6: javax.inject.Provider<java.util.Set<string>>);
						public static newInstance(param0: kotlin.jvm.functions.Function0<string>, param1: kotlin.jvm.functions.Function0<string>, param2: androidx.activity.result.ActivityResultLauncher<com.stripe.android.payments.paymentlauncher.PaymentLauncherContract.Args>, param3: globalAndroid.content.Context, param4: boolean, param5: kotlin.coroutines.CoroutineContext, param6: kotlin.coroutines.CoroutineContext, param7: com.stripe.android.networking.StripeRepository, param8: com.stripe.android.networking.PaymentAnalyticsRequestFactory, param9: java.util.Set<string>): com.stripe.android.payments.paymentlauncher.StripePaymentLauncher;
						public get(param0: kotlin.jvm.functions.Function0<string>, param1: kotlin.jvm.functions.Function0<string>, param2: androidx.activity.result.ActivityResultLauncher<com.stripe.android.payments.paymentlauncher.PaymentLauncherContract.Args>): com.stripe.android.payments.paymentlauncher.StripePaymentLauncher;
						public static create(param0: javax.inject.Provider<globalAndroid.content.Context>, param1: javax.inject.Provider<java.lang.Boolean>, param2: javax.inject.Provider<kotlin.coroutines.CoroutineContext>, param3: javax.inject.Provider<kotlin.coroutines.CoroutineContext>, param4: javax.inject.Provider<com.stripe.android.networking.StripeRepository>, param5: javax.inject.Provider<com.stripe.android.networking.PaymentAnalyticsRequestFactory>, param6: javax.inject.Provider<java.util.Set<string>>): com.stripe.android.payments.paymentlauncher.StripePaymentLauncher_Factory;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export class AddPaymentMethodsAdapter extends androidx.recyclerview.widget.RecyclerView.Adapter<com.stripe.android.paymentsheet.AddPaymentMethodsAdapter.AddPaymentMethodViewHolder> {
					public static class: java.lang.Class<com.stripe.android.paymentsheet.AddPaymentMethodsAdapter>;
					public constructor(param0: java.util.List<any>, param1: number, param2: kotlin.jvm.functions.Function1<any, kotlin.Unit>);
					public onBindViewHolder(param0: com.stripe.android.paymentsheet.AddPaymentMethodsAdapter.AddPaymentMethodViewHolder, param1: number): void;
					public getPaymentMethodSelectedListener(): kotlin.jvm.functions.Function1<com.stripe.android.paymentsheet.model.SupportedPaymentMethod, kotlin.Unit>;
					public getItemCount(): number;
					public isEnabled$paymentsheet_release(): boolean;
					public onCreateViewHolder(param0: globalAndroid.view.ViewGroup, param1: number): com.stripe.android.paymentsheet.AddPaymentMethodsAdapter.AddPaymentMethodViewHolder;
					public setEnabled$paymentsheet_release(param0: boolean): void;
				}
				export module AddPaymentMethodsAdapter {
					export class AddPaymentMethodViewHolder {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.AddPaymentMethodsAdapter.AddPaymentMethodViewHolder>;
						public bind(param0: com.stripe.android.paymentsheet.model.SupportedPaymentMethod): void;
						public constructor(param0: globalAndroid.view.ViewGroup);
						public constructor(param0: com.stripe.android.paymentsheet.databinding.LayoutPaymentsheetAddPaymentMethodCardViewBinding);
						public setSelected(param0: boolean): void;
						public setEnabled(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export abstract class BaseAddPaymentMethodFragment {
					public static class: java.lang.Class<com.stripe.android.paymentsheet.BaseAddPaymentMethodFragment>;
					public static Companion: com.stripe.android.paymentsheet.BaseAddPaymentMethodFragment.Companion;
					public addPaymentMethodHeader: globalAndroid.widget.TextView;
					public constructor(param0: com.stripe.android.paymentsheet.analytics.EventReporter);
					public setAddPaymentMethodHeader(param0: globalAndroid.widget.TextView): void;
					public onSaveInstanceState(param0: globalAndroid.os.Bundle): void;
					public onCreate(param0: globalAndroid.os.Bundle): void;
					public onCreateView(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: globalAndroid.os.Bundle): globalAndroid.view.View;
					public onPaymentMethodSelected$paymentsheet_release(param0: com.stripe.android.paymentsheet.model.SupportedPaymentMethod): void;
					public getSheetViewModel(): com.stripe.android.paymentsheet.viewmodels.BaseSheetViewModel<any>;
					public getAddPaymentMethodHeader(): globalAndroid.widget.TextView;
					public getViewModelFactory(): androidx.lifecycle.ViewModelProvider.Factory;
					public onViewCreated(param0: globalAndroid.view.View, param1: globalAndroid.os.Bundle): void;
				}
				export module BaseAddPaymentMethodFragment {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.BaseAddPaymentMethodFragment.Companion>;
						public getFormArguments$paymentsheet_release(param0: com.stripe.android.paymentsheet.model.SupportedPaymentMethod, param1: com.stripe.android.model.StripeIntent, param2: com.stripe.android.paymentsheet.PaymentSheet.Configuration, param3: string, param4: com.stripe.android.ui.core.Amount, param5: string): com.stripe.android.paymentsheet.paymentdatacollection.FormFragmentArguments;
						public transformToPaymentSelection$paymentsheet_release(param0: com.stripe.android.paymentsheet.forms.FormFieldValues, param1: java.util.Map<string, any>, param2: com.stripe.android.paymentsheet.model.SupportedPaymentMethod): com.stripe.android.paymentsheet.model.PaymentSelection.New.GenericPaymentMethod;
					}
					export module Companion {
						export class WhenMappings {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.BaseAddPaymentMethodFragment.Companion.WhenMappings>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export abstract class BasePaymentMethodsListFragment {
					public static class: java.lang.Class<com.stripe.android.paymentsheet.BasePaymentMethodsListFragment>;
					public config: com.stripe.android.paymentsheet.model.FragmentConfig;
					public constructor(param0: boolean, param1: com.stripe.android.paymentsheet.analytics.EventReporter);
					public onSaveInstanceState(param0: globalAndroid.os.Bundle): void;
					public onCreate(param0: globalAndroid.os.Bundle): void;
					public setEditing$paymentsheet_release(param0: boolean): void;
					public getSheetViewModel(): com.stripe.android.paymentsheet.viewmodels.BaseSheetViewModel<any>;
					public getConfig(): com.stripe.android.paymentsheet.model.FragmentConfig;
					public setConfig(param0: com.stripe.android.paymentsheet.model.FragmentConfig): void;
					public isEditing$paymentsheet_release(): boolean;
					public onPaymentOptionSelected(param0: com.stripe.android.paymentsheet.model.PaymentSelection, param1: boolean): void;
					public onCreateOptionsMenu(param0: globalAndroid.view.Menu, param1: globalAndroid.view.MenuInflater): void;
					public transitionToAddPaymentMethod(): void;
					public onOptionsItemSelected(param0: globalAndroid.view.MenuItem): boolean;
					public onViewCreated(param0: globalAndroid.view.View, param1: globalAndroid.os.Bundle): void;
				}
				export module BasePaymentMethodsListFragment {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.BasePaymentMethodsListFragment.Companion>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export class BottomSheetController {
					public static class: java.lang.Class<com.stripe.android.paymentsheet.BottomSheetController>;
					public setup(): void;
					public hide(): void;
					public expand(): void;
					public getShouldFinish$paymentsheet_release(): androidx.lifecycle.LiveData<java.lang.Boolean>;
					public constructor(param0: com.google.android.material.bottomsheet.BottomSheetBehavior<globalAndroid.view.ViewGroup>);
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export class BuildConfig {
					public static class: java.lang.Class<com.stripe.android.paymentsheet.BuildConfig>;
					public static DEBUG: boolean;
					public static LIBRARY_PACKAGE_NAME: string;
					public static BUILD_TYPE: string;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export class DefaultPaymentSheetLauncher implements com.stripe.android.paymentsheet.PaymentSheetLauncher, com.stripe.android.core.injection.Injector {
					public static class: java.lang.Class<com.stripe.android.paymentsheet.DefaultPaymentSheetLauncher>;
					public constructor(param0: androidx.activity.result.ActivityResultLauncher<com.stripe.android.paymentsheet.PaymentSheetContract.Args>, param1: globalAndroid.app.Application);
					public presentWithPaymentIntent(param0: string, param1: com.stripe.android.paymentsheet.PaymentSheet.Configuration): void;
					public presentWithSetupIntent(param0: string, param1: com.stripe.android.paymentsheet.PaymentSheet.Configuration): void;
					public constructor(param0: androidx.activity.ComponentActivity, param1: com.stripe.android.paymentsheet.PaymentSheetResultCallback);
					public constructor(param0: androidx.fragment.app.Fragment, param1: androidx.activity.result.ActivityResultRegistry, param2: com.stripe.android.paymentsheet.PaymentSheetResultCallback);
					public inject(param0: com.stripe.android.core.injection.Injectable<any>): void;
					public constructor(param0: androidx.fragment.app.Fragment, param1: com.stripe.android.paymentsheet.PaymentSheetResultCallback);
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export class DefaultPrefsRepository extends com.stripe.android.paymentsheet.PrefsRepository {
					public static class: java.lang.Class<com.stripe.android.paymentsheet.DefaultPrefsRepository>;
					public constructor(param0: globalAndroid.content.Context, param1: string, param2: kotlin.coroutines.CoroutineContext);
					public getSavedSelection(param0: boolean, param1: kotlin.coroutines.Continuation<any>): any;
					public savePaymentSelection(param0: com.stripe.android.paymentsheet.model.PaymentSelection): void;
				}
				export module DefaultPrefsRepository {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.DefaultPrefsRepository.Companion>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export class FakeCustomerRepository extends com.stripe.android.paymentsheet.repositories.CustomerRepository {
					public static class: java.lang.Class<com.stripe.android.paymentsheet.FakeCustomerRepository>;
					public savedPaymentMethod: com.stripe.android.model.PaymentMethod;
					public constructor(param0: java.util.List<com.stripe.android.model.PaymentMethod>);
					public getPaymentMethods(param0: com.stripe.android.paymentsheet.PaymentSheet.CustomerConfiguration, param1: java.util.List<any>, param2: kotlin.coroutines.Continuation<any>): any;
					public getSavedPaymentMethod(): com.stripe.android.model.PaymentMethod;
					public constructor();
					public setError(param0: java.lang.Throwable): void;
					public detachPaymentMethod(param0: com.stripe.android.paymentsheet.PaymentSheet.CustomerConfiguration, param1: string, param2: kotlin.coroutines.Continuation<any>): any;
					public setSavedPaymentMethod(param0: com.stripe.android.model.PaymentMethod): void;
					public getError(): java.lang.Throwable;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export class PaymentOptionCallback {
					public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentOptionCallback>;
					/**
					 * Constructs a new instance of the com.stripe.android.paymentsheet.PaymentOptionCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onPaymentOption(param0: com.stripe.android.paymentsheet.model.PaymentOption): void;
					});
					public constructor();
					public onPaymentOption(param0: com.stripe.android.paymentsheet.model.PaymentOption): void;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export class PaymentOptionContract extends androidx.activity.result.contract.ActivityResultContract<com.stripe.android.paymentsheet.PaymentOptionContract.Args, com.stripe.android.paymentsheet.PaymentOptionResult> {
					public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentOptionContract>;
					public static Companion: com.stripe.android.paymentsheet.PaymentOptionContract.Companion;
					public static EXTRA_ARGS: string;
					public constructor();
					public parseResult(param0: number, param1: globalAndroid.content.Intent): com.stripe.android.paymentsheet.PaymentOptionResult;
					public createIntent(param0: globalAndroid.content.Context, param1: com.stripe.android.paymentsheet.PaymentOptionContract.Args): globalAndroid.content.Intent;
				}
				export module PaymentOptionContract {
					export class Args extends com.stripe.android.view.ActivityStarter.Args {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentOptionContract.Args>;
						public static Companion: com.stripe.android.paymentsheet.PaymentOptionContract.Args.Companion;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.PaymentOptionContract.Args>;
						public isGooglePayReady(): boolean;
						public constructor(param0: com.stripe.android.model.StripeIntent, param1: java.util.List<com.stripe.android.model.PaymentMethod>, param2: com.stripe.android.paymentsheet.PaymentSheet.Configuration, param3: boolean, param4: com.stripe.android.paymentsheet.model.PaymentSelection.New.Card, param5: java.lang.Integer, param6: string, param7: boolean, param8: java.util.Set<string>);
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public component5(): com.stripe.android.paymentsheet.model.PaymentSelection.New.Card;
						public component3(): com.stripe.android.paymentsheet.PaymentSheet.Configuration;
						public getInjectorKey(): string;
						public getStripeIntent(): com.stripe.android.model.StripeIntent;
						public component6(): java.lang.Integer;
						public component9(): java.util.Set<string>;
						public getPaymentMethods(): java.util.List<com.stripe.android.model.PaymentMethod>;
						public component4(): boolean;
						public describeContents(): number;
						public component7(): string;
						public component1(): com.stripe.android.model.StripeIntent;
						public toString(): string;
						public getConfig(): com.stripe.android.paymentsheet.PaymentSheet.Configuration;
						public getNewCard(): com.stripe.android.paymentsheet.model.PaymentSelection.New.Card;
						public getStatusBarColor(): java.lang.Integer;
						public getProductUsage(): java.util.Set<string>;
						public component8(): boolean;
						public component2(): java.util.List<com.stripe.android.model.PaymentMethod>;
						public getEnableLogging(): boolean;
						public copy(param0: com.stripe.android.model.StripeIntent, param1: java.util.List<com.stripe.android.model.PaymentMethod>, param2: com.stripe.android.paymentsheet.PaymentSheet.Configuration, param3: boolean, param4: com.stripe.android.paymentsheet.model.PaymentSelection.New.Card, param5: java.lang.Integer, param6: string, param7: boolean, param8: java.util.Set<string>): com.stripe.android.paymentsheet.PaymentOptionContract.Args;
					}
					export module Args {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentOptionContract.Args.Companion>;
							public fromIntent$paymentsheet_release(param0: globalAndroid.content.Intent): com.stripe.android.paymentsheet.PaymentOptionContract.Args;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.PaymentOptionContract.Args> {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentOptionContract.Args.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.paymentsheet.PaymentOptionContract.Args>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.paymentsheet.PaymentOptionContract.Args;
						}
					}
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentOptionContract.Companion>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export abstract class PaymentOptionResult {
					public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentOptionResult>;
					public static Companion: com.stripe.android.paymentsheet.PaymentOptionResult.Companion;
					public getResultCode(): number;
					public toBundle(): globalAndroid.os.Bundle;
				}
				export module PaymentOptionResult {
					export class Canceled extends com.stripe.android.paymentsheet.PaymentOptionResult {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentOptionResult.Canceled>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.PaymentOptionResult.Canceled>;
						public static $stable: number;
						public describeContents(): number;
						public copy(param0: java.lang.Throwable): com.stripe.android.paymentsheet.PaymentOptionResult.Canceled;
						public constructor(param0: java.lang.Throwable);
						public getMostRecentError(): java.lang.Throwable;
						public component1(): java.lang.Throwable;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public toString(): string;
					}
					export module Canceled {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.PaymentOptionResult.Canceled> {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentOptionResult.Canceled.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.paymentsheet.PaymentOptionResult.Canceled>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.paymentsheet.PaymentOptionResult.Canceled;
						}
					}
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentOptionResult.Companion>;
					}
					export class Failed extends com.stripe.android.paymentsheet.PaymentOptionResult {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentOptionResult.Failed>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.PaymentOptionResult.Failed>;
						public static $stable: number;
						public describeContents(): number;
						public constructor(param0: java.lang.Throwable);
						public component1(): java.lang.Throwable;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public copy(param0: java.lang.Throwable): com.stripe.android.paymentsheet.PaymentOptionResult.Failed;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public toString(): string;
						public getError(): java.lang.Throwable;
					}
					export module Failed {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.PaymentOptionResult.Failed> {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentOptionResult.Failed.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.paymentsheet.PaymentOptionResult.Failed>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.paymentsheet.PaymentOptionResult.Failed;
						}
					}
					export class Succeeded extends com.stripe.android.paymentsheet.PaymentOptionResult {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentOptionResult.Succeeded>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.PaymentOptionResult.Succeeded>;
						public static $stable: number;
						public describeContents(): number;
						public component1(): com.stripe.android.paymentsheet.model.PaymentSelection;
						public constructor(param0: com.stripe.android.paymentsheet.model.PaymentSelection);
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public copy(param0: com.stripe.android.paymentsheet.model.PaymentSelection): com.stripe.android.paymentsheet.PaymentOptionResult.Succeeded;
						public getPaymentSelection(): com.stripe.android.paymentsheet.model.PaymentSelection;
						public toString(): string;
					}
					export module Succeeded {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.PaymentOptionResult.Succeeded> {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentOptionResult.Succeeded.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.paymentsheet.PaymentOptionResult.Succeeded>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.paymentsheet.PaymentOptionResult.Succeeded;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export class PaymentOptionsActivity extends com.stripe.android.paymentsheet.ui.BaseSheetActivity<com.stripe.android.paymentsheet.PaymentOptionResult> {
					public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentOptionsActivity>;
					public static Companion: com.stripe.android.paymentsheet.PaymentOptionsActivity.Companion;
					public static EXTRA_FRAGMENT_CONFIG: string;
					public static EXTRA_STARTER_ARGS: string;
					public setActivityResult(param0: com.stripe.android.paymentsheet.PaymentOptionResult): void;
					public getMessageView(): globalAndroid.widget.TextView;
					public onCreate(param0: globalAndroid.os.Bundle): void;
					public getViewModel(): com.stripe.android.paymentsheet.PaymentOptionsViewModel;
					public getAppbar(): com.google.android.material.appbar.AppBarLayout;
					public getFragmentContainerParent(): globalAndroid.view.ViewGroup;
					public getScrollView(): globalAndroid.widget.ScrollView;
					public getViewBinding$paymentsheet_release(): com.stripe.android.paymentsheet.databinding.ActivityPaymentOptionsBinding;
					public getViewModel(): com.stripe.android.paymentsheet.viewmodels.BaseSheetViewModel<any>;
					public getRootView(): globalAndroid.view.ViewGroup;
					public setActivityResult(param0: any): void;
					public constructor();
					public getBottomSheet(): globalAndroid.view.ViewGroup;
					public getViewModelFactory$paymentsheet_release(): androidx.lifecycle.ViewModelProvider.Factory;
					public getToolbar(): com.google.android.material.appbar.MaterialToolbar;
					public setViewModelFactory$paymentsheet_release(param0: androidx.lifecycle.ViewModelProvider.Factory): void;
					public getTestModeIndicator(): globalAndroid.widget.TextView;
				}
				export module PaymentOptionsActivity {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentOptionsActivity.Companion>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export class PaymentOptionsActivityStarter extends com.stripe.android.view.ActivityStarter<com.stripe.android.paymentsheet.PaymentOptionsActivity, com.stripe.android.paymentsheet.PaymentOptionContract.Args> {
					public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentOptionsActivityStarter>;
					public static Companion: com.stripe.android.paymentsheet.PaymentOptionsActivityStarter.Companion;
					public static REQUEST_CODE: number;
					public constructor(param0: globalAndroid.app.Activity, param1: java.lang.Class<any>, param2: number, param3: java.lang.Integer);
					public constructor(param0: globalAndroid.app.Activity, param1: androidx.fragment.app.Fragment, param2: java.lang.Class<any>, param3: number, param4: java.lang.Integer);
					public constructor(param0: androidx.fragment.app.Fragment, param1: java.lang.Class<any>, param2: number, param3: java.lang.Integer);
					public constructor(param0: globalAndroid.app.Activity);
				}
				export module PaymentOptionsActivityStarter {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentOptionsActivityStarter.Companion>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export class PaymentOptionsAdapter extends androidx.recyclerview.widget.RecyclerView.Adapter<com.stripe.android.paymentsheet.PaymentOptionsAdapter.PaymentOptionViewHolder> {
					public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentOptionsAdapter>;
					public setEditing(param0: boolean): void;
					public onBindViewHolder(param0: com.stripe.android.paymentsheet.PaymentOptionsAdapter.PaymentOptionViewHolder, param1: number): void;
					public constructor(param0: boolean, param1: kotlin.jvm.functions.Function2<any, any, kotlin.Unit>, param2: kotlin.jvm.functions.Function1<any, kotlin.Unit>, param3: globalAndroid.view.View.OnClickListener);
					public removeItem(param0: com.stripe.android.paymentsheet.PaymentOptionsAdapter.Item): void;
					public getPaymentOptionSelectedListener(): kotlin.jvm.functions.Function2<com.stripe.android.paymentsheet.model.PaymentSelection, java.lang.Boolean, kotlin.Unit>;
					public isEnabled$paymentsheet_release(): boolean;
					public getPaymentMethodDeleteListener(): kotlin.jvm.functions.Function1<com.stripe.android.paymentsheet.PaymentOptionsAdapter.Item.SavedPaymentMethod, kotlin.Unit>;
					public setItems(param0: com.stripe.android.paymentsheet.model.FragmentConfig, param1: java.util.List<com.stripe.android.model.PaymentMethod>, param2: com.stripe.android.paymentsheet.model.PaymentSelection): void;
					public getItemCount(): number;
					public setItems$paymentsheet_release(param0: java.util.List<any>): void;
					public getAddCardClickListener(): globalAndroid.view.View.OnClickListener;
					public getItemViewType(param0: number): number;
					public getItemId(param0: number): number;
					public getItems$paymentsheet_release(): java.util.List<com.stripe.android.paymentsheet.PaymentOptionsAdapter.Item>;
					public onCreateViewHolder(param0: globalAndroid.view.ViewGroup, param1: number): com.stripe.android.paymentsheet.PaymentOptionsAdapter.PaymentOptionViewHolder;
					public getSelectedItem$paymentsheet_release(): com.stripe.android.paymentsheet.PaymentOptionsAdapter.Item;
					public setEnabled$paymentsheet_release(param0: boolean): void;
					public onItemSelected$paymentsheet_release(param0: number, param1: boolean): void;
				}
				export module PaymentOptionsAdapter {
					export class AddNewPaymentMethodViewHolder extends com.stripe.android.paymentsheet.PaymentOptionsAdapter.PaymentOptionViewHolder {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentOptionsAdapter.AddNewPaymentMethodViewHolder>;
						public constructor(param0: globalAndroid.view.ViewGroup);
						public constructor(param0: com.stripe.android.paymentsheet.databinding.LayoutPaymentsheetAddNewPaymentMethodItemBinding);
						public setEnabled(param0: boolean): void;
						public getCardView(): globalAndroid.view.View;
					}
					export class GooglePayViewHolder extends com.stripe.android.paymentsheet.PaymentOptionsAdapter.PaymentOptionViewHolder {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentOptionsAdapter.GooglePayViewHolder>;
						public constructor(param0: globalAndroid.view.ViewGroup);
						public setSelected(param0: boolean): void;
						public constructor(param0: com.stripe.android.paymentsheet.databinding.LayoutPaymentsheetGooglePayItemBinding);
						public setEnabled(param0: boolean): void;
						public getCardView(): globalAndroid.view.View;
					}
					export abstract class Item {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentOptionsAdapter.Item>;
						public getViewType(): com.stripe.android.paymentsheet.PaymentOptionsAdapter.ViewType;
					}
					export module Item {
						export class AddCard extends com.stripe.android.paymentsheet.PaymentOptionsAdapter.Item {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentOptionsAdapter.Item.AddCard>;
							public static INSTANCE: com.stripe.android.paymentsheet.PaymentOptionsAdapter.Item.AddCard;
							public static $stable: number;
							public getViewType(): com.stripe.android.paymentsheet.PaymentOptionsAdapter.ViewType;
						}
						export class GooglePay extends com.stripe.android.paymentsheet.PaymentOptionsAdapter.Item {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentOptionsAdapter.Item.GooglePay>;
							public static INSTANCE: com.stripe.android.paymentsheet.PaymentOptionsAdapter.Item.GooglePay;
							public static $stable: number;
							public getViewType(): com.stripe.android.paymentsheet.PaymentOptionsAdapter.ViewType;
						}
						export class SavedPaymentMethod extends com.stripe.android.paymentsheet.PaymentOptionsAdapter.Item {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentOptionsAdapter.Item.SavedPaymentMethod>;
							public static $stable: number;
							public getViewType(): com.stripe.android.paymentsheet.PaymentOptionsAdapter.ViewType;
							public constructor(param0: com.stripe.android.model.PaymentMethod);
							public hashCode(): number;
							public getPaymentMethod(): com.stripe.android.model.PaymentMethod;
							public component1(): com.stripe.android.model.PaymentMethod;
							public toString(): string;
							public equals(param0: any): boolean;
							public getDescription(param0: globalAndroid.content.res.Resources): string;
							public copy(param0: com.stripe.android.model.PaymentMethod): com.stripe.android.paymentsheet.PaymentOptionsAdapter.Item.SavedPaymentMethod;
						}
						export module SavedPaymentMethod {
							export class WhenMappings {
								public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentOptionsAdapter.Item.SavedPaymentMethod.WhenMappings>;
							}
						}
					}
					export abstract class PaymentOptionViewHolder {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentOptionsAdapter.PaymentOptionViewHolder>;
						public cardStrokeWidth(param0: boolean): number;
						public constructor(param0: globalAndroid.view.ViewGroup);
						public setEnabled(param0: boolean): void;
						public getCardView(): globalAndroid.view.View;
					}
					export class SavedPaymentMethodViewHolder extends com.stripe.android.paymentsheet.PaymentOptionsAdapter.PaymentOptionViewHolder {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentOptionsAdapter.SavedPaymentMethodViewHolder>;
						public setEditing(param0: boolean): void;
						public constructor(param0: globalAndroid.view.ViewGroup);
						public constructor(param0: com.stripe.android.paymentsheet.databinding.LayoutPaymentsheetPaymentMethodItemBinding, param1: kotlin.jvm.functions.Function1<any, kotlin.Unit>);
						public setSelected(param0: boolean): void;
						public constructor(param0: globalAndroid.view.ViewGroup, param1: kotlin.jvm.functions.Function1<any, kotlin.Unit>);
						public bindSavedPaymentMethod(param0: com.stripe.android.paymentsheet.PaymentOptionsAdapter.Item.SavedPaymentMethod): void;
						public setEnabled(param0: boolean): void;
						public getCardView(): globalAndroid.view.View;
					}
					export class ViewType {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentOptionsAdapter.ViewType>;
						public static SavedPaymentMethod: com.stripe.android.paymentsheet.PaymentOptionsAdapter.ViewType;
						public static AddCard: com.stripe.android.paymentsheet.PaymentOptionsAdapter.ViewType;
						public static GooglePay: com.stripe.android.paymentsheet.PaymentOptionsAdapter.ViewType;
						public static values(): androidNative.Array<com.stripe.android.paymentsheet.PaymentOptionsAdapter.ViewType>;
						public static valueOf(param0: string): com.stripe.android.paymentsheet.PaymentOptionsAdapter.ViewType;
					}
					export class WhenMappings {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentOptionsAdapter.WhenMappings>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export class PaymentOptionsAddPaymentMethodFragment extends com.stripe.android.paymentsheet.BaseAddPaymentMethodFragment {
					public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentOptionsAddPaymentMethodFragment>;
					public constructor(param0: com.stripe.android.paymentsheet.analytics.EventReporter);
					public getSheetViewModel(): com.stripe.android.paymentsheet.PaymentOptionsViewModel;
					public getSheetViewModel(): com.stripe.android.paymentsheet.viewmodels.BaseSheetViewModel<any>;
					public getViewModelFactory(): androidx.lifecycle.ViewModelProvider.Factory;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export class PaymentOptionsListFragment extends com.stripe.android.paymentsheet.BasePaymentMethodsListFragment {
					public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentOptionsListFragment>;
					public constructor(param0: com.stripe.android.paymentsheet.analytics.EventReporter);
					public constructor(param0: boolean, param1: com.stripe.android.paymentsheet.analytics.EventReporter);
					public getSheetViewModel(): com.stripe.android.paymentsheet.PaymentOptionsViewModel;
					public onPaymentOptionSelected(param0: com.stripe.android.paymentsheet.model.PaymentSelection, param1: boolean): void;
					public getSheetViewModel(): com.stripe.android.paymentsheet.viewmodels.BaseSheetViewModel<any>;
					public transitionToAddPaymentMethod(): void;
					public onViewCreated(param0: globalAndroid.view.View, param1: globalAndroid.os.Bundle): void;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export class PaymentOptionsViewModel extends com.stripe.android.paymentsheet.viewmodels.BaseSheetViewModel<com.stripe.android.paymentsheet.PaymentOptionsViewModel.TransitionTarget> {
					public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentOptionsViewModel>;
					public constructor(param0: com.stripe.android.paymentsheet.PaymentOptionContract.Args, param1: kotlin.jvm.functions.Function1<com.stripe.android.paymentsheet.PaymentSheet.CustomerConfiguration, com.stripe.android.paymentsheet.PrefsRepository>, param2: com.stripe.android.paymentsheet.analytics.EventReporter, param3: com.stripe.android.paymentsheet.repositories.CustomerRepository, param4: kotlin.coroutines.CoroutineContext, param5: globalAndroid.app.Application, param6: com.stripe.android.core.Logger, param7: string, param8: com.stripe.android.ui.core.forms.resources.ResourceRepository);
					public onUserSelection(): void;
					public constructor(param0: globalAndroid.app.Application, param1: com.stripe.android.paymentsheet.PaymentSheet.Configuration, param2: com.stripe.android.paymentsheet.analytics.EventReporter, param3: com.stripe.android.paymentsheet.repositories.CustomerRepository, param4: com.stripe.android.paymentsheet.PrefsRepository, param5: kotlin.coroutines.CoroutineContext, param6: com.stripe.android.core.Logger, param7: string, param8: com.stripe.android.ui.core.forms.resources.ResourceRepository);
					public onUserCancel(): void;
					public get_paymentOptionResult$paymentsheet_release(): androidx.lifecycle.MutableLiveData<com.stripe.android.paymentsheet.PaymentOptionResult>;
					public onFatal(param0: java.lang.Throwable): void;
					public getNewCard(): com.stripe.android.paymentsheet.model.PaymentSelection.New.Card;
					public setNewCard(param0: com.stripe.android.paymentsheet.model.PaymentSelection.New.Card): void;
					public getPaymentOptionResult$paymentsheet_release(): androidx.lifecycle.LiveData<com.stripe.android.paymentsheet.PaymentOptionResult>;
					public resolveTransitionTarget(param0: com.stripe.android.paymentsheet.model.FragmentConfig): void;
				}
				export module PaymentOptionsViewModel {
					export class Factory extends java.lang.Object {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentOptionsViewModel.Factory>;
						public subComponentBuilderProvider: javax.inject.Provider<com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelSubcomponent.Builder>;
						public fallbackInitialize(param0: any): void;
						public create(param0: java.lang.Class): androidx.lifecycle.ViewModel;
						public constructor(param0: kotlin.jvm.functions.Function0<globalAndroid.app.Application>, param1: kotlin.jvm.functions.Function0<com.stripe.android.paymentsheet.PaymentOptionContract.Args>);
						public getSubComponentBuilderProvider(): javax.inject.Provider<com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelSubcomponent.Builder>;
						public fallbackInitialize(param0: com.stripe.android.paymentsheet.PaymentOptionsViewModel.Factory.FallbackInitializeParam): void;
						public setSubComponentBuilderProvider(param0: javax.inject.Provider<com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelSubcomponent.Builder>): void;
					}
					export module Factory {
						export class FallbackInitializeParam {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentOptionsViewModel.Factory.FallbackInitializeParam>;
							public constructor(param0: globalAndroid.app.Application, param1: java.util.Set<string>);
							public hashCode(): number;
							public getProductUsage(): java.util.Set<string>;
							public copy(param0: globalAndroid.app.Application, param1: java.util.Set<string>): com.stripe.android.paymentsheet.PaymentOptionsViewModel.Factory.FallbackInitializeParam;
							public getApplication(): globalAndroid.app.Application;
							public component2(): java.util.Set<string>;
							public component1(): globalAndroid.app.Application;
							public toString(): string;
							public equals(param0: any): boolean;
						}
					}
					export abstract class TransitionTarget {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentOptionsViewModel.TransitionTarget>;
						public getFragmentConfig(): com.stripe.android.paymentsheet.model.FragmentConfig;
					}
					export module TransitionTarget {
						export class AddPaymentMethodFull extends com.stripe.android.paymentsheet.PaymentOptionsViewModel.TransitionTarget {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentOptionsViewModel.TransitionTarget.AddPaymentMethodFull>;
							public static $stable: number;
							public constructor(param0: com.stripe.android.paymentsheet.model.FragmentConfig);
							public getFragmentConfig(): com.stripe.android.paymentsheet.model.FragmentConfig;
							public hashCode(): number;
							public component1(): com.stripe.android.paymentsheet.model.FragmentConfig;
							public copy(param0: com.stripe.android.paymentsheet.model.FragmentConfig): com.stripe.android.paymentsheet.PaymentOptionsViewModel.TransitionTarget.AddPaymentMethodFull;
							public toString(): string;
							public equals(param0: any): boolean;
						}
						export class AddPaymentMethodSheet extends com.stripe.android.paymentsheet.PaymentOptionsViewModel.TransitionTarget {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentOptionsViewModel.TransitionTarget.AddPaymentMethodSheet>;
							public static $stable: number;
							public constructor(param0: com.stripe.android.paymentsheet.model.FragmentConfig);
							public getFragmentConfig(): com.stripe.android.paymentsheet.model.FragmentConfig;
							public hashCode(): number;
							public component1(): com.stripe.android.paymentsheet.model.FragmentConfig;
							public toString(): string;
							public equals(param0: any): boolean;
							public copy(param0: com.stripe.android.paymentsheet.model.FragmentConfig): com.stripe.android.paymentsheet.PaymentOptionsViewModel.TransitionTarget.AddPaymentMethodSheet;
						}
						export class SelectSavedPaymentMethod extends com.stripe.android.paymentsheet.PaymentOptionsViewModel.TransitionTarget {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentOptionsViewModel.TransitionTarget.SelectSavedPaymentMethod>;
							public static $stable: number;
							public constructor(param0: com.stripe.android.paymentsheet.model.FragmentConfig);
							public getFragmentConfig(): com.stripe.android.paymentsheet.model.FragmentConfig;
							public copy(param0: com.stripe.android.paymentsheet.model.FragmentConfig): com.stripe.android.paymentsheet.PaymentOptionsViewModel.TransitionTarget.SelectSavedPaymentMethod;
							public hashCode(): number;
							public component1(): com.stripe.android.paymentsheet.model.FragmentConfig;
							public toString(): string;
							public equals(param0: any): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export class PaymentOptionsViewModel_Factory extends dagger.internal.Factory<com.stripe.android.paymentsheet.PaymentOptionsViewModel> {
					public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentOptionsViewModel_Factory>;
					public constructor(param0: javax.inject.Provider<com.stripe.android.paymentsheet.PaymentOptionContract.Args>, param1: javax.inject.Provider<kotlin.jvm.functions.Function1<com.stripe.android.paymentsheet.PaymentSheet.CustomerConfiguration, com.stripe.android.paymentsheet.PrefsRepository>>, param2: javax.inject.Provider<com.stripe.android.paymentsheet.analytics.EventReporter>, param3: javax.inject.Provider<com.stripe.android.paymentsheet.repositories.CustomerRepository>, param4: javax.inject.Provider<kotlin.coroutines.CoroutineContext>, param5: javax.inject.Provider<globalAndroid.app.Application>, param6: javax.inject.Provider<com.stripe.android.core.Logger>, param7: javax.inject.Provider<string>, param8: javax.inject.Provider<com.stripe.android.ui.core.forms.resources.ResourceRepository>);
					public static create(param0: javax.inject.Provider<com.stripe.android.paymentsheet.PaymentOptionContract.Args>, param1: javax.inject.Provider<kotlin.jvm.functions.Function1<com.stripe.android.paymentsheet.PaymentSheet.CustomerConfiguration, com.stripe.android.paymentsheet.PrefsRepository>>, param2: javax.inject.Provider<com.stripe.android.paymentsheet.analytics.EventReporter>, param3: javax.inject.Provider<com.stripe.android.paymentsheet.repositories.CustomerRepository>, param4: javax.inject.Provider<kotlin.coroutines.CoroutineContext>, param5: javax.inject.Provider<globalAndroid.app.Application>, param6: javax.inject.Provider<com.stripe.android.core.Logger>, param7: javax.inject.Provider<string>, param8: javax.inject.Provider<com.stripe.android.ui.core.forms.resources.ResourceRepository>): com.stripe.android.paymentsheet.PaymentOptionsViewModel_Factory;
					public get(): com.stripe.android.paymentsheet.PaymentOptionsViewModel;
					public static newInstance(param0: com.stripe.android.paymentsheet.PaymentOptionContract.Args, param1: kotlin.jvm.functions.Function1<com.stripe.android.paymentsheet.PaymentSheet.CustomerConfiguration, com.stripe.android.paymentsheet.PrefsRepository>, param2: com.stripe.android.paymentsheet.analytics.EventReporter, param3: com.stripe.android.paymentsheet.repositories.CustomerRepository, param4: kotlin.coroutines.CoroutineContext, param5: globalAndroid.app.Application, param6: com.stripe.android.core.Logger, param7: string, param8: com.stripe.android.ui.core.forms.resources.ResourceRepository): com.stripe.android.paymentsheet.PaymentOptionsViewModel;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export class PaymentOptionsViewModel_Factory_MembersInjector extends dagger.MembersInjector<com.stripe.android.paymentsheet.PaymentOptionsViewModel.Factory> {
					public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentOptionsViewModel_Factory_MembersInjector>;
					public static create(param0: javax.inject.Provider<com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelSubcomponent.Builder>): dagger.MembersInjector<com.stripe.android.paymentsheet.PaymentOptionsViewModel.Factory>;
					public static injectSubComponentBuilderProvider(param0: com.stripe.android.paymentsheet.PaymentOptionsViewModel.Factory, param1: javax.inject.Provider<com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelSubcomponent.Builder>): void;
					public injectMembers(param0: com.stripe.android.paymentsheet.PaymentOptionsViewModel.Factory): void;
					public constructor(param0: javax.inject.Provider<com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelSubcomponent.Builder>);
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export class PaymentSheet {
					public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheet>;
					public static $stable: number;
					public presentWithPaymentIntent(param0: string, param1: com.stripe.android.paymentsheet.PaymentSheet.Configuration): void;
					public presentWithPaymentIntent(param0: string): void;
					public presentWithSetupIntent(param0: string, param1: com.stripe.android.paymentsheet.PaymentSheet.Configuration): void;
					public constructor(param0: androidx.activity.ComponentActivity, param1: com.stripe.android.paymentsheet.PaymentSheetResultCallback);
					public constructor(param0: com.stripe.android.paymentsheet.PaymentSheetLauncher);
					public presentWithSetupIntent(param0: string): void;
					public constructor(param0: androidx.fragment.app.Fragment, param1: com.stripe.android.paymentsheet.PaymentSheetResultCallback);
				}
				export module PaymentSheet {
					export class Address {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheet.Address>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.PaymentSheet.Address>;
						public static $stable: number;
						public component3(): string;
						public describeContents(): number;
						public constructor();
						public component5(): string;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getPostalCode(): string;
						public constructor(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string);
						public copy(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string): com.stripe.android.paymentsheet.PaymentSheet.Address;
						public getLine2(): string;
						public toString(): string;
						public component4(): string;
						public getCountry(): string;
						public getCity(): string;
						public getState(): string;
						public component2(): string;
						public component6(): string;
						public getLine1(): string;
					}
					export module Address {
						export class Builder {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheet.Address.Builder>;
							public static $stable: number;
							public constructor();
							public postalCode(param0: string): com.stripe.android.paymentsheet.PaymentSheet.Address.Builder;
							public country(param0: string): com.stripe.android.paymentsheet.PaymentSheet.Address.Builder;
							public line2(param0: string): com.stripe.android.paymentsheet.PaymentSheet.Address.Builder;
							public build(): com.stripe.android.paymentsheet.PaymentSheet.Address;
							public state(param0: string): com.stripe.android.paymentsheet.PaymentSheet.Address.Builder;
							public city(param0: string): com.stripe.android.paymentsheet.PaymentSheet.Address.Builder;
							public line1(param0: string): com.stripe.android.paymentsheet.PaymentSheet.Address.Builder;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.PaymentSheet.Address> {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheet.Address.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.paymentsheet.PaymentSheet.Address>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.paymentsheet.PaymentSheet.Address;
						}
					}
					export class BillingDetails {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheet.BillingDetails>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.PaymentSheet.BillingDetails>;
						public static $stable: number;
						public component1(): com.stripe.android.paymentsheet.PaymentSheet.Address;
						public component3(): string;
						public describeContents(): number;
						public constructor();
						public getEmail(): string;
						public copy(param0: com.stripe.android.paymentsheet.PaymentSheet.Address, param1: string, param2: string, param3: string): com.stripe.android.paymentsheet.PaymentSheet.BillingDetails;
						public getPhone(): string;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getName(): string;
						public toString(): string;
						public component4(): string;
						public constructor(param0: com.stripe.android.paymentsheet.PaymentSheet.Address, param1: string, param2: string, param3: string);
						public component2(): string;
						public getAddress(): com.stripe.android.paymentsheet.PaymentSheet.Address;
					}
					export module BillingDetails {
						export class Builder {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheet.BillingDetails.Builder>;
							public static $stable: number;
							public constructor();
							public email(param0: string): com.stripe.android.paymentsheet.PaymentSheet.BillingDetails.Builder;
							public phone(param0: string): com.stripe.android.paymentsheet.PaymentSheet.BillingDetails.Builder;
							public build(): com.stripe.android.paymentsheet.PaymentSheet.BillingDetails;
							public address(param0: com.stripe.android.paymentsheet.PaymentSheet.Address.Builder): com.stripe.android.paymentsheet.PaymentSheet.BillingDetails.Builder;
							public name(param0: string): com.stripe.android.paymentsheet.PaymentSheet.BillingDetails.Builder;
							public address(param0: com.stripe.android.paymentsheet.PaymentSheet.Address): com.stripe.android.paymentsheet.PaymentSheet.BillingDetails.Builder;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.PaymentSheet.BillingDetails> {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheet.BillingDetails.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.paymentsheet.PaymentSheet.BillingDetails>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.paymentsheet.PaymentSheet.BillingDetails;
						}
					}
					export class Configuration {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheet.Configuration>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.PaymentSheet.Configuration>;
						public static $stable: number;
						public constructor(param0: string, param1: com.stripe.android.paymentsheet.PaymentSheet.CustomerConfiguration, param2: com.stripe.android.paymentsheet.PaymentSheet.GooglePayConfiguration, param3: globalAndroid.content.res.ColorStateList);
						public describeContents(): number;
						public getCustomer(): com.stripe.android.paymentsheet.PaymentSheet.CustomerConfiguration;
						public component6(): boolean;
						public constructor(param0: string, param1: com.stripe.android.paymentsheet.PaymentSheet.CustomerConfiguration, param2: com.stripe.android.paymentsheet.PaymentSheet.GooglePayConfiguration, param3: globalAndroid.content.res.ColorStateList, param4: com.stripe.android.paymentsheet.PaymentSheet.BillingDetails);
						public getPrimaryButtonColor(): globalAndroid.content.res.ColorStateList;
						public component2(): com.stripe.android.paymentsheet.PaymentSheet.CustomerConfiguration;
						public component3(): com.stripe.android.paymentsheet.PaymentSheet.GooglePayConfiguration;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public component1(): string;
						public component5(): com.stripe.android.paymentsheet.PaymentSheet.BillingDetails;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public constructor(param0: string, param1: com.stripe.android.paymentsheet.PaymentSheet.CustomerConfiguration);
						public toString(): string;
						public getDefaultBillingDetails(): com.stripe.android.paymentsheet.PaymentSheet.BillingDetails;
						public copy(param0: string, param1: com.stripe.android.paymentsheet.PaymentSheet.CustomerConfiguration, param2: com.stripe.android.paymentsheet.PaymentSheet.GooglePayConfiguration, param3: globalAndroid.content.res.ColorStateList, param4: com.stripe.android.paymentsheet.PaymentSheet.BillingDetails, param5: boolean): com.stripe.android.paymentsheet.PaymentSheet.Configuration;
						public constructor(param0: string, param1: com.stripe.android.paymentsheet.PaymentSheet.CustomerConfiguration, param2: com.stripe.android.paymentsheet.PaymentSheet.GooglePayConfiguration, param3: globalAndroid.content.res.ColorStateList, param4: com.stripe.android.paymentsheet.PaymentSheet.BillingDetails, param5: boolean);
						public constructor(param0: string, param1: com.stripe.android.paymentsheet.PaymentSheet.CustomerConfiguration, param2: com.stripe.android.paymentsheet.PaymentSheet.GooglePayConfiguration);
						public getAllowsDelayedPaymentMethods(): boolean;
						public component4(): globalAndroid.content.res.ColorStateList;
						public getGooglePay(): com.stripe.android.paymentsheet.PaymentSheet.GooglePayConfiguration;
						public getMerchantDisplayName(): string;
						public constructor(param0: string);
					}
					export module Configuration {
						export class Builder {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheet.Configuration.Builder>;
							public static $stable: number;
							public allowsDelayedPaymentMethods(param0: boolean): com.stripe.android.paymentsheet.PaymentSheet.Configuration.Builder;
							public constructor(param0: string);
							public defaultBillingDetails(param0: com.stripe.android.paymentsheet.PaymentSheet.BillingDetails): com.stripe.android.paymentsheet.PaymentSheet.Configuration.Builder;
							public primaryButtonColor(param0: globalAndroid.content.res.ColorStateList): com.stripe.android.paymentsheet.PaymentSheet.Configuration.Builder;
							public build(): com.stripe.android.paymentsheet.PaymentSheet.Configuration;
							public merchantDisplayName(param0: string): com.stripe.android.paymentsheet.PaymentSheet.Configuration.Builder;
							public googlePay(param0: com.stripe.android.paymentsheet.PaymentSheet.GooglePayConfiguration): com.stripe.android.paymentsheet.PaymentSheet.Configuration.Builder;
							public customer(param0: com.stripe.android.paymentsheet.PaymentSheet.CustomerConfiguration): com.stripe.android.paymentsheet.PaymentSheet.Configuration.Builder;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.PaymentSheet.Configuration> {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheet.Configuration.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.paymentsheet.PaymentSheet.Configuration;
							public newArray(param0: number): androidNative.Array<com.stripe.android.paymentsheet.PaymentSheet.Configuration>;
						}
					}
					export class CustomerConfiguration {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheet.CustomerConfiguration>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.PaymentSheet.CustomerConfiguration>;
						public static $stable: number;
						public describeContents(): number;
						public component2(): string;
						public copy(param0: string, param1: string): com.stripe.android.paymentsheet.PaymentSheet.CustomerConfiguration;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getId(): string;
						public constructor(param0: string, param1: string);
						public getEphemeralKeySecret(): string;
						public toString(): string;
					}
					export module CustomerConfiguration {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.PaymentSheet.CustomerConfiguration> {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheet.CustomerConfiguration.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.paymentsheet.PaymentSheet.CustomerConfiguration>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.paymentsheet.PaymentSheet.CustomerConfiguration;
						}
					}
					export class FlowController {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheet.FlowController>;
						/**
						 * Constructs a new instance of the com.stripe.android.paymentsheet.PaymentSheet$FlowController interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							configureWithPaymentIntent(param0: string, param1: com.stripe.android.paymentsheet.PaymentSheet.Configuration, param2: com.stripe.android.paymentsheet.PaymentSheet.FlowController.ConfigCallback): void;
							configureWithSetupIntent(param0: string, param1: com.stripe.android.paymentsheet.PaymentSheet.Configuration, param2: com.stripe.android.paymentsheet.PaymentSheet.FlowController.ConfigCallback): void;
							getPaymentOption(): com.stripe.android.paymentsheet.model.PaymentOption;
							presentPaymentOptions(): void;
							confirm(): void;
							create(param0: androidx.activity.ComponentActivity, param1: com.stripe.android.paymentsheet.PaymentOptionCallback, param2: com.stripe.android.paymentsheet.PaymentSheetResultCallback): com.stripe.android.paymentsheet.PaymentSheet.FlowController;
							create(param0: androidx.fragment.app.Fragment, param1: com.stripe.android.paymentsheet.PaymentOptionCallback, param2: com.stripe.android.paymentsheet.PaymentSheetResultCallback): com.stripe.android.paymentsheet.PaymentSheet.FlowController;
							<clinit>(): void;
						});
						public constructor();
						public static Companion: com.stripe.android.paymentsheet.PaymentSheet.FlowController.Companion;
						public static create(param0: androidx.fragment.app.Fragment, param1: com.stripe.android.paymentsheet.PaymentOptionCallback, param2: com.stripe.android.paymentsheet.PaymentSheetResultCallback): com.stripe.android.paymentsheet.PaymentSheet.FlowController;
						public confirm(): void;
						public presentPaymentOptions(): void;
						public configureWithPaymentIntent(param0: string, param1: com.stripe.android.paymentsheet.PaymentSheet.Configuration, param2: com.stripe.android.paymentsheet.PaymentSheet.FlowController.ConfigCallback): void;
						public static create(param0: androidx.activity.ComponentActivity, param1: com.stripe.android.paymentsheet.PaymentOptionCallback, param2: com.stripe.android.paymentsheet.PaymentSheetResultCallback): com.stripe.android.paymentsheet.PaymentSheet.FlowController;
						public getPaymentOption(): com.stripe.android.paymentsheet.model.PaymentOption;
						public configureWithSetupIntent(param0: string, param1: com.stripe.android.paymentsheet.PaymentSheet.Configuration, param2: com.stripe.android.paymentsheet.PaymentSheet.FlowController.ConfigCallback): void;
					}
					export module FlowController {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheet.FlowController.Companion>;
							public create(param0: androidx.fragment.app.Fragment, param1: com.stripe.android.paymentsheet.PaymentOptionCallback, param2: com.stripe.android.paymentsheet.PaymentSheetResultCallback): com.stripe.android.paymentsheet.PaymentSheet.FlowController;
							public create(param0: androidx.activity.ComponentActivity, param1: com.stripe.android.paymentsheet.PaymentOptionCallback, param2: com.stripe.android.paymentsheet.PaymentSheetResultCallback): com.stripe.android.paymentsheet.PaymentSheet.FlowController;
						}
						export class ConfigCallback {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheet.FlowController.ConfigCallback>;
							/**
							 * Constructs a new instance of the com.stripe.android.paymentsheet.PaymentSheet$FlowController$ConfigCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onConfigured(param0: boolean, param1: java.lang.Throwable): void;
							});
							public constructor();
							public onConfigured(param0: boolean, param1: java.lang.Throwable): void;
						}
						export class DefaultImpls {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheet.FlowController.DefaultImpls>;
						}
						export abstract class Result {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheet.FlowController.Result>;
							public static $stable: number;
						}
						export module Result {
							export class Failure extends com.stripe.android.paymentsheet.PaymentSheet.FlowController.Result {
								public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheet.FlowController.Result.Failure>;
								public static $stable: number;
								public getError(): java.lang.Throwable;
								public constructor(param0: java.lang.Throwable);
							}
							export class Success extends com.stripe.android.paymentsheet.PaymentSheet.FlowController.Result {
								public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheet.FlowController.Result.Success>;
								public static INSTANCE: com.stripe.android.paymentsheet.PaymentSheet.FlowController.Result.Success;
								public static $stable: number;
							}
						}
					}
					export class GooglePayConfiguration {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheet.GooglePayConfiguration>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.PaymentSheet.GooglePayConfiguration>;
						public static $stable: number;
						public component3(): string;
						public describeContents(): number;
						public getEnvironment(): com.stripe.android.paymentsheet.PaymentSheet.GooglePayConfiguration.Environment;
						public component1(): com.stripe.android.paymentsheet.PaymentSheet.GooglePayConfiguration.Environment;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getCountryCode(): string;
						public getCurrencyCode(): string;
						public toString(): string;
						public constructor(param0: com.stripe.android.paymentsheet.PaymentSheet.GooglePayConfiguration.Environment, param1: string, param2: string);
						public component2(): string;
						public copy(param0: com.stripe.android.paymentsheet.PaymentSheet.GooglePayConfiguration.Environment, param1: string, param2: string): com.stripe.android.paymentsheet.PaymentSheet.GooglePayConfiguration;
						public constructor(param0: com.stripe.android.paymentsheet.PaymentSheet.GooglePayConfiguration.Environment, param1: string);
					}
					export module GooglePayConfiguration {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.PaymentSheet.GooglePayConfiguration> {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheet.GooglePayConfiguration.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.paymentsheet.PaymentSheet.GooglePayConfiguration>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.paymentsheet.PaymentSheet.GooglePayConfiguration;
						}
						export class Environment {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheet.GooglePayConfiguration.Environment>;
							public static Production: com.stripe.android.paymentsheet.PaymentSheet.GooglePayConfiguration.Environment;
							public static Test: com.stripe.android.paymentsheet.PaymentSheet.GooglePayConfiguration.Environment;
							public static values(): androidNative.Array<com.stripe.android.paymentsheet.PaymentSheet.GooglePayConfiguration.Environment>;
							public static valueOf(param0: string): com.stripe.android.paymentsheet.PaymentSheet.GooglePayConfiguration.Environment;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export class PaymentSheetActivity extends com.stripe.android.paymentsheet.ui.BaseSheetActivity<com.stripe.android.paymentsheet.PaymentSheetResult> {
					public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheetActivity>;
					public static Companion: com.stripe.android.paymentsheet.PaymentSheetActivity.Companion;
					public static EXTRA_FRAGMENT_CONFIG: string;
					public static EXTRA_STARTER_ARGS: string;
					public setActivityResult(param0: com.stripe.android.paymentsheet.PaymentSheetResult): void;
					public getMessageView(): globalAndroid.widget.TextView;
					public onCreate(param0: globalAndroid.os.Bundle): void;
					public getAppbar(): com.google.android.material.appbar.AppBarLayout;
					public onBackPressed(): void;
					public getViewBinding$paymentsheet_release(): com.stripe.android.paymentsheet.databinding.ActivityPaymentSheetBinding;
					public getFragmentContainerParent(): globalAndroid.view.ViewGroup;
					public getViewModel(): com.stripe.android.paymentsheet.PaymentSheetViewModel;
					public onDestroy(): void;
					public getScrollView(): globalAndroid.widget.ScrollView;
					public getViewModel(): com.stripe.android.paymentsheet.viewmodels.BaseSheetViewModel<any>;
					public getRootView(): globalAndroid.view.ViewGroup;
					public setActivityResult(param0: any): void;
					public constructor();
					public getBottomSheet(): globalAndroid.view.ViewGroup;
					public getViewModelFactory$paymentsheet_release(): androidx.lifecycle.ViewModelProvider.Factory;
					public getToolbar(): com.google.android.material.appbar.MaterialToolbar;
					public setViewModelFactory$paymentsheet_release(param0: androidx.lifecycle.ViewModelProvider.Factory): void;
					public getTestModeIndicator(): globalAndroid.widget.TextView;
				}
				export module PaymentSheetActivity {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheetActivity.Companion>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export class PaymentSheetActivityStarter extends com.stripe.android.view.ActivityStarter<com.stripe.android.paymentsheet.PaymentSheetActivity, com.stripe.android.paymentsheet.PaymentSheetContract.Args> {
					public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheetActivityStarter>;
					public static Companion: com.stripe.android.paymentsheet.PaymentSheetActivityStarter.Companion;
					public static REQUEST_CODE: number;
					public constructor(param0: globalAndroid.app.Activity, param1: java.lang.Class<any>, param2: number, param3: java.lang.Integer);
					public constructor(param0: globalAndroid.app.Activity, param1: androidx.fragment.app.Fragment, param2: java.lang.Class<any>, param3: number, param4: java.lang.Integer);
					public constructor(param0: androidx.fragment.app.Fragment, param1: java.lang.Class<any>, param2: number, param3: java.lang.Integer);
					public constructor(param0: globalAndroid.app.Activity);
				}
				export module PaymentSheetActivityStarter {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheetActivityStarter.Companion>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export class PaymentSheetAddPaymentMethodFragment extends com.stripe.android.paymentsheet.BaseAddPaymentMethodFragment {
					public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheetAddPaymentMethodFragment>;
					public constructor(param0: com.stripe.android.paymentsheet.analytics.EventReporter);
					public getSheetViewModel(): com.stripe.android.paymentsheet.viewmodels.BaseSheetViewModel<any>;
					public getSheetViewModel(): com.stripe.android.paymentsheet.PaymentSheetViewModel;
					public getViewModelFactory(): androidx.lifecycle.ViewModelProvider.Factory;
					public onViewCreated(param0: globalAndroid.view.View, param1: globalAndroid.os.Bundle): void;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export class PaymentSheetConfigurationKtxKt {
					public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheetConfigurationKtxKt>;
					public static validate(param0: com.stripe.android.paymentsheet.PaymentSheet.Configuration): void;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export class PaymentSheetContract extends androidx.activity.result.contract.ActivityResultContract<com.stripe.android.paymentsheet.PaymentSheetContract.Args, com.stripe.android.paymentsheet.PaymentSheetResult> {
					public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheetContract>;
					public static Companion: com.stripe.android.paymentsheet.PaymentSheetContract.Companion;
					public static $stable: number;
					public static EXTRA_ARGS: string;
					public createIntent(param0: globalAndroid.content.Context, param1: com.stripe.android.paymentsheet.PaymentSheetContract.Args): globalAndroid.content.Intent;
					public constructor();
					public parseResult(param0: number, param1: globalAndroid.content.Intent): com.stripe.android.paymentsheet.PaymentSheetResult;
				}
				export module PaymentSheetContract {
					export class Args extends com.stripe.android.view.ActivityStarter.Args {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheetContract.Args>;
						public static Companion: com.stripe.android.paymentsheet.PaymentSheetContract.Args.Companion;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.PaymentSheetContract.Args>;
						public static $stable: number;
						public component2$paymentsheet_release(): com.stripe.android.paymentsheet.PaymentSheet.Configuration;
						public describeContents(): number;
						public getConfig$paymentsheet_release(): com.stripe.android.paymentsheet.PaymentSheet.Configuration;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public getInjectorKey$paymentsheet_release(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getGooglePayConfig(): com.stripe.android.paymentsheet.PaymentSheet.GooglePayConfiguration;
						public getStatusBarColor$paymentsheet_release(): java.lang.Integer;
						public constructor(param0: com.stripe.android.paymentsheet.model.ClientSecret, param1: com.stripe.android.paymentsheet.PaymentSheet.Configuration, param2: java.lang.Integer, param3: string);
						public component4$paymentsheet_release(): string;
						public getClientSecret$paymentsheet_release(): com.stripe.android.paymentsheet.model.ClientSecret;
						public copy(param0: com.stripe.android.paymentsheet.model.ClientSecret, param1: com.stripe.android.paymentsheet.PaymentSheet.Configuration, param2: java.lang.Integer, param3: string): com.stripe.android.paymentsheet.PaymentSheetContract.Args;
						public toString(): string;
						public component1$paymentsheet_release(): com.stripe.android.paymentsheet.model.ClientSecret;
						public component3$paymentsheet_release(): java.lang.Integer;
					}
					export module Args {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheetContract.Args.Companion>;
							public createPaymentIntentArgsWithInjectorKey$paymentsheet_release(param0: string, param1: com.stripe.android.paymentsheet.PaymentSheet.Configuration, param2: string): com.stripe.android.paymentsheet.PaymentSheetContract.Args;
							public createSetupIntentArgsWithInjectorKey$paymentsheet_release(param0: string, param1: com.stripe.android.paymentsheet.PaymentSheet.Configuration, param2: string): com.stripe.android.paymentsheet.PaymentSheetContract.Args;
							public createSetupIntentArgs(param0: string, param1: com.stripe.android.paymentsheet.PaymentSheet.Configuration): com.stripe.android.paymentsheet.PaymentSheetContract.Args;
							public fromIntent$paymentsheet_release(param0: globalAndroid.content.Intent): com.stripe.android.paymentsheet.PaymentSheetContract.Args;
							public createPaymentIntentArgs(param0: string, param1: com.stripe.android.paymentsheet.PaymentSheet.Configuration): com.stripe.android.paymentsheet.PaymentSheetContract.Args;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.PaymentSheetContract.Args> {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheetContract.Args.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.paymentsheet.PaymentSheetContract.Args>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.paymentsheet.PaymentSheetContract.Args;
						}
					}
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheetContract.Companion>;
					}
					export class Result extends com.stripe.android.view.ActivityStarter.Result {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheetContract.Result>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.PaymentSheetContract.Result>;
						public describeContents(): number;
						public getPaymentSheetResult(): com.stripe.android.paymentsheet.PaymentSheetResult;
						public constructor(param0: com.stripe.android.paymentsheet.PaymentSheetResult);
						public component1(): com.stripe.android.paymentsheet.PaymentSheetResult;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public copy(param0: com.stripe.android.paymentsheet.PaymentSheetResult): com.stripe.android.paymentsheet.PaymentSheetContract.Result;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public toBundle(): globalAndroid.os.Bundle;
						public toString(): string;
					}
					export module Result {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.PaymentSheetContract.Result> {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheetContract.Result.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.paymentsheet.PaymentSheetContract.Result>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.paymentsheet.PaymentSheetContract.Result;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export class PaymentSheetLauncher {
					public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheetLauncher>;
					/**
					 * Constructs a new instance of the com.stripe.android.paymentsheet.PaymentSheetLauncher interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						presentWithPaymentIntent(param0: string, param1: com.stripe.android.paymentsheet.PaymentSheet.Configuration): void;
						presentWithSetupIntent(param0: string, param1: com.stripe.android.paymentsheet.PaymentSheet.Configuration): void;
					});
					public constructor();
					public presentWithPaymentIntent(param0: string, param1: com.stripe.android.paymentsheet.PaymentSheet.Configuration): void;
					public presentWithSetupIntent(param0: string, param1: com.stripe.android.paymentsheet.PaymentSheet.Configuration): void;
				}
				export module PaymentSheetLauncher {
					export class DefaultImpls {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheetLauncher.DefaultImpls>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export class PaymentSheetListFragment extends com.stripe.android.paymentsheet.BasePaymentMethodsListFragment {
					public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheetListFragment>;
					public constructor(param0: com.stripe.android.paymentsheet.analytics.EventReporter);
					public constructor(param0: boolean, param1: com.stripe.android.paymentsheet.analytics.EventReporter);
					public getSheetViewModel(): com.stripe.android.paymentsheet.viewmodels.BaseSheetViewModel<any>;
					public transitionToAddPaymentMethod(): void;
					public getSheetViewModel(): com.stripe.android.paymentsheet.PaymentSheetViewModel;
					public onViewCreated(param0: globalAndroid.view.View, param1: globalAndroid.os.Bundle): void;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export class PaymentSheetLoadingFragment {
					public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheetLoadingFragment>;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export abstract class PaymentSheetResult {
					public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheetResult>;
					public static $stable: number;
				}
				export module PaymentSheetResult {
					export class Canceled extends com.stripe.android.paymentsheet.PaymentSheetResult {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheetResult.Canceled>;
						public static INSTANCE: com.stripe.android.paymentsheet.PaymentSheetResult.Canceled;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.PaymentSheetResult.Canceled>;
						public static $stable: number;
						public describeContents(): number;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					}
					export module Canceled {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.PaymentSheetResult.Canceled> {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheetResult.Canceled.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.paymentsheet.PaymentSheetResult.Canceled>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.paymentsheet.PaymentSheetResult.Canceled;
						}
					}
					export class Completed extends com.stripe.android.paymentsheet.PaymentSheetResult {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheetResult.Completed>;
						public static INSTANCE: com.stripe.android.paymentsheet.PaymentSheetResult.Completed;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.PaymentSheetResult.Completed>;
						public static $stable: number;
						public describeContents(): number;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					}
					export module Completed {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.PaymentSheetResult.Completed> {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheetResult.Completed.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.paymentsheet.PaymentSheetResult.Completed;
							public newArray(param0: number): androidNative.Array<com.stripe.android.paymentsheet.PaymentSheetResult.Completed>;
						}
					}
					export class Failed extends com.stripe.android.paymentsheet.PaymentSheetResult {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheetResult.Failed>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.PaymentSheetResult.Failed>;
						public static $stable: number;
						public describeContents(): number;
						public constructor(param0: java.lang.Throwable);
						public component1(): java.lang.Throwable;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public copy(param0: java.lang.Throwable): com.stripe.android.paymentsheet.PaymentSheetResult.Failed;
						public toString(): string;
						public getError(): java.lang.Throwable;
					}
					export module Failed {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.PaymentSheetResult.Failed> {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheetResult.Failed.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.paymentsheet.PaymentSheetResult.Failed>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.paymentsheet.PaymentSheetResult.Failed;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export class PaymentSheetResultCallback {
					public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheetResultCallback>;
					/**
					 * Constructs a new instance of the com.stripe.android.paymentsheet.PaymentSheetResultCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onPaymentSheetResult(param0: com.stripe.android.paymentsheet.PaymentSheetResult): void;
					});
					public constructor();
					public onPaymentSheetResult(param0: com.stripe.android.paymentsheet.PaymentSheetResult): void;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export class PaymentSheetViewModel extends com.stripe.android.paymentsheet.viewmodels.BaseSheetViewModel<com.stripe.android.paymentsheet.PaymentSheetViewModel.TransitionTarget> {
					public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheetViewModel>;
					public checkout(param0: com.stripe.android.paymentsheet.PaymentSheetViewModel.CheckoutIdentifier): void;
					public getPaymentLauncher$paymentsheet_release(): com.stripe.android.payments.paymentlauncher.PaymentLauncher;
					public getGooglePayPaymentMethodLauncher$paymentsheet_release(): com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher;
					public onPaymentResult(param0: com.stripe.android.payments.paymentlauncher.PaymentResult): void;
					public onGooglePayResult$paymentsheet_release(param0: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Result): void;
					public constructor(param0: globalAndroid.app.Application, param1: com.stripe.android.paymentsheet.PaymentSheetContract.Args, param2: com.stripe.android.paymentsheet.analytics.EventReporter, param3: dagger.Lazy<com.stripe.android.PaymentConfiguration>, param4: com.stripe.android.paymentsheet.repositories.StripeIntentRepository, param5: com.stripe.android.paymentsheet.model.StripeIntentValidator, param6: com.stripe.android.paymentsheet.repositories.CustomerRepository, param7: com.stripe.android.paymentsheet.PrefsRepository, param8: com.stripe.android.ui.core.forms.resources.ResourceRepository, param9: com.stripe.android.payments.paymentlauncher.StripePaymentLauncherAssistedFactory, param10: com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherFactory, param11: com.stripe.android.core.Logger, param12: kotlin.coroutines.CoroutineContext, param13: string);
					public get_contentVisible$paymentsheet_release(): androidx.lifecycle.MutableLiveData<java.lang.Boolean>;
					public onUserCancel(): void;
					public getCheckoutIdentifier$paymentsheet_release(): com.stripe.android.paymentsheet.PaymentSheetViewModel.CheckoutIdentifier;
					public getGooglePayLauncherConfig$paymentsheet_release(): com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Config;
					public unregisterFromActivity(): void;
					public getArgs$paymentsheet_release(): com.stripe.android.paymentsheet.PaymentSheetContract.Args;
					public getContentVisible$paymentsheet_release(): androidx.lifecycle.LiveData<java.lang.Boolean>;
					public setContentVisible(param0: boolean): void;
					public getViewState$paymentsheet_release(): androidx.lifecycle.LiveData<com.stripe.android.paymentsheet.model.PaymentSheetViewState>;
					public get_viewState$paymentsheet_release(): androidx.lifecycle.MutableLiveData<com.stripe.android.paymentsheet.model.PaymentSheetViewState>;
					public setPaymentLauncher$paymentsheet_release(param0: com.stripe.android.payments.paymentlauncher.PaymentLauncher): void;
					public isProcessingPaymentIntent$paymentsheet_release(): boolean;
					public getStartConfirm$paymentsheet_release(): androidx.lifecycle.LiveData<com.stripe.android.paymentsheet.viewmodels.BaseSheetViewModel.Event<com.stripe.android.model.ConfirmStripeIntentParams>>;
					public setNewCard(param0: com.stripe.android.paymentsheet.model.PaymentSelection.New.Card): void;
					public confirmStripeIntent(param0: com.stripe.android.model.ConfirmStripeIntentParams): void;
					public getPaymentSheetResult$paymentsheet_release(): androidx.lifecycle.LiveData<com.stripe.android.paymentsheet.PaymentSheetResult>;
					public registerFromActivity(param0: androidx.activity.result.ActivityResultCaller): void;
					public get_paymentSheetResult$paymentsheet_release(): androidx.lifecycle.MutableLiveData<com.stripe.android.paymentsheet.PaymentSheetResult>;
					public constructor(param0: globalAndroid.app.Application, param1: com.stripe.android.paymentsheet.PaymentSheet.Configuration, param2: com.stripe.android.paymentsheet.analytics.EventReporter, param3: com.stripe.android.paymentsheet.repositories.CustomerRepository, param4: com.stripe.android.paymentsheet.PrefsRepository, param5: kotlin.coroutines.CoroutineContext, param6: com.stripe.android.core.Logger, param7: string, param8: com.stripe.android.ui.core.forms.resources.ResourceRepository);
					public getLastSelectedPaymentMethod$paymentsheet_release(): com.stripe.android.paymentsheet.model.PaymentSelection;
					public getNewCard(): com.stripe.android.paymentsheet.model.PaymentSelection.New.Card;
					public maybeFetchStripeIntent$paymentsheet_release(): void;
					public updatePaymentMethods(param0: com.stripe.android.model.StripeIntent): void;
					public setCheckoutIdentifier$paymentsheet_release(param0: com.stripe.android.paymentsheet.PaymentSheetViewModel.CheckoutIdentifier): void;
					public getButtonStateObservable$paymentsheet_release(param0: com.stripe.android.paymentsheet.PaymentSheetViewModel.CheckoutIdentifier): androidx.lifecycle.MediatorLiveData<com.stripe.android.paymentsheet.model.PaymentSheetViewState>;
					public onFatal(param0: java.lang.Throwable): void;
					public setupGooglePay(param0: kotlinx.coroutines.CoroutineScope, param1: androidx.activity.result.ActivityResultLauncher<com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherContract.Args>): void;
					public setLastSelectedPaymentMethod$paymentsheet_release(param0: com.stripe.android.paymentsheet.model.PaymentSelection): void;
					public setGooglePayPaymentMethodLauncher$paymentsheet_release(param0: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher): void;
				}
				export module PaymentSheetViewModel {
					export class CheckoutIdentifier {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheetViewModel.CheckoutIdentifier>;
						public static AddFragmentTopGooglePay: com.stripe.android.paymentsheet.PaymentSheetViewModel.CheckoutIdentifier;
						public static SheetBottomGooglePay: com.stripe.android.paymentsheet.PaymentSheetViewModel.CheckoutIdentifier;
						public static SheetBottomBuy: com.stripe.android.paymentsheet.PaymentSheetViewModel.CheckoutIdentifier;
						public static None: com.stripe.android.paymentsheet.PaymentSheetViewModel.CheckoutIdentifier;
						public static values(): androidNative.Array<com.stripe.android.paymentsheet.PaymentSheetViewModel.CheckoutIdentifier>;
						public static valueOf(param0: string): com.stripe.android.paymentsheet.PaymentSheetViewModel.CheckoutIdentifier;
					}
					export class Factory extends java.lang.Object {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheetViewModel.Factory>;
						public subComponentBuilderProvider: javax.inject.Provider<com.stripe.android.paymentsheet.injection.PaymentSheetViewModelSubcomponent.Builder>;
						public getSubComponentBuilderProvider(): javax.inject.Provider<com.stripe.android.paymentsheet.injection.PaymentSheetViewModelSubcomponent.Builder>;
						public fallbackInitialize(param0: any): void;
						public create(param0: java.lang.Class): androidx.lifecycle.ViewModel;
						public fallbackInitialize(param0: com.stripe.android.paymentsheet.PaymentSheetViewModel.Factory.FallbackInitializeParam): void;
						public setSubComponentBuilderProvider(param0: javax.inject.Provider<com.stripe.android.paymentsheet.injection.PaymentSheetViewModelSubcomponent.Builder>): void;
						public constructor(param0: kotlin.jvm.functions.Function0<any>, param1: kotlin.jvm.functions.Function0<com.stripe.android.paymentsheet.PaymentSheetContract.Args>);
					}
					export module Factory {
						export class FallbackInitializeParam {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheetViewModel.Factory.FallbackInitializeParam>;
							public hashCode(): number;
							public copy(param0: globalAndroid.app.Application): com.stripe.android.paymentsheet.PaymentSheetViewModel.Factory.FallbackInitializeParam;
							public getApplication(): globalAndroid.app.Application;
							public constructor(param0: globalAndroid.app.Application);
							public component1(): globalAndroid.app.Application;
							public toString(): string;
							public equals(param0: any): boolean;
						}
					}
					export abstract class TransitionTarget {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheetViewModel.TransitionTarget>;
						public getFragmentConfig(): com.stripe.android.paymentsheet.model.FragmentConfig;
					}
					export module TransitionTarget {
						export class AddPaymentMethodFull extends com.stripe.android.paymentsheet.PaymentSheetViewModel.TransitionTarget {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheetViewModel.TransitionTarget.AddPaymentMethodFull>;
							public static $stable: number;
							public constructor(param0: com.stripe.android.paymentsheet.model.FragmentConfig);
							public getFragmentConfig(): com.stripe.android.paymentsheet.model.FragmentConfig;
							public copy(param0: com.stripe.android.paymentsheet.model.FragmentConfig): com.stripe.android.paymentsheet.PaymentSheetViewModel.TransitionTarget.AddPaymentMethodFull;
							public hashCode(): number;
							public component1(): com.stripe.android.paymentsheet.model.FragmentConfig;
							public toString(): string;
							public equals(param0: any): boolean;
						}
						export class AddPaymentMethodSheet extends com.stripe.android.paymentsheet.PaymentSheetViewModel.TransitionTarget {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheetViewModel.TransitionTarget.AddPaymentMethodSheet>;
							public static $stable: number;
							public constructor(param0: com.stripe.android.paymentsheet.model.FragmentConfig);
							public getFragmentConfig(): com.stripe.android.paymentsheet.model.FragmentConfig;
							public copy(param0: com.stripe.android.paymentsheet.model.FragmentConfig): com.stripe.android.paymentsheet.PaymentSheetViewModel.TransitionTarget.AddPaymentMethodSheet;
							public hashCode(): number;
							public component1(): com.stripe.android.paymentsheet.model.FragmentConfig;
							public toString(): string;
							public equals(param0: any): boolean;
						}
						export class SelectSavedPaymentMethod extends com.stripe.android.paymentsheet.PaymentSheetViewModel.TransitionTarget {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheetViewModel.TransitionTarget.SelectSavedPaymentMethod>;
							public static $stable: number;
							public constructor(param0: com.stripe.android.paymentsheet.model.FragmentConfig);
							public getFragmentConfig(): com.stripe.android.paymentsheet.model.FragmentConfig;
							public hashCode(): number;
							public component1(): com.stripe.android.paymentsheet.model.FragmentConfig;
							public copy(param0: com.stripe.android.paymentsheet.model.FragmentConfig): com.stripe.android.paymentsheet.PaymentSheetViewModel.TransitionTarget.SelectSavedPaymentMethod;
							public toString(): string;
							public equals(param0: any): boolean;
						}
					}
					export class WhenMappings {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheetViewModel.WhenMappings>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export class PaymentSheetViewModelKt {
					public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheetViewModelKt>;
					public static convert(param0: com.stripe.android.paymentsheet.model.PaymentSheetViewState): com.stripe.android.paymentsheet.ui.PrimaryButton.State;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export class PaymentSheetViewModel_Factory extends dagger.internal.Factory<com.stripe.android.paymentsheet.PaymentSheetViewModel> {
					public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheetViewModel_Factory>;
					public static create(param0: javax.inject.Provider<globalAndroid.app.Application>, param1: javax.inject.Provider<com.stripe.android.paymentsheet.PaymentSheetContract.Args>, param2: javax.inject.Provider<com.stripe.android.paymentsheet.analytics.EventReporter>, param3: javax.inject.Provider<com.stripe.android.PaymentConfiguration>, param4: javax.inject.Provider<com.stripe.android.paymentsheet.repositories.StripeIntentRepository>, param5: javax.inject.Provider<com.stripe.android.paymentsheet.model.StripeIntentValidator>, param6: javax.inject.Provider<com.stripe.android.paymentsheet.repositories.CustomerRepository>, param7: javax.inject.Provider<com.stripe.android.paymentsheet.PrefsRepository>, param8: javax.inject.Provider<com.stripe.android.ui.core.forms.resources.ResourceRepository>, param9: javax.inject.Provider<com.stripe.android.payments.paymentlauncher.StripePaymentLauncherAssistedFactory>, param10: javax.inject.Provider<com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherFactory>, param11: javax.inject.Provider<com.stripe.android.core.Logger>, param12: javax.inject.Provider<kotlin.coroutines.CoroutineContext>, param13: javax.inject.Provider<string>): com.stripe.android.paymentsheet.PaymentSheetViewModel_Factory;
					public constructor(param0: javax.inject.Provider<globalAndroid.app.Application>, param1: javax.inject.Provider<com.stripe.android.paymentsheet.PaymentSheetContract.Args>, param2: javax.inject.Provider<com.stripe.android.paymentsheet.analytics.EventReporter>, param3: javax.inject.Provider<com.stripe.android.PaymentConfiguration>, param4: javax.inject.Provider<com.stripe.android.paymentsheet.repositories.StripeIntentRepository>, param5: javax.inject.Provider<com.stripe.android.paymentsheet.model.StripeIntentValidator>, param6: javax.inject.Provider<com.stripe.android.paymentsheet.repositories.CustomerRepository>, param7: javax.inject.Provider<com.stripe.android.paymentsheet.PrefsRepository>, param8: javax.inject.Provider<com.stripe.android.ui.core.forms.resources.ResourceRepository>, param9: javax.inject.Provider<com.stripe.android.payments.paymentlauncher.StripePaymentLauncherAssistedFactory>, param10: javax.inject.Provider<com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherFactory>, param11: javax.inject.Provider<com.stripe.android.core.Logger>, param12: javax.inject.Provider<kotlin.coroutines.CoroutineContext>, param13: javax.inject.Provider<string>);
					public static newInstance(param0: globalAndroid.app.Application, param1: com.stripe.android.paymentsheet.PaymentSheetContract.Args, param2: com.stripe.android.paymentsheet.analytics.EventReporter, param3: dagger.Lazy<com.stripe.android.PaymentConfiguration>, param4: com.stripe.android.paymentsheet.repositories.StripeIntentRepository, param5: com.stripe.android.paymentsheet.model.StripeIntentValidator, param6: com.stripe.android.paymentsheet.repositories.CustomerRepository, param7: com.stripe.android.paymentsheet.PrefsRepository, param8: com.stripe.android.ui.core.forms.resources.ResourceRepository, param9: com.stripe.android.payments.paymentlauncher.StripePaymentLauncherAssistedFactory, param10: com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherFactory, param11: com.stripe.android.core.Logger, param12: kotlin.coroutines.CoroutineContext, param13: string): com.stripe.android.paymentsheet.PaymentSheetViewModel;
					public get(): com.stripe.android.paymentsheet.PaymentSheetViewModel;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export class PaymentSheetViewModel_Factory_MembersInjector extends dagger.MembersInjector<com.stripe.android.paymentsheet.PaymentSheetViewModel.Factory> {
					public static class: java.lang.Class<com.stripe.android.paymentsheet.PaymentSheetViewModel_Factory_MembersInjector>;
					public constructor(param0: javax.inject.Provider<com.stripe.android.paymentsheet.injection.PaymentSheetViewModelSubcomponent.Builder>);
					public static create(param0: javax.inject.Provider<com.stripe.android.paymentsheet.injection.PaymentSheetViewModelSubcomponent.Builder>): dagger.MembersInjector<com.stripe.android.paymentsheet.PaymentSheetViewModel.Factory>;
					public injectMembers(param0: com.stripe.android.paymentsheet.PaymentSheetViewModel.Factory): void;
					public static injectSubComponentBuilderProvider(param0: com.stripe.android.paymentsheet.PaymentSheetViewModel.Factory, param1: javax.inject.Provider<com.stripe.android.paymentsheet.injection.PaymentSheetViewModelSubcomponent.Builder>): void;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export class PrefsRepository {
					public static class: java.lang.Class<com.stripe.android.paymentsheet.PrefsRepository>;
					/**
					 * Constructs a new instance of the com.stripe.android.paymentsheet.PrefsRepository interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getSavedSelection(param0: boolean, param1: kotlin.coroutines.Continuation<any>): any;
						savePaymentSelection(param0: com.stripe.android.paymentsheet.model.PaymentSelection): void;
					});
					public constructor();
					public getSavedSelection(param0: boolean, param1: kotlin.coroutines.Continuation<any>): any;
					public savePaymentSelection(param0: com.stripe.android.paymentsheet.model.PaymentSelection): void;
				}
				export module PrefsRepository {
					export class Noop extends com.stripe.android.paymentsheet.PrefsRepository {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.PrefsRepository.Noop>;
						public static $stable: number;
						public constructor();
						public getSavedSelection(param0: boolean, param1: kotlin.coroutines.Continuation<any>): any;
						public savePaymentSelection(param0: com.stripe.android.paymentsheet.model.PaymentSelection): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module analytics {
					export class DefaultDeviceIdRepository extends com.stripe.android.paymentsheet.analytics.DeviceIdRepository {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.analytics.DefaultDeviceIdRepository>;
						public constructor(param0: globalAndroid.content.Context, param1: kotlin.coroutines.CoroutineContext);
						public get(param0: kotlin.coroutines.Continuation<any>): any;
					}
					export module DefaultDeviceIdRepository {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.analytics.DefaultDeviceIdRepository.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module analytics {
					export class DefaultDeviceIdRepository_Factory extends dagger.internal.Factory<com.stripe.android.paymentsheet.analytics.DefaultDeviceIdRepository> {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.analytics.DefaultDeviceIdRepository_Factory>;
						public static newInstance(param0: globalAndroid.content.Context, param1: kotlin.coroutines.CoroutineContext): com.stripe.android.paymentsheet.analytics.DefaultDeviceIdRepository;
						public get(): com.stripe.android.paymentsheet.analytics.DefaultDeviceIdRepository;
						public constructor(param0: javax.inject.Provider<globalAndroid.content.Context>, param1: javax.inject.Provider<kotlin.coroutines.CoroutineContext>);
						public static create(param0: javax.inject.Provider<globalAndroid.content.Context>, param1: javax.inject.Provider<kotlin.coroutines.CoroutineContext>): com.stripe.android.paymentsheet.analytics.DefaultDeviceIdRepository_Factory;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module analytics {
					export class DefaultEventReporter extends com.stripe.android.paymentsheet.analytics.EventReporter {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.analytics.DefaultEventReporter>;
						public onDismiss(): void;
						public onInit(param0: com.stripe.android.paymentsheet.PaymentSheet.Configuration): void;
						public onSelectPaymentOption(param0: com.stripe.android.paymentsheet.model.PaymentSelection): void;
						public constructor(param0: com.stripe.android.paymentsheet.analytics.EventReporter.Mode, param1: com.stripe.android.paymentsheet.analytics.DeviceIdRepository, param2: com.stripe.android.core.networking.AnalyticsRequestExecutor, param3: com.stripe.android.networking.PaymentAnalyticsRequestFactory, param4: kotlin.coroutines.CoroutineContext);
						public onShowExistingPaymentOptions(): void;
						public onShowNewPaymentOptionForm(): void;
						public onPaymentFailure(param0: com.stripe.android.paymentsheet.model.PaymentSelection): void;
						public onPaymentSuccess(param0: com.stripe.android.paymentsheet.model.PaymentSelection): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module analytics {
					export class DefaultEventReporter_Factory extends dagger.internal.Factory<com.stripe.android.paymentsheet.analytics.DefaultEventReporter> {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.analytics.DefaultEventReporter_Factory>;
						public static newInstance(param0: com.stripe.android.paymentsheet.analytics.EventReporter.Mode, param1: com.stripe.android.paymentsheet.analytics.DeviceIdRepository, param2: com.stripe.android.core.networking.AnalyticsRequestExecutor, param3: com.stripe.android.networking.PaymentAnalyticsRequestFactory, param4: kotlin.coroutines.CoroutineContext): com.stripe.android.paymentsheet.analytics.DefaultEventReporter;
						public static create(param0: javax.inject.Provider<com.stripe.android.paymentsheet.analytics.EventReporter.Mode>, param1: javax.inject.Provider<com.stripe.android.paymentsheet.analytics.DeviceIdRepository>, param2: javax.inject.Provider<com.stripe.android.core.networking.AnalyticsRequestExecutor>, param3: javax.inject.Provider<com.stripe.android.networking.PaymentAnalyticsRequestFactory>, param4: javax.inject.Provider<kotlin.coroutines.CoroutineContext>): com.stripe.android.paymentsheet.analytics.DefaultEventReporter_Factory;
						public get(): com.stripe.android.paymentsheet.analytics.DefaultEventReporter;
						public constructor(param0: javax.inject.Provider<com.stripe.android.paymentsheet.analytics.EventReporter.Mode>, param1: javax.inject.Provider<com.stripe.android.paymentsheet.analytics.DeviceIdRepository>, param2: javax.inject.Provider<com.stripe.android.core.networking.AnalyticsRequestExecutor>, param3: javax.inject.Provider<com.stripe.android.networking.PaymentAnalyticsRequestFactory>, param4: javax.inject.Provider<kotlin.coroutines.CoroutineContext>);
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module analytics {
					export class DeviceId {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.analytics.DeviceId>;
						public constructor();
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public copy(param0: string): com.stripe.android.paymentsheet.analytics.DeviceId;
						public getValue(): string;
						public toString(): string;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module analytics {
					export class DeviceIdRepository {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.analytics.DeviceIdRepository>;
						/**
						 * Constructs a new instance of the com.stripe.android.paymentsheet.analytics.DeviceIdRepository interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							get(param0: kotlin.coroutines.Continuation<any>): any;
						});
						public constructor();
						public get(param0: kotlin.coroutines.Continuation<any>): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module analytics {
					export class EventReporter {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.analytics.EventReporter>;
						/**
						 * Constructs a new instance of the com.stripe.android.paymentsheet.analytics.EventReporter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onInit(param0: com.stripe.android.paymentsheet.PaymentSheet.Configuration): void;
							onDismiss(): void;
							onShowExistingPaymentOptions(): void;
							onShowNewPaymentOptionForm(): void;
							onSelectPaymentOption(param0: com.stripe.android.paymentsheet.model.PaymentSelection): void;
							onPaymentSuccess(param0: com.stripe.android.paymentsheet.model.PaymentSelection): void;
							onPaymentFailure(param0: com.stripe.android.paymentsheet.model.PaymentSelection): void;
						});
						public constructor();
						public onDismiss(): void;
						public onInit(param0: com.stripe.android.paymentsheet.PaymentSheet.Configuration): void;
						public onSelectPaymentOption(param0: com.stripe.android.paymentsheet.model.PaymentSelection): void;
						public onShowExistingPaymentOptions(): void;
						public onShowNewPaymentOptionForm(): void;
						public onPaymentFailure(param0: com.stripe.android.paymentsheet.model.PaymentSelection): void;
						public onPaymentSuccess(param0: com.stripe.android.paymentsheet.model.PaymentSelection): void;
					}
					export module EventReporter {
						export class Mode {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.analytics.EventReporter.Mode>;
							public static Complete: com.stripe.android.paymentsheet.analytics.EventReporter.Mode;
							public static Custom: com.stripe.android.paymentsheet.analytics.EventReporter.Mode;
							public getCode(): string;
							public toString(): string;
							public static valueOf(param0: string): com.stripe.android.paymentsheet.analytics.EventReporter.Mode;
							public static values(): androidNative.Array<com.stripe.android.paymentsheet.analytics.EventReporter.Mode>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module analytics {
					export abstract class PaymentSheetEvent {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.analytics.PaymentSheetEvent>;
						public static Companion: com.stripe.android.paymentsheet.analytics.PaymentSheetEvent.Companion;
						public getEvent(): string;
						public toString(): string;
					}
					export module PaymentSheetEvent {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.analytics.PaymentSheetEvent.Companion>;
						}
						export class Dismiss extends com.stripe.android.paymentsheet.analytics.PaymentSheetEvent {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.analytics.PaymentSheetEvent.Dismiss>;
							public static $stable: number;
							public getEvent(): string;
							public constructor(param0: com.stripe.android.paymentsheet.analytics.EventReporter.Mode);
						}
						export class Init extends com.stripe.android.paymentsheet.analytics.PaymentSheetEvent {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.analytics.PaymentSheetEvent.Init>;
							public static $stable: number;
							public getEvent(): string;
							public constructor(param0: com.stripe.android.paymentsheet.analytics.EventReporter.Mode, param1: com.stripe.android.paymentsheet.PaymentSheet.Configuration);
						}
						export class Payment extends com.stripe.android.paymentsheet.analytics.PaymentSheetEvent {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.analytics.PaymentSheetEvent.Payment>;
							public static $stable: number;
							public getEvent(): string;
							public constructor(param0: com.stripe.android.paymentsheet.analytics.EventReporter.Mode, param1: com.stripe.android.paymentsheet.analytics.PaymentSheetEvent.Payment.Result, param2: com.stripe.android.paymentsheet.model.PaymentSelection);
						}
						export module Payment {
							export class Result {
								public static class: java.lang.Class<com.stripe.android.paymentsheet.analytics.PaymentSheetEvent.Payment.Result>;
								public static Success: com.stripe.android.paymentsheet.analytics.PaymentSheetEvent.Payment.Result;
								public static Failure: com.stripe.android.paymentsheet.analytics.PaymentSheetEvent.Payment.Result;
								public toString(): string;
								public static values(): androidNative.Array<com.stripe.android.paymentsheet.analytics.PaymentSheetEvent.Payment.Result>;
								public static valueOf(param0: string): com.stripe.android.paymentsheet.analytics.PaymentSheetEvent.Payment.Result;
							}
						}
						export class SelectPaymentOption extends com.stripe.android.paymentsheet.analytics.PaymentSheetEvent {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.analytics.PaymentSheetEvent.SelectPaymentOption>;
							public static $stable: number;
							public getEvent(): string;
							public constructor(param0: com.stripe.android.paymentsheet.analytics.EventReporter.Mode, param1: com.stripe.android.paymentsheet.model.PaymentSelection);
						}
						export class ShowExistingPaymentOptions extends com.stripe.android.paymentsheet.analytics.PaymentSheetEvent {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.analytics.PaymentSheetEvent.ShowExistingPaymentOptions>;
							public static $stable: number;
							public getEvent(): string;
							public constructor(param0: com.stripe.android.paymentsheet.analytics.EventReporter.Mode);
						}
						export class ShowNewPaymentOptionForm extends com.stripe.android.paymentsheet.analytics.PaymentSheetEvent {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.analytics.PaymentSheetEvent.ShowNewPaymentOptionForm>;
							public static $stable: number;
							public getEvent(): string;
							public constructor(param0: com.stripe.android.paymentsheet.analytics.EventReporter.Mode);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module databinding {
					export class ActivityPaymentOptionsBinding {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.databinding.ActivityPaymentOptionsBinding>;
						public appbar: com.google.android.material.appbar.AppBarLayout;
						public bottomSheet: globalAndroid.widget.LinearLayout;
						public continueButton: com.stripe.android.paymentsheet.ui.PrimaryButton;
						public coordinator: androidx.coordinatorlayout.widget.CoordinatorLayout;
						public fragmentContainer: androidx.fragment.app.FragmentContainerView;
						public fragmentContainerParent: globalAndroid.widget.LinearLayout;
						public message: globalAndroid.widget.TextView;
						public scrollView: globalAndroid.widget.ScrollView;
						public testmode: globalAndroid.widget.TextView;
						public toolbar: com.google.android.material.appbar.MaterialToolbar;
						public getRoot(): androidx.coordinatorlayout.widget.CoordinatorLayout;
						public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: boolean): com.stripe.android.paymentsheet.databinding.ActivityPaymentOptionsBinding;
						public static bind(param0: globalAndroid.view.View): com.stripe.android.paymentsheet.databinding.ActivityPaymentOptionsBinding;
						public static inflate(param0: globalAndroid.view.LayoutInflater): com.stripe.android.paymentsheet.databinding.ActivityPaymentOptionsBinding;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module databinding {
					export class ActivityPaymentSheetBinding {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.databinding.ActivityPaymentSheetBinding>;
						public appbar: com.google.android.material.appbar.AppBarLayout;
						public bottomSheet: globalAndroid.widget.LinearLayout;
						public buttonContainer: globalAndroid.widget.FrameLayout;
						public buyButton: com.stripe.android.paymentsheet.ui.PrimaryButton;
						public coordinator: androidx.coordinatorlayout.widget.CoordinatorLayout;
						public fragmentContainer: androidx.fragment.app.FragmentContainerView;
						public fragmentContainerParent: globalAndroid.widget.LinearLayout;
						public googlePayButton: com.stripe.android.paymentsheet.ui.GooglePayButton;
						public message: globalAndroid.widget.TextView;
						public scrollView: globalAndroid.widget.ScrollView;
						public testmode: globalAndroid.widget.TextView;
						public toolbar: com.google.android.material.appbar.MaterialToolbar;
						public getRoot(): androidx.coordinatorlayout.widget.CoordinatorLayout;
						public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: boolean): com.stripe.android.paymentsheet.databinding.ActivityPaymentSheetBinding;
						public static bind(param0: globalAndroid.view.View): com.stripe.android.paymentsheet.databinding.ActivityPaymentSheetBinding;
						public static inflate(param0: globalAndroid.view.LayoutInflater): com.stripe.android.paymentsheet.databinding.ActivityPaymentSheetBinding;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module databinding {
					export class FragmentPaymentsheetAddCardBinding {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.databinding.FragmentPaymentsheetAddCardBinding>;
						public billingAddress: com.stripe.android.paymentsheet.ui.BillingAddressView;
						public billingAddressLabel: globalAndroid.widget.TextView;
						public billingErrors: globalAndroid.widget.TextView;
						public bottomSpace: globalAndroid.widget.Space;
						public cardErrors: globalAndroid.widget.TextView;
						public cardInfoLabel: globalAndroid.widget.TextView;
						public cardMultilineWidget: com.stripe.android.view.CardMultilineWidget;
						public cardMultilineWidgetContainer: com.google.android.material.card.MaterialCardView;
						public saveCardCheckbox: com.google.android.material.checkbox.MaterialCheckBox;
						public static inflate(param0: globalAndroid.view.LayoutInflater): com.stripe.android.paymentsheet.databinding.FragmentPaymentsheetAddCardBinding;
						public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: boolean): com.stripe.android.paymentsheet.databinding.FragmentPaymentsheetAddCardBinding;
						public getRoot(): androidx.constraintlayout.widget.ConstraintLayout;
						public static bind(param0: globalAndroid.view.View): com.stripe.android.paymentsheet.databinding.FragmentPaymentsheetAddCardBinding;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module databinding {
					export class FragmentPaymentsheetAddPaymentMethodBinding {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.databinding.FragmentPaymentsheetAddPaymentMethodBinding>;
						public addPaymentMethodHeader: globalAndroid.widget.TextView;
						public googlePayButton: com.stripe.android.paymentsheet.ui.GooglePayButton;
						public googlePayDivider: com.stripe.android.paymentsheet.ui.GooglePayDivider;
						public message: globalAndroid.widget.TextView;
						public paymentMethodFragmentContainer: androidx.fragment.app.FragmentContainerView;
						public paymentMethodsRecycler: androidx.recyclerview.widget.RecyclerView;
						public topContainer: globalAndroid.widget.LinearLayout;
						public static bind(param0: globalAndroid.view.View): com.stripe.android.paymentsheet.databinding.FragmentPaymentsheetAddPaymentMethodBinding;
						public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: boolean): com.stripe.android.paymentsheet.databinding.FragmentPaymentsheetAddPaymentMethodBinding;
						public static inflate(param0: globalAndroid.view.LayoutInflater): com.stripe.android.paymentsheet.databinding.FragmentPaymentsheetAddPaymentMethodBinding;
						public getRoot(): androidx.constraintlayout.widget.ConstraintLayout;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module databinding {
					export class FragmentPaymentsheetLoadingBinding {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.databinding.FragmentPaymentsheetLoadingBinding>;
						public getRoot(): globalAndroid.widget.FrameLayout;
						public static bind(param0: globalAndroid.view.View): com.stripe.android.paymentsheet.databinding.FragmentPaymentsheetLoadingBinding;
						public static inflate(param0: globalAndroid.view.LayoutInflater): com.stripe.android.paymentsheet.databinding.FragmentPaymentsheetLoadingBinding;
						public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: boolean): com.stripe.android.paymentsheet.databinding.FragmentPaymentsheetLoadingBinding;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module databinding {
					export class FragmentPaymentsheetPaymentMethodsListBinding {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.databinding.FragmentPaymentsheetPaymentMethodsListBinding>;
						public header: globalAndroid.widget.TextView;
						public recycler: androidx.recyclerview.widget.RecyclerView;
						public total: globalAndroid.widget.TextView;
						public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: boolean): com.stripe.android.paymentsheet.databinding.FragmentPaymentsheetPaymentMethodsListBinding;
						public static inflate(param0: globalAndroid.view.LayoutInflater): com.stripe.android.paymentsheet.databinding.FragmentPaymentsheetPaymentMethodsListBinding;
						public static bind(param0: globalAndroid.view.View): com.stripe.android.paymentsheet.databinding.FragmentPaymentsheetPaymentMethodsListBinding;
						public getRoot(): globalAndroid.widget.LinearLayout;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module databinding {
					export class LayoutPaymentsheetAddNewPaymentMethodItemBinding {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.databinding.LayoutPaymentsheetAddNewPaymentMethodItemBinding>;
						public card: com.google.android.material.card.MaterialCardView;
						public label: globalAndroid.widget.TextView;
						public plusIcon: globalAndroid.widget.ImageView;
						public static inflate(param0: globalAndroid.view.LayoutInflater): com.stripe.android.paymentsheet.databinding.LayoutPaymentsheetAddNewPaymentMethodItemBinding;
						public static bind(param0: globalAndroid.view.View): com.stripe.android.paymentsheet.databinding.LayoutPaymentsheetAddNewPaymentMethodItemBinding;
						public getRoot(): androidx.constraintlayout.widget.ConstraintLayout;
						public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: boolean): com.stripe.android.paymentsheet.databinding.LayoutPaymentsheetAddNewPaymentMethodItemBinding;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module databinding {
					export class LayoutPaymentsheetAddPaymentMethodCardViewBinding {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.databinding.LayoutPaymentsheetAddPaymentMethodCardViewBinding>;
						public icon: globalAndroid.widget.ImageView;
						public title: globalAndroid.widget.TextView;
						public static bind(param0: globalAndroid.view.View): com.stripe.android.paymentsheet.databinding.LayoutPaymentsheetAddPaymentMethodCardViewBinding;
						public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: boolean): com.stripe.android.paymentsheet.databinding.LayoutPaymentsheetAddPaymentMethodCardViewBinding;
						public static inflate(param0: globalAndroid.view.LayoutInflater): com.stripe.android.paymentsheet.databinding.LayoutPaymentsheetAddPaymentMethodCardViewBinding;
						public getRoot(): com.google.android.material.card.MaterialCardView;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module databinding {
					export class LayoutPaymentsheetGooglePayItemBinding {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.databinding.LayoutPaymentsheetGooglePayItemBinding>;
						public card: com.google.android.material.card.MaterialCardView;
						public checkIcon: globalAndroid.widget.ImageView;
						public googlePayMark: globalAndroid.widget.ImageView;
						public label: globalAndroid.widget.TextView;
						public static inflate(param0: globalAndroid.view.LayoutInflater): com.stripe.android.paymentsheet.databinding.LayoutPaymentsheetGooglePayItemBinding;
						public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: boolean): com.stripe.android.paymentsheet.databinding.LayoutPaymentsheetGooglePayItemBinding;
						public getRoot(): androidx.constraintlayout.widget.ConstraintLayout;
						public static bind(param0: globalAndroid.view.View): com.stripe.android.paymentsheet.databinding.LayoutPaymentsheetGooglePayItemBinding;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module databinding {
					export class LayoutPaymentsheetPaymentMethodItemBinding {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.databinding.LayoutPaymentsheetPaymentMethodItemBinding>;
						public brandIcon: globalAndroid.widget.ImageView;
						public card: com.google.android.material.card.MaterialCardView;
						public checkIcon: globalAndroid.widget.ImageView;
						public deleteIcon: globalAndroid.widget.ImageView;
						public label: globalAndroid.widget.TextView;
						public static inflate(param0: globalAndroid.view.LayoutInflater): com.stripe.android.paymentsheet.databinding.LayoutPaymentsheetPaymentMethodItemBinding;
						public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: boolean): com.stripe.android.paymentsheet.databinding.LayoutPaymentsheetPaymentMethodItemBinding;
						public getRoot(): androidx.constraintlayout.widget.ConstraintLayout;
						public static bind(param0: globalAndroid.view.View): com.stripe.android.paymentsheet.databinding.LayoutPaymentsheetPaymentMethodItemBinding;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module databinding {
					export class PrimaryButtonBinding {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.databinding.PrimaryButtonBinding>;
						public confirmedIcon: globalAndroid.widget.ImageView;
						public confirmingIcon: com.google.android.material.progressindicator.CircularProgressIndicator;
						public label: globalAndroid.widget.TextView;
						public lockIcon: globalAndroid.widget.ImageView;
						public getRoot(): globalAndroid.view.View;
						public static bind(param0: globalAndroid.view.View): com.stripe.android.paymentsheet.databinding.PrimaryButtonBinding;
						public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup): com.stripe.android.paymentsheet.databinding.PrimaryButtonBinding;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module databinding {
					export class StripeBillingAddressLayoutBinding {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.databinding.StripeBillingAddressLayoutBinding>;
						public address1: com.google.android.material.textfield.TextInputEditText;
						public address1Divider: globalAndroid.view.View;
						public address1Layout: com.google.android.material.textfield.TextInputLayout;
						public address2: com.google.android.material.textfield.TextInputEditText;
						public address2Divider: globalAndroid.view.View;
						public address2Layout: com.google.android.material.textfield.TextInputLayout;
						public city: com.google.android.material.textfield.TextInputEditText;
						public cityLayout: com.google.android.material.textfield.TextInputLayout;
						public cityPostalContainer: globalAndroid.widget.LinearLayout;
						public cityPostalDivider: globalAndroid.view.View;
						public countryLayout: com.stripe.android.view.CountryTextInputLayout;
						public postalCode: com.stripe.android.view.StripeEditText;
						public postalCodeLayout: com.google.android.material.textfield.TextInputLayout;
						public state: com.google.android.material.textfield.TextInputEditText;
						public stateDivider: globalAndroid.view.View;
						public stateLayout: com.google.android.material.textfield.TextInputLayout;
						public getRoot(): globalAndroid.view.View;
						public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup): com.stripe.android.paymentsheet.databinding.StripeBillingAddressLayoutBinding;
						public static bind(param0: globalAndroid.view.View): com.stripe.android.paymentsheet.databinding.StripeBillingAddressLayoutBinding;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module databinding {
					export class StripeCountryDropdownItemBinding {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.databinding.StripeCountryDropdownItemBinding>;
						public text1: globalAndroid.widget.TextView;
						public static inflate(param0: globalAndroid.view.LayoutInflater): com.stripe.android.paymentsheet.databinding.StripeCountryDropdownItemBinding;
						public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: boolean): com.stripe.android.paymentsheet.databinding.StripeCountryDropdownItemBinding;
						public getRoot(): globalAndroid.widget.TextView;
						public static bind(param0: globalAndroid.view.View): com.stripe.android.paymentsheet.databinding.StripeCountryDropdownItemBinding;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module databinding {
					export class StripeGooglePayButtonBinding {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.databinding.StripeGooglePayButtonBinding>;
						public googlePayButtonIcon: globalAndroid.widget.RelativeLayout;
						public primaryButton: com.stripe.android.paymentsheet.ui.PrimaryButton;
						public getRoot(): globalAndroid.view.View;
						public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup): com.stripe.android.paymentsheet.databinding.StripeGooglePayButtonBinding;
						public static bind(param0: globalAndroid.view.View): com.stripe.android.paymentsheet.databinding.StripeGooglePayButtonBinding;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module databinding {
					export class StripeGooglePayDividerBinding {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.databinding.StripeGooglePayDividerBinding>;
						public dividerText: globalAndroid.widget.TextView;
						public getRoot(): globalAndroid.view.View;
						public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup): com.stripe.android.paymentsheet.databinding.StripeGooglePayDividerBinding;
						public static bind(param0: globalAndroid.view.View): com.stripe.android.paymentsheet.databinding.StripeGooglePayDividerBinding;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module databinding {
					export class StripeHorizontalDividerBinding {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.databinding.StripeHorizontalDividerBinding>;
						public getRoot(): globalAndroid.view.View;
						public static inflate(param0: globalAndroid.view.LayoutInflater): com.stripe.android.paymentsheet.databinding.StripeHorizontalDividerBinding;
						public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: boolean): com.stripe.android.paymentsheet.databinding.StripeHorizontalDividerBinding;
						public static bind(param0: globalAndroid.view.View): com.stripe.android.paymentsheet.databinding.StripeHorizontalDividerBinding;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module databinding {
					export class StripeVerticalDividerBinding {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.databinding.StripeVerticalDividerBinding>;
						public getRoot(): globalAndroid.view.View;
						public static inflate(param0: globalAndroid.view.LayoutInflater): com.stripe.android.paymentsheet.databinding.StripeVerticalDividerBinding;
						public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: boolean): com.stripe.android.paymentsheet.databinding.StripeVerticalDividerBinding;
						public static bind(param0: globalAndroid.view.View): com.stripe.android.paymentsheet.databinding.StripeVerticalDividerBinding;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module flowcontroller {
					export abstract class ActivityLauncherFactory {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.flowcontroller.ActivityLauncherFactory>;
						public create(param0: androidx.activity.result.contract.ActivityResultContract, param1: androidx.activity.result.ActivityResultCallback): androidx.activity.result.ActivityResultLauncher;
					}
					export module ActivityLauncherFactory {
						export class ActivityHost extends com.stripe.android.paymentsheet.flowcontroller.ActivityLauncherFactory {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.flowcontroller.ActivityLauncherFactory.ActivityHost>;
							public constructor(param0: androidx.activity.ComponentActivity);
							public create(param0: androidx.activity.result.contract.ActivityResultContract, param1: androidx.activity.result.ActivityResultCallback): androidx.activity.result.ActivityResultLauncher;
						}
						export class FragmentHost extends com.stripe.android.paymentsheet.flowcontroller.ActivityLauncherFactory {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.flowcontroller.ActivityLauncherFactory.FragmentHost>;
							public constructor(param0: androidx.fragment.app.Fragment);
							public create(param0: androidx.activity.result.contract.ActivityResultContract, param1: androidx.activity.result.ActivityResultCallback): androidx.activity.result.ActivityResultLauncher;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module flowcontroller {
					export class DefaultFlowController implements com.stripe.android.paymentsheet.PaymentSheet.FlowController, com.stripe.android.core.injection.Injector {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.flowcontroller.DefaultFlowController>;
						public static Companion: com.stripe.android.paymentsheet.flowcontroller.DefaultFlowController.Companion;
						public flowControllerComponent: com.stripe.android.paymentsheet.injection.FlowControllerComponent;
						public confirm(): void;
						public presentPaymentOptions(): void;
						public static create(param0: androidx.activity.ComponentActivity, param1: com.stripe.android.paymentsheet.PaymentOptionCallback, param2: com.stripe.android.paymentsheet.PaymentSheetResultCallback): com.stripe.android.paymentsheet.PaymentSheet.FlowController;
						public getPaymentOption(): com.stripe.android.paymentsheet.model.PaymentOption;
						public setFlowControllerComponent(param0: com.stripe.android.paymentsheet.injection.FlowControllerComponent): void;
						public getFlowControllerComponent(): com.stripe.android.paymentsheet.injection.FlowControllerComponent;
						public inject(param0: com.stripe.android.core.injection.Injectable<any>): void;
						public static create(param0: androidx.fragment.app.Fragment, param1: com.stripe.android.paymentsheet.PaymentOptionCallback, param2: com.stripe.android.paymentsheet.PaymentSheetResultCallback): com.stripe.android.paymentsheet.PaymentSheet.FlowController;
						public confirmPaymentSelection(param0: com.stripe.android.paymentsheet.model.PaymentSelection, param1: com.stripe.android.paymentsheet.flowcontroller.InitData): void;
						public configureWithPaymentIntent(param0: string, param1: com.stripe.android.paymentsheet.PaymentSheet.Configuration, param2: com.stripe.android.paymentsheet.PaymentSheet.FlowController.ConfigCallback): void;
						public onGooglePayResult$paymentsheet_release(param0: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher.Result): void;
						public constructor(param0: kotlinx.coroutines.CoroutineScope, param1: androidx.lifecycle.LifecycleOwner, param2: kotlin.jvm.functions.Function0<java.lang.Integer>, param3: com.stripe.android.paymentsheet.model.PaymentOptionFactory, param4: com.stripe.android.paymentsheet.PaymentOptionCallback, param5: com.stripe.android.paymentsheet.PaymentSheetResultCallback, param6: androidx.activity.result.ActivityResultCaller, param7: string, param8: com.stripe.android.paymentsheet.flowcontroller.FlowControllerInitializer, param9: com.stripe.android.paymentsheet.analytics.EventReporter, param10: com.stripe.android.paymentsheet.flowcontroller.FlowControllerViewModel, param11: com.stripe.android.payments.paymentlauncher.StripePaymentLauncherAssistedFactory, param12: com.stripe.android.ui.core.forms.resources.ResourceRepository, param13: dagger.Lazy<com.stripe.android.PaymentConfiguration>, param14: kotlin.coroutines.CoroutineContext, param15: boolean, param16: java.util.Set<string>, param17: com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherFactory);
						public configureWithSetupIntent(param0: string, param1: com.stripe.android.paymentsheet.PaymentSheet.Configuration, param2: com.stripe.android.paymentsheet.PaymentSheet.FlowController.ConfigCallback): void;
						public onPaymentResult$paymentsheet_release(param0: com.stripe.android.payments.paymentlauncher.PaymentResult): void;
					}
					export module DefaultFlowController {
						export class Args {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.flowcontroller.DefaultFlowController.Args>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.flowcontroller.DefaultFlowController.Args>;
							public static $stable: number;
							public component2(): com.stripe.android.paymentsheet.PaymentSheet.Configuration;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public hashCode(): number;
							public getClientSecret(): string;
							public describeContents(): number;
							public getConfig(): com.stripe.android.paymentsheet.PaymentSheet.Configuration;
							public toString(): string;
							public copy(param0: string, param1: com.stripe.android.paymentsheet.PaymentSheet.Configuration): com.stripe.android.paymentsheet.flowcontroller.DefaultFlowController.Args;
							public equals(param0: any): boolean;
							public component1(): string;
							public constructor(param0: string, param1: com.stripe.android.paymentsheet.PaymentSheet.Configuration);
						}
						export module Args {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.flowcontroller.DefaultFlowController.Args> {
								public static class: java.lang.Class<com.stripe.android.paymentsheet.flowcontroller.DefaultFlowController.Args.Creator>;
								public newArray(param0: number): androidNative.Array<com.stripe.android.paymentsheet.flowcontroller.DefaultFlowController.Args>;
								public constructor();
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.paymentsheet.flowcontroller.DefaultFlowController.Args;
							}
						}
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.flowcontroller.DefaultFlowController.Companion>;
							public getInstance(param0: globalAndroid.content.Context, param1: androidx.lifecycle.ViewModelStoreOwner, param2: kotlinx.coroutines.CoroutineScope, param3: androidx.lifecycle.LifecycleOwner, param4: androidx.activity.result.ActivityResultCaller, param5: kotlin.jvm.functions.Function0<java.lang.Integer>, param6: com.stripe.android.paymentsheet.model.PaymentOptionFactory, param7: com.stripe.android.paymentsheet.PaymentOptionCallback, param8: com.stripe.android.paymentsheet.PaymentSheetResultCallback): com.stripe.android.paymentsheet.PaymentSheet.FlowController;
						}
						export class GooglePayException {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.flowcontroller.DefaultFlowController.GooglePayException>;
							public static $stable: number;
							public constructor(param0: java.lang.Throwable);
							public getThrowable(): java.lang.Throwable;
						}
						export class WhenMappings {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.flowcontroller.DefaultFlowController.WhenMappings>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module flowcontroller {
					export class DefaultFlowControllerInitializer extends com.stripe.android.paymentsheet.flowcontroller.FlowControllerInitializer {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.flowcontroller.DefaultFlowControllerInitializer>;
						public constructor(param0: kotlin.jvm.functions.Function1<com.stripe.android.paymentsheet.PaymentSheet.CustomerConfiguration, com.stripe.android.paymentsheet.PrefsRepository>, param1: kotlin.jvm.functions.Function1<com.stripe.android.googlepaylauncher.GooglePayEnvironment, com.stripe.android.googlepaylauncher.GooglePayRepository>, param2: com.stripe.android.paymentsheet.repositories.StripeIntentRepository, param3: com.stripe.android.paymentsheet.model.StripeIntentValidator, param4: com.stripe.android.paymentsheet.repositories.CustomerRepository, param5: com.stripe.android.core.Logger, param6: kotlin.coroutines.CoroutineContext);
						public init(param0: com.stripe.android.paymentsheet.model.ClientSecret, param1: com.stripe.android.paymentsheet.PaymentSheet.Configuration, param2: kotlin.coroutines.Continuation<any>): any;
					}
					export module DefaultFlowControllerInitializer {
						export class WhenMappings {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.flowcontroller.DefaultFlowControllerInitializer.WhenMappings>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module flowcontroller {
					export class DefaultFlowControllerInitializer_Factory extends dagger.internal.Factory<com.stripe.android.paymentsheet.flowcontroller.DefaultFlowControllerInitializer> {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.flowcontroller.DefaultFlowControllerInitializer_Factory>;
						public static newInstance(param0: kotlin.jvm.functions.Function1<com.stripe.android.paymentsheet.PaymentSheet.CustomerConfiguration, com.stripe.android.paymentsheet.PrefsRepository>, param1: kotlin.jvm.functions.Function1<com.stripe.android.googlepaylauncher.GooglePayEnvironment, com.stripe.android.googlepaylauncher.GooglePayRepository>, param2: com.stripe.android.paymentsheet.repositories.StripeIntentRepository, param3: com.stripe.android.paymentsheet.model.StripeIntentValidator, param4: com.stripe.android.paymentsheet.repositories.CustomerRepository, param5: com.stripe.android.core.Logger, param6: kotlin.coroutines.CoroutineContext): com.stripe.android.paymentsheet.flowcontroller.DefaultFlowControllerInitializer;
						public get(): com.stripe.android.paymentsheet.flowcontroller.DefaultFlowControllerInitializer;
						public static create(param0: javax.inject.Provider<kotlin.jvm.functions.Function1<com.stripe.android.paymentsheet.PaymentSheet.CustomerConfiguration, com.stripe.android.paymentsheet.PrefsRepository>>, param1: javax.inject.Provider<kotlin.jvm.functions.Function1<com.stripe.android.googlepaylauncher.GooglePayEnvironment, com.stripe.android.googlepaylauncher.GooglePayRepository>>, param2: javax.inject.Provider<com.stripe.android.paymentsheet.repositories.StripeIntentRepository>, param3: javax.inject.Provider<com.stripe.android.paymentsheet.model.StripeIntentValidator>, param4: javax.inject.Provider<com.stripe.android.paymentsheet.repositories.CustomerRepository>, param5: javax.inject.Provider<com.stripe.android.core.Logger>, param6: javax.inject.Provider<kotlin.coroutines.CoroutineContext>): com.stripe.android.paymentsheet.flowcontroller.DefaultFlowControllerInitializer_Factory;
						public constructor(param0: javax.inject.Provider<kotlin.jvm.functions.Function1<com.stripe.android.paymentsheet.PaymentSheet.CustomerConfiguration, com.stripe.android.paymentsheet.PrefsRepository>>, param1: javax.inject.Provider<kotlin.jvm.functions.Function1<com.stripe.android.googlepaylauncher.GooglePayEnvironment, com.stripe.android.googlepaylauncher.GooglePayRepository>>, param2: javax.inject.Provider<com.stripe.android.paymentsheet.repositories.StripeIntentRepository>, param3: javax.inject.Provider<com.stripe.android.paymentsheet.model.StripeIntentValidator>, param4: javax.inject.Provider<com.stripe.android.paymentsheet.repositories.CustomerRepository>, param5: javax.inject.Provider<com.stripe.android.core.Logger>, param6: javax.inject.Provider<kotlin.coroutines.CoroutineContext>);
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module flowcontroller {
					export class DefaultFlowController_Factory extends dagger.internal.Factory<com.stripe.android.paymentsheet.flowcontroller.DefaultFlowController> {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.flowcontroller.DefaultFlowController_Factory>;
						public get(): com.stripe.android.paymentsheet.flowcontroller.DefaultFlowController;
						public static create(param0: javax.inject.Provider<kotlinx.coroutines.CoroutineScope>, param1: javax.inject.Provider<androidx.lifecycle.LifecycleOwner>, param2: javax.inject.Provider<kotlin.jvm.functions.Function0<java.lang.Integer>>, param3: javax.inject.Provider<com.stripe.android.paymentsheet.model.PaymentOptionFactory>, param4: javax.inject.Provider<com.stripe.android.paymentsheet.PaymentOptionCallback>, param5: javax.inject.Provider<com.stripe.android.paymentsheet.PaymentSheetResultCallback>, param6: javax.inject.Provider<androidx.activity.result.ActivityResultCaller>, param7: javax.inject.Provider<string>, param8: javax.inject.Provider<com.stripe.android.paymentsheet.flowcontroller.FlowControllerInitializer>, param9: javax.inject.Provider<com.stripe.android.paymentsheet.analytics.EventReporter>, param10: javax.inject.Provider<com.stripe.android.paymentsheet.flowcontroller.FlowControllerViewModel>, param11: javax.inject.Provider<com.stripe.android.payments.paymentlauncher.StripePaymentLauncherAssistedFactory>, param12: javax.inject.Provider<com.stripe.android.ui.core.forms.resources.ResourceRepository>, param13: javax.inject.Provider<com.stripe.android.PaymentConfiguration>, param14: javax.inject.Provider<kotlin.coroutines.CoroutineContext>, param15: javax.inject.Provider<java.lang.Boolean>, param16: javax.inject.Provider<java.util.Set<string>>, param17: javax.inject.Provider<com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherFactory>): com.stripe.android.paymentsheet.flowcontroller.DefaultFlowController_Factory;
						public constructor(param0: javax.inject.Provider<kotlinx.coroutines.CoroutineScope>, param1: javax.inject.Provider<androidx.lifecycle.LifecycleOwner>, param2: javax.inject.Provider<kotlin.jvm.functions.Function0<java.lang.Integer>>, param3: javax.inject.Provider<com.stripe.android.paymentsheet.model.PaymentOptionFactory>, param4: javax.inject.Provider<com.stripe.android.paymentsheet.PaymentOptionCallback>, param5: javax.inject.Provider<com.stripe.android.paymentsheet.PaymentSheetResultCallback>, param6: javax.inject.Provider<androidx.activity.result.ActivityResultCaller>, param7: javax.inject.Provider<string>, param8: javax.inject.Provider<com.stripe.android.paymentsheet.flowcontroller.FlowControllerInitializer>, param9: javax.inject.Provider<com.stripe.android.paymentsheet.analytics.EventReporter>, param10: javax.inject.Provider<com.stripe.android.paymentsheet.flowcontroller.FlowControllerViewModel>, param11: javax.inject.Provider<com.stripe.android.payments.paymentlauncher.StripePaymentLauncherAssistedFactory>, param12: javax.inject.Provider<com.stripe.android.ui.core.forms.resources.ResourceRepository>, param13: javax.inject.Provider<com.stripe.android.PaymentConfiguration>, param14: javax.inject.Provider<kotlin.coroutines.CoroutineContext>, param15: javax.inject.Provider<java.lang.Boolean>, param16: javax.inject.Provider<java.util.Set<string>>, param17: javax.inject.Provider<com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherFactory>);
						public static newInstance(param0: kotlinx.coroutines.CoroutineScope, param1: androidx.lifecycle.LifecycleOwner, param2: kotlin.jvm.functions.Function0<java.lang.Integer>, param3: com.stripe.android.paymentsheet.model.PaymentOptionFactory, param4: com.stripe.android.paymentsheet.PaymentOptionCallback, param5: com.stripe.android.paymentsheet.PaymentSheetResultCallback, param6: androidx.activity.result.ActivityResultCaller, param7: string, param8: com.stripe.android.paymentsheet.flowcontroller.FlowControllerInitializer, param9: com.stripe.android.paymentsheet.analytics.EventReporter, param10: com.stripe.android.paymentsheet.flowcontroller.FlowControllerViewModel, param11: com.stripe.android.payments.paymentlauncher.StripePaymentLauncherAssistedFactory, param12: com.stripe.android.ui.core.forms.resources.ResourceRepository, param13: dagger.Lazy<com.stripe.android.PaymentConfiguration>, param14: kotlin.coroutines.CoroutineContext, param15: boolean, param16: java.util.Set<string>, param17: com.stripe.android.googlepaylauncher.injection.GooglePayPaymentMethodLauncherFactory): com.stripe.android.paymentsheet.flowcontroller.DefaultFlowController;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module flowcontroller {
					export class FlowControllerFactory {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.flowcontroller.FlowControllerFactory>;
						public constructor(param0: androidx.lifecycle.ViewModelStoreOwner, param1: kotlinx.coroutines.CoroutineScope, param2: androidx.lifecycle.LifecycleOwner, param3: globalAndroid.content.Context, param4: androidx.activity.result.ActivityResultCaller, param5: kotlin.jvm.functions.Function0<java.lang.Integer>, param6: com.stripe.android.paymentsheet.model.PaymentOptionFactory, param7: com.stripe.android.paymentsheet.PaymentOptionCallback, param8: com.stripe.android.paymentsheet.PaymentSheetResultCallback);
						public constructor(param0: androidx.fragment.app.Fragment, param1: com.stripe.android.paymentsheet.PaymentOptionCallback, param2: com.stripe.android.paymentsheet.PaymentSheetResultCallback);
						public constructor(param0: androidx.activity.ComponentActivity, param1: com.stripe.android.paymentsheet.PaymentOptionCallback, param2: com.stripe.android.paymentsheet.PaymentSheetResultCallback);
						public create(): com.stripe.android.paymentsheet.PaymentSheet.FlowController;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module flowcontroller {
					export class FlowControllerInitializer {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.flowcontroller.FlowControllerInitializer>;
						/**
						 * Constructs a new instance of the com.stripe.android.paymentsheet.flowcontroller.FlowControllerInitializer interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							init(param0: com.stripe.android.paymentsheet.model.ClientSecret, param1: com.stripe.android.paymentsheet.PaymentSheet.Configuration, param2: kotlin.coroutines.Continuation<any>): any;
						});
						public constructor();
						public init(param0: com.stripe.android.paymentsheet.model.ClientSecret, param1: com.stripe.android.paymentsheet.PaymentSheet.Configuration, param2: kotlin.coroutines.Continuation<any>): any;
					}
					export module FlowControllerInitializer {
						export class DefaultImpls {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.flowcontroller.FlowControllerInitializer.DefaultImpls>;
						}
						export abstract class InitResult {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.flowcontroller.FlowControllerInitializer.InitResult>;
							public static $stable: number;
						}
						export module InitResult {
							export class Failure extends com.stripe.android.paymentsheet.flowcontroller.FlowControllerInitializer.InitResult {
								public static class: java.lang.Class<com.stripe.android.paymentsheet.flowcontroller.FlowControllerInitializer.InitResult.Failure>;
								public static $stable: number;
								public constructor(param0: java.lang.Throwable);
								public getThrowable(): java.lang.Throwable;
							}
							export class Success extends com.stripe.android.paymentsheet.flowcontroller.FlowControllerInitializer.InitResult {
								public static class: java.lang.Class<com.stripe.android.paymentsheet.flowcontroller.FlowControllerInitializer.InitResult.Success>;
								public static $stable: number;
								public toString(): string;
								public equals(param0: any): boolean;
								public component1(): com.stripe.android.paymentsheet.flowcontroller.InitData;
								public copy(param0: com.stripe.android.paymentsheet.flowcontroller.InitData): com.stripe.android.paymentsheet.flowcontroller.FlowControllerInitializer.InitResult.Success;
								public getInitData(): com.stripe.android.paymentsheet.flowcontroller.InitData;
								public hashCode(): number;
								public constructor(param0: com.stripe.android.paymentsheet.flowcontroller.InitData);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module flowcontroller {
					export class FlowControllerViewModel {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.flowcontroller.FlowControllerViewModel>;
						public constructor(param0: androidx.lifecycle.SavedStateHandle);
						public setInitData(param0: com.stripe.android.paymentsheet.flowcontroller.InitData): void;
						public getInitData(): com.stripe.android.paymentsheet.flowcontroller.InitData;
						public setPaymentSelection(param0: com.stripe.android.paymentsheet.model.PaymentSelection): void;
						public getPaymentSelection(): com.stripe.android.paymentsheet.model.PaymentSelection;
					}
					export module FlowControllerViewModel {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.flowcontroller.FlowControllerViewModel.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module flowcontroller {
					export class InitData {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.flowcontroller.InitData>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.flowcontroller.InitData>;
						public getPaymentMethods(): java.util.List<com.stripe.android.model.PaymentMethod>;
						public isGooglePayReady(): boolean;
						public describeContents(): number;
						public component6(): boolean;
						public component4(): java.util.List<com.stripe.android.model.PaymentMethod>;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public component1(): com.stripe.android.paymentsheet.PaymentSheet.Configuration;
						public component3(): com.stripe.android.model.StripeIntent;
						public getStripeIntent(): com.stripe.android.model.StripeIntent;
						public toString(): string;
						public component2(): com.stripe.android.paymentsheet.model.ClientSecret;
						public getConfig(): com.stripe.android.paymentsheet.PaymentSheet.Configuration;
						public component5(): com.stripe.android.paymentsheet.model.SavedSelection;
						public getClientSecret(): com.stripe.android.paymentsheet.model.ClientSecret;
						public copy(param0: com.stripe.android.paymentsheet.PaymentSheet.Configuration, param1: com.stripe.android.paymentsheet.model.ClientSecret, param2: com.stripe.android.model.StripeIntent, param3: java.util.List<com.stripe.android.model.PaymentMethod>, param4: com.stripe.android.paymentsheet.model.SavedSelection, param5: boolean): com.stripe.android.paymentsheet.flowcontroller.InitData;
						public constructor(param0: com.stripe.android.paymentsheet.PaymentSheet.Configuration, param1: com.stripe.android.paymentsheet.model.ClientSecret, param2: com.stripe.android.model.StripeIntent, param3: java.util.List<com.stripe.android.model.PaymentMethod>, param4: com.stripe.android.paymentsheet.model.SavedSelection, param5: boolean);
						public getSavedSelection(): com.stripe.android.paymentsheet.model.SavedSelection;
					}
					export module InitData {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.flowcontroller.InitData> {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.flowcontroller.InitData.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.paymentsheet.flowcontroller.InitData>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.paymentsheet.flowcontroller.InitData;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module forms {
					export class CompleteFormFieldValueFilter {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.forms.CompleteFormFieldValueFilter>;
						public constructor(param0: kotlinx.coroutines.flow.Flow<any>, param1: kotlinx.coroutines.flow.Flow<any>, param2: kotlinx.coroutines.flow.Flow<java.lang.Boolean>, param3: kotlinx.coroutines.flow.Flow<any>);
						public getShowingMandate(): kotlinx.coroutines.flow.Flow<java.lang.Boolean>;
						public filterFlow(): kotlinx.coroutines.flow.Flow<com.stripe.android.paymentsheet.forms.FormFieldValues>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module forms {
					export class Delayed implements com.stripe.android.paymentsheet.forms.PIRequirement, com.stripe.android.paymentsheet.forms.SIRequirement {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.forms.Delayed>;
						public static INSTANCE: com.stripe.android.paymentsheet.forms.Delayed;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module forms {
					export class FormFieldValues {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.forms.FormFieldValues>;
						public constructor(param0: java.util.Map<com.stripe.android.ui.core.elements.IdentifierSpec, com.stripe.android.ui.core.forms.FormFieldEntry>, param1: boolean, param2: com.stripe.android.paymentsheet.model.PaymentSelection.CustomerRequestedSave);
						public getFieldValuePairs(): java.util.Map<com.stripe.android.ui.core.elements.IdentifierSpec, com.stripe.android.ui.core.forms.FormFieldEntry>;
						public getUserRequestedReuse(): com.stripe.android.paymentsheet.model.PaymentSelection.CustomerRequestedSave;
						public getShowsMandate(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module forms {
					export class FormPreviewKt {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.forms.FormPreviewKt>;
						public static FormInternalPreview(param0: androidx.compose.runtime.Composer, param1: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module forms {
					export class FormUIKt {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.forms.FormUIKt>;
						public static Form(param0: com.stripe.android.paymentsheet.forms.FormViewModel, param1: androidx.compose.runtime.Composer, param2: number): void;
						public static FormInternal(param0: kotlinx.coroutines.flow.Flow<any>, param1: kotlinx.coroutines.flow.Flow<java.lang.Boolean>, param2: kotlinx.coroutines.flow.Flow<any>, param3: androidx.compose.runtime.Composer, param4: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module forms {
					export class FormViewModel {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.forms.FormViewModel>;
						public getEnabled$paymentsheet_release(): kotlinx.coroutines.flow.MutableStateFlow<java.lang.Boolean>;
						public getSaveForFutureUse$paymentsheet_release(): kotlinx.coroutines.flow.Flow<java.lang.Boolean>;
						public constructor(param0: com.stripe.android.ui.core.elements.LayoutSpec, param1: com.stripe.android.paymentsheet.paymentdatacollection.FormFragmentArguments, param2: com.stripe.android.ui.core.forms.resources.ResourceRepository, param3: com.stripe.android.paymentsheet.forms.TransformSpecToElement);
						public getSaveForFutureUseVisible$paymentsheet_release(): kotlinx.coroutines.flow.MutableStateFlow<java.lang.Boolean>;
						public setEnabled$paymentsheet_release(param0: boolean): void;
						public getHiddenIdentifiers$paymentsheet_release(): kotlinx.coroutines.flow.Flow<java.util.List<com.stripe.android.ui.core.elements.IdentifierSpec>>;
						public getElements$paymentsheet_release(): kotlinx.coroutines.flow.StateFlow<java.util.List<com.stripe.android.ui.core.elements.FormElement>>;
						public getCompleteFormValues(): kotlinx.coroutines.flow.Flow<com.stripe.android.paymentsheet.forms.FormFieldValues>;
					}
					export module FormViewModel {
						export class Factory extends java.lang.Object {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.forms.FormViewModel.Factory>;
							public subComponentBuilderProvider: javax.inject.Provider<com.stripe.android.paymentsheet.injection.FormViewModelSubcomponent.Builder>;
							public setSubComponentBuilderProvider(param0: javax.inject.Provider<com.stripe.android.paymentsheet.injection.FormViewModelSubcomponent.Builder>): void;
							public getLayout(): com.stripe.android.ui.core.elements.LayoutSpec;
							public getConfig(): com.stripe.android.paymentsheet.paymentdatacollection.FormFragmentArguments;
							public constructor(param0: com.stripe.android.paymentsheet.paymentdatacollection.FormFragmentArguments, param1: globalAndroid.content.res.Resources, param2: com.stripe.android.ui.core.elements.LayoutSpec);
							public getResource(): globalAndroid.content.res.Resources;
							public getSubComponentBuilderProvider(): javax.inject.Provider<com.stripe.android.paymentsheet.injection.FormViewModelSubcomponent.Builder>;
							public fallbackInitialize(param0: com.stripe.android.paymentsheet.forms.FormViewModel.Factory.FallbackInitializeParam): void;
							public fallbackInitialize(param0: any): void;
							public create(param0: java.lang.Class): androidx.lifecycle.ViewModel;
							public setLayout(param0: com.stripe.android.ui.core.elements.LayoutSpec): void;
						}
						export module Factory {
							export class FallbackInitializeParam {
								public static class: java.lang.Class<com.stripe.android.paymentsheet.forms.FormViewModel.Factory.FallbackInitializeParam>;
								public toString(): string;
								public getResource(): globalAndroid.content.res.Resources;
								public equals(param0: any): boolean;
								public constructor(param0: globalAndroid.content.res.Resources);
								public copy(param0: globalAndroid.content.res.Resources): com.stripe.android.paymentsheet.forms.FormViewModel.Factory.FallbackInitializeParam;
								public component1(): globalAndroid.content.res.Resources;
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module forms {
					export class FormViewModel_Factory extends dagger.internal.Factory<com.stripe.android.paymentsheet.forms.FormViewModel> {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.forms.FormViewModel_Factory>;
						public constructor(param0: javax.inject.Provider<com.stripe.android.ui.core.elements.LayoutSpec>, param1: javax.inject.Provider<com.stripe.android.paymentsheet.paymentdatacollection.FormFragmentArguments>, param2: javax.inject.Provider<com.stripe.android.ui.core.forms.resources.ResourceRepository>, param3: javax.inject.Provider<com.stripe.android.paymentsheet.forms.TransformSpecToElement>);
						public get(): com.stripe.android.paymentsheet.forms.FormViewModel;
						public static create(param0: javax.inject.Provider<com.stripe.android.ui.core.elements.LayoutSpec>, param1: javax.inject.Provider<com.stripe.android.paymentsheet.paymentdatacollection.FormFragmentArguments>, param2: javax.inject.Provider<com.stripe.android.ui.core.forms.resources.ResourceRepository>, param3: javax.inject.Provider<com.stripe.android.paymentsheet.forms.TransformSpecToElement>): com.stripe.android.paymentsheet.forms.FormViewModel_Factory;
						public static newInstance(param0: com.stripe.android.ui.core.elements.LayoutSpec, param1: com.stripe.android.paymentsheet.paymentdatacollection.FormFragmentArguments, param2: com.stripe.android.ui.core.forms.resources.ResourceRepository, param3: com.stripe.android.paymentsheet.forms.TransformSpecToElement): com.stripe.android.paymentsheet.forms.FormViewModel;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module forms {
					export class FormViewModel_Factory_MembersInjector extends dagger.MembersInjector<com.stripe.android.paymentsheet.forms.FormViewModel.Factory> {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.forms.FormViewModel_Factory_MembersInjector>;
						public injectMembers(param0: com.stripe.android.paymentsheet.forms.FormViewModel.Factory): void;
						public constructor(param0: javax.inject.Provider<com.stripe.android.paymentsheet.injection.FormViewModelSubcomponent.Builder>);
						public static injectSubComponentBuilderProvider(param0: com.stripe.android.paymentsheet.forms.FormViewModel.Factory, param1: javax.inject.Provider<com.stripe.android.paymentsheet.injection.FormViewModelSubcomponent.Builder>): void;
						public static create(param0: javax.inject.Provider<com.stripe.android.paymentsheet.injection.FormViewModelSubcomponent.Builder>): dagger.MembersInjector<com.stripe.android.paymentsheet.forms.FormViewModel.Factory>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module forms {
					export class PIRequirement extends com.stripe.android.paymentsheet.forms.Requirement {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.forms.PIRequirement>;
						/**
						 * Constructs a new instance of the com.stripe.android.paymentsheet.forms.PIRequirement interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module forms {
					export class PaymentMethodRequirements {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.forms.PaymentMethodRequirements>;
						public copy(param0: java.util.Set<any>, param1: java.util.Set<any>, param2: java.lang.Boolean): com.stripe.android.paymentsheet.forms.PaymentMethodRequirements;
						public component1(): java.util.Set<com.stripe.android.paymentsheet.forms.PIRequirement>;
						public getConfirmPMFromCustomer(): java.lang.Boolean;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public component2(): java.util.Set<com.stripe.android.paymentsheet.forms.SIRequirement>;
						public getPiRequirements(): java.util.Set<com.stripe.android.paymentsheet.forms.PIRequirement>;
						public getSiRequirements(): java.util.Set<com.stripe.android.paymentsheet.forms.SIRequirement>;
						public component3(): java.lang.Boolean;
						public constructor(param0: java.util.Set<any>, param1: java.util.Set<any>, param2: java.lang.Boolean);
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module forms {
					export class PaymentMethodRequirementsKt {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.forms.PaymentMethodRequirementsKt>;
						public static getAfterpayClearpayRequirement(): com.stripe.android.paymentsheet.forms.PaymentMethodRequirements;
						public static getSepaDebitRequirement(): com.stripe.android.paymentsheet.forms.PaymentMethodRequirements;
						public static getCardRequirement(): com.stripe.android.paymentsheet.forms.PaymentMethodRequirements;
						public static getSofortRequirement(): com.stripe.android.paymentsheet.forms.PaymentMethodRequirements;
						public static getP24Requirement(): com.stripe.android.paymentsheet.forms.PaymentMethodRequirements;
						public static getKlarnaRequirement(): com.stripe.android.paymentsheet.forms.PaymentMethodRequirements;
						public static getPaypalRequirement(): com.stripe.android.paymentsheet.forms.PaymentMethodRequirements;
						public static getEpsRequirement(): com.stripe.android.paymentsheet.forms.PaymentMethodRequirements;
						public static getBancontactRequirement(): com.stripe.android.paymentsheet.forms.PaymentMethodRequirements;
						public static getIdealRequirement(): com.stripe.android.paymentsheet.forms.PaymentMethodRequirements;
						public static getGiropayRequirement(): com.stripe.android.paymentsheet.forms.PaymentMethodRequirements;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module forms {
					export class Requirement {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.forms.Requirement>;
						/**
						 * Constructs a new instance of the com.stripe.android.paymentsheet.forms.Requirement interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module forms {
					export class SIRequirement extends com.stripe.android.paymentsheet.forms.Requirement {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.forms.SIRequirement>;
						/**
						 * Constructs a new instance of the com.stripe.android.paymentsheet.forms.SIRequirement interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module forms {
					export class TransformSpecToElement {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.forms.TransformSpecToElement>;
						public transform$paymentsheet_release(param0: java.util.List<any>): java.util.List<com.stripe.android.ui.core.elements.FormElement>;
						public constructor(param0: com.stripe.android.ui.core.forms.resources.ResourceRepository, param1: com.stripe.android.paymentsheet.paymentdatacollection.FormFragmentArguments);
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module forms {
					export class TransformSpecToElement_Factory extends dagger.internal.Factory<com.stripe.android.paymentsheet.forms.TransformSpecToElement> {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.forms.TransformSpecToElement_Factory>;
						public constructor(param0: javax.inject.Provider<com.stripe.android.ui.core.forms.resources.ResourceRepository>, param1: javax.inject.Provider<com.stripe.android.paymentsheet.paymentdatacollection.FormFragmentArguments>);
						public get(): com.stripe.android.paymentsheet.forms.TransformSpecToElement;
						public static create(param0: javax.inject.Provider<com.stripe.android.ui.core.forms.resources.ResourceRepository>, param1: javax.inject.Provider<com.stripe.android.paymentsheet.paymentdatacollection.FormFragmentArguments>): com.stripe.android.paymentsheet.forms.TransformSpecToElement_Factory;
						public static newInstance(param0: com.stripe.android.ui.core.forms.resources.ResourceRepository, param1: com.stripe.android.paymentsheet.paymentdatacollection.FormFragmentArguments): com.stripe.android.paymentsheet.forms.TransformSpecToElement;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module injection {
					export class DaggerFlowControllerComponent extends com.stripe.android.paymentsheet.injection.FlowControllerComponent {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.DaggerFlowControllerComponent>;
						public getFlowController(): com.stripe.android.paymentsheet.flowcontroller.DefaultFlowController;
						public inject(param0: com.stripe.android.paymentsheet.forms.FormViewModel.Factory): void;
						public static builder(): com.stripe.android.paymentsheet.injection.FlowControllerComponent.Builder;
						public inject(param0: com.stripe.android.paymentsheet.PaymentOptionsViewModel.Factory): void;
					}
					export module DaggerFlowControllerComponent {
						export class Builder extends com.stripe.android.paymentsheet.injection.FlowControllerComponent.Builder {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.DaggerFlowControllerComponent.Builder>;
							public lifecycleScope(param0: kotlinx.coroutines.CoroutineScope): com.stripe.android.paymentsheet.injection.DaggerFlowControllerComponent.Builder;
							public paymentOptionCallback(param0: com.stripe.android.paymentsheet.PaymentOptionCallback): com.stripe.android.paymentsheet.injection.FlowControllerComponent.Builder;
							public paymentOptionFactory(param0: com.stripe.android.paymentsheet.model.PaymentOptionFactory): com.stripe.android.paymentsheet.injection.FlowControllerComponent.Builder;
							public lifeCycleOwner(param0: androidx.lifecycle.LifecycleOwner): com.stripe.android.paymentsheet.injection.FlowControllerComponent.Builder;
							public appContext(param0: globalAndroid.content.Context): com.stripe.android.paymentsheet.injection.DaggerFlowControllerComponent.Builder;
							public statusBarColor(param0: kotlin.jvm.functions.Function0<java.lang.Integer>): com.stripe.android.paymentsheet.injection.FlowControllerComponent.Builder;
							public activityResultCaller(param0: androidx.activity.result.ActivityResultCaller): com.stripe.android.paymentsheet.injection.DaggerFlowControllerComponent.Builder;
							public lifecycleScope(param0: kotlinx.coroutines.CoroutineScope): com.stripe.android.paymentsheet.injection.FlowControllerComponent.Builder;
							public paymentResultCallback(param0: com.stripe.android.paymentsheet.PaymentSheetResultCallback): com.stripe.android.paymentsheet.injection.FlowControllerComponent.Builder;
							public build(): com.stripe.android.paymentsheet.injection.FlowControllerComponent;
							public paymentOptionFactory(param0: com.stripe.android.paymentsheet.model.PaymentOptionFactory): com.stripe.android.paymentsheet.injection.DaggerFlowControllerComponent.Builder;
							public viewModelStoreOwner(param0: androidx.lifecycle.ViewModelStoreOwner): com.stripe.android.paymentsheet.injection.DaggerFlowControllerComponent.Builder;
							public statusBarColor(param0: kotlin.jvm.functions.Function0<java.lang.Integer>): com.stripe.android.paymentsheet.injection.DaggerFlowControllerComponent.Builder;
							public appContext(param0: globalAndroid.content.Context): com.stripe.android.paymentsheet.injection.FlowControllerComponent.Builder;
							public injectorKey(param0: string): com.stripe.android.paymentsheet.injection.FlowControllerComponent.Builder;
							public viewModelStoreOwner(param0: androidx.lifecycle.ViewModelStoreOwner): com.stripe.android.paymentsheet.injection.FlowControllerComponent.Builder;
							public lifeCycleOwner(param0: androidx.lifecycle.LifecycleOwner): com.stripe.android.paymentsheet.injection.DaggerFlowControllerComponent.Builder;
							public paymentResultCallback(param0: com.stripe.android.paymentsheet.PaymentSheetResultCallback): com.stripe.android.paymentsheet.injection.DaggerFlowControllerComponent.Builder;
							public injectorKey(param0: string): com.stripe.android.paymentsheet.injection.DaggerFlowControllerComponent.Builder;
							public paymentOptionCallback(param0: com.stripe.android.paymentsheet.PaymentOptionCallback): com.stripe.android.paymentsheet.injection.DaggerFlowControllerComponent.Builder;
							public activityResultCaller(param0: androidx.activity.result.ActivityResultCaller): com.stripe.android.paymentsheet.injection.FlowControllerComponent.Builder;
						}
						export class FormViewModelSubcomponentBuilder extends com.stripe.android.paymentsheet.injection.FormViewModelSubcomponent.Builder {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.DaggerFlowControllerComponent.FormViewModelSubcomponentBuilder>;
							public formFragmentArguments(param0: com.stripe.android.paymentsheet.paymentdatacollection.FormFragmentArguments): com.stripe.android.paymentsheet.injection.DaggerFlowControllerComponent.FormViewModelSubcomponentBuilder;
							public layout(param0: com.stripe.android.ui.core.elements.LayoutSpec): com.stripe.android.paymentsheet.injection.DaggerFlowControllerComponent.FormViewModelSubcomponentBuilder;
							public formFragmentArguments(param0: com.stripe.android.paymentsheet.paymentdatacollection.FormFragmentArguments): com.stripe.android.paymentsheet.injection.FormViewModelSubcomponent.Builder;
							public build(): com.stripe.android.paymentsheet.injection.FormViewModelSubcomponent;
							public layout(param0: com.stripe.android.ui.core.elements.LayoutSpec): com.stripe.android.paymentsheet.injection.FormViewModelSubcomponent.Builder;
						}
						export class FormViewModelSubcomponentImpl extends com.stripe.android.paymentsheet.injection.FormViewModelSubcomponent {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.DaggerFlowControllerComponent.FormViewModelSubcomponentImpl>;
							public getViewModel(): com.stripe.android.paymentsheet.forms.FormViewModel;
						}
						export class PaymentOptionsViewModelSubcomponentBuilder extends com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelSubcomponent.Builder {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.DaggerFlowControllerComponent.PaymentOptionsViewModelSubcomponentBuilder>;
							public args(param0: com.stripe.android.paymentsheet.PaymentOptionContract.Args): com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelSubcomponent.Builder;
							public application(param0: globalAndroid.app.Application): com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelSubcomponent.Builder;
							public application(param0: globalAndroid.app.Application): com.stripe.android.paymentsheet.injection.DaggerFlowControllerComponent.PaymentOptionsViewModelSubcomponentBuilder;
							public args(param0: com.stripe.android.paymentsheet.PaymentOptionContract.Args): com.stripe.android.paymentsheet.injection.DaggerFlowControllerComponent.PaymentOptionsViewModelSubcomponentBuilder;
							public build(): com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelSubcomponent;
						}
						export class PaymentOptionsViewModelSubcomponentImpl extends com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelSubcomponent {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.DaggerFlowControllerComponent.PaymentOptionsViewModelSubcomponentImpl>;
							public getViewModel(): com.stripe.android.paymentsheet.PaymentOptionsViewModel;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module injection {
					export class DaggerFormViewModelComponent extends com.stripe.android.paymentsheet.injection.FormViewModelComponent {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.DaggerFormViewModelComponent>;
						public static builder(): com.stripe.android.paymentsheet.injection.FormViewModelComponent.Builder;
						public inject(param0: com.stripe.android.paymentsheet.forms.FormViewModel.Factory): void;
					}
					export module DaggerFormViewModelComponent {
						export class Builder extends com.stripe.android.paymentsheet.injection.FormViewModelComponent.Builder {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.DaggerFormViewModelComponent.Builder>;
							public resources(param0: globalAndroid.content.res.Resources): com.stripe.android.paymentsheet.injection.DaggerFormViewModelComponent.Builder;
							public build(): com.stripe.android.paymentsheet.injection.FormViewModelComponent;
							public resources(param0: globalAndroid.content.res.Resources): com.stripe.android.paymentsheet.injection.FormViewModelComponent.Builder;
						}
						export class FormViewModelSubcomponentBuilder extends com.stripe.android.paymentsheet.injection.FormViewModelSubcomponent.Builder {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.DaggerFormViewModelComponent.FormViewModelSubcomponentBuilder>;
							public formFragmentArguments(param0: com.stripe.android.paymentsheet.paymentdatacollection.FormFragmentArguments): com.stripe.android.paymentsheet.injection.DaggerFormViewModelComponent.FormViewModelSubcomponentBuilder;
							public formFragmentArguments(param0: com.stripe.android.paymentsheet.paymentdatacollection.FormFragmentArguments): com.stripe.android.paymentsheet.injection.FormViewModelSubcomponent.Builder;
							public layout(param0: com.stripe.android.ui.core.elements.LayoutSpec): com.stripe.android.paymentsheet.injection.DaggerFormViewModelComponent.FormViewModelSubcomponentBuilder;
							public build(): com.stripe.android.paymentsheet.injection.FormViewModelSubcomponent;
							public layout(param0: com.stripe.android.ui.core.elements.LayoutSpec): com.stripe.android.paymentsheet.injection.FormViewModelSubcomponent.Builder;
						}
						export class FormViewModelSubcomponentImpl extends com.stripe.android.paymentsheet.injection.FormViewModelSubcomponent {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.DaggerFormViewModelComponent.FormViewModelSubcomponentImpl>;
							public getViewModel(): com.stripe.android.paymentsheet.forms.FormViewModel;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module injection {
					export class DaggerPaymentOptionsViewModelFactoryComponent extends com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelFactoryComponent {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.DaggerPaymentOptionsViewModelFactoryComponent>;
						public static builder(): com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelFactoryComponent.Builder;
						public inject(param0: com.stripe.android.paymentsheet.PaymentOptionsViewModel.Factory): void;
					}
					export module DaggerPaymentOptionsViewModelFactoryComponent {
						export class Builder extends com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelFactoryComponent.Builder {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.DaggerPaymentOptionsViewModelFactoryComponent.Builder>;
							public context(param0: globalAndroid.content.Context): com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelFactoryComponent.Builder;
							public context(param0: globalAndroid.content.Context): com.stripe.android.paymentsheet.injection.DaggerPaymentOptionsViewModelFactoryComponent.Builder;
							public build(): com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelFactoryComponent;
							public productUsage(param0: java.util.Set<string>): com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelFactoryComponent.Builder;
							public productUsage(param0: java.util.Set<string>): com.stripe.android.paymentsheet.injection.DaggerPaymentOptionsViewModelFactoryComponent.Builder;
						}
						export class PaymentOptionsViewModelSubcomponentBuilder extends com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelSubcomponent.Builder {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.DaggerPaymentOptionsViewModelFactoryComponent.PaymentOptionsViewModelSubcomponentBuilder>;
							public application(param0: globalAndroid.app.Application): com.stripe.android.paymentsheet.injection.DaggerPaymentOptionsViewModelFactoryComponent.PaymentOptionsViewModelSubcomponentBuilder;
							public args(param0: com.stripe.android.paymentsheet.PaymentOptionContract.Args): com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelSubcomponent.Builder;
							public application(param0: globalAndroid.app.Application): com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelSubcomponent.Builder;
							public args(param0: com.stripe.android.paymentsheet.PaymentOptionContract.Args): com.stripe.android.paymentsheet.injection.DaggerPaymentOptionsViewModelFactoryComponent.PaymentOptionsViewModelSubcomponentBuilder;
							public build(): com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelSubcomponent;
						}
						export class PaymentOptionsViewModelSubcomponentImpl extends com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelSubcomponent {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.DaggerPaymentOptionsViewModelFactoryComponent.PaymentOptionsViewModelSubcomponentImpl>;
							public getViewModel(): com.stripe.android.paymentsheet.PaymentOptionsViewModel;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module injection {
					export class DaggerPaymentSheetLauncherComponent extends com.stripe.android.paymentsheet.injection.PaymentSheetLauncherComponent {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.DaggerPaymentSheetLauncherComponent>;
						public static builder(): com.stripe.android.paymentsheet.injection.PaymentSheetLauncherComponent.Builder;
						public inject(param0: com.stripe.android.paymentsheet.PaymentSheetViewModel.Factory): void;
						public inject(param0: com.stripe.android.paymentsheet.forms.FormViewModel.Factory): void;
					}
					export module DaggerPaymentSheetLauncherComponent {
						export class Builder extends com.stripe.android.paymentsheet.injection.PaymentSheetLauncherComponent.Builder {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.DaggerPaymentSheetLauncherComponent.Builder>;
							public application(param0: globalAndroid.app.Application): com.stripe.android.paymentsheet.injection.PaymentSheetLauncherComponent.Builder;
							public build(): com.stripe.android.paymentsheet.injection.PaymentSheetLauncherComponent;
							public injectorKey(param0: string): com.stripe.android.paymentsheet.injection.PaymentSheetLauncherComponent.Builder;
							public injectorKey(param0: string): com.stripe.android.paymentsheet.injection.DaggerPaymentSheetLauncherComponent.Builder;
							public application(param0: globalAndroid.app.Application): com.stripe.android.paymentsheet.injection.DaggerPaymentSheetLauncherComponent.Builder;
						}
						export class FormViewModelSubcomponentBuilder extends com.stripe.android.paymentsheet.injection.FormViewModelSubcomponent.Builder {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.DaggerPaymentSheetLauncherComponent.FormViewModelSubcomponentBuilder>;
							public formFragmentArguments(param0: com.stripe.android.paymentsheet.paymentdatacollection.FormFragmentArguments): com.stripe.android.paymentsheet.injection.DaggerPaymentSheetLauncherComponent.FormViewModelSubcomponentBuilder;
							public layout(param0: com.stripe.android.ui.core.elements.LayoutSpec): com.stripe.android.paymentsheet.injection.DaggerPaymentSheetLauncherComponent.FormViewModelSubcomponentBuilder;
							public formFragmentArguments(param0: com.stripe.android.paymentsheet.paymentdatacollection.FormFragmentArguments): com.stripe.android.paymentsheet.injection.FormViewModelSubcomponent.Builder;
							public build(): com.stripe.android.paymentsheet.injection.FormViewModelSubcomponent;
							public layout(param0: com.stripe.android.ui.core.elements.LayoutSpec): com.stripe.android.paymentsheet.injection.FormViewModelSubcomponent.Builder;
						}
						export class FormViewModelSubcomponentImpl extends com.stripe.android.paymentsheet.injection.FormViewModelSubcomponent {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.DaggerPaymentSheetLauncherComponent.FormViewModelSubcomponentImpl>;
							public getViewModel(): com.stripe.android.paymentsheet.forms.FormViewModel;
						}
						export class PaymentSheetViewModelSubcomponentBuilder extends com.stripe.android.paymentsheet.injection.PaymentSheetViewModelSubcomponent.Builder {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.DaggerPaymentSheetLauncherComponent.PaymentSheetViewModelSubcomponentBuilder>;
							public build(): com.stripe.android.paymentsheet.injection.PaymentSheetViewModelSubcomponent;
							public paymentSheetViewModelModule(param0: com.stripe.android.paymentsheet.injection.PaymentSheetViewModelModule): com.stripe.android.paymentsheet.injection.PaymentSheetViewModelSubcomponent.Builder;
							public paymentSheetViewModelModule(param0: com.stripe.android.paymentsheet.injection.PaymentSheetViewModelModule): com.stripe.android.paymentsheet.injection.DaggerPaymentSheetLauncherComponent.PaymentSheetViewModelSubcomponentBuilder;
						}
						export class PaymentSheetViewModelSubcomponentImpl extends com.stripe.android.paymentsheet.injection.PaymentSheetViewModelSubcomponent {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.DaggerPaymentSheetLauncherComponent.PaymentSheetViewModelSubcomponentImpl>;
							public getViewModel(): com.stripe.android.paymentsheet.PaymentSheetViewModel;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module injection {
					export class FlowControllerComponent {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.FlowControllerComponent>;
						/**
						 * Constructs a new instance of the com.stripe.android.paymentsheet.injection.FlowControllerComponent interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getFlowController(): com.stripe.android.paymentsheet.flowcontroller.DefaultFlowController;
							inject(param0: com.stripe.android.paymentsheet.PaymentOptionsViewModel.Factory): void;
							inject(param0: com.stripe.android.paymentsheet.forms.FormViewModel.Factory): void;
						});
						public constructor();
						public getFlowController(): com.stripe.android.paymentsheet.flowcontroller.DefaultFlowController;
						public inject(param0: com.stripe.android.paymentsheet.forms.FormViewModel.Factory): void;
						public inject(param0: com.stripe.android.paymentsheet.PaymentOptionsViewModel.Factory): void;
					}
					export module FlowControllerComponent {
						export class Builder {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.FlowControllerComponent.Builder>;
							/**
							 * Constructs a new instance of the com.stripe.android.paymentsheet.injection.FlowControllerComponent$Builder interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								appContext(param0: globalAndroid.content.Context): com.stripe.android.paymentsheet.injection.FlowControllerComponent.Builder;
								viewModelStoreOwner(param0: androidx.lifecycle.ViewModelStoreOwner): com.stripe.android.paymentsheet.injection.FlowControllerComponent.Builder;
								lifecycleScope(param0: kotlinx.coroutines.CoroutineScope): com.stripe.android.paymentsheet.injection.FlowControllerComponent.Builder;
								lifeCycleOwner(param0: androidx.lifecycle.LifecycleOwner): com.stripe.android.paymentsheet.injection.FlowControllerComponent.Builder;
								activityResultCaller(param0: androidx.activity.result.ActivityResultCaller): com.stripe.android.paymentsheet.injection.FlowControllerComponent.Builder;
								statusBarColor(param0: kotlin.jvm.functions.Function0<java.lang.Integer>): com.stripe.android.paymentsheet.injection.FlowControllerComponent.Builder;
								paymentOptionFactory(param0: com.stripe.android.paymentsheet.model.PaymentOptionFactory): com.stripe.android.paymentsheet.injection.FlowControllerComponent.Builder;
								paymentOptionCallback(param0: com.stripe.android.paymentsheet.PaymentOptionCallback): com.stripe.android.paymentsheet.injection.FlowControllerComponent.Builder;
								paymentResultCallback(param0: com.stripe.android.paymentsheet.PaymentSheetResultCallback): com.stripe.android.paymentsheet.injection.FlowControllerComponent.Builder;
								injectorKey(param0: string): com.stripe.android.paymentsheet.injection.FlowControllerComponent.Builder;
								build(): com.stripe.android.paymentsheet.injection.FlowControllerComponent;
							});
							public constructor();
							public paymentOptionCallback(param0: com.stripe.android.paymentsheet.PaymentOptionCallback): com.stripe.android.paymentsheet.injection.FlowControllerComponent.Builder;
							public build(): com.stripe.android.paymentsheet.injection.FlowControllerComponent;
							public paymentOptionFactory(param0: com.stripe.android.paymentsheet.model.PaymentOptionFactory): com.stripe.android.paymentsheet.injection.FlowControllerComponent.Builder;
							public lifeCycleOwner(param0: androidx.lifecycle.LifecycleOwner): com.stripe.android.paymentsheet.injection.FlowControllerComponent.Builder;
							public appContext(param0: globalAndroid.content.Context): com.stripe.android.paymentsheet.injection.FlowControllerComponent.Builder;
							public injectorKey(param0: string): com.stripe.android.paymentsheet.injection.FlowControllerComponent.Builder;
							public viewModelStoreOwner(param0: androidx.lifecycle.ViewModelStoreOwner): com.stripe.android.paymentsheet.injection.FlowControllerComponent.Builder;
							public statusBarColor(param0: kotlin.jvm.functions.Function0<java.lang.Integer>): com.stripe.android.paymentsheet.injection.FlowControllerComponent.Builder;
							public lifecycleScope(param0: kotlinx.coroutines.CoroutineScope): com.stripe.android.paymentsheet.injection.FlowControllerComponent.Builder;
							public paymentResultCallback(param0: com.stripe.android.paymentsheet.PaymentSheetResultCallback): com.stripe.android.paymentsheet.injection.FlowControllerComponent.Builder;
							public activityResultCaller(param0: androidx.activity.result.ActivityResultCaller): com.stripe.android.paymentsheet.injection.FlowControllerComponent.Builder;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module injection {
					export abstract class FlowControllerModule {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.FlowControllerModule>;
						public static Companion: com.stripe.android.paymentsheet.injection.FlowControllerModule.Companion;
						public constructor();
						public bindsFlowControllerInitializer(param0: com.stripe.android.paymentsheet.flowcontroller.DefaultFlowControllerInitializer): com.stripe.android.paymentsheet.flowcontroller.FlowControllerInitializer;
					}
					export module FlowControllerModule {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.FlowControllerModule.Companion>;
							public provideClientSecret(param0: com.stripe.android.paymentsheet.flowcontroller.FlowControllerViewModel): com.stripe.android.paymentsheet.model.ClientSecret;
							public provideEventReporterMode(): com.stripe.android.paymentsheet.analytics.EventReporter.Mode;
							public providePrefsRepositoryFactory(param0: globalAndroid.content.Context, param1: kotlin.coroutines.CoroutineContext): kotlin.jvm.functions.Function1<com.stripe.android.paymentsheet.PaymentSheet.CustomerConfiguration, com.stripe.android.paymentsheet.PrefsRepository>;
							public provideProductUsageTokens(): java.util.Set<string>;
							public provideViewModel(param0: androidx.lifecycle.ViewModelStoreOwner): com.stripe.android.paymentsheet.flowcontroller.FlowControllerViewModel;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module injection {
					export class FlowControllerModule_Companion_ProvideClientSecretFactory extends dagger.internal.Factory<com.stripe.android.paymentsheet.model.ClientSecret> {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.FlowControllerModule_Companion_ProvideClientSecretFactory>;
						public static create(param0: javax.inject.Provider<com.stripe.android.paymentsheet.flowcontroller.FlowControllerViewModel>): com.stripe.android.paymentsheet.injection.FlowControllerModule_Companion_ProvideClientSecretFactory;
						public constructor(param0: javax.inject.Provider<com.stripe.android.paymentsheet.flowcontroller.FlowControllerViewModel>);
						public get(): com.stripe.android.paymentsheet.model.ClientSecret;
						public static provideClientSecret(param0: com.stripe.android.paymentsheet.flowcontroller.FlowControllerViewModel): com.stripe.android.paymentsheet.model.ClientSecret;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module injection {
					export class FlowControllerModule_Companion_ProvideEventReporterModeFactory extends dagger.internal.Factory<com.stripe.android.paymentsheet.analytics.EventReporter.Mode> {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.FlowControllerModule_Companion_ProvideEventReporterModeFactory>;
						public constructor();
						public static create(): com.stripe.android.paymentsheet.injection.FlowControllerModule_Companion_ProvideEventReporterModeFactory;
						public static provideEventReporterMode(): com.stripe.android.paymentsheet.analytics.EventReporter.Mode;
						public get(): com.stripe.android.paymentsheet.analytics.EventReporter.Mode;
					}
					export module FlowControllerModule_Companion_ProvideEventReporterModeFactory {
						export class InstanceHolder {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.FlowControllerModule_Companion_ProvideEventReporterModeFactory.InstanceHolder>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module injection {
					export class FlowControllerModule_Companion_ProvidePrefsRepositoryFactoryFactory extends dagger.internal.Factory<kotlin.jvm.functions.Function1<com.stripe.android.paymentsheet.PaymentSheet.CustomerConfiguration, com.stripe.android.paymentsheet.PrefsRepository>> {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.FlowControllerModule_Companion_ProvidePrefsRepositoryFactoryFactory>;
						public constructor(param0: javax.inject.Provider<globalAndroid.content.Context>, param1: javax.inject.Provider<kotlin.coroutines.CoroutineContext>);
						public get(): kotlin.jvm.functions.Function1<com.stripe.android.paymentsheet.PaymentSheet.CustomerConfiguration, com.stripe.android.paymentsheet.PrefsRepository>;
						public static providePrefsRepositoryFactory(param0: globalAndroid.content.Context, param1: kotlin.coroutines.CoroutineContext): kotlin.jvm.functions.Function1<com.stripe.android.paymentsheet.PaymentSheet.CustomerConfiguration, com.stripe.android.paymentsheet.PrefsRepository>;
						public static create(param0: javax.inject.Provider<globalAndroid.content.Context>, param1: javax.inject.Provider<kotlin.coroutines.CoroutineContext>): com.stripe.android.paymentsheet.injection.FlowControllerModule_Companion_ProvidePrefsRepositoryFactoryFactory;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module injection {
					export class FlowControllerModule_Companion_ProvideProductUsageTokensFactory extends dagger.internal.Factory<java.util.Set<string>> {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.FlowControllerModule_Companion_ProvideProductUsageTokensFactory>;
						public constructor();
						public static create(): com.stripe.android.paymentsheet.injection.FlowControllerModule_Companion_ProvideProductUsageTokensFactory;
						public static provideProductUsageTokens(): java.util.Set<string>;
						public get(): java.util.Set<string>;
					}
					export module FlowControllerModule_Companion_ProvideProductUsageTokensFactory {
						export class InstanceHolder {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.FlowControllerModule_Companion_ProvideProductUsageTokensFactory.InstanceHolder>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module injection {
					export class FlowControllerModule_Companion_ProvideViewModelFactory extends dagger.internal.Factory<com.stripe.android.paymentsheet.flowcontroller.FlowControllerViewModel> {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.FlowControllerModule_Companion_ProvideViewModelFactory>;
						public constructor(param0: javax.inject.Provider<androidx.lifecycle.ViewModelStoreOwner>);
						public static provideViewModel(param0: androidx.lifecycle.ViewModelStoreOwner): com.stripe.android.paymentsheet.flowcontroller.FlowControllerViewModel;
						public static create(param0: javax.inject.Provider<androidx.lifecycle.ViewModelStoreOwner>): com.stripe.android.paymentsheet.injection.FlowControllerModule_Companion_ProvideViewModelFactory;
						public get(): com.stripe.android.paymentsheet.flowcontroller.FlowControllerViewModel;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module injection {
					export class FormViewModelComponent {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.FormViewModelComponent>;
						/**
						 * Constructs a new instance of the com.stripe.android.paymentsheet.injection.FormViewModelComponent interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							inject(param0: com.stripe.android.paymentsheet.forms.FormViewModel.Factory): void;
						});
						public constructor();
						public inject(param0: com.stripe.android.paymentsheet.forms.FormViewModel.Factory): void;
					}
					export module FormViewModelComponent {
						export class Builder {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.FormViewModelComponent.Builder>;
							/**
							 * Constructs a new instance of the com.stripe.android.paymentsheet.injection.FormViewModelComponent$Builder interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								resources(param0: globalAndroid.content.res.Resources): com.stripe.android.paymentsheet.injection.FormViewModelComponent.Builder;
								build(): com.stripe.android.paymentsheet.injection.FormViewModelComponent;
							});
							public constructor();
							public build(): com.stripe.android.paymentsheet.injection.FormViewModelComponent;
							public resources(param0: globalAndroid.content.res.Resources): com.stripe.android.paymentsheet.injection.FormViewModelComponent.Builder;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module injection {
					export abstract class FormViewModelModule {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.FormViewModelModule>;
						public static Companion: com.stripe.android.paymentsheet.injection.FormViewModelModule.Companion;
						public constructor();
						public bindsResourceRepository(param0: com.stripe.android.ui.core.forms.resources.AsyncResourceRepository): com.stripe.android.ui.core.forms.resources.ResourceRepository;
					}
					export module FormViewModelModule {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.FormViewModelModule.Companion>;
							public provideLocale(): java.util.Locale;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module injection {
					export class FormViewModelModule_Companion_ProvideLocaleFactory extends dagger.internal.Factory<java.util.Locale> {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.FormViewModelModule_Companion_ProvideLocaleFactory>;
						public constructor();
						public static provideLocale(): java.util.Locale;
						public static create(): com.stripe.android.paymentsheet.injection.FormViewModelModule_Companion_ProvideLocaleFactory;
						public get(): java.util.Locale;
					}
					export module FormViewModelModule_Companion_ProvideLocaleFactory {
						export class InstanceHolder {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.FormViewModelModule_Companion_ProvideLocaleFactory.InstanceHolder>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module injection {
					export class FormViewModelSubcomponent {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.FormViewModelSubcomponent>;
						/**
						 * Constructs a new instance of the com.stripe.android.paymentsheet.injection.FormViewModelSubcomponent interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getViewModel(): com.stripe.android.paymentsheet.forms.FormViewModel;
						});
						public constructor();
						public getViewModel(): com.stripe.android.paymentsheet.forms.FormViewModel;
					}
					export module FormViewModelSubcomponent {
						export class Builder {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.FormViewModelSubcomponent.Builder>;
							/**
							 * Constructs a new instance of the com.stripe.android.paymentsheet.injection.FormViewModelSubcomponent$Builder interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								layout(param0: com.stripe.android.ui.core.elements.LayoutSpec): com.stripe.android.paymentsheet.injection.FormViewModelSubcomponent.Builder;
								formFragmentArguments(param0: com.stripe.android.paymentsheet.paymentdatacollection.FormFragmentArguments): com.stripe.android.paymentsheet.injection.FormViewModelSubcomponent.Builder;
								build(): com.stripe.android.paymentsheet.injection.FormViewModelSubcomponent;
							});
							public constructor();
							public formFragmentArguments(param0: com.stripe.android.paymentsheet.paymentdatacollection.FormFragmentArguments): com.stripe.android.paymentsheet.injection.FormViewModelSubcomponent.Builder;
							public layout(param0: com.stripe.android.ui.core.elements.LayoutSpec): com.stripe.android.paymentsheet.injection.FormViewModelSubcomponent.Builder;
							public build(): com.stripe.android.paymentsheet.injection.FormViewModelSubcomponent;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module injection {
					export class PaymentOptionsViewModelFactoryComponent {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelFactoryComponent>;
						/**
						 * Constructs a new instance of the com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelFactoryComponent interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							inject(param0: com.stripe.android.paymentsheet.PaymentOptionsViewModel.Factory): void;
						});
						public constructor();
						public inject(param0: com.stripe.android.paymentsheet.PaymentOptionsViewModel.Factory): void;
					}
					export module PaymentOptionsViewModelFactoryComponent {
						export class Builder {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelFactoryComponent.Builder>;
							/**
							 * Constructs a new instance of the com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelFactoryComponent$Builder interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								context(param0: globalAndroid.content.Context): com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelFactoryComponent.Builder;
								productUsage(param0: java.util.Set<string>): com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelFactoryComponent.Builder;
								build(): com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelFactoryComponent;
							});
							public constructor();
							public context(param0: globalAndroid.content.Context): com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelFactoryComponent.Builder;
							public build(): com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelFactoryComponent;
							public productUsage(param0: java.util.Set<string>): com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelFactoryComponent.Builder;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module injection {
					export class PaymentOptionsViewModelModule {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelModule>;
						public constructor();
						public provideEventReporterMode(): com.stripe.android.paymentsheet.analytics.EventReporter.Mode;
						public providePrefsRepositoryFactory(param0: globalAndroid.content.Context, param1: kotlin.coroutines.CoroutineContext): kotlin.jvm.functions.Function1<com.stripe.android.paymentsheet.PaymentSheet.CustomerConfiguration, com.stripe.android.paymentsheet.PrefsRepository>;
						public provideDummyInjectorKey(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module injection {
					export class PaymentOptionsViewModelModule_ProvideDummyInjectorKeyFactory extends dagger.internal.Factory<string> {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelModule_ProvideDummyInjectorKeyFactory>;
						public static provideDummyInjectorKey(param0: com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelModule): string;
						public get(): string;
						public static create(param0: com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelModule): com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelModule_ProvideDummyInjectorKeyFactory;
						public constructor(param0: com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelModule);
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module injection {
					export class PaymentOptionsViewModelModule_ProvideEventReporterModeFactory extends dagger.internal.Factory<com.stripe.android.paymentsheet.analytics.EventReporter.Mode> {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelModule_ProvideEventReporterModeFactory>;
						public static provideEventReporterMode(param0: com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelModule): com.stripe.android.paymentsheet.analytics.EventReporter.Mode;
						public static create(param0: com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelModule): com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelModule_ProvideEventReporterModeFactory;
						public constructor(param0: com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelModule);
						public get(): com.stripe.android.paymentsheet.analytics.EventReporter.Mode;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module injection {
					export class PaymentOptionsViewModelModule_ProvidePrefsRepositoryFactoryFactory extends dagger.internal.Factory<kotlin.jvm.functions.Function1<com.stripe.android.paymentsheet.PaymentSheet.CustomerConfiguration, com.stripe.android.paymentsheet.PrefsRepository>> {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelModule_ProvidePrefsRepositoryFactoryFactory>;
						public static create(param0: com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelModule, param1: javax.inject.Provider<globalAndroid.content.Context>, param2: javax.inject.Provider<kotlin.coroutines.CoroutineContext>): com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelModule_ProvidePrefsRepositoryFactoryFactory;
						public get(): kotlin.jvm.functions.Function1<com.stripe.android.paymentsheet.PaymentSheet.CustomerConfiguration, com.stripe.android.paymentsheet.PrefsRepository>;
						public constructor(param0: com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelModule, param1: javax.inject.Provider<globalAndroid.content.Context>, param2: javax.inject.Provider<kotlin.coroutines.CoroutineContext>);
						public static providePrefsRepositoryFactory(param0: com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelModule, param1: globalAndroid.content.Context, param2: kotlin.coroutines.CoroutineContext): kotlin.jvm.functions.Function1<com.stripe.android.paymentsheet.PaymentSheet.CustomerConfiguration, com.stripe.android.paymentsheet.PrefsRepository>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module injection {
					export class PaymentOptionsViewModelSubcomponent {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelSubcomponent>;
						/**
						 * Constructs a new instance of the com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelSubcomponent interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getViewModel(): com.stripe.android.paymentsheet.PaymentOptionsViewModel;
						});
						public constructor();
						public getViewModel(): com.stripe.android.paymentsheet.PaymentOptionsViewModel;
					}
					export module PaymentOptionsViewModelSubcomponent {
						export class Builder {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelSubcomponent.Builder>;
							/**
							 * Constructs a new instance of the com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelSubcomponent$Builder interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								application(param0: globalAndroid.app.Application): com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelSubcomponent.Builder;
								args(param0: com.stripe.android.paymentsheet.PaymentOptionContract.Args): com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelSubcomponent.Builder;
								build(): com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelSubcomponent;
							});
							public constructor();
							public args(param0: com.stripe.android.paymentsheet.PaymentOptionContract.Args): com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelSubcomponent.Builder;
							public application(param0: globalAndroid.app.Application): com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelSubcomponent.Builder;
							public build(): com.stripe.android.paymentsheet.injection.PaymentOptionsViewModelSubcomponent;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module injection {
					export abstract class PaymentSheetCommonModule {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.PaymentSheetCommonModule>;
						public static Companion: com.stripe.android.paymentsheet.injection.PaymentSheetCommonModule.Companion;
						public constructor();
						public bindsDeviceIdRepository(param0: com.stripe.android.paymentsheet.analytics.DefaultDeviceIdRepository): com.stripe.android.paymentsheet.analytics.DeviceIdRepository;
						public bindsCustomerRepository(param0: com.stripe.android.paymentsheet.repositories.CustomerApiRepository): com.stripe.android.paymentsheet.repositories.CustomerRepository;
						public bindsStripeIntentRepository(param0: com.stripe.android.paymentsheet.repositories.StripeIntentRepository.Api): com.stripe.android.paymentsheet.repositories.StripeIntentRepository;
						public bindsResourceRepository(param0: com.stripe.android.ui.core.forms.resources.AsyncResourceRepository): com.stripe.android.ui.core.forms.resources.ResourceRepository;
						public bindsEventReporter(param0: com.stripe.android.paymentsheet.analytics.DefaultEventReporter): com.stripe.android.paymentsheet.analytics.EventReporter;
					}
					export module PaymentSheetCommonModule {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.PaymentSheetCommonModule.Companion>;
							public provideEnabledLogging(): boolean;
							public provideResources(param0: globalAndroid.content.Context): globalAndroid.content.res.Resources;
							public providePublishableKey(param0: dagger.Lazy<com.stripe.android.PaymentConfiguration>): kotlin.jvm.functions.Function0<string>;
							public providePaymentConfiguration(param0: globalAndroid.content.Context): com.stripe.android.PaymentConfiguration;
							public provideStripeAccountId(param0: dagger.Lazy<com.stripe.android.PaymentConfiguration>): kotlin.jvm.functions.Function0<string>;
							public provideLocale(): java.util.Locale;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module injection {
					export class PaymentSheetCommonModule_Companion_ProvideEnabledLoggingFactory extends dagger.internal.Factory<java.lang.Boolean> {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.PaymentSheetCommonModule_Companion_ProvideEnabledLoggingFactory>;
						public constructor();
						public get(): java.lang.Boolean;
						public static create(): com.stripe.android.paymentsheet.injection.PaymentSheetCommonModule_Companion_ProvideEnabledLoggingFactory;
						public static provideEnabledLogging(): boolean;
					}
					export module PaymentSheetCommonModule_Companion_ProvideEnabledLoggingFactory {
						export class InstanceHolder {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.PaymentSheetCommonModule_Companion_ProvideEnabledLoggingFactory.InstanceHolder>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module injection {
					export class PaymentSheetCommonModule_Companion_ProvideLocaleFactory extends dagger.internal.Factory<java.util.Locale> {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.PaymentSheetCommonModule_Companion_ProvideLocaleFactory>;
						public constructor();
						public static provideLocale(): java.util.Locale;
						public get(): java.util.Locale;
						public static create(): com.stripe.android.paymentsheet.injection.PaymentSheetCommonModule_Companion_ProvideLocaleFactory;
					}
					export module PaymentSheetCommonModule_Companion_ProvideLocaleFactory {
						export class InstanceHolder {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.PaymentSheetCommonModule_Companion_ProvideLocaleFactory.InstanceHolder>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module injection {
					export class PaymentSheetCommonModule_Companion_ProvidePaymentConfigurationFactory extends dagger.internal.Factory<com.stripe.android.PaymentConfiguration> {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.PaymentSheetCommonModule_Companion_ProvidePaymentConfigurationFactory>;
						public static providePaymentConfiguration(param0: globalAndroid.content.Context): com.stripe.android.PaymentConfiguration;
						public static create(param0: javax.inject.Provider<globalAndroid.content.Context>): com.stripe.android.paymentsheet.injection.PaymentSheetCommonModule_Companion_ProvidePaymentConfigurationFactory;
						public constructor(param0: javax.inject.Provider<globalAndroid.content.Context>);
						public get(): com.stripe.android.PaymentConfiguration;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module injection {
					export class PaymentSheetCommonModule_Companion_ProvidePublishableKeyFactory extends dagger.internal.Factory<kotlin.jvm.functions.Function0<string>> {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.PaymentSheetCommonModule_Companion_ProvidePublishableKeyFactory>;
						public constructor(param0: javax.inject.Provider<com.stripe.android.PaymentConfiguration>);
						public static create(param0: javax.inject.Provider<com.stripe.android.PaymentConfiguration>): com.stripe.android.paymentsheet.injection.PaymentSheetCommonModule_Companion_ProvidePublishableKeyFactory;
						public static providePublishableKey(param0: dagger.Lazy<com.stripe.android.PaymentConfiguration>): kotlin.jvm.functions.Function0<string>;
						public get(): kotlin.jvm.functions.Function0<string>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module injection {
					export class PaymentSheetCommonModule_Companion_ProvideResourcesFactory extends dagger.internal.Factory<globalAndroid.content.res.Resources> {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.PaymentSheetCommonModule_Companion_ProvideResourcesFactory>;
						public static create(param0: javax.inject.Provider<globalAndroid.content.Context>): com.stripe.android.paymentsheet.injection.PaymentSheetCommonModule_Companion_ProvideResourcesFactory;
						public get(): globalAndroid.content.res.Resources;
						public constructor(param0: javax.inject.Provider<globalAndroid.content.Context>);
						public static provideResources(param0: globalAndroid.content.Context): globalAndroid.content.res.Resources;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module injection {
					export class PaymentSheetCommonModule_Companion_ProvideStripeAccountIdFactory extends dagger.internal.Factory<kotlin.jvm.functions.Function0<string>> {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.PaymentSheetCommonModule_Companion_ProvideStripeAccountIdFactory>;
						public static create(param0: javax.inject.Provider<com.stripe.android.PaymentConfiguration>): com.stripe.android.paymentsheet.injection.PaymentSheetCommonModule_Companion_ProvideStripeAccountIdFactory;
						public constructor(param0: javax.inject.Provider<com.stripe.android.PaymentConfiguration>);
						public get(): kotlin.jvm.functions.Function0<string>;
						public static provideStripeAccountId(param0: dagger.Lazy<com.stripe.android.PaymentConfiguration>): kotlin.jvm.functions.Function0<string>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module injection {
					export class PaymentSheetLauncherComponent {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.PaymentSheetLauncherComponent>;
						/**
						 * Constructs a new instance of the com.stripe.android.paymentsheet.injection.PaymentSheetLauncherComponent interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							inject(param0: com.stripe.android.paymentsheet.PaymentSheetViewModel.Factory): void;
							inject(param0: com.stripe.android.paymentsheet.forms.FormViewModel.Factory): void;
						});
						public constructor();
						public inject(param0: com.stripe.android.paymentsheet.PaymentSheetViewModel.Factory): void;
						public inject(param0: com.stripe.android.paymentsheet.forms.FormViewModel.Factory): void;
					}
					export module PaymentSheetLauncherComponent {
						export class Builder {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.PaymentSheetLauncherComponent.Builder>;
							/**
							 * Constructs a new instance of the com.stripe.android.paymentsheet.injection.PaymentSheetLauncherComponent$Builder interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								application(param0: globalAndroid.app.Application): com.stripe.android.paymentsheet.injection.PaymentSheetLauncherComponent.Builder;
								injectorKey(param0: string): com.stripe.android.paymentsheet.injection.PaymentSheetLauncherComponent.Builder;
								build(): com.stripe.android.paymentsheet.injection.PaymentSheetLauncherComponent;
							});
							public constructor();
							public application(param0: globalAndroid.app.Application): com.stripe.android.paymentsheet.injection.PaymentSheetLauncherComponent.Builder;
							public build(): com.stripe.android.paymentsheet.injection.PaymentSheetLauncherComponent;
							public injectorKey(param0: string): com.stripe.android.paymentsheet.injection.PaymentSheetLauncherComponent.Builder;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module injection {
					export abstract class PaymentSheetLauncherModule {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.PaymentSheetLauncherModule>;
						public static Companion: com.stripe.android.paymentsheet.injection.PaymentSheetLauncherModule.Companion;
						public constructor();
						public bindsApplicationForContext(param0: globalAndroid.app.Application): globalAndroid.content.Context;
					}
					export module PaymentSheetLauncherModule {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.PaymentSheetLauncherModule.Companion>;
							public provideEventReporterMode(): com.stripe.android.paymentsheet.analytics.EventReporter.Mode;
							public provideProductUsageTokens(): java.util.Set<string>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module injection {
					export class PaymentSheetLauncherModule_Companion_ProvideEventReporterModeFactory extends dagger.internal.Factory<com.stripe.android.paymentsheet.analytics.EventReporter.Mode> {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.PaymentSheetLauncherModule_Companion_ProvideEventReporterModeFactory>;
						public constructor();
						public static create(): com.stripe.android.paymentsheet.injection.PaymentSheetLauncherModule_Companion_ProvideEventReporterModeFactory;
						public static provideEventReporterMode(): com.stripe.android.paymentsheet.analytics.EventReporter.Mode;
						public get(): com.stripe.android.paymentsheet.analytics.EventReporter.Mode;
					}
					export module PaymentSheetLauncherModule_Companion_ProvideEventReporterModeFactory {
						export class InstanceHolder {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.PaymentSheetLauncherModule_Companion_ProvideEventReporterModeFactory.InstanceHolder>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module injection {
					export class PaymentSheetLauncherModule_Companion_ProvideProductUsageTokensFactory extends dagger.internal.Factory<java.util.Set<string>> {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.PaymentSheetLauncherModule_Companion_ProvideProductUsageTokensFactory>;
						public constructor();
						public static create(): com.stripe.android.paymentsheet.injection.PaymentSheetLauncherModule_Companion_ProvideProductUsageTokensFactory;
						public static provideProductUsageTokens(): java.util.Set<string>;
						public get(): java.util.Set<string>;
					}
					export module PaymentSheetLauncherModule_Companion_ProvideProductUsageTokensFactory {
						export class InstanceHolder {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.PaymentSheetLauncherModule_Companion_ProvideProductUsageTokensFactory.InstanceHolder>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module injection {
					export class PaymentSheetViewModelModule {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.PaymentSheetViewModelModule>;
						public provideArgs(): com.stripe.android.paymentsheet.PaymentSheetContract.Args;
						public providePrefsRepository(param0: globalAndroid.content.Context, param1: kotlin.coroutines.CoroutineContext): com.stripe.android.paymentsheet.PrefsRepository;
						public constructor(param0: com.stripe.android.paymentsheet.PaymentSheetContract.Args);
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module injection {
					export class PaymentSheetViewModelModule_ProvideArgsFactory extends dagger.internal.Factory<com.stripe.android.paymentsheet.PaymentSheetContract.Args> {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.PaymentSheetViewModelModule_ProvideArgsFactory>;
						public static provideArgs(param0: com.stripe.android.paymentsheet.injection.PaymentSheetViewModelModule): com.stripe.android.paymentsheet.PaymentSheetContract.Args;
						public static create(param0: com.stripe.android.paymentsheet.injection.PaymentSheetViewModelModule): com.stripe.android.paymentsheet.injection.PaymentSheetViewModelModule_ProvideArgsFactory;
						public constructor(param0: com.stripe.android.paymentsheet.injection.PaymentSheetViewModelModule);
						public get(): com.stripe.android.paymentsheet.PaymentSheetContract.Args;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module injection {
					export class PaymentSheetViewModelModule_ProvidePrefsRepositoryFactory extends dagger.internal.Factory<com.stripe.android.paymentsheet.PrefsRepository> {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.PaymentSheetViewModelModule_ProvidePrefsRepositoryFactory>;
						public static providePrefsRepository(param0: com.stripe.android.paymentsheet.injection.PaymentSheetViewModelModule, param1: globalAndroid.content.Context, param2: kotlin.coroutines.CoroutineContext): com.stripe.android.paymentsheet.PrefsRepository;
						public constructor(param0: com.stripe.android.paymentsheet.injection.PaymentSheetViewModelModule, param1: javax.inject.Provider<globalAndroid.content.Context>, param2: javax.inject.Provider<kotlin.coroutines.CoroutineContext>);
						public static create(param0: com.stripe.android.paymentsheet.injection.PaymentSheetViewModelModule, param1: javax.inject.Provider<globalAndroid.content.Context>, param2: javax.inject.Provider<kotlin.coroutines.CoroutineContext>): com.stripe.android.paymentsheet.injection.PaymentSheetViewModelModule_ProvidePrefsRepositoryFactory;
						public get(): com.stripe.android.paymentsheet.PrefsRepository;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module injection {
					export class PaymentSheetViewModelSubcomponent {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.PaymentSheetViewModelSubcomponent>;
						/**
						 * Constructs a new instance of the com.stripe.android.paymentsheet.injection.PaymentSheetViewModelSubcomponent interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getViewModel(): com.stripe.android.paymentsheet.PaymentSheetViewModel;
						});
						public constructor();
						public getViewModel(): com.stripe.android.paymentsheet.PaymentSheetViewModel;
					}
					export module PaymentSheetViewModelSubcomponent {
						export class Builder {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.injection.PaymentSheetViewModelSubcomponent.Builder>;
							/**
							 * Constructs a new instance of the com.stripe.android.paymentsheet.injection.PaymentSheetViewModelSubcomponent$Builder interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								paymentSheetViewModelModule(param0: com.stripe.android.paymentsheet.injection.PaymentSheetViewModelModule): com.stripe.android.paymentsheet.injection.PaymentSheetViewModelSubcomponent.Builder;
								build(): com.stripe.android.paymentsheet.injection.PaymentSheetViewModelSubcomponent;
							});
							public constructor();
							public build(): com.stripe.android.paymentsheet.injection.PaymentSheetViewModelSubcomponent;
							public paymentSheetViewModelModule(param0: com.stripe.android.paymentsheet.injection.PaymentSheetViewModelModule): com.stripe.android.paymentsheet.injection.PaymentSheetViewModelSubcomponent.Builder;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module model {
					export abstract class ClientSecret {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.model.ClientSecret>;
						public getValue(): string;
						public validate(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module model {
					export class ConfirmPaymentIntentParamsFactory extends com.stripe.android.paymentsheet.model.ConfirmStripeIntentParamsFactory<com.stripe.android.model.ConfirmPaymentIntentParams> {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.model.ConfirmPaymentIntentParamsFactory>;
						public create(param0: com.stripe.android.paymentsheet.model.PaymentSelection.Saved): any;
						public constructor(param0: com.stripe.android.paymentsheet.model.ClientSecret);
						public create(param0: com.stripe.android.paymentsheet.model.PaymentSelection.Saved): com.stripe.android.model.ConfirmPaymentIntentParams;
						public create(param0: com.stripe.android.paymentsheet.model.PaymentSelection.New): any;
						public create(param0: com.stripe.android.paymentsheet.model.PaymentSelection.New): com.stripe.android.model.ConfirmPaymentIntentParams;
					}
					export module ConfirmPaymentIntentParamsFactory {
						export class WhenMappings {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.model.ConfirmPaymentIntentParamsFactory.WhenMappings>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module model {
					export class ConfirmSetupIntentParamsFactory extends com.stripe.android.paymentsheet.model.ConfirmStripeIntentParamsFactory<com.stripe.android.model.ConfirmSetupIntentParams> {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.model.ConfirmSetupIntentParamsFactory>;
						public create(param0: com.stripe.android.paymentsheet.model.PaymentSelection.Saved): any;
						public constructor(param0: com.stripe.android.paymentsheet.model.ClientSecret);
						public create(param0: com.stripe.android.paymentsheet.model.PaymentSelection.Saved): com.stripe.android.model.ConfirmSetupIntentParams;
						public create(param0: com.stripe.android.paymentsheet.model.PaymentSelection.New): any;
						public create(param0: com.stripe.android.paymentsheet.model.PaymentSelection.New): com.stripe.android.model.ConfirmSetupIntentParams;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module model {
					export abstract class ConfirmStripeIntentParamsFactory<T> extends java.lang.Object {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.model.ConfirmStripeIntentParamsFactory<any>>;
						public static Companion: com.stripe.android.paymentsheet.model.ConfirmStripeIntentParamsFactory.Companion;
						public create(param0: com.stripe.android.paymentsheet.model.PaymentSelection.Saved): T;
						public create(param0: com.stripe.android.paymentsheet.model.PaymentSelection.New): T;
					}
					export module ConfirmStripeIntentParamsFactory {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.model.ConfirmStripeIntentParamsFactory.Companion>;
							public createFactory(param0: com.stripe.android.paymentsheet.model.ClientSecret): com.stripe.android.paymentsheet.model.ConfirmStripeIntentParamsFactory<com.stripe.android.model.ConfirmStripeIntentParams>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module model {
					export class FragmentConfig {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.model.FragmentConfig>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.model.FragmentConfig>;
						public isGooglePayReady(): boolean;
						public describeContents(): number;
						public component2(): boolean;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public component3(): com.stripe.android.paymentsheet.model.SavedSelection;
						public component1(): com.stripe.android.model.StripeIntent;
						public getStripeIntent(): com.stripe.android.model.StripeIntent;
						public toString(): string;
						public copy(param0: com.stripe.android.model.StripeIntent, param1: boolean, param2: com.stripe.android.paymentsheet.model.SavedSelection): com.stripe.android.paymentsheet.model.FragmentConfig;
						public constructor(param0: com.stripe.android.model.StripeIntent, param1: boolean, param2: com.stripe.android.paymentsheet.model.SavedSelection);
						public getSavedSelection(): com.stripe.android.paymentsheet.model.SavedSelection;
					}
					export module FragmentConfig {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.model.FragmentConfig> {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.model.FragmentConfig.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.paymentsheet.model.FragmentConfig;
							public newArray(param0: number): androidNative.Array<com.stripe.android.paymentsheet.model.FragmentConfig>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module model {
					export class PaymentIntentClientSecret extends com.stripe.android.paymentsheet.model.ClientSecret {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.model.PaymentIntentClientSecret>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.model.PaymentIntentClientSecret>;
						public describeContents(): number;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getValue(): string;
						public validate(): void;
						public copy(param0: string): com.stripe.android.paymentsheet.model.PaymentIntentClientSecret;
						public toString(): string;
						public constructor(param0: string);
					}
					export module PaymentIntentClientSecret {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.model.PaymentIntentClientSecret> {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.model.PaymentIntentClientSecret.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.paymentsheet.model.PaymentIntentClientSecret>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.paymentsheet.model.PaymentIntentClientSecret;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module model {
					export class PaymentOption {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.model.PaymentOption>;
						public static $stable: number;
						public constructor(param0: number, param1: string);
						public component2(): string;
						public getLabel(): string;
						public copy(param0: number, param1: string): com.stripe.android.paymentsheet.model.PaymentOption;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getDrawableResourceId(): number;
						public component1(): number;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module model {
					export class PaymentOptionFactory {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.model.PaymentOptionFactory>;
						public constructor(param0: globalAndroid.content.res.Resources);
						public create(param0: com.stripe.android.paymentsheet.model.PaymentSelection): com.stripe.android.paymentsheet.model.PaymentOption;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module model {
					export abstract class PaymentSelection {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.model.PaymentSelection>;
					}
					export module PaymentSelection {
						export class CustomerRequestedSave {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.model.PaymentSelection.CustomerRequestedSave>;
							public static RequestReuse: com.stripe.android.paymentsheet.model.PaymentSelection.CustomerRequestedSave;
							public static RequestNoReuse: com.stripe.android.paymentsheet.model.PaymentSelection.CustomerRequestedSave;
							public static NoRequest: com.stripe.android.paymentsheet.model.PaymentSelection.CustomerRequestedSave;
							public static valueOf(param0: string): com.stripe.android.paymentsheet.model.PaymentSelection.CustomerRequestedSave;
							public static values(): androidNative.Array<com.stripe.android.paymentsheet.model.PaymentSelection.CustomerRequestedSave>;
						}
						export class GooglePay extends com.stripe.android.paymentsheet.model.PaymentSelection {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.model.PaymentSelection.GooglePay>;
							public static INSTANCE: com.stripe.android.paymentsheet.model.PaymentSelection.GooglePay;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.model.PaymentSelection.GooglePay>;
							public static $stable: number;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public describeContents(): number;
						}
						export module GooglePay {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.model.PaymentSelection.GooglePay> {
								public static class: java.lang.Class<com.stripe.android.paymentsheet.model.PaymentSelection.GooglePay.Creator>;
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.paymentsheet.model.PaymentSelection.GooglePay;
								public constructor();
								public newArray(param0: number): androidNative.Array<com.stripe.android.paymentsheet.model.PaymentSelection.GooglePay>;
							}
						}
						export abstract class New extends com.stripe.android.paymentsheet.model.PaymentSelection {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.model.PaymentSelection.New>;
							public static $stable: number;
							public getPaymentMethodCreateParams(): com.stripe.android.model.PaymentMethodCreateParams;
							public getCustomerRequestedSave(): com.stripe.android.paymentsheet.model.PaymentSelection.CustomerRequestedSave;
						}
						export module New {
							export class Card extends com.stripe.android.paymentsheet.model.PaymentSelection.New {
								public static class: java.lang.Class<com.stripe.android.paymentsheet.model.PaymentSelection.New.Card>;
								public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.model.PaymentSelection.New.Card>;
								public static $stable: number;
								public toString(): string;
								public equals(param0: any): boolean;
								public getBrand(): com.stripe.android.model.CardBrand;
								public component1(): com.stripe.android.model.PaymentMethodCreateParams;
								public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
								public constructor(param0: com.stripe.android.model.PaymentMethodCreateParams, param1: com.stripe.android.model.CardBrand, param2: com.stripe.android.paymentsheet.model.PaymentSelection.CustomerRequestedSave);
								public describeContents(): number;
								public getCustomerRequestedSave(): com.stripe.android.paymentsheet.model.PaymentSelection.CustomerRequestedSave;
								public component2(): com.stripe.android.model.CardBrand;
								public component3(): com.stripe.android.paymentsheet.model.PaymentSelection.CustomerRequestedSave;
								public getPaymentMethodCreateParams(): com.stripe.android.model.PaymentMethodCreateParams;
								public hashCode(): number;
								public copy(param0: com.stripe.android.model.PaymentMethodCreateParams, param1: com.stripe.android.model.CardBrand, param2: com.stripe.android.paymentsheet.model.PaymentSelection.CustomerRequestedSave): com.stripe.android.paymentsheet.model.PaymentSelection.New.Card;
							}
							export module Card {
								export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.model.PaymentSelection.New.Card> {
									public static class: java.lang.Class<com.stripe.android.paymentsheet.model.PaymentSelection.New.Card.Creator>;
									public constructor();
									public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.paymentsheet.model.PaymentSelection.New.Card;
									public newArray(param0: number): androidNative.Array<com.stripe.android.paymentsheet.model.PaymentSelection.New.Card>;
								}
							}
							export class GenericPaymentMethod extends com.stripe.android.paymentsheet.model.PaymentSelection.New {
								public static class: java.lang.Class<com.stripe.android.paymentsheet.model.PaymentSelection.New.GenericPaymentMethod>;
								public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.model.PaymentSelection.New.GenericPaymentMethod>;
								public static $stable: number;
								public toString(): string;
								public copy(param0: number, param1: number, param2: com.stripe.android.model.PaymentMethodCreateParams, param3: com.stripe.android.paymentsheet.model.PaymentSelection.CustomerRequestedSave): com.stripe.android.paymentsheet.model.PaymentSelection.New.GenericPaymentMethod;
								public equals(param0: any): boolean;
								public getIconResource(): number;
								public component3(): com.stripe.android.model.PaymentMethodCreateParams;
								public component4(): com.stripe.android.paymentsheet.model.PaymentSelection.CustomerRequestedSave;
								public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
								public constructor(param0: number, param1: number, param2: com.stripe.android.model.PaymentMethodCreateParams, param3: com.stripe.android.paymentsheet.model.PaymentSelection.CustomerRequestedSave);
								public getLabelResource(): number;
								public describeContents(): number;
								public getCustomerRequestedSave(): com.stripe.android.paymentsheet.model.PaymentSelection.CustomerRequestedSave;
								public component1(): number;
								public component2(): number;
								public getPaymentMethodCreateParams(): com.stripe.android.model.PaymentMethodCreateParams;
								public hashCode(): number;
							}
							export module GenericPaymentMethod {
								export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.model.PaymentSelection.New.GenericPaymentMethod> {
									public static class: java.lang.Class<com.stripe.android.paymentsheet.model.PaymentSelection.New.GenericPaymentMethod.Creator>;
									public constructor();
									public newArray(param0: number): androidNative.Array<com.stripe.android.paymentsheet.model.PaymentSelection.New.GenericPaymentMethod>;
									public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.paymentsheet.model.PaymentSelection.New.GenericPaymentMethod;
								}
							}
						}
						export class Saved extends com.stripe.android.paymentsheet.model.PaymentSelection {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.model.PaymentSelection.Saved>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.model.PaymentSelection.Saved>;
							public static $stable: number;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public constructor(param0: com.stripe.android.model.PaymentMethod);
							public hashCode(): number;
							public describeContents(): number;
							public getPaymentMethod(): com.stripe.android.model.PaymentMethod;
							public component1(): com.stripe.android.model.PaymentMethod;
							public toString(): string;
							public equals(param0: any): boolean;
							public copy(param0: com.stripe.android.model.PaymentMethod): com.stripe.android.paymentsheet.model.PaymentSelection.Saved;
						}
						export module Saved {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.model.PaymentSelection.Saved> {
								public static class: java.lang.Class<com.stripe.android.paymentsheet.model.PaymentSelection.Saved.Creator>;
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.paymentsheet.model.PaymentSelection.Saved;
								public constructor();
								public newArray(param0: number): androidNative.Array<com.stripe.android.paymentsheet.model.PaymentSelection.Saved>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module model {
					export abstract class PaymentSheetViewState {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.model.PaymentSheetViewState>;
						public getErrorMessage(): com.stripe.android.paymentsheet.viewmodels.BaseSheetViewModel.UserErrorMessage;
					}
					export module PaymentSheetViewState {
						export class FinishProcessing extends com.stripe.android.paymentsheet.model.PaymentSheetViewState {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.model.PaymentSheetViewState.FinishProcessing>;
							public static $stable: number;
							public constructor(param0: kotlin.jvm.functions.Function0<kotlin.Unit>);
							public hashCode(): number;
							public component1(): kotlin.jvm.functions.Function0<kotlin.Unit>;
							public getOnComplete(): kotlin.jvm.functions.Function0<kotlin.Unit>;
							public toString(): string;
							public copy(param0: kotlin.jvm.functions.Function0<kotlin.Unit>): com.stripe.android.paymentsheet.model.PaymentSheetViewState.FinishProcessing;
							public equals(param0: any): boolean;
						}
						export class Reset extends com.stripe.android.paymentsheet.model.PaymentSheetViewState {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.model.PaymentSheetViewState.Reset>;
							public static $stable: number;
							public constructor();
							public hashCode(): number;
							public constructor(param0: com.stripe.android.paymentsheet.viewmodels.BaseSheetViewModel.UserErrorMessage);
							public copy(param0: com.stripe.android.paymentsheet.viewmodels.BaseSheetViewModel.UserErrorMessage): com.stripe.android.paymentsheet.model.PaymentSheetViewState.Reset;
							public toString(): string;
							public equals(param0: any): boolean;
						}
						export class StartProcessing extends com.stripe.android.paymentsheet.model.PaymentSheetViewState {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.model.PaymentSheetViewState.StartProcessing>;
							public static INSTANCE: com.stripe.android.paymentsheet.model.PaymentSheetViewState.StartProcessing;
							public static $stable: number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module model {
					export abstract class SavedSelection {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.model.SavedSelection>;
					}
					export module SavedSelection {
						export class GooglePay extends com.stripe.android.paymentsheet.model.SavedSelection {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.model.SavedSelection.GooglePay>;
							public static INSTANCE: com.stripe.android.paymentsheet.model.SavedSelection.GooglePay;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.model.SavedSelection.GooglePay>;
							public static $stable: number;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public describeContents(): number;
						}
						export module GooglePay {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.model.SavedSelection.GooglePay> {
								public static class: java.lang.Class<com.stripe.android.paymentsheet.model.SavedSelection.GooglePay.Creator>;
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.paymentsheet.model.SavedSelection.GooglePay;
								public constructor();
								public newArray(param0: number): androidNative.Array<com.stripe.android.paymentsheet.model.SavedSelection.GooglePay>;
							}
						}
						export class None extends com.stripe.android.paymentsheet.model.SavedSelection {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.model.SavedSelection.None>;
							public static INSTANCE: com.stripe.android.paymentsheet.model.SavedSelection.None;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.model.SavedSelection.None>;
							public static $stable: number;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public describeContents(): number;
						}
						export module None {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.model.SavedSelection.None> {
								public static class: java.lang.Class<com.stripe.android.paymentsheet.model.SavedSelection.None.Creator>;
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.paymentsheet.model.SavedSelection.None;
								public newArray(param0: number): androidNative.Array<com.stripe.android.paymentsheet.model.SavedSelection.None>;
								public constructor();
							}
						}
						export class PaymentMethod extends com.stripe.android.paymentsheet.model.SavedSelection {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.model.SavedSelection.PaymentMethod>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.model.SavedSelection.PaymentMethod>;
							public static $stable: number;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public hashCode(): number;
							public constructor(param0: string);
							public getId(): string;
							public describeContents(): number;
							public toString(): string;
							public equals(param0: any): boolean;
							public copy(param0: string): com.stripe.android.paymentsheet.model.SavedSelection.PaymentMethod;
							public component1(): string;
						}
						export module PaymentMethod {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.model.SavedSelection.PaymentMethod> {
								public static class: java.lang.Class<com.stripe.android.paymentsheet.model.SavedSelection.PaymentMethod.Creator>;
								public newArray(param0: number): androidNative.Array<com.stripe.android.paymentsheet.model.SavedSelection.PaymentMethod>;
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.paymentsheet.model.SavedSelection.PaymentMethod;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module model {
					export class SetupIntentClientSecret extends com.stripe.android.paymentsheet.model.ClientSecret {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.model.SetupIntentClientSecret>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.model.SetupIntentClientSecret>;
						public describeContents(): number;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getValue(): string;
						public validate(): void;
						public copy(param0: string): com.stripe.android.paymentsheet.model.SetupIntentClientSecret;
						public toString(): string;
						public constructor(param0: string);
					}
					export module SetupIntentClientSecret {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.model.SetupIntentClientSecret> {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.model.SetupIntentClientSecret.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.paymentsheet.model.SetupIntentClientSecret;
							public newArray(param0: number): androidNative.Array<com.stripe.android.paymentsheet.model.SetupIntentClientSecret>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module model {
					export class StripeIntentValidator {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.model.StripeIntentValidator>;
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module model {
					export class StripeIntentValidator_Factory extends dagger.internal.Factory<com.stripe.android.paymentsheet.model.StripeIntentValidator> {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.model.StripeIntentValidator_Factory>;
						public constructor();
						public static newInstance(): com.stripe.android.paymentsheet.model.StripeIntentValidator;
						public static create(): com.stripe.android.paymentsheet.model.StripeIntentValidator_Factory;
						public get(): com.stripe.android.paymentsheet.model.StripeIntentValidator;
					}
					export module StripeIntentValidator_Factory {
						export class InstanceHolder {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.model.StripeIntentValidator_Factory.InstanceHolder>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module model {
					export class SupportedPaymentMethod {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.model.SupportedPaymentMethod>;
						public static Companion: com.stripe.android.paymentsheet.model.SupportedPaymentMethod.Companion;
						public static Card: com.stripe.android.paymentsheet.model.SupportedPaymentMethod;
						public static Bancontact: com.stripe.android.paymentsheet.model.SupportedPaymentMethod;
						public static Sofort: com.stripe.android.paymentsheet.model.SupportedPaymentMethod;
						public static Ideal: com.stripe.android.paymentsheet.model.SupportedPaymentMethod;
						public static SepaDebit: com.stripe.android.paymentsheet.model.SupportedPaymentMethod;
						public static Eps: com.stripe.android.paymentsheet.model.SupportedPaymentMethod;
						public static P24: com.stripe.android.paymentsheet.model.SupportedPaymentMethod;
						public static Giropay: com.stripe.android.paymentsheet.model.SupportedPaymentMethod;
						public static AfterpayClearpay: com.stripe.android.paymentsheet.model.SupportedPaymentMethod;
						public static Klarna: com.stripe.android.paymentsheet.model.SupportedPaymentMethod;
						public static PayPal: com.stripe.android.paymentsheet.model.SupportedPaymentMethod;
						public getFormSpec(): com.stripe.android.ui.core.elements.LayoutSpec;
						public getSpecWithFullfilledRequirements$paymentsheet_release(param0: com.stripe.android.model.StripeIntent, param1: com.stripe.android.paymentsheet.PaymentSheet.Configuration): com.stripe.android.ui.core.elements.LayoutFormDescriptor;
						public static valueOf(param0: string): com.stripe.android.paymentsheet.model.SupportedPaymentMethod;
						public getType(): com.stripe.android.model.PaymentMethod.Type;
						public getDisplayNameResource(): number;
						public getParamKey(): java.util.Map<string, any>;
						public getIconResource(): number;
						public getPMAddForm(param0: com.stripe.android.model.StripeIntent, param1: com.stripe.android.paymentsheet.PaymentSheet.Configuration): com.stripe.android.ui.core.elements.LayoutFormDescriptor;
						public supportsCustomerSavedPM(): boolean;
						public toString(): string;
						public static values(): androidNative.Array<com.stripe.android.paymentsheet.model.SupportedPaymentMethod>;
					}
					export module SupportedPaymentMethod {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.model.SupportedPaymentMethod.Companion>;
							public fromCode(param0: string): com.stripe.android.paymentsheet.model.SupportedPaymentMethod;
							public getExposedPaymentMethods$paymentsheet_release(): java.util.List<com.stripe.android.paymentsheet.model.SupportedPaymentMethod>;
							public getPMsToAdd$paymentsheet_release(param0: com.stripe.android.model.StripeIntent, param1: com.stripe.android.paymentsheet.PaymentSheet.Configuration): java.util.List<com.stripe.android.paymentsheet.model.SupportedPaymentMethod>;
							public getSupportedSavedCustomerPMs$paymentsheet_release(param0: com.stripe.android.model.StripeIntent, param1: com.stripe.android.paymentsheet.PaymentSheet.Configuration): java.util.List<com.stripe.android.paymentsheet.model.SupportedPaymentMethod>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module paymentdatacollection {
					export class CardDataCollectionFragment<ViewModelType> extends androidx.fragment.app.Fragment {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.paymentdatacollection.CardDataCollectionFragment<any>>;
						public onViewCreated(param0: globalAndroid.view.View, param1: globalAndroid.os.Bundle): void;
						public constructor(param0: java.lang.Class<any>, param1: androidx.lifecycle.ViewModelProvider.Factory);
						public getSheetViewModel(): any;
						public onCreateView(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: globalAndroid.os.Bundle): globalAndroid.view.View;
					}
					export module CardDataCollectionFragment {
						export class AddCardViewModel {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.paymentdatacollection.CardDataCollectionFragment.AddCardViewModel>;
							public constructor();
							public isCardValid(): boolean;
							public setCardValid(param0: boolean): void;
							public getCardErrors(): java.util.Map<com.stripe.android.paymentsheet.paymentdatacollection.CardDataCollectionFragment.AddCardViewModel.Field, string>;
						}
						export module AddCardViewModel {
							export class Field {
								public static class: java.lang.Class<com.stripe.android.paymentsheet.paymentdatacollection.CardDataCollectionFragment.AddCardViewModel.Field>;
								public static Number: com.stripe.android.paymentsheet.paymentdatacollection.CardDataCollectionFragment.AddCardViewModel.Field;
								public static Date: com.stripe.android.paymentsheet.paymentdatacollection.CardDataCollectionFragment.AddCardViewModel.Field;
								public static Cvc: com.stripe.android.paymentsheet.paymentdatacollection.CardDataCollectionFragment.AddCardViewModel.Field;
								public static values(): androidNative.Array<com.stripe.android.paymentsheet.paymentdatacollection.CardDataCollectionFragment.AddCardViewModel.Field>;
								public static valueOf(param0: string): com.stripe.android.paymentsheet.paymentdatacollection.CardDataCollectionFragment.AddCardViewModel.Field;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module paymentdatacollection {
					export class ComposeFormDataCollectionFragment {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.paymentdatacollection.ComposeFormDataCollectionFragment>;
						public static Companion: com.stripe.android.paymentsheet.paymentdatacollection.ComposeFormDataCollectionFragment.Companion;
						public static EXTRA_CONFIG: string;
						public setProcessing(param0: boolean): void;
						public constructor();
						public getParamKeySpec(): java.util.Map<string, any>;
						public onCreateView(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: globalAndroid.os.Bundle): globalAndroid.view.View;
						public getFormViewModel(): com.stripe.android.paymentsheet.forms.FormViewModel;
					}
					export module ComposeFormDataCollectionFragment {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.paymentdatacollection.ComposeFormDataCollectionFragment.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module paymentdatacollection {
					export class FormFragmentArguments {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.paymentdatacollection.FormFragmentArguments>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.paymentdatacollection.FormFragmentArguments>;
						public component3(): boolean;
						public describeContents(): number;
						public component2(): boolean;
						public getPaymentMethod(): com.stripe.android.paymentsheet.model.SupportedPaymentMethod;
						public getMerchantName(): string;
						public component6(): com.stripe.android.paymentsheet.PaymentSheet.BillingDetails;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public component7(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getBillingDetails(): com.stripe.android.paymentsheet.PaymentSheet.BillingDetails;
						public copy(param0: com.stripe.android.paymentsheet.model.SupportedPaymentMethod, param1: boolean, param2: boolean, param3: string, param4: com.stripe.android.ui.core.Amount, param5: com.stripe.android.paymentsheet.PaymentSheet.BillingDetails, param6: string): com.stripe.android.paymentsheet.paymentdatacollection.FormFragmentArguments;
						public getAmount(): com.stripe.android.ui.core.Amount;
						public component5(): com.stripe.android.ui.core.Amount;
						public getShowCheckboxControlledFields(): boolean;
						public getInjectorKey(): string;
						public toString(): string;
						public constructor(param0: com.stripe.android.paymentsheet.model.SupportedPaymentMethod, param1: boolean, param2: boolean, param3: string, param4: com.stripe.android.ui.core.Amount, param5: com.stripe.android.paymentsheet.PaymentSheet.BillingDetails, param6: string);
						public component4(): string;
						public getShowCheckbox(): boolean;
						public component1(): com.stripe.android.paymentsheet.model.SupportedPaymentMethod;
					}
					export module FormFragmentArguments {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.paymentsheet.paymentdatacollection.FormFragmentArguments> {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.paymentdatacollection.FormFragmentArguments.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.paymentsheet.paymentdatacollection.FormFragmentArguments>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.paymentsheet.paymentdatacollection.FormFragmentArguments;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module paymentdatacollection {
					export class FormFragmentArgumentsKt {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.paymentdatacollection.FormFragmentArgumentsKt>;
						public static getInitialValuesMap(param0: com.stripe.android.paymentsheet.paymentdatacollection.FormFragmentArguments): java.util.Map<com.stripe.android.ui.core.elements.IdentifierSpec, string>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module paymentdatacollection {
					export class TransformToPaymentMethodCreateParams {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.paymentdatacollection.TransformToPaymentMethodCreateParams>;
						public static Companion: com.stripe.android.paymentsheet.paymentdatacollection.TransformToPaymentMethodCreateParams.Companion;
						public transform(param0: com.stripe.android.paymentsheet.forms.FormFieldValues, param1: java.util.Map<string, any>): com.stripe.android.model.PaymentMethodCreateParams;
						public constructor();
					}
					export module TransformToPaymentMethodCreateParams {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.paymentdatacollection.TransformToPaymentMethodCreateParams.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module paymentdatacollection {
					export class TransformToPaymentMethodCreateParamsKt {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.paymentdatacollection.TransformToPaymentMethodCreateParamsKt>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module repositories {
					export class CustomerApiRepository extends com.stripe.android.paymentsheet.repositories.CustomerRepository {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.repositories.CustomerApiRepository>;
						public constructor(param0: com.stripe.android.networking.StripeRepository, param1: dagger.Lazy<com.stripe.android.PaymentConfiguration>, param2: com.stripe.android.core.Logger, param3: kotlin.coroutines.CoroutineContext, param4: java.util.Set<string>);
						public detachPaymentMethod(param0: com.stripe.android.paymentsheet.PaymentSheet.CustomerConfiguration, param1: string, param2: kotlin.coroutines.Continuation<any>): any;
						public getPaymentMethods(param0: com.stripe.android.paymentsheet.PaymentSheet.CustomerConfiguration, param1: java.util.List<any>, param2: kotlin.coroutines.Continuation<any>): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module repositories {
					export class CustomerApiRepository_Factory extends dagger.internal.Factory<com.stripe.android.paymentsheet.repositories.CustomerApiRepository> {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.repositories.CustomerApiRepository_Factory>;
						public get(): com.stripe.android.paymentsheet.repositories.CustomerApiRepository;
						public static newInstance(param0: com.stripe.android.networking.StripeRepository, param1: dagger.Lazy<com.stripe.android.PaymentConfiguration>, param2: com.stripe.android.core.Logger, param3: kotlin.coroutines.CoroutineContext, param4: java.util.Set<string>): com.stripe.android.paymentsheet.repositories.CustomerApiRepository;
						public constructor(param0: javax.inject.Provider<com.stripe.android.networking.StripeRepository>, param1: javax.inject.Provider<com.stripe.android.PaymentConfiguration>, param2: javax.inject.Provider<com.stripe.android.core.Logger>, param3: javax.inject.Provider<kotlin.coroutines.CoroutineContext>, param4: javax.inject.Provider<java.util.Set<string>>);
						public static create(param0: javax.inject.Provider<com.stripe.android.networking.StripeRepository>, param1: javax.inject.Provider<com.stripe.android.PaymentConfiguration>, param2: javax.inject.Provider<com.stripe.android.core.Logger>, param3: javax.inject.Provider<kotlin.coroutines.CoroutineContext>, param4: javax.inject.Provider<java.util.Set<string>>): com.stripe.android.paymentsheet.repositories.CustomerApiRepository_Factory;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module repositories {
					export class CustomerRepository {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.repositories.CustomerRepository>;
						/**
						 * Constructs a new instance of the com.stripe.android.paymentsheet.repositories.CustomerRepository interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getPaymentMethods(param0: com.stripe.android.paymentsheet.PaymentSheet.CustomerConfiguration, param1: java.util.List<any>, param2: kotlin.coroutines.Continuation<any>): any;
							detachPaymentMethod(param0: com.stripe.android.paymentsheet.PaymentSheet.CustomerConfiguration, param1: string, param2: kotlin.coroutines.Continuation<any>): any;
						});
						public constructor();
						public detachPaymentMethod(param0: com.stripe.android.paymentsheet.PaymentSheet.CustomerConfiguration, param1: string, param2: kotlin.coroutines.Continuation<any>): any;
						public getPaymentMethods(param0: com.stripe.android.paymentsheet.PaymentSheet.CustomerConfiguration, param1: java.util.List<any>, param2: kotlin.coroutines.Continuation<any>): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module repositories {
					export abstract class StripeIntentRepository {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.repositories.StripeIntentRepository>;
						public get(param0: com.stripe.android.paymentsheet.model.ClientSecret, param1: kotlin.coroutines.Continuation<any>): any;
					}
					export module StripeIntentRepository {
						export class Api extends com.stripe.android.paymentsheet.repositories.StripeIntentRepository {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.repositories.StripeIntentRepository.Api>;
							public static $stable: number;
							public constructor(param0: com.stripe.android.networking.StripeRepository, param1: dagger.Lazy<com.stripe.android.PaymentConfiguration>, param2: kotlin.coroutines.CoroutineContext, param3: java.util.Locale);
							public get(param0: com.stripe.android.paymentsheet.model.ClientSecret, param1: kotlin.coroutines.Continuation<any>): any;
						}
						export class Static extends com.stripe.android.paymentsheet.repositories.StripeIntentRepository {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.repositories.StripeIntentRepository.Static>;
							public static $stable: number;
							public constructor(param0: com.stripe.android.model.StripeIntent);
							public get(param0: com.stripe.android.paymentsheet.model.ClientSecret, param1: kotlin.coroutines.Continuation<any>): any;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module repositories {
					export class StripeIntentRepository_Api_Factory extends dagger.internal.Factory<com.stripe.android.paymentsheet.repositories.StripeIntentRepository.Api> {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.repositories.StripeIntentRepository_Api_Factory>;
						public static create(param0: javax.inject.Provider<com.stripe.android.networking.StripeRepository>, param1: javax.inject.Provider<com.stripe.android.PaymentConfiguration>, param2: javax.inject.Provider<kotlin.coroutines.CoroutineContext>, param3: javax.inject.Provider<java.util.Locale>): com.stripe.android.paymentsheet.repositories.StripeIntentRepository_Api_Factory;
						public constructor(param0: javax.inject.Provider<com.stripe.android.networking.StripeRepository>, param1: javax.inject.Provider<com.stripe.android.PaymentConfiguration>, param2: javax.inject.Provider<kotlin.coroutines.CoroutineContext>, param3: javax.inject.Provider<java.util.Locale>);
						public static newInstance(param0: com.stripe.android.networking.StripeRepository, param1: dagger.Lazy<com.stripe.android.PaymentConfiguration>, param2: kotlin.coroutines.CoroutineContext, param3: java.util.Locale): com.stripe.android.paymentsheet.repositories.StripeIntentRepository.Api;
						public get(): com.stripe.android.paymentsheet.repositories.StripeIntentRepository.Api;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module ui {
					export class AddPaymentMethodsFragmentFactory<ViewModelType> extends androidx.fragment.app.FragmentFactory {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.ui.AddPaymentMethodsFragmentFactory<any>>;
						public constructor(param0: java.lang.Class<any>, param1: androidx.lifecycle.ViewModelProvider.Factory);
						public instantiate(param0: java.lang.ClassLoader, param1: string): androidx.fragment.app.Fragment;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module ui {
					export class AnimationConstants {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.ui.AnimationConstants>;
						public static INSTANCE: com.stripe.android.paymentsheet.ui.AnimationConstants;
						public getFADE_OUT(): number;
						public getFADE_IN(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module ui {
					export abstract class BaseSheetActivity<ResultType> extends androidx.appcompat.app.AppCompatActivity {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.ui.BaseSheetActivity<any>>;
						public static Companion: com.stripe.android.paymentsheet.ui.BaseSheetActivity.Companion;
						public static EXTRA_FRAGMENT_CONFIG: string;
						public static EXTRA_STARTER_ARGS: string;
						public static TABLET_WIDTH_RATIO: number;
						public getRootView(): globalAndroid.view.ViewGroup;
						public constructor();
						public getAppbar(): com.google.android.material.appbar.AppBarLayout;
						public getScrollView(): globalAndroid.widget.ScrollView;
						public getFragmentContainerParent(): globalAndroid.view.ViewGroup;
						public finish(): void;
						public getMessageView(): globalAndroid.widget.TextView;
						public getBottomSheet(): globalAndroid.view.ViewGroup;
						public getBottomSheetBehavior$paymentsheet_release(): com.google.android.material.bottomsheet.BottomSheetBehavior<globalAndroid.view.ViewGroup>;
						public getViewModel(): com.stripe.android.paymentsheet.viewmodels.BaseSheetViewModel<any>;
						public getBottomSheetController(): com.stripe.android.paymentsheet.BottomSheetController;
						public onBackPressed(): void;
						public closeSheet(param0: any): void;
						public getTestModeIndicator(): globalAndroid.widget.TextView;
						public setActivityResult(param0: any): void;
						public onCreate(param0: globalAndroid.os.Bundle): void;
						public getToolbar(): com.google.android.material.appbar.MaterialToolbar;
					}
					export module BaseSheetActivity {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.ui.BaseSheetActivity.Companion>;
						}
						export class ToolbarResources {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.ui.BaseSheetActivity.ToolbarResources>;
							public component1(): number;
							public getIcon(): number;
							public constructor(param0: number, param1: number);
							public hashCode(): number;
							public component2(): number;
							public copy(param0: number, param1: number): com.stripe.android.paymentsheet.ui.BaseSheetActivity.ToolbarResources;
							public getDescription(): number;
							public toString(): string;
							public equals(param0: any): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module ui {
					export class BillingAddressView {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.ui.BillingAddressView>;
						public setOnFocus$paymentsheet_release(param0: kotlin.jvm.functions.Function0<kotlin.Unit>): void;
						public getAddress$paymentsheet_release(): androidx.lifecycle.LiveData<com.stripe.android.model.Address>;
						public getCityPostalContainer$paymentsheet_release(): globalAndroid.widget.LinearLayout;
						public getCountryLayout$paymentsheet_release(): com.stripe.android.view.CountryTextInputLayout;
						public constructor(param0: globalAndroid.content.Context);
						public focusFirstField(): void;
						public getOnFocus$paymentsheet_release(): kotlin.jvm.functions.Function0<kotlin.Unit>;
						public getPostalCodeView$paymentsheet_release(): com.stripe.android.view.StripeEditText;
						public setLevel$paymentsheet_release(param0: com.stripe.android.paymentsheet.ui.BillingAddressView.BillingAddressCollectionLevel): void;
						public getLevel$paymentsheet_release(): com.stripe.android.paymentsheet.ui.BillingAddressView.BillingAddressCollectionLevel;
						public setEnabled(param0: boolean): void;
						public getCityView$paymentsheet_release(): com.google.android.material.textfield.TextInputEditText;
						public getCityLayout$paymentsheet_release(): com.google.android.material.textfield.TextInputLayout;
						public getAddress2View$paymentsheet_release(): com.google.android.material.textfield.TextInputEditText;
						public populate$paymentsheet_release(param0: com.stripe.android.model.Address): void;
						public getAddress1View$paymentsheet_release(): com.google.android.material.textfield.TextInputEditText;
						public getPostalCodeLayout$paymentsheet_release(): com.google.android.material.textfield.TextInputLayout;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
						public getStateView$paymentsheet_release(): com.google.android.material.textfield.TextInputEditText;
						public getStateLayout$paymentsheet_release(): com.google.android.material.textfield.TextInputLayout;
						public getCountryView$paymentsheet_release(): globalAndroid.widget.AutoCompleteTextView;
						public getPostalCodeViewListener$paymentsheet_release(): com.stripe.android.paymentsheet.ui.BillingAddressView.PostalCodeViewListener;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
						public setPostalCodeViewListener$paymentsheet_release(param0: com.stripe.android.paymentsheet.ui.BillingAddressView.PostalCodeViewListener): void;
					}
					export module BillingAddressView {
						export class BillingAddressCollectionLevel {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.ui.BillingAddressView.BillingAddressCollectionLevel>;
							public static Automatic: com.stripe.android.paymentsheet.ui.BillingAddressView.BillingAddressCollectionLevel;
							public static Required: com.stripe.android.paymentsheet.ui.BillingAddressView.BillingAddressCollectionLevel;
							public static values(): androidNative.Array<com.stripe.android.paymentsheet.ui.BillingAddressView.BillingAddressCollectionLevel>;
							public static valueOf(param0: string): com.stripe.android.paymentsheet.ui.BillingAddressView.BillingAddressCollectionLevel;
						}
						export abstract class PostalCodeConfig {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.ui.BillingAddressView.PostalCodeConfig>;
							public getKeyListener(): globalAndroid.text.method.KeyListener;
							public getMaxLength(): number;
							public getInputType(): number;
						}
						export module PostalCodeConfig {
							export class Global extends com.stripe.android.paymentsheet.ui.BillingAddressView.PostalCodeConfig {
								public static class: java.lang.Class<com.stripe.android.paymentsheet.ui.BillingAddressView.PostalCodeConfig.Global>;
								public static INSTANCE: com.stripe.android.paymentsheet.ui.BillingAddressView.PostalCodeConfig.Global;
								public static $stable: number;
								public getKeyListener(): globalAndroid.text.method.KeyListener;
								public getMaxLength(): number;
								public getInputType(): number;
							}
							export class UnitedStates extends com.stripe.android.paymentsheet.ui.BillingAddressView.PostalCodeConfig {
								public static class: java.lang.Class<com.stripe.android.paymentsheet.ui.BillingAddressView.PostalCodeConfig.UnitedStates>;
								public static INSTANCE: com.stripe.android.paymentsheet.ui.BillingAddressView.PostalCodeConfig.UnitedStates;
								public static $stable: number;
								public getKeyListener(): globalAndroid.text.method.KeyListener;
								public getMaxLength(): number;
								public getInputType(): number;
							}
						}
						export class PostalCodeViewListener {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.ui.BillingAddressView.PostalCodeViewListener>;
							/**
							 * Constructs a new instance of the com.stripe.android.paymentsheet.ui.BillingAddressView$PostalCodeViewListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onLosingFocus(param0: com.stripe.android.core.model.Country, param1: boolean): void;
								onGainingFocus(param0: com.stripe.android.core.model.Country, param1: boolean): void;
								onCountryChanged(param0: com.stripe.android.core.model.Country, param1: boolean): void;
							});
							public constructor();
							public onLosingFocus(param0: com.stripe.android.core.model.Country, param1: boolean): void;
							public onCountryChanged(param0: com.stripe.android.core.model.Country, param1: boolean): void;
							public onGainingFocus(param0: com.stripe.android.core.model.Country, param1: boolean): void;
						}
						export class WhenMappings {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.ui.BillingAddressView.WhenMappings>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module ui {
					export class GooglePayButton {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.ui.GooglePayButton>;
						public constructor(param0: globalAndroid.content.Context);
						public updateState(param0: com.stripe.android.paymentsheet.ui.PrimaryButton.State): void;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
						public getViewBinding$paymentsheet_release(): com.stripe.android.paymentsheet.databinding.StripeGooglePayButtonBinding;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
						public setEnabled(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module ui {
					export class GooglePayDivider {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.ui.GooglePayDivider>;
						public setText(param0: number): void;
						public constructor(param0: globalAndroid.content.Context);
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
						public getViewBinding$paymentsheet_release(): com.stripe.android.paymentsheet.databinding.StripeGooglePayDividerBinding;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module ui {
					export class PaymentMethodsUiExtensionKt {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.ui.PaymentMethodsUiExtensionKt>;
						public static createCardLabel(param0: globalAndroid.content.res.Resources, param1: string): string;
						public static getCardBrandIcon(param0: com.stripe.android.model.CardBrand): number;
						public static getSavedPaymentMethodIcon(param0: com.stripe.android.model.PaymentMethod): java.lang.Integer;
						public static getLabel(param0: com.stripe.android.model.PaymentMethod, param1: globalAndroid.content.res.Resources): string;
					}
					export module PaymentMethodsUiExtensionKt {
						export class WhenMappings {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.ui.PaymentMethodsUiExtensionKt.WhenMappings>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module ui {
					export class PaymentSheetFragmentFactory {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.ui.PaymentSheetFragmentFactory>;
						public constructor(param0: com.stripe.android.paymentsheet.analytics.EventReporter);
						public instantiate(param0: java.lang.ClassLoader, param1: string): androidx.fragment.app.Fragment;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module ui {
					export class PrimaryButton {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.ui.PrimaryButton>;
						public setLabel(param0: string): void;
						public constructor(param0: globalAndroid.content.Context);
						public setBackgroundTintList(param0: globalAndroid.content.res.ColorStateList): void;
						public getViewBinding$paymentsheet_release(): com.stripe.android.paymentsheet.databinding.PrimaryButtonBinding;
						public updateState(param0: com.stripe.android.paymentsheet.ui.PrimaryButton.State): void;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
						public getLockVisible$paymentsheet_release(): boolean;
						public setLockVisible$paymentsheet_release(param0: boolean): void;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
						public setEnabled(param0: boolean): void;
					}
					export module PrimaryButton {
						export abstract class State {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.ui.PrimaryButton.State>;
						}
						export module State {
							export class FinishProcessing extends com.stripe.android.paymentsheet.ui.PrimaryButton.State {
								public static class: java.lang.Class<com.stripe.android.paymentsheet.ui.PrimaryButton.State.FinishProcessing>;
								public static $stable: number;
								public toString(): string;
								public component1(): kotlin.jvm.functions.Function0<kotlin.Unit>;
								public constructor(param0: kotlin.jvm.functions.Function0<kotlin.Unit>);
								public getOnComplete(): kotlin.jvm.functions.Function0<kotlin.Unit>;
								public equals(param0: any): boolean;
								public hashCode(): number;
								public copy(param0: kotlin.jvm.functions.Function0<kotlin.Unit>): com.stripe.android.paymentsheet.ui.PrimaryButton.State.FinishProcessing;
							}
							export class Ready extends com.stripe.android.paymentsheet.ui.PrimaryButton.State {
								public static class: java.lang.Class<com.stripe.android.paymentsheet.ui.PrimaryButton.State.Ready>;
								public static INSTANCE: com.stripe.android.paymentsheet.ui.PrimaryButton.State.Ready;
								public static $stable: number;
							}
							export class StartProcessing extends com.stripe.android.paymentsheet.ui.PrimaryButton.State {
								public static class: java.lang.Class<com.stripe.android.paymentsheet.ui.PrimaryButton.State.StartProcessing>;
								public static INSTANCE: com.stripe.android.paymentsheet.ui.PrimaryButton.State.StartProcessing;
								public static $stable: number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module ui {
					export class PrimaryButtonAnimator {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.ui.PrimaryButtonAnimator>;
						public static Companion: com.stripe.android.paymentsheet.ui.PrimaryButtonAnimator.Companion;
						public static HOLD_ANIMATION_ON_SLIDE_IN_COMPLETION: number;
						public constructor(param0: globalAndroid.content.Context);
						public fadeIn$paymentsheet_release(param0: globalAndroid.view.View, param1: number, param2: kotlin.jvm.functions.Function0<kotlin.Unit>): void;
						public fadeOut$paymentsheet_release(param0: globalAndroid.view.View): void;
					}
					export module PrimaryButtonAnimator {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.ui.PrimaryButtonAnimator.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module paymentsheet {
				export module viewmodels {
					export abstract class BaseSheetViewModel<TransitionTargetType> extends androidx.lifecycle.AndroidViewModel {
						public static class: java.lang.Class<com.stripe.android.paymentsheet.viewmodels.BaseSheetViewModel<any>>;
						public setEditing(param0: boolean): void;
						public onUserCancel(): void;
						public getWorkContext(): kotlin.coroutines.CoroutineContext;
						public getLiveMode$paymentsheet_release(): androidx.lifecycle.LiveData<java.lang.Boolean>;
						public isGooglePayReady$paymentsheet_release(): androidx.lifecycle.LiveData<java.lang.Boolean>;
						public getTransition$paymentsheet_release(): androidx.lifecycle.LiveData<com.stripe.android.paymentsheet.viewmodels.BaseSheetViewModel.Event<any>>;
						public setStripeIntent(param0: com.stripe.android.model.StripeIntent): void;
						public updateSelection(param0: com.stripe.android.paymentsheet.model.PaymentSelection): void;
						public getCustomerRepository(): com.stripe.android.paymentsheet.repositories.CustomerRepository;
						public getLogger(): com.stripe.android.core.Logger;
						public getInjectorKey(): string;
						public setSupportedPaymentMethods$paymentsheet_release(param0: java.util.List<any>): void;
						public getCustomerConfig$paymentsheet_release(): com.stripe.android.paymentsheet.PaymentSheet.CustomerConfiguration;
						public getEventReporter$paymentsheet_release(): com.stripe.android.paymentsheet.analytics.EventReporter;
						public get_isGooglePayReady$paymentsheet_release(): androidx.lifecycle.MutableLiveData<java.lang.Boolean>;
						public getPaymentMethods$paymentsheet_release(): androidx.lifecycle.LiveData<java.util.List<com.stripe.android.model.PaymentMethod>>;
						public get_amount$paymentsheet_release(): androidx.lifecycle.MutableLiveData<com.stripe.android.ui.core.Amount>;
						public get_liveMode$paymentsheet_release(): androidx.lifecycle.MutableLiveData<java.lang.Boolean>;
						public getConfig$paymentsheet_release(): com.stripe.android.paymentsheet.PaymentSheet.Configuration;
						public constructor(param0: globalAndroid.app.Application, param1: com.stripe.android.paymentsheet.PaymentSheet.Configuration, param2: com.stripe.android.paymentsheet.analytics.EventReporter, param3: com.stripe.android.paymentsheet.repositories.CustomerRepository, param4: com.stripe.android.paymentsheet.PrefsRepository, param5: kotlin.coroutines.CoroutineContext, param6: com.stripe.android.core.Logger, param7: string, param8: com.stripe.android.ui.core.forms.resources.ResourceRepository);
						public getCtaEnabled(): androidx.lifecycle.LiveData<java.lang.Boolean>;
						public getMerchantName$paymentsheet_release(): string;
						public get_fatal(): androidx.lifecycle.MutableLiveData<java.lang.Throwable>;
						public getSelection$paymentsheet_release(): androidx.lifecycle.LiveData<com.stripe.android.paymentsheet.model.PaymentSelection>;
						public isResourceRepositoryReady$paymentsheet_release(): androidx.lifecycle.LiveData<java.lang.Boolean>;
						public getNewCard(): com.stripe.android.paymentsheet.model.PaymentSelection.New.Card;
						public setNewCard(param0: com.stripe.android.paymentsheet.model.PaymentSelection.New.Card): void;
						public transitionTo(param0: any): void;
						public getAmount$paymentsheet_release(): androidx.lifecycle.LiveData<com.stripe.android.ui.core.Amount>;
						public get_paymentMethods$paymentsheet_release(): androidx.lifecycle.MutableLiveData<java.util.List<com.stripe.android.model.PaymentMethod>>;
						public get_processing$paymentsheet_release(): androidx.lifecycle.MutableLiveData<java.lang.Boolean>;
						public getStripeIntent$paymentsheet_release(): androidx.lifecycle.LiveData<com.stripe.android.model.StripeIntent>;
						public getSupportedPaymentMethods$paymentsheet_release(): java.util.List<com.stripe.android.paymentsheet.model.SupportedPaymentMethod>;
						public removePaymentMethod(param0: com.stripe.android.model.PaymentMethod): kotlinx.coroutines.Job;
						public getPrefsRepository(): com.stripe.android.paymentsheet.PrefsRepository;
						public onFatal(param0: java.lang.Throwable): void;
						public getFragmentConfigEvent(): androidx.lifecycle.LiveData<com.stripe.android.paymentsheet.viewmodels.BaseSheetViewModel.Event<com.stripe.android.paymentsheet.model.FragmentConfig>>;
						public getProcessing(): androidx.lifecycle.LiveData<java.lang.Boolean>;
					}
					export module BaseSheetViewModel {
						export class Event<T> extends java.lang.Object {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.viewmodels.BaseSheetViewModel.Event<any>>;
							public static $stable: number;
							public peekContent(): T;
							public getContentIfNotHandled(): T;
							public constructor(param0: T);
							public getHasBeenHandled(): boolean;
						}
						export class UserErrorMessage {
							public static class: java.lang.Class<com.stripe.android.paymentsheet.viewmodels.BaseSheetViewModel.UserErrorMessage>;
							public static $stable: number;
							public copy(param0: string): com.stripe.android.paymentsheet.viewmodels.BaseSheetViewModel.UserErrorMessage;
							public hashCode(): number;
							public constructor(param0: string);
							public toString(): string;
							public equals(param0: any): boolean;
							public getMessage(): string;
							public component1(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export class BuildConfig {
					public static class: java.lang.Class<com.stripe.android.stripe3ds2.BuildConfig>;
					public static DEBUG: boolean;
					public static LIBRARY_PACKAGE_NAME: string;
					public static BUILD_TYPE: string;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export class SdkVersion {
					public static class: java.lang.Class<com.stripe.android.stripe3ds2.SdkVersion>;
					public static INSTANCE: com.stripe.android.stripe3ds2.SdkVersion;
					public static VERSION_NAME: string;
					public static VERSION_CODE: number;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module databinding {
					export class StripeBrandZoneViewBinding {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.databinding.StripeBrandZoneViewBinding>;
						public issuerImage: globalAndroid.widget.ImageView;
						public paymentSystemImage: globalAndroid.widget.ImageView;
						public getRoot(): globalAndroid.view.View;
						public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup): com.stripe.android.stripe3ds2.databinding.StripeBrandZoneViewBinding;
						public static bind(param0: globalAndroid.view.View): com.stripe.android.stripe3ds2.databinding.StripeBrandZoneViewBinding;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module databinding {
					export class StripeChallengeActivityBinding {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.databinding.StripeChallengeActivityBinding>;
						public fragmentContainer: androidx.fragment.app.FragmentContainerView;
						public static bind(param0: globalAndroid.view.View): com.stripe.android.stripe3ds2.databinding.StripeChallengeActivityBinding;
						public static inflate(param0: globalAndroid.view.LayoutInflater): com.stripe.android.stripe3ds2.databinding.StripeChallengeActivityBinding;
						public getRoot(): globalAndroid.widget.FrameLayout;
						public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: boolean): com.stripe.android.stripe3ds2.databinding.StripeChallengeActivityBinding;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module databinding {
					export class StripeChallengeFragmentBinding {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.databinding.StripeChallengeFragmentBinding>;
						public caBrandZone: com.stripe.android.stripe3ds2.views.BrandZoneView;
						public caChallengeZone: com.stripe.android.stripe3ds2.views.ChallengeZoneView;
						public caInformationZone: com.stripe.android.stripe3ds2.views.InformationZoneView;
						public getRoot(): globalAndroid.widget.ScrollView;
						public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: boolean): com.stripe.android.stripe3ds2.databinding.StripeChallengeFragmentBinding;
						public static bind(param0: globalAndroid.view.View): com.stripe.android.stripe3ds2.databinding.StripeChallengeFragmentBinding;
						public static inflate(param0: globalAndroid.view.LayoutInflater): com.stripe.android.stripe3ds2.databinding.StripeChallengeFragmentBinding;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module databinding {
					export class StripeChallengeSubmitDialogBinding {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.databinding.StripeChallengeSubmitDialogBinding>;
						public progressBar: com.google.android.material.progressindicator.CircularProgressIndicator;
						public static inflate(param0: globalAndroid.view.LayoutInflater): com.stripe.android.stripe3ds2.databinding.StripeChallengeSubmitDialogBinding;
						public getRoot(): globalAndroid.widget.FrameLayout;
						public static bind(param0: globalAndroid.view.View): com.stripe.android.stripe3ds2.databinding.StripeChallengeSubmitDialogBinding;
						public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: boolean): com.stripe.android.stripe3ds2.databinding.StripeChallengeSubmitDialogBinding;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module databinding {
					export class StripeChallengeZoneMultiSelectViewBinding {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.databinding.StripeChallengeZoneMultiSelectViewBinding>;
						public label: com.stripe.android.stripe3ds2.views.ThreeDS2TextView;
						public selectGroup: globalAndroid.widget.LinearLayout;
						public static bind(param0: globalAndroid.view.View): com.stripe.android.stripe3ds2.databinding.StripeChallengeZoneMultiSelectViewBinding;
						public static inflate(param0: globalAndroid.view.LayoutInflater): com.stripe.android.stripe3ds2.databinding.StripeChallengeZoneMultiSelectViewBinding;
						public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: boolean): com.stripe.android.stripe3ds2.databinding.StripeChallengeZoneMultiSelectViewBinding;
						public getRoot(): globalAndroid.widget.LinearLayout;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module databinding {
					export class StripeChallengeZoneSingleSelectViewBinding {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.databinding.StripeChallengeZoneSingleSelectViewBinding>;
						public label: com.stripe.android.stripe3ds2.views.ThreeDS2TextView;
						public selectGroup: globalAndroid.widget.RadioGroup;
						public static bind(param0: globalAndroid.view.View): com.stripe.android.stripe3ds2.databinding.StripeChallengeZoneSingleSelectViewBinding;
						public static inflate(param0: globalAndroid.view.LayoutInflater): com.stripe.android.stripe3ds2.databinding.StripeChallengeZoneSingleSelectViewBinding;
						public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: boolean): com.stripe.android.stripe3ds2.databinding.StripeChallengeZoneSingleSelectViewBinding;
						public getRoot(): globalAndroid.widget.LinearLayout;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module databinding {
					export class StripeChallengeZoneTextViewBinding {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.databinding.StripeChallengeZoneTextViewBinding>;
						public label: com.google.android.material.textfield.TextInputLayout;
						public textEntry: com.google.android.material.textfield.TextInputEditText;
						public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: boolean): com.stripe.android.stripe3ds2.databinding.StripeChallengeZoneTextViewBinding;
						public getRoot(): com.google.android.material.textfield.TextInputLayout;
						public static bind(param0: globalAndroid.view.View): com.stripe.android.stripe3ds2.databinding.StripeChallengeZoneTextViewBinding;
						public static inflate(param0: globalAndroid.view.LayoutInflater): com.stripe.android.stripe3ds2.databinding.StripeChallengeZoneTextViewBinding;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module databinding {
					export class StripeChallengeZoneViewBinding {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.databinding.StripeChallengeZoneViewBinding>;
						public czvEntryView: globalAndroid.widget.FrameLayout;
						public czvHeader: com.stripe.android.stripe3ds2.views.ThreeDS2HeaderTextView;
						public czvInfo: com.stripe.android.stripe3ds2.views.ThreeDS2TextView;
						public czvResendButton: com.stripe.android.stripe3ds2.views.ThreeDS2Button;
						public czvSubmitButton: com.stripe.android.stripe3ds2.views.ThreeDS2Button;
						public czvWhitelistNoButton: globalAndroid.widget.RadioButton;
						public czvWhitelistRadioGroup: globalAndroid.widget.RadioGroup;
						public czvWhitelistYesButton: globalAndroid.widget.RadioButton;
						public czvWhitelistingLabel: com.stripe.android.stripe3ds2.views.ThreeDS2TextView;
						public getRoot(): globalAndroid.view.View;
						public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup): com.stripe.android.stripe3ds2.databinding.StripeChallengeZoneViewBinding;
						public static bind(param0: globalAndroid.view.View): com.stripe.android.stripe3ds2.databinding.StripeChallengeZoneViewBinding;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module databinding {
					export class StripeChallengeZoneWebViewBinding {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.databinding.StripeChallengeZoneWebViewBinding>;
						public webView: com.stripe.android.stripe3ds2.views.ThreeDS2WebView;
						public getRoot(): globalAndroid.view.View;
						public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup): com.stripe.android.stripe3ds2.databinding.StripeChallengeZoneWebViewBinding;
						public static bind(param0: globalAndroid.view.View): com.stripe.android.stripe3ds2.databinding.StripeChallengeZoneWebViewBinding;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module databinding {
					export class StripeInformationZoneViewBinding {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.databinding.StripeInformationZoneViewBinding>;
						public expandArrow: androidx.appcompat.widget.AppCompatImageView;
						public expandContainer: globalAndroid.widget.LinearLayout;
						public expandLabel: com.stripe.android.stripe3ds2.views.ThreeDS2TextView;
						public expandText: com.stripe.android.stripe3ds2.views.ThreeDS2TextView;
						public whyArrow: androidx.appcompat.widget.AppCompatImageView;
						public whyContainer: globalAndroid.widget.LinearLayout;
						public whyLabel: com.stripe.android.stripe3ds2.views.ThreeDS2TextView;
						public whyText: com.stripe.android.stripe3ds2.views.ThreeDS2TextView;
						public static bind(param0: globalAndroid.view.View): com.stripe.android.stripe3ds2.databinding.StripeInformationZoneViewBinding;
						public static inflate(param0: globalAndroid.view.LayoutInflater): com.stripe.android.stripe3ds2.databinding.StripeInformationZoneViewBinding;
						public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: boolean): com.stripe.android.stripe3ds2.databinding.StripeInformationZoneViewBinding;
						public getRoot(): globalAndroid.widget.LinearLayout;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module databinding {
					export class StripeProgressViewLayoutBinding {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.databinding.StripeProgressViewLayoutBinding>;
						public brandLogo: globalAndroid.widget.ImageView;
						public progressBar: com.google.android.material.progressindicator.CircularProgressIndicator;
						public static inflate(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: boolean): com.stripe.android.stripe3ds2.databinding.StripeProgressViewLayoutBinding;
						public static inflate(param0: globalAndroid.view.LayoutInflater): com.stripe.android.stripe3ds2.databinding.StripeProgressViewLayoutBinding;
						public static bind(param0: globalAndroid.view.View): com.stripe.android.stripe3ds2.databinding.StripeProgressViewLayoutBinding;
						public getRoot(): globalAndroid.widget.LinearLayout;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module exceptions {
					export class InvalidInputException {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.exceptions.InvalidInputException>;
						public constructor(param0: java.lang.Throwable);
						public constructor(param0: string, param1: java.lang.Throwable);
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module exceptions {
					export class SDKRuntimeException {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.exceptions.SDKRuntimeException>;
						public constructor(param0: java.lang.Throwable);
						public constructor(param0: string, param1: java.lang.Throwable);
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module init {
					export class AppInfo {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.init.AppInfo>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.init.AppInfo>;
						public component2(): number;
						public describeContents(): number;
						public constructor(param0: string, param1: number);
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public getSdkAppId(): string;
						public getVersion(): number;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public copy(param0: string, param1: number): com.stripe.android.stripe3ds2.init.AppInfo;
						public toString(): string;
					}
					export module AppInfo {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.init.AppInfo> {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.init.AppInfo.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.stripe3ds2.init.AppInfo>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.stripe3ds2.init.AppInfo;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module init {
					export class AppInfoRepository {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.init.AppInfoRepository>;
						/**
						 * Constructs a new instance of the com.stripe.android.stripe3ds2.init.AppInfoRepository interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							get(param0: kotlin.coroutines.Continuation<any>): any;
						});
						public constructor();
						public get(param0: kotlin.coroutines.Continuation<any>): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module init {
					export class ConfigParameters {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.init.ConfigParameters>;
						/**
						 * Constructs a new instance of the com.stripe.android.stripe3ds2.init.ConfigParameters interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							addParam(param0: string, param1: string, param2: string): void;
							getParamValue(param0: string, param1: string): string;
							removeParam(param0: string, param1: string): string;
						});
						public constructor();
						public addParam(param0: string, param1: string, param2: string): void;
						public removeParam(param0: string, param1: string): string;
						public getParamValue(param0: string, param1: string): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module init {
					export class DefaultAppInfoRepository extends com.stripe.android.stripe3ds2.init.AppInfoRepository {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.init.DefaultAppInfoRepository>;
						public constructor(param0: com.stripe.android.stripe3ds2.init.DefaultAppInfoRepository.Store, param1: number, param2: kotlin.coroutines.CoroutineContext);
						public constructor(param0: globalAndroid.content.Context, param1: kotlin.coroutines.CoroutineContext);
						public constructor(param0: globalAndroid.content.Context, param1: number, param2: kotlin.coroutines.CoroutineContext);
						public get(param0: kotlin.coroutines.Continuation<any>): any;
					}
					export module DefaultAppInfoRepository {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.init.DefaultAppInfoRepository.Companion>;
						}
						export class Store {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.init.DefaultAppInfoRepository.Store>;
							/**
							 * Constructs a new instance of the com.stripe.android.stripe3ds2.init.DefaultAppInfoRepository$Store interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								get(param0: kotlin.coroutines.Continuation<any>): any;
								save(param0: com.stripe.android.stripe3ds2.init.AppInfo): void;
							});
							public constructor();
							public get(param0: kotlin.coroutines.Continuation<any>): any;
							public save(param0: com.stripe.android.stripe3ds2.init.AppInfo): void;
						}
						export module Store {
							export class Default extends com.stripe.android.stripe3ds2.init.DefaultAppInfoRepository.Store {
								public static class: java.lang.Class<com.stripe.android.stripe3ds2.init.DefaultAppInfoRepository.Store.Default>;
								public get(param0: kotlin.coroutines.Continuation<any>): any;
								public save(param0: com.stripe.android.stripe3ds2.init.AppInfo): void;
								public constructor(param0: globalAndroid.content.Context, param1: number, param2: kotlin.coroutines.CoroutineContext);
							}
							export module Default {
								export class Companion {
									public static class: java.lang.Class<com.stripe.android.stripe3ds2.init.DefaultAppInfoRepository.Store.Default.Companion>;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module init {
					export class DefaultSecurityChecker extends com.stripe.android.stripe3ds2.init.SecurityChecker {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.init.DefaultSecurityChecker>;
						public constructor(param0: java.util.List<any>);
						public constructor();
						public getWarnings(): java.util.List<com.stripe.android.stripe3ds2.init.Warning>;
					}
					export module DefaultSecurityChecker {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.init.DefaultSecurityChecker.Companion>;
							public getDEFAULT_CHECKS(): java.util.List<com.stripe.android.stripe3ds2.init.SecurityCheck>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module init {
					export class DeviceDataFactory {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.init.DeviceDataFactory>;
						/**
						 * Constructs a new instance of the com.stripe.android.stripe3ds2.init.DeviceDataFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							create(): java.util.Map<string, any>;
						});
						public constructor();
						public create(): java.util.Map<string, any>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module init {
					export class DeviceDataFactoryImpl extends com.stripe.android.stripe3ds2.init.DeviceDataFactory {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.init.DeviceDataFactoryImpl>;
						public constructor(param0: globalAndroid.content.Context, param1: com.stripe.android.stripe3ds2.utils.Supplier<com.stripe.android.stripe3ds2.init.HardwareId>);
						public create(): java.util.Map<string, any>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module init {
					export class DeviceParam {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.init.DeviceParam>;
						public static PARAM_PLATFORM: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_DEVICE_MODEL: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_OS_NAME: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_OS_VERSION: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_LOCALE: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_TIME_ZONE: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_HARDWARE_ID: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_SCREEN_RESOLUTION: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_DEVICE_NAME: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_IP_ADDRESS: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_LATITUDE: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_LONGITUDE: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_TELE_DEVICE_ID: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_TELE_SUBSCRIBER_ID: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_TELE_IMEI_SV: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_TELE_GROUP_IDENTIFIER_L1: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_TELE_LINE1_NUMBER: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_TELE_MMS_UA_PROFILE_URL: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_TELE_MMS_USER_AGENT: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_TELE_NETWORK_COUNTRY_ISO: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_TELE_NETWORK_OPERATOR: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_TELE_NETWORK_OPERATOR_NAME: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_TELE_NETWORK_TYPE: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_TELE_PHONE_COUNT: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_TELE_PHONE_TYPE: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_TELE_SIM_COUNTRY_ISO: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_TELE_SIM_OPERATOR: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_TELE_SIM_OPERATOR_NAME: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_TELE_SIM_SERIAL_NUMBER: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_TELE_SIM_STATE: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_TELE_VOICE_MAIL_ALPHA_TAG: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_TELE_VOICE_MAIL_NUMBER: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_TELE_HAS_ICC_CARD: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_TELE_IS_HEARING_AID_COMPATIBILITY_SUPPORTED: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_TELE_IS_NETWORK_ROAMING: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_TELE_IS_SMS_CAPABLE: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_TELE_IS_TTY_MODE_SUPPORTED: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_TELE_IS_VOICE_CAPABLE: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_TELE_IS_WORLD_PHONE: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_WIFI_MAC: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_WIFI_BSSID: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_WIFI_SSID: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_WIFI_NETWORK_ID: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_WIFI_IS_5GHZ_BAND_SUPPORTED: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_WIFI_IS_DEVICE_TO_AP_RTT_SUPPORTED: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_WIFI_IS_ENHANCED_POWER_REPORTING_SUPPORTED: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_WIFI_IS_P2P_SUPPORTED: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_WIFI_IS_PREFERRED_NETWORK_OFFLOAD_SUPPORTED: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_WIFI_IS_SCAN_ALWAYS_AVAILABLE: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_WIFI_IS_TDLS_SUPPORTED: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_BLUETOOTH_ADDRESS: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_BLUETOOTH_BONDED_DEVICE: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_BLUETOOTH_IS_ENABLED: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_BUILD_BOARD: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_BUILD_BOOTLOADER: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_BUILD_BRAND: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_BUILD_DEVICE: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_BUILD_DISPLAY: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_BUILD_FINGERPRINT: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_BUILD_HARDWARE: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_BUILD_ID: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_BUILD_MANUFACTURER: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_BUILD_PRODUCT: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_BUILD_RADIO: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_BUILD_SERIAL: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_BUILD_SUPPORTED_32_BIT_ABIS: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_BUILD_SUPPORTED_64_BIT_ABIS: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_BUILD_TAGS: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_BUILD_TIME: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_BUILD_TYPE: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_BUILD_USER: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_BUILD_VERSION_CODENAME: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_BUILD_VERSION_INCREMENTAL: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_BUILD_VERSION_PREVIEW_SDK_INT: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_BUILD_VERSION_SDK_INT: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_BUILD_VERSION_SECURITY_PATCH: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_SECURE_ACCESSIBILITY_DISPLAY_INVERSION_ENABLED: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_SECURE_ACCESSIBILITY_ENABLED: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_SECURE_ACCESSIBILITY_ACCESSIBILITY_SPEAK_PASSWORD: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_SECURE_ALLOWED_GEOLOCATION_ORIGINS: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_SECURE_ANDROID_ID: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_SECURE_DATA_ROAMING: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_SECURE_DEFAULT_INPUT_METHOD: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_SECURE_DEVICE_PROVISIONED: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_SECURE_ENABLED_ACCESSIBILITY_SERVICES: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_SECURE_ENABLED_INPUT_METHODS: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_SECURE_INPUT_METHOD_SELECTOR_VISIBILITY: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_SECURE_INSTALL_NON_MARKET_APPS: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_SECURE_LOCATION_MODE: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_SECURE_SKIP_FIRST_USE_HINTS: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_SECURE_SYS_PROP_SETTING_VERSION: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_SECURE_TTS_DEFAULT_PITCH: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_SECURE_TTS_DEFAULT_RATE: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_SECURE_TTS_DEFAULT_SYNTH: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_SECURE_TTS_ENABLED_PLUGINS: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_GLOBAL_ADB_ENABLED: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_GLOBAL_AIRPLANE_MODE_RADIOS: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_GLOBAL_ALWAYS_FINISH_ACTIVITIES: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_GLOBAL_ANIMATOR_DURATION_SCALE: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_GLOBAL_AUTO_TIME: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_GLOBAL_AUTO_TIME_ZONE: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_GLOBAL_DEVELOPMENT_SETTINGS_ENABLED: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_GLOBAL_HTTP_PROXY: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_GLOBAL_NETWORK_PREFERENCE: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_GLOBAL_STAY_ON_WHILE_PLUGGED_IN: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_GLOBAL_TRANSITION_ANIMATION_SCALE: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_GLOBAL_USB_MASS_STORAGE_ENABLED: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_GLOBAL_USE_GOOGLE_MAIL: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_GLOBAL_WAIT_FOR_DEBUGGER: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_GLOBAL_WIFI_NETWORKS_AVAILABLE_NOTIFICATION_ON: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_SYSTEM_ACCELEROMETER_ROTATION: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_SYSTEM_BLUETOOTH_DISCOVERABILITY: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_SYSTEM_BLUETOOTH_DISCOVERABILITY_TIMEOUT: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_SYSTEM_DATE_FORMAT: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_SYSTEM_DTMF_TONE_TYPE_WHEN_DIALING: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_SYSTEM_DTMF_TONE_WHEN_DIALING: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_SYSTEM_END_BUTTON_BEHAVIOR: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_SYSTEM_FONT_SCALE: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_SYSTEM_HAPTIC_FEEDBACK_ENABLED: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_SYSTEM_MODE_RINGER_STREAMS_AFFECTED: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_SYSTEM_NOTIFICATION_SOUND: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_SYSTEM_MUTE_STREAMS_AFFECTED: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_SYSTEM_RINGTONE: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_SYSTEM_SCREEN_BRIGHTNESS: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_SYSTEM_SCREEN_BRIGHTNESS_MODE: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_SYSTEM_SCREEN_OFF_TIMEOUT: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_SYSTEM_SOUND_EFFECTS_ENABLED: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_SYSTEM_TEXT_AUTO_CAPS: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_SYSTEM_TEXT_AUTO_PUNCTUATE: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_SYSTEM_TEXT_AUTO_REPLACE: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_SYSTEM_TEXT_SHOW_PASSWORD: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_SYSTEM_TIME_12_24: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_SYSTEM_USER_ROTATION: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_SYSTEM_VIBRATE_ON: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_SYSTEM_VIBRATE_WHEN_RINGING: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_PACKAGE_IS_SAFE_MODE: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_PACKAGE_GET_INSTALLED_APPS: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_PACKAGE_INSTALLER_PACKAGE_NAME: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_PACKAGE_SYSTEM_AVAILABLE_FEATURES: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_PACKAGE_SYSTEM_SHARED_LIBRARY_NAMES: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_ENV_EXTERNAL_STORAGE_STATE: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_LOCALE_AVAILABLE_LOCALES: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_DISPLAY_DENSITY: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_DISPLAY_DENSITY_DPI: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_DISPLAY_SCALED_DENSITY: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_DISPLAY_XDPI: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_DISPLAY_YDPI: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static PARAM_STAT_FS_TOTAL_BYTES: com.stripe.android.stripe3ds2.init.DeviceParam;
						public static values(): androidNative.Array<com.stripe.android.stripe3ds2.init.DeviceParam>;
						public static valueOf(param0: string): com.stripe.android.stripe3ds2.init.DeviceParam;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module init {
					export class DeviceParamNotAvailableFactory {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.init.DeviceParamNotAvailableFactory>;
						/**
						 * Constructs a new instance of the com.stripe.android.stripe3ds2.init.DeviceParamNotAvailableFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							create(): java.util.Map<string, string>;
						});
						public constructor();
						public create(): java.util.Map<string, string>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module init {
					export class DeviceParamNotAvailableFactoryImpl extends com.stripe.android.stripe3ds2.init.DeviceParamNotAvailableFactory {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.init.DeviceParamNotAvailableFactoryImpl>;
						public getPlatformVersionParams$3ds2sdk_release(): java.util.Map<string, string>;
						public constructor(param0: number, param1: com.stripe.android.stripe3ds2.utils.Supplier<com.stripe.android.stripe3ds2.init.HardwareId>);
						public constructor(param0: com.stripe.android.stripe3ds2.utils.Supplier<com.stripe.android.stripe3ds2.init.HardwareId>);
						public getMarketOrRegionRestrictionParams$3ds2sdk_release(): java.util.Map<string, string>;
						public getPermissionParams$3ds2sdk_release(): java.util.Map<string, string>;
						public create(): java.util.Map<string, string>;
					}
					export module DeviceParamNotAvailableFactoryImpl {
						export class Reason {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.init.DeviceParamNotAvailableFactoryImpl.Reason>;
							public static MARKET_OR_REGION_RESTRICTION: com.stripe.android.stripe3ds2.init.DeviceParamNotAvailableFactoryImpl.Reason;
							public static PLATFORM_VERSION: com.stripe.android.stripe3ds2.init.DeviceParamNotAvailableFactoryImpl.Reason;
							public static PERMISSION: com.stripe.android.stripe3ds2.init.DeviceParamNotAvailableFactoryImpl.Reason;
							public static valueOf(param0: string): com.stripe.android.stripe3ds2.init.DeviceParamNotAvailableFactoryImpl.Reason;
							public static values(): androidNative.Array<com.stripe.android.stripe3ds2.init.DeviceParamNotAvailableFactoryImpl.Reason>;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module init {
					export class HardwareId {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.init.HardwareId>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.init.HardwareId>;
						public isPresent(): boolean;
						public describeContents(): number;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getValue(): string;
						public copy(param0: string): com.stripe.android.stripe3ds2.init.HardwareId;
						public toString(): string;
						public constructor(param0: string);
					}
					export module HardwareId {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.init.HardwareId> {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.init.HardwareId.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.stripe3ds2.init.HardwareId>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.stripe3ds2.init.HardwareId;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module init {
					export class HardwareIdSupplier extends com.stripe.android.stripe3ds2.utils.Supplier<com.stripe.android.stripe3ds2.init.HardwareId> {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.init.HardwareIdSupplier>;
						public constructor(param0: globalAndroid.content.Context);
						public get(): com.stripe.android.stripe3ds2.init.HardwareId;
						public get(): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module init {
					export abstract class SecurityCheck {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.init.SecurityCheck>;
						public getWarning(): com.stripe.android.stripe3ds2.init.Warning;
						public check(): boolean;
					}
					export module SecurityCheck {
						export class DebuggerAttached extends com.stripe.android.stripe3ds2.init.SecurityCheck {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.init.SecurityCheck.DebuggerAttached>;
							public constructor();
							public constructor(param0: boolean);
							public isDebuggerConnected(): boolean;
							public check(): boolean;
						}
						export module DebuggerAttached {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.stripe3ds2.init.SecurityCheck.DebuggerAttached.Companion>;
							}
						}
						export class Emulator extends com.stripe.android.stripe3ds2.init.SecurityCheck {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.init.SecurityCheck.Emulator>;
							public constructor();
							public check(): boolean;
						}
						export module Emulator {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.stripe3ds2.init.SecurityCheck.Emulator.Companion>;
							}
						}
						export class RootedCheck extends com.stripe.android.stripe3ds2.init.SecurityCheck {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.init.SecurityCheck.RootedCheck>;
							public constructor();
							public check(): boolean;
						}
						export module RootedCheck {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.stripe3ds2.init.SecurityCheck.RootedCheck.Companion>;
							}
						}
						export class Tampered extends com.stripe.android.stripe3ds2.init.SecurityCheck {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.init.SecurityCheck.Tampered>;
							public constructor();
							public check(): boolean;
						}
						export module Tampered {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.stripe3ds2.init.SecurityCheck.Tampered.Companion>;
							}
						}
						export class UnsupportedOS extends com.stripe.android.stripe3ds2.init.SecurityCheck {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.init.SecurityCheck.UnsupportedOS>;
							public constructor();
							public check(): boolean;
						}
						export module UnsupportedOS {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.stripe3ds2.init.SecurityCheck.UnsupportedOS.Companion>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module init {
					export class SecurityChecker {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.init.SecurityChecker>;
						/**
						 * Constructs a new instance of the com.stripe.android.stripe3ds2.init.SecurityChecker interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getWarnings(): java.util.List<com.stripe.android.stripe3ds2.init.Warning>;
						});
						public constructor();
						public getWarnings(): java.util.List<com.stripe.android.stripe3ds2.init.Warning>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module init {
					export class Warning {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.init.Warning>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.init.Warning>;
						public getMessage(): string;
						public describeContents(): number;
						public copy(param0: string, param1: string, param2: com.stripe.android.stripe3ds2.init.Warning.Severity): com.stripe.android.stripe3ds2.init.Warning;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public constructor(param0: string, param1: string, param2: com.stripe.android.stripe3ds2.init.Warning.Severity);
						public toString(): string;
						public getSeverity(): com.stripe.android.stripe3ds2.init.Warning.Severity;
						public component2(): string;
						public getId(): string;
						public component3(): com.stripe.android.stripe3ds2.init.Warning.Severity;
					}
					export module Warning {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.init.Warning> {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.init.Warning.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.stripe3ds2.init.Warning;
							public newArray(param0: number): androidNative.Array<com.stripe.android.stripe3ds2.init.Warning>;
						}
						export class Severity {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.init.Warning.Severity>;
							public static LOW: com.stripe.android.stripe3ds2.init.Warning.Severity;
							public static MEDIUM: com.stripe.android.stripe3ds2.init.Warning.Severity;
							public static HIGH: com.stripe.android.stripe3ds2.init.Warning.Severity;
							public static values(): androidNative.Array<com.stripe.android.stripe3ds2.init.Warning.Severity>;
							public static valueOf(param0: string): com.stripe.android.stripe3ds2.init.Warning.Severity;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module init {
					export module ui {
						export abstract class BaseCustomization extends com.stripe.android.stripe3ds2.init.ui.Customization {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.init.ui.BaseCustomization>;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public setTextFontName(param0: string): void;
							public getTextFontName(): string;
							public getTextColor(): string;
							public getTextFontSize(): number;
							public setTextColor(param0: string): void;
							public setTextFontSize(param0: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module init {
					export module ui {
						export class ButtonCustomization extends com.stripe.android.stripe3ds2.init.ui.Customization {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.init.ui.ButtonCustomization>;
							/**
							 * Constructs a new instance of the com.stripe.android.stripe3ds2.init.ui.ButtonCustomization interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								setBackgroundColor(param0: string): void;
								setCornerRadius(param0: number): void;
								getBackgroundColor(): string;
								getCornerRadius(): number;
								setTextFontName(param0: string): void;
								setTextColor(param0: string): void;
								setTextFontSize(param0: number): void;
								getTextFontName(): string;
								getTextColor(): string;
								getTextFontSize(): number;
							});
							public constructor();
							public getBackgroundColor(): string;
							public setBackgroundColor(param0: string): void;
							public getCornerRadius(): number;
							public setCornerRadius(param0: number): void;
							public setTextFontName(param0: string): void;
							public getTextFontName(): string;
							public getTextColor(): string;
							public getTextFontSize(): number;
							public setTextColor(param0: string): void;
							public setTextFontSize(param0: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module init {
					export module ui {
						export class Customization {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.init.ui.Customization>;
							/**
							 * Constructs a new instance of the com.stripe.android.stripe3ds2.init.ui.Customization interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								setTextFontName(param0: string): void;
								setTextColor(param0: string): void;
								setTextFontSize(param0: number): void;
								getTextFontName(): string;
								getTextColor(): string;
								getTextFontSize(): number;
							});
							public constructor();
							public setTextFontName(param0: string): void;
							public getTextFontName(): string;
							public getTextColor(): string;
							public getTextFontSize(): number;
							public setTextColor(param0: string): void;
							public setTextFontSize(param0: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module init {
					export module ui {
						export class LabelCustomization extends com.stripe.android.stripe3ds2.init.ui.Customization {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.init.ui.LabelCustomization>;
							/**
							 * Constructs a new instance of the com.stripe.android.stripe3ds2.init.ui.LabelCustomization interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								setHeadingTextColor(param0: string): void;
								setHeadingTextFontName(param0: string): void;
								setHeadingTextFontSize(param0: number): void;
								getHeadingTextColor(): string;
								getHeadingTextFontName(): string;
								getHeadingTextFontSize(): number;
								setTextFontName(param0: string): void;
								setTextColor(param0: string): void;
								setTextFontSize(param0: number): void;
								getTextFontName(): string;
								getTextColor(): string;
								getTextFontSize(): number;
							});
							public constructor();
							public setHeadingTextColor(param0: string): void;
							public getHeadingTextFontSize(): number;
							public getHeadingTextColor(): string;
							public setTextFontName(param0: string): void;
							public getHeadingTextFontName(): string;
							public getTextFontName(): string;
							public setHeadingTextFontSize(param0: number): void;
							public getTextColor(): string;
							public setHeadingTextFontName(param0: string): void;
							public getTextFontSize(): number;
							public setTextColor(param0: string): void;
							public setTextFontSize(param0: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module init {
					export module ui {
						export class StripeButtonCustomization extends com.stripe.android.stripe3ds2.init.ui.BaseCustomization implements com.stripe.android.stripe3ds2.init.ui.ButtonCustomization {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.init.ui.StripeButtonCustomization>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.init.ui.StripeButtonCustomization>;
							public constructor();
							public getBackgroundColor(): string;
							public setBackgroundColor(param0: string): void;
							public setCornerRadius(param0: number): void;
							public hashCode(): number;
							public getTextColor(): string;
							public setTextColor(param0: string): void;
							public setTextFontSize(param0: number): void;
							public getCornerRadius(): number;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public describeContents(): number;
							public setTextFontName(param0: string): void;
							public getTextFontName(): string;
							public equals(param0: any): boolean;
							public getTextFontSize(): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module init {
					export module ui {
						export class StripeLabelCustomization extends com.stripe.android.stripe3ds2.init.ui.BaseCustomization implements com.stripe.android.stripe3ds2.init.ui.LabelCustomization {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.init.ui.StripeLabelCustomization>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.init.ui.StripeLabelCustomization>;
							public constructor();
							public setHeadingTextColor(param0: string): void;
							public getHeadingTextFontSize(): number;
							public hashCode(): number;
							public getHeadingTextFontName(): string;
							public setHeadingTextFontSize(param0: number): void;
							public getTextColor(): string;
							public setHeadingTextFontName(param0: string): void;
							public setTextColor(param0: string): void;
							public setTextFontSize(param0: number): void;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public getHeadingTextColor(): string;
							public describeContents(): number;
							public setTextFontName(param0: string): void;
							public getTextFontName(): string;
							public equals(param0: any): boolean;
							public getTextFontSize(): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module init {
					export module ui {
						export class StripeTextBoxCustomization extends com.stripe.android.stripe3ds2.init.ui.BaseCustomization implements com.stripe.android.stripe3ds2.init.ui.TextBoxCustomization {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.init.ui.StripeTextBoxCustomization>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.init.ui.StripeTextBoxCustomization>;
							public constructor();
							public getBorderWidth(): number;
							public setCornerRadius(param0: number): void;
							public hashCode(): number;
							public getBorderColor(): string;
							public setHintTextColor(param0: string): void;
							public getTextColor(): string;
							public setBorderColor(param0: string): void;
							public setTextColor(param0: string): void;
							public setTextFontSize(param0: number): void;
							public getCornerRadius(): number;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public describeContents(): number;
							public setTextFontName(param0: string): void;
							public getHintTextColor(): string;
							public getTextFontName(): string;
							public equals(param0: any): boolean;
							public setBorderWidth(param0: number): void;
							public getTextFontSize(): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module init {
					export module ui {
						export class StripeToolbarCustomization extends com.stripe.android.stripe3ds2.init.ui.BaseCustomization implements com.stripe.android.stripe3ds2.init.ui.ToolbarCustomization {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.init.ui.StripeToolbarCustomization>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.init.ui.StripeToolbarCustomization>;
							public constructor();
							public getBackgroundColor(): string;
							public setBackgroundColor(param0: string): void;
							public setHeaderText(param0: string): void;
							public hashCode(): number;
							public getTextColor(): string;
							public setTextColor(param0: string): void;
							public setTextFontSize(param0: number): void;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public setStatusBarColor(param0: string): void;
							public setButtonText(param0: string): void;
							public describeContents(): number;
							public setTextFontName(param0: string): void;
							public getStatusBarColor(): string;
							public getTextFontName(): string;
							public getHeaderText(): string;
							public getButtonText(): string;
							public equals(param0: any): boolean;
							public getTextFontSize(): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module init {
					export module ui {
						export class StripeUiCustomization extends com.stripe.android.stripe3ds2.init.ui.UiCustomization {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.init.ui.StripeUiCustomization>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.init.ui.StripeUiCustomization>;
							public constructor();
							public hashCode(): number;
							public setLabelCustomization(param0: com.stripe.android.stripe3ds2.init.ui.LabelCustomization): void;
							public getLabelCustomization(): com.stripe.android.stripe3ds2.init.ui.LabelCustomization;
							public setButtonCustomization(param0: com.stripe.android.stripe3ds2.init.ui.ButtonCustomization, param1: string): void;
							public getButtonCustomization(param0: com.stripe.android.stripe3ds2.init.ui.UiCustomization.ButtonType): com.stripe.android.stripe3ds2.init.ui.ButtonCustomization;
							public getButtonCustomization(param0: string): com.stripe.android.stripe3ds2.init.ui.ButtonCustomization;
							public setTextBoxCustomization(param0: com.stripe.android.stripe3ds2.init.ui.TextBoxCustomization): void;
							public static createWithAppTheme(param0: globalAndroid.app.Activity): com.stripe.android.stripe3ds2.init.ui.StripeUiCustomization;
							public setToolbarCustomization(param0: com.stripe.android.stripe3ds2.init.ui.ToolbarCustomization): void;
							public setAccentColor(param0: string): void;
							public setButtonCustomization(param0: com.stripe.android.stripe3ds2.init.ui.ButtonCustomization, param1: com.stripe.android.stripe3ds2.init.ui.UiCustomization.ButtonType): void;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public describeContents(): number;
							public getToolbarCustomization(): com.stripe.android.stripe3ds2.init.ui.ToolbarCustomization;
							public getTextBoxCustomization(): com.stripe.android.stripe3ds2.init.ui.TextBoxCustomization;
							public equals(param0: any): boolean;
							public getAccentColor(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module init {
					export module ui {
						export class TextBoxCustomization extends com.stripe.android.stripe3ds2.init.ui.Customization {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.init.ui.TextBoxCustomization>;
							/**
							 * Constructs a new instance of the com.stripe.android.stripe3ds2.init.ui.TextBoxCustomization interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								setBorderWidth(param0: number): void;
								getBorderWidth(): number;
								setBorderColor(param0: string): void;
								getBorderColor(): string;
								setCornerRadius(param0: number): void;
								getCornerRadius(): number;
								setHintTextColor(param0: string): void;
								getHintTextColor(): string;
								setTextFontName(param0: string): void;
								setTextColor(param0: string): void;
								setTextFontSize(param0: number): void;
								getTextFontName(): string;
								getTextColor(): string;
								getTextFontSize(): number;
							});
							public constructor();
							public getBorderWidth(): number;
							public setCornerRadius(param0: number): void;
							public getBorderColor(): string;
							public setHintTextColor(param0: string): void;
							public getTextColor(): string;
							public setBorderColor(param0: string): void;
							public setTextColor(param0: string): void;
							public setTextFontSize(param0: number): void;
							public getCornerRadius(): number;
							public setTextFontName(param0: string): void;
							public getHintTextColor(): string;
							public getTextFontName(): string;
							public setBorderWidth(param0: number): void;
							public getTextFontSize(): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module init {
					export module ui {
						export class ToolbarCustomization extends com.stripe.android.stripe3ds2.init.ui.Customization {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.init.ui.ToolbarCustomization>;
							/**
							 * Constructs a new instance of the com.stripe.android.stripe3ds2.init.ui.ToolbarCustomization interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								setBackgroundColor(param0: string): void;
								setStatusBarColor(param0: string): void;
								setHeaderText(param0: string): void;
								setButtonText(param0: string): void;
								getBackgroundColor(): string;
								getStatusBarColor(): string;
								getHeaderText(): string;
								getButtonText(): string;
								setTextFontName(param0: string): void;
								setTextColor(param0: string): void;
								setTextFontSize(param0: number): void;
								getTextFontName(): string;
								getTextColor(): string;
								getTextFontSize(): number;
							});
							public constructor();
							public getBackgroundColor(): string;
							public setBackgroundColor(param0: string): void;
							public setHeaderText(param0: string): void;
							public getTextColor(): string;
							public setTextColor(param0: string): void;
							public setTextFontSize(param0: number): void;
							public setStatusBarColor(param0: string): void;
							public setButtonText(param0: string): void;
							public setTextFontName(param0: string): void;
							public getStatusBarColor(): string;
							public getTextFontName(): string;
							public getHeaderText(): string;
							public getButtonText(): string;
							public getTextFontSize(): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module init {
					export module ui {
						export class UiCustomization {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.init.ui.UiCustomization>;
							/**
							 * Constructs a new instance of the com.stripe.android.stripe3ds2.init.ui.UiCustomization interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								setButtonCustomization(param0: com.stripe.android.stripe3ds2.init.ui.ButtonCustomization, param1: com.stripe.android.stripe3ds2.init.ui.UiCustomization.ButtonType): void;
								setButtonCustomization(param0: com.stripe.android.stripe3ds2.init.ui.ButtonCustomization, param1: string): void;
								setToolbarCustomization(param0: com.stripe.android.stripe3ds2.init.ui.ToolbarCustomization): void;
								setLabelCustomization(param0: com.stripe.android.stripe3ds2.init.ui.LabelCustomization): void;
								setTextBoxCustomization(param0: com.stripe.android.stripe3ds2.init.ui.TextBoxCustomization): void;
								setAccentColor(param0: string): void;
								getButtonCustomization(param0: com.stripe.android.stripe3ds2.init.ui.UiCustomization.ButtonType): com.stripe.android.stripe3ds2.init.ui.ButtonCustomization;
								getButtonCustomization(param0: string): com.stripe.android.stripe3ds2.init.ui.ButtonCustomization;
								getToolbarCustomization(): com.stripe.android.stripe3ds2.init.ui.ToolbarCustomization;
								getLabelCustomization(): com.stripe.android.stripe3ds2.init.ui.LabelCustomization;
								getTextBoxCustomization(): com.stripe.android.stripe3ds2.init.ui.TextBoxCustomization;
								getAccentColor(): string;
							});
							public constructor();
							public setToolbarCustomization(param0: com.stripe.android.stripe3ds2.init.ui.ToolbarCustomization): void;
							public setAccentColor(param0: string): void;
							public setButtonCustomization(param0: com.stripe.android.stripe3ds2.init.ui.ButtonCustomization, param1: com.stripe.android.stripe3ds2.init.ui.UiCustomization.ButtonType): void;
							public setLabelCustomization(param0: com.stripe.android.stripe3ds2.init.ui.LabelCustomization): void;
							public getLabelCustomization(): com.stripe.android.stripe3ds2.init.ui.LabelCustomization;
							public setButtonCustomization(param0: com.stripe.android.stripe3ds2.init.ui.ButtonCustomization, param1: string): void;
							public getButtonCustomization(param0: com.stripe.android.stripe3ds2.init.ui.UiCustomization.ButtonType): com.stripe.android.stripe3ds2.init.ui.ButtonCustomization;
							public getButtonCustomization(param0: string): com.stripe.android.stripe3ds2.init.ui.ButtonCustomization;
							public getToolbarCustomization(): com.stripe.android.stripe3ds2.init.ui.ToolbarCustomization;
							public getTextBoxCustomization(): com.stripe.android.stripe3ds2.init.ui.TextBoxCustomization;
							public setTextBoxCustomization(param0: com.stripe.android.stripe3ds2.init.ui.TextBoxCustomization): void;
							public getAccentColor(): string;
						}
						export module UiCustomization {
							export class ButtonType {
								public static class: java.lang.Class<com.stripe.android.stripe3ds2.init.ui.UiCustomization.ButtonType>;
								public static SUBMIT: com.stripe.android.stripe3ds2.init.ui.UiCustomization.ButtonType;
								public static CONTINUE: com.stripe.android.stripe3ds2.init.ui.UiCustomization.ButtonType;
								public static NEXT: com.stripe.android.stripe3ds2.init.ui.UiCustomization.ButtonType;
								public static CANCEL: com.stripe.android.stripe3ds2.init.ui.UiCustomization.ButtonType;
								public static RESEND: com.stripe.android.stripe3ds2.init.ui.UiCustomization.ButtonType;
								public static SELECT: com.stripe.android.stripe3ds2.init.ui.UiCustomization.ButtonType;
								public static values(): androidNative.Array<com.stripe.android.stripe3ds2.init.ui.UiCustomization.ButtonType>;
								public static valueOf(param0: string): com.stripe.android.stripe3ds2.init.ui.UiCustomization.ButtonType;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module observability {
					export class DefaultErrorReporter extends com.stripe.android.stripe3ds2.observability.ErrorReporter {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.observability.DefaultErrorReporter>;
						public constructor(param0: globalAndroid.content.Context, param1: com.stripe.android.stripe3ds2.observability.DefaultErrorReporter.Config, param2: kotlin.coroutines.CoroutineContext, param3: com.stripe.android.stripe3ds2.transaction.Logger, param4: com.stripe.android.stripe3ds2.observability.SentryConfig, param5: string, param6: string, param7: number);
						public reportError(param0: java.lang.Throwable): void;
					}
					export module DefaultErrorReporter {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.observability.DefaultErrorReporter.Companion>;
						}
						export class Config {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.observability.DefaultErrorReporter.Config>;
							/**
							 * Constructs a new instance of the com.stripe.android.stripe3ds2.observability.DefaultErrorReporter$Config interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getCustomTags(): java.util.Map<string, string>;
							});
							public constructor();
							public getCustomTags(): java.util.Map<string, string>;
						}
						export class EmptyConfig extends com.stripe.android.stripe3ds2.observability.DefaultErrorReporter.Config {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.observability.DefaultErrorReporter.EmptyConfig>;
							public static INSTANCE: com.stripe.android.stripe3ds2.observability.DefaultErrorReporter.EmptyConfig;
							public getCustomTags(): java.util.Map<string, string>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module observability {
					export class DefaultSentryConfig extends com.stripe.android.stripe3ds2.observability.SentryConfig {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.observability.DefaultSentryConfig>;
						public static INSTANCE: com.stripe.android.stripe3ds2.observability.DefaultSentryConfig;
						public getVersion(): string;
						public getProjectId(): string;
						public getTimestamp(): string;
						public getKey(): string;
						public getSecret(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module observability {
					export class ErrorReporter {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.observability.ErrorReporter>;
						/**
						 * Constructs a new instance of the com.stripe.android.stripe3ds2.observability.ErrorReporter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							reportError(param0: java.lang.Throwable): void;
						});
						public constructor();
						public reportError(param0: java.lang.Throwable): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module observability {
					export class SentryConfig {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.observability.SentryConfig>;
						/**
						 * Constructs a new instance of the com.stripe.android.stripe3ds2.observability.SentryConfig interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getProjectId(): string;
							getKey(): string;
							getSecret(): string;
							getVersion(): string;
							getTimestamp(): string;
						});
						public constructor();
						public getVersion(): string;
						public getProjectId(): string;
						public getTimestamp(): string;
						public getKey(): string;
						public getSecret(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module observability {
					export class Stripe3ds2ErrorReporterConfig extends com.stripe.android.stripe3ds2.observability.DefaultErrorReporter.Config {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.observability.Stripe3ds2ErrorReporterConfig>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.observability.Stripe3ds2ErrorReporterConfig>;
						public describeContents(): number;
						public copy(param0: com.stripe.android.stripe3ds2.transaction.SdkTransactionId): com.stripe.android.stripe3ds2.observability.Stripe3ds2ErrorReporterConfig;
						public getCustomTags(): java.util.Map<string, string>;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public constructor(param0: com.stripe.android.stripe3ds2.transaction.SdkTransactionId);
						public toString(): string;
					}
					export module Stripe3ds2ErrorReporterConfig {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.observability.Stripe3ds2ErrorReporterConfig> {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.observability.Stripe3ds2ErrorReporterConfig.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.stripe3ds2.observability.Stripe3ds2ErrorReporterConfig>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.stripe3ds2.observability.Stripe3ds2ErrorReporterConfig;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module security {
					export class Algorithm {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.security.Algorithm>;
						public static EC: com.stripe.android.stripe3ds2.security.Algorithm;
						public static RSA: com.stripe.android.stripe3ds2.security.Algorithm;
						public static valueOf(param0: string): com.stripe.android.stripe3ds2.security.Algorithm;
						public static values(): androidNative.Array<com.stripe.android.stripe3ds2.security.Algorithm>;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module security {
					export class DefaultJweEncrypter extends com.stripe.android.stripe3ds2.security.JweEncrypter {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.security.DefaultJweEncrypter>;
						public constructor(param0: com.stripe.android.stripe3ds2.security.EphemeralKeyPairGenerator, param1: com.stripe.android.stripe3ds2.observability.ErrorReporter);
						public encrypt(param0: string, param1: java.security.PublicKey, param2: string, param3: string): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module security {
					export class DefaultMessageTransformer extends com.stripe.android.stripe3ds2.security.MessageTransformer {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.security.DefaultMessageTransformer>;
						public static Companion: com.stripe.android.stripe3ds2.security.DefaultMessageTransformer.Companion;
						public static FIELD_ACS_COUNTER_ACS_TO_SDK: string;
						public static FIELD_SDK_COUNTER_SDK_TO_ACS: string;
						public static BITS_IN_BYTE: number;
						public encrypt(param0: org.json.JSONObject, param1: javax.crypto.SecretKey): string;
						public createEncryptionHeader$3ds2sdk_release(param0: string): com.nimbusds.jose.JWEHeader;
						public constructor(param0: boolean, param1: number, param2: number);
						public validateAcsToSdkCounter$3ds2sdk_release(param0: org.json.JSONObject): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public decrypt(param0: string, param1: javax.crypto.SecretKey): org.json.JSONObject;
						public decryptMessage$3ds2sdk_release(param0: string, param1: javax.crypto.SecretKey): org.json.JSONObject;
						public toString(): string;
						public copy(param0: boolean, param1: number, param2: number): com.stripe.android.stripe3ds2.security.DefaultMessageTransformer;
						public getDecryptionKey$3ds2sdk_release(param0: javax.crypto.SecretKey, param1: com.nimbusds.jose.EncryptionMethod): androidNative.Array<number>;
						public getEncryptionKey$3ds2sdk_release(param0: javax.crypto.SecretKey, param1: com.nimbusds.jose.EncryptionMethod): androidNative.Array<number>;
						public constructor(param0: boolean);
					}
					export module DefaultMessageTransformer {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.security.DefaultMessageTransformer.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module security {
					export class DiffieHellmanKeyGenerator {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.security.DiffieHellmanKeyGenerator>;
						/**
						 * Constructs a new instance of the com.stripe.android.stripe3ds2.security.DiffieHellmanKeyGenerator interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							generate(param0: java.security.interfaces.ECPublicKey, param1: java.security.interfaces.ECPrivateKey, param2: string): javax.crypto.SecretKey;
						});
						public constructor();
						public generate(param0: java.security.interfaces.ECPublicKey, param1: java.security.interfaces.ECPrivateKey, param2: string): javax.crypto.SecretKey;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module security {
					export class DirectoryServer {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.security.DirectoryServer>;
						public static Companion: com.stripe.android.stripe3ds2.security.DirectoryServer.Companion;
						public static TestRsa: com.stripe.android.stripe3ds2.security.DirectoryServer;
						public static TestEc: com.stripe.android.stripe3ds2.security.DirectoryServer;
						public static Visa: com.stripe.android.stripe3ds2.security.DirectoryServer;
						public static Mastercard: com.stripe.android.stripe3ds2.security.DirectoryServer;
						public static Amex: com.stripe.android.stripe3ds2.security.DirectoryServer;
						public static Discover: com.stripe.android.stripe3ds2.security.DirectoryServer;
						public static CartesBancaires: com.stripe.android.stripe3ds2.security.DirectoryServer;
						public static valueOf(param0: string): com.stripe.android.stripe3ds2.security.DirectoryServer;
						public getAlgorithm(): com.stripe.android.stripe3ds2.security.Algorithm;
						public getFileName(): string;
						public getIds(): java.util.List<string>;
						public getKeyUse(): com.nimbusds.jose.jwk.KeyUse;
						public isCertificate(): boolean;
						public static values(): androidNative.Array<com.stripe.android.stripe3ds2.security.DirectoryServer>;
					}
					export module DirectoryServer {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.security.DirectoryServer.Companion>;
							public lookup(param0: string): com.stripe.android.stripe3ds2.security.DirectoryServer;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module security {
					export class EcKeyFactory {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.security.EcKeyFactory>;
						public constructor(param0: com.stripe.android.stripe3ds2.observability.ErrorReporter);
						public createPrivate(param0: androidNative.Array<number>): java.security.interfaces.ECPrivateKey;
						public createPublic(param0: androidNative.Array<number>): java.security.interfaces.ECPublicKey;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module security {
					export class EphemeralKeyPairGenerator {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.security.EphemeralKeyPairGenerator>;
						/**
						 * Constructs a new instance of the com.stripe.android.stripe3ds2.security.EphemeralKeyPairGenerator interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							generate(): java.security.KeyPair;
						});
						public constructor();
						public generate(): java.security.KeyPair;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module security {
					export class JweEcEncrypter {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.security.JweEcEncrypter>;
						public constructor(param0: com.stripe.android.stripe3ds2.security.EphemeralKeyPairGenerator, param1: com.stripe.android.stripe3ds2.observability.ErrorReporter);
						public encrypt(param0: string, param1: java.security.interfaces.ECPublicKey, param2: string): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module security {
					export class JweEncrypter {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.security.JweEncrypter>;
						/**
						 * Constructs a new instance of the com.stripe.android.stripe3ds2.security.JweEncrypter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							encrypt(param0: string, param1: java.security.PublicKey, param2: string, param3: string): string;
						});
						public constructor();
						public encrypt(param0: string, param1: java.security.PublicKey, param2: string, param3: string): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module security {
					export class JweRsaEncrypter {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.security.JweRsaEncrypter>;
						public createJweObject(param0: string, param1: string): com.nimbusds.jose.JWEObject;
						public constructor();
						public encrypt(param0: string, param1: java.security.interfaces.RSAPublicKey, param2: string): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module security {
					export class MessageTransformer {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.security.MessageTransformer>;
						/**
						 * Constructs a new instance of the com.stripe.android.stripe3ds2.security.MessageTransformer interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							encrypt(param0: org.json.JSONObject, param1: javax.crypto.SecretKey): string;
							decrypt(param0: string, param1: javax.crypto.SecretKey): org.json.JSONObject;
						});
						public constructor();
						public encrypt(param0: org.json.JSONObject, param1: javax.crypto.SecretKey): string;
						public decrypt(param0: string, param1: javax.crypto.SecretKey): org.json.JSONObject;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module security {
					export class MessageTransformerFactory {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.security.MessageTransformerFactory>;
						public constructor(param0: boolean);
						public create(): com.stripe.android.stripe3ds2.security.MessageTransformer;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module security {
					export class PublicKeyFactory {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.security.PublicKeyFactory>;
						public constructor(param0: globalAndroid.content.Context, param1: com.stripe.android.stripe3ds2.observability.ErrorReporter);
						public create(param0: string): java.security.PublicKey;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module security {
					export class StripeDiffieHellmanKeyGenerator extends com.stripe.android.stripe3ds2.security.DiffieHellmanKeyGenerator {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.security.StripeDiffieHellmanKeyGenerator>;
						public generate(param0: java.security.interfaces.ECPublicKey, param1: java.security.interfaces.ECPrivateKey, param2: string): javax.crypto.SecretKey;
						public constructor(param0: com.stripe.android.stripe3ds2.observability.ErrorReporter);
					}
					export module StripeDiffieHellmanKeyGenerator {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.security.StripeDiffieHellmanKeyGenerator.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module security {
					export class StripeEphemeralKeyPairGenerator extends com.stripe.android.stripe3ds2.security.EphemeralKeyPairGenerator {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.security.StripeEphemeralKeyPairGenerator>;
						public constructor(param0: com.stripe.android.stripe3ds2.observability.ErrorReporter);
						public generate(): java.security.KeyPair;
					}
					export module StripeEphemeralKeyPairGenerator {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.security.StripeEphemeralKeyPairGenerator.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module security {
					export class TransactionEncrypter {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.security.TransactionEncrypter>;
						public constructor(param0: androidNative.Array<number>, param1: number);
						public encrypt(param0: com.nimbusds.jose.JWEHeader, param1: androidNative.Array<number>): com.nimbusds.jose.JWECryptoParts;
					}
					export module TransactionEncrypter {
						export class Crypto {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.security.TransactionEncrypter.Crypto>;
							public static INSTANCE: com.stripe.android.stripe3ds2.security.TransactionEncrypter.Crypto;
							public getGcmIvStoA(param0: number, param1: number): androidNative.Array<number>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module service {
					export class StripeThreeDs2Service {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.service.StripeThreeDs2Service>;
						/**
						 * Constructs a new instance of the com.stripe.android.stripe3ds2.service.StripeThreeDs2Service interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							createTransaction(param0: com.stripe.android.stripe3ds2.transaction.SdkTransactionId, param1: string, param2: string, param3: boolean, param4: string, param5: java.util.List<any>, param6: java.security.PublicKey, param7: string, param8: com.stripe.android.stripe3ds2.init.ui.StripeUiCustomization): com.stripe.android.stripe3ds2.transaction.Transaction;
							cleanup(): void;
						});
						public constructor();
						public createTransaction(param0: com.stripe.android.stripe3ds2.transaction.SdkTransactionId, param1: string, param2: string, param3: boolean, param4: string, param5: java.util.List<any>, param6: java.security.PublicKey, param7: string, param8: com.stripe.android.stripe3ds2.init.ui.StripeUiCustomization): com.stripe.android.stripe3ds2.transaction.Transaction;
						public cleanup(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module service {
					export class StripeThreeDs2ServiceImpl extends com.stripe.android.stripe3ds2.service.StripeThreeDs2Service {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.service.StripeThreeDs2ServiceImpl>;
						public constructor(param0: com.stripe.android.stripe3ds2.transaction.MessageVersionRegistry, param1: com.stripe.android.stripe3ds2.utils.ImageCache, param2: com.stripe.android.stripe3ds2.observability.ErrorReporter, param3: com.stripe.android.stripe3ds2.transaction.TransactionFactory);
						public constructor(param0: globalAndroid.content.Context, param1: string, param2: boolean, param3: kotlin.coroutines.CoroutineContext);
						public createTransaction(param0: com.stripe.android.stripe3ds2.transaction.SdkTransactionId, param1: string, param2: string, param3: boolean, param4: string, param5: java.util.List<any>, param6: java.security.PublicKey, param7: string, param8: com.stripe.android.stripe3ds2.init.ui.StripeUiCustomization): com.stripe.android.stripe3ds2.transaction.Transaction;
						public constructor(param0: globalAndroid.content.Context, param1: kotlin.coroutines.CoroutineContext);
						public cleanup(): void;
						public constructor(param0: globalAndroid.content.Context, param1: boolean, param2: kotlin.coroutines.CoroutineContext);
					}
					export module StripeThreeDs2ServiceImpl {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.service.StripeThreeDs2ServiceImpl.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module service {
					export class ThreeDS2Service {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.service.ThreeDS2Service>;
						/**
						 * Constructs a new instance of the com.stripe.android.stripe3ds2.service.ThreeDS2Service interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getSdkVersion(): string;
							getWarnings(): java.util.List<com.stripe.android.stripe3ds2.init.Warning>;
							createTransaction(param0: string, param1: string): com.stripe.android.stripe3ds2.transaction.Transaction;
						});
						public constructor();
						public getSdkVersion(): string;
						public createTransaction(param0: string, param1: string): com.stripe.android.stripe3ds2.transaction.Transaction;
						public getWarnings(): java.util.List<com.stripe.android.stripe3ds2.init.Warning>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transaction {
					export class AcsData {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.AcsData>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.AcsData>;
						public getSdkEphemPubKey(): java.security.interfaces.ECPublicKey;
						public describeContents(): number;
						public getAcsUrl(): string;
						public constructor(param0: string, param1: java.security.interfaces.ECPublicKey, param2: java.security.interfaces.ECPublicKey);
						public component3(): java.security.interfaces.ECPublicKey;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public copy(param0: string, param1: java.security.interfaces.ECPublicKey, param2: java.security.interfaces.ECPublicKey): com.stripe.android.stripe3ds2.transaction.AcsData;
						public toString(): string;
						public getAcsEphemPubKey(): java.security.interfaces.ECPublicKey;
						public component2(): java.security.interfaces.ECPublicKey;
					}
					export module AcsData {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.AcsData> {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.AcsData.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.stripe3ds2.transaction.AcsData>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.stripe3ds2.transaction.AcsData;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transaction {
					export class AcsDataParser {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.AcsDataParser>;
						/**
						 * Constructs a new instance of the com.stripe.android.stripe3ds2.transaction.AcsDataParser interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							parse(param0: org.json.JSONObject): com.stripe.android.stripe3ds2.transaction.AcsData;
						});
						public constructor();
						public parse(param0: org.json.JSONObject): com.stripe.android.stripe3ds2.transaction.AcsData;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transaction {
					export class AuthenticationRequestParameters {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.AuthenticationRequestParameters>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.AuthenticationRequestParameters>;
						public component3(): string;
						public describeContents(): number;
						public component5(): string;
						public getSdkEphemeralPublicKey(): string;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public constructor(param0: string, param1: com.stripe.android.stripe3ds2.transaction.SdkTransactionId, param2: string, param3: string, param4: string, param5: string);
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public component2(): com.stripe.android.stripe3ds2.transaction.SdkTransactionId;
						public getSdkTransactionId(): com.stripe.android.stripe3ds2.transaction.SdkTransactionId;
						public toString(): string;
						public getMessageVersion(): string;
						public component4(): string;
						public copy(param0: string, param1: com.stripe.android.stripe3ds2.transaction.SdkTransactionId, param2: string, param3: string, param4: string, param5: string): com.stripe.android.stripe3ds2.transaction.AuthenticationRequestParameters;
						public getSdkAppId(): string;
						public getDeviceData(): string;
						public component6(): string;
						public getSdkReferenceNumber(): string;
					}
					export module AuthenticationRequestParameters {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.AuthenticationRequestParameters> {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.AuthenticationRequestParameters.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.stripe3ds2.transaction.AuthenticationRequestParameters;
							public newArray(param0: number): androidNative.Array<com.stripe.android.stripe3ds2.transaction.AuthenticationRequestParameters>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transaction {
					export class AuthenticationRequestParametersFactory {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.AuthenticationRequestParametersFactory>;
						/**
						 * Constructs a new instance of the com.stripe.android.stripe3ds2.transaction.AuthenticationRequestParametersFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							create(param0: string, param1: java.security.PublicKey, param2: string, param3: com.stripe.android.stripe3ds2.transaction.SdkTransactionId, param4: java.security.PublicKey, param5: kotlin.coroutines.Continuation<any>): any;
						});
						public constructor();
						public create(param0: string, param1: java.security.PublicKey, param2: string, param3: com.stripe.android.stripe3ds2.transaction.SdkTransactionId, param4: java.security.PublicKey, param5: kotlin.coroutines.Continuation<any>): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transaction {
					export abstract class ChallengeAction {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeAction>;
					}
					export module ChallengeAction {
						export class Cancel extends com.stripe.android.stripe3ds2.transaction.ChallengeAction {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeAction.Cancel>;
							public static INSTANCE: com.stripe.android.stripe3ds2.transaction.ChallengeAction.Cancel;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.ChallengeAction.Cancel>;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public describeContents(): number;
						}
						export module Cancel {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.ChallengeAction.Cancel> {
								public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeAction.Cancel.Creator>;
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.stripe3ds2.transaction.ChallengeAction.Cancel;
								public newArray(param0: number): androidNative.Array<com.stripe.android.stripe3ds2.transaction.ChallengeAction.Cancel>;
								public constructor();
							}
						}
						export class HtmlForm extends com.stripe.android.stripe3ds2.transaction.ChallengeAction {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeAction.HtmlForm>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.ChallengeAction.HtmlForm>;
							public copy(param0: string): com.stripe.android.stripe3ds2.transaction.ChallengeAction.HtmlForm;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public getUserEntry$3ds2sdk_release(): string;
							public hashCode(): number;
							public constructor(param0: string);
							public describeContents(): number;
							public toString(): string;
							public component1$3ds2sdk_release(): string;
							public equals(param0: any): boolean;
						}
						export module HtmlForm {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.ChallengeAction.HtmlForm> {
								public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeAction.HtmlForm.Creator>;
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.stripe3ds2.transaction.ChallengeAction.HtmlForm;
								public constructor();
								public newArray(param0: number): androidNative.Array<com.stripe.android.stripe3ds2.transaction.ChallengeAction.HtmlForm>;
							}
						}
						export class NativeForm extends com.stripe.android.stripe3ds2.transaction.ChallengeAction {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeAction.NativeForm>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.ChallengeAction.NativeForm>;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public getUserEntry$3ds2sdk_release(): string;
							public hashCode(): number;
							public constructor(param0: string);
							public describeContents(): number;
							public copy(param0: string): com.stripe.android.stripe3ds2.transaction.ChallengeAction.NativeForm;
							public toString(): string;
							public component1$3ds2sdk_release(): string;
							public equals(param0: any): boolean;
						}
						export module NativeForm {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.ChallengeAction.NativeForm> {
								public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeAction.NativeForm.Creator>;
								public newArray(param0: number): androidNative.Array<com.stripe.android.stripe3ds2.transaction.ChallengeAction.NativeForm>;
								public constructor();
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.stripe3ds2.transaction.ChallengeAction.NativeForm;
							}
						}
						export class Oob extends com.stripe.android.stripe3ds2.transaction.ChallengeAction {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeAction.Oob>;
							public static INSTANCE: com.stripe.android.stripe3ds2.transaction.ChallengeAction.Oob;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.ChallengeAction.Oob>;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public describeContents(): number;
						}
						export module Oob {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.ChallengeAction.Oob> {
								public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeAction.Oob.Creator>;
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.stripe3ds2.transaction.ChallengeAction.Oob;
								public constructor();
								public newArray(param0: number): androidNative.Array<com.stripe.android.stripe3ds2.transaction.ChallengeAction.Oob>;
							}
						}
						export class Resend extends com.stripe.android.stripe3ds2.transaction.ChallengeAction {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeAction.Resend>;
							public static INSTANCE: com.stripe.android.stripe3ds2.transaction.ChallengeAction.Resend;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.ChallengeAction.Resend>;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public describeContents(): number;
						}
						export module Resend {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.ChallengeAction.Resend> {
								public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeAction.Resend.Creator>;
								public constructor();
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.stripe3ds2.transaction.ChallengeAction.Resend;
								public newArray(param0: number): androidNative.Array<com.stripe.android.stripe3ds2.transaction.ChallengeAction.Resend>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transaction {
					export class ChallengeActionHandler {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeActionHandler>;
						/**
						 * Constructs a new instance of the com.stripe.android.stripe3ds2.transaction.ChallengeActionHandler interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							submit(param0: com.stripe.android.stripe3ds2.transaction.ChallengeAction, param1: kotlin.coroutines.Continuation<any>): any;
						});
						public constructor();
						public submit(param0: com.stripe.android.stripe3ds2.transaction.ChallengeAction, param1: kotlin.coroutines.Continuation<any>): any;
					}
					export module ChallengeActionHandler {
						export class Default extends com.stripe.android.stripe3ds2.transaction.ChallengeActionHandler {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeActionHandler.Default>;
							public static Companion: com.stripe.android.stripe3ds2.transaction.ChallengeActionHandler.Default.Companion;
							public constructor(param0: com.stripe.android.stripe3ds2.transactions.ChallengeRequestData, param1: com.stripe.android.stripe3ds2.observability.ErrorReporter, param2: com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor.Factory, param3: kotlin.coroutines.CoroutineContext);
							public submit(param0: com.stripe.android.stripe3ds2.transaction.ChallengeAction, param1: kotlin.coroutines.Continuation<any>): any;
							public constructor(param0: com.stripe.android.stripe3ds2.transactions.ChallengeRequestData, param1: com.stripe.android.stripe3ds2.observability.ErrorReporter, param2: com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor, param3: kotlin.coroutines.CoroutineContext);
						}
						export module Default {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeActionHandler.Default.Companion>;
								public getCREQ_DELAY$3ds2sdk_release(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transaction {
					export class ChallengeContract extends androidx.activity.result.contract.ActivityResultContract<com.stripe.android.stripe3ds2.views.ChallengeViewArgs, com.stripe.android.stripe3ds2.transaction.ChallengeResult> {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeContract>;
						public constructor();
						public parseResult(param0: number, param1: globalAndroid.content.Intent): com.stripe.android.stripe3ds2.transaction.ChallengeResult;
						public createIntent(param0: globalAndroid.content.Context, param1: com.stripe.android.stripe3ds2.views.ChallengeViewArgs): globalAndroid.content.Intent;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transaction {
					export class ChallengeParameters {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeParameters>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.ChallengeParameters>;
						public setAcsRefNumber(param0: string): void;
						public component3(): string;
						public describeContents(): number;
						public constructor();
						public getAcsTransactionId(): string;
						public getThreeDsServerTransactionId(): string;
						public setAcsTransactionId(param0: string): void;
						public getAcsRefNumber(): string;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getAcsSignedContent(): string;
						public setAcsSignedContent(param0: string): void;
						public copy(param0: string, param1: string, param2: string, param3: string): com.stripe.android.stripe3ds2.transaction.ChallengeParameters;
						public toString(): string;
						public constructor(param0: string, param1: string, param2: string, param3: string);
						public component4(): string;
						public setThreeDsServerTransactionId(param0: string): void;
						public component2(): string;
					}
					export module ChallengeParameters {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.ChallengeParameters> {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeParameters.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.stripe3ds2.transaction.ChallengeParameters>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.stripe3ds2.transaction.ChallengeParameters;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transaction {
					export class ChallengeRequestExecutor {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor>;
						/**
						 * Constructs a new instance of the com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							execute(param0: com.stripe.android.stripe3ds2.transactions.ChallengeRequestData, param1: kotlin.coroutines.Continuation<any>): any;
						});
						public constructor();
						public execute(param0: com.stripe.android.stripe3ds2.transactions.ChallengeRequestData, param1: kotlin.coroutines.Continuation<any>): any;
					}
					export module ChallengeRequestExecutor {
						export class Config {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor.Config>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor.Config>;
							public getAcsUrl$3ds2sdk_release(): string;
							public getCreqData$3ds2sdk_release(): com.stripe.android.stripe3ds2.transactions.ChallengeRequestData;
							public hashCode(): number;
							public getSdkReferenceId$3ds2sdk_release(): string;
							public copy(param0: com.stripe.android.stripe3ds2.security.MessageTransformer, param1: string, param2: com.stripe.android.stripe3ds2.transactions.ChallengeRequestData, param3: string, param4: com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor.Config.Keys): com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor.Config;
							public toString(): string;
							public constructor(param0: com.stripe.android.stripe3ds2.security.MessageTransformer, param1: string, param2: com.stripe.android.stripe3ds2.transactions.ChallengeRequestData, param3: string, param4: com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor.Config.Keys);
							public component2$3ds2sdk_release(): string;
							public component4$3ds2sdk_release(): string;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public component5$3ds2sdk_release(): com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor.Config.Keys;
							public describeContents(): number;
							public getKeys$3ds2sdk_release(): com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor.Config.Keys;
							public component1$3ds2sdk_release(): com.stripe.android.stripe3ds2.security.MessageTransformer;
							public getMessageTransformer$3ds2sdk_release(): com.stripe.android.stripe3ds2.security.MessageTransformer;
							public equals(param0: any): boolean;
							public component3$3ds2sdk_release(): com.stripe.android.stripe3ds2.transactions.ChallengeRequestData;
						}
						export module Config {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor.Config> {
								public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor.Config.Creator>;
								public newArray(param0: number): androidNative.Array<com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor.Config>;
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor.Config;
								public constructor();
							}
							export class Keys {
								public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor.Config.Keys>;
								public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor.Config.Keys>;
								public toString(): string;
								public component1$3ds2sdk_release(): androidNative.Array<number>;
								public describeContents(): number;
								public copy(param0: androidNative.Array<number>, param1: androidNative.Array<number>): com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor.Config.Keys;
								public equals(param0: any): boolean;
								public constructor(param0: androidNative.Array<number>, param1: androidNative.Array<number>);
								public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
								public getSdkPrivateKeyEncoded$3ds2sdk_release(): androidNative.Array<number>;
								public getAcsPublicKeyEncoded$3ds2sdk_release(): androidNative.Array<number>;
								public hashCode(): number;
								public component2$3ds2sdk_release(): androidNative.Array<number>;
							}
							export module Keys {
								export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor.Config.Keys> {
									public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor.Config.Keys.Creator>;
									public constructor();
									public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor.Config.Keys;
									public newArray(param0: number): androidNative.Array<com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor.Config.Keys>;
								}
							}
						}
						export class Factory {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor.Factory>;
							/**
							 * Constructs a new instance of the com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor$Factory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								create(param0: com.stripe.android.stripe3ds2.observability.ErrorReporter, param1: kotlin.coroutines.CoroutineContext): com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor;
							});
							public constructor();
							public create(param0: com.stripe.android.stripe3ds2.observability.ErrorReporter, param1: kotlin.coroutines.CoroutineContext): com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transaction {
					export abstract class ChallengeRequestResult {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeRequestResult>;
					}
					export module ChallengeRequestResult {
						export abstract class Failure extends com.stripe.android.stripe3ds2.transaction.ChallengeRequestResult {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeRequestResult.Failure>;
						}
						export class ProtocolError extends com.stripe.android.stripe3ds2.transaction.ChallengeRequestResult.Failure {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeRequestResult.ProtocolError>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.ChallengeRequestResult.ProtocolError>;
							public getData(): com.stripe.android.stripe3ds2.transactions.ErrorData;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public hashCode(): number;
							public describeContents(): number;
							public constructor(param0: com.stripe.android.stripe3ds2.transactions.ErrorData);
							public toString(): string;
							public equals(param0: any): boolean;
							public copy(param0: com.stripe.android.stripe3ds2.transactions.ErrorData): com.stripe.android.stripe3ds2.transaction.ChallengeRequestResult.ProtocolError;
							public component1(): com.stripe.android.stripe3ds2.transactions.ErrorData;
						}
						export module ProtocolError {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.ChallengeRequestResult.ProtocolError> {
								public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeRequestResult.ProtocolError.Creator>;
								public newArray(param0: number): androidNative.Array<com.stripe.android.stripe3ds2.transaction.ChallengeRequestResult.ProtocolError>;
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.stripe3ds2.transaction.ChallengeRequestResult.ProtocolError;
								public constructor();
							}
						}
						export class RuntimeError extends com.stripe.android.stripe3ds2.transaction.ChallengeRequestResult.Failure {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeRequestResult.RuntimeError>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.ChallengeRequestResult.RuntimeError>;
							public copy(param0: java.lang.Throwable): com.stripe.android.stripe3ds2.transaction.ChallengeRequestResult.RuntimeError;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public hashCode(): number;
							public constructor(param0: java.lang.Throwable);
							public describeContents(): number;
							public toString(): string;
							public getThrowable(): java.lang.Throwable;
							public equals(param0: any): boolean;
							public component1(): java.lang.Throwable;
						}
						export module RuntimeError {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.ChallengeRequestResult.RuntimeError> {
								public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeRequestResult.RuntimeError.Creator>;
								public newArray(param0: number): androidNative.Array<com.stripe.android.stripe3ds2.transaction.ChallengeRequestResult.RuntimeError>;
								public constructor();
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.stripe3ds2.transaction.ChallengeRequestResult.RuntimeError;
							}
						}
						export class Success extends com.stripe.android.stripe3ds2.transaction.ChallengeRequestResult {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeRequestResult.Success>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.ChallengeRequestResult.Success>;
							public copy(param0: com.stripe.android.stripe3ds2.transactions.ChallengeRequestData, param1: com.stripe.android.stripe3ds2.transactions.ChallengeResponseData, param2: com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor.Config): com.stripe.android.stripe3ds2.transaction.ChallengeRequestResult.Success;
							public hashCode(): number;
							public constructor(param0: com.stripe.android.stripe3ds2.transactions.ChallengeRequestData, param1: com.stripe.android.stripe3ds2.transactions.ChallengeResponseData, param2: com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor.Config);
							public component3$3ds2sdk_release(): com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor.Config;
							public toString(): string;
							public getCresData(): com.stripe.android.stripe3ds2.transactions.ChallengeResponseData;
							public getCreqExecutorConfig$3ds2sdk_release(): com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor.Config;
							public component1(): com.stripe.android.stripe3ds2.transactions.ChallengeRequestData;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public describeContents(): number;
							public getCreqData(): com.stripe.android.stripe3ds2.transactions.ChallengeRequestData;
							public equals(param0: any): boolean;
							public component2(): com.stripe.android.stripe3ds2.transactions.ChallengeResponseData;
						}
						export module Success {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.ChallengeRequestResult.Success> {
								public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeRequestResult.Success.Creator>;
								public newArray(param0: number): androidNative.Array<com.stripe.android.stripe3ds2.transaction.ChallengeRequestResult.Success>;
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.stripe3ds2.transaction.ChallengeRequestResult.Success;
								public constructor();
							}
						}
						export class Timeout extends com.stripe.android.stripe3ds2.transaction.ChallengeRequestResult.Failure {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeRequestResult.Timeout>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.ChallengeRequestResult.Timeout>;
							public getData(): com.stripe.android.stripe3ds2.transactions.ErrorData;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public hashCode(): number;
							public copy(param0: com.stripe.android.stripe3ds2.transactions.ErrorData): com.stripe.android.stripe3ds2.transaction.ChallengeRequestResult.Timeout;
							public describeContents(): number;
							public constructor(param0: com.stripe.android.stripe3ds2.transactions.ErrorData);
							public toString(): string;
							public equals(param0: any): boolean;
							public component1(): com.stripe.android.stripe3ds2.transactions.ErrorData;
						}
						export module Timeout {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.ChallengeRequestResult.Timeout> {
								public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeRequestResult.Timeout.Creator>;
								public newArray(param0: number): androidNative.Array<com.stripe.android.stripe3ds2.transaction.ChallengeRequestResult.Timeout>;
								public constructor();
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.stripe3ds2.transaction.ChallengeRequestResult.Timeout;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transaction {
					export class ChallengeRequestResultRepository {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeRequestResultRepository>;
						/**
						 * Constructs a new instance of the com.stripe.android.stripe3ds2.transaction.ChallengeRequestResultRepository interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							get(param0: com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor.Config, param1: com.stripe.android.stripe3ds2.transactions.ChallengeRequestData, param2: kotlin.coroutines.Continuation<any>): any;
						});
						public constructor();
						public get(param0: com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor.Config, param1: com.stripe.android.stripe3ds2.transactions.ChallengeRequestData, param2: kotlin.coroutines.Continuation<any>): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transaction {
					export class ChallengeResponseProcessor {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeResponseProcessor>;
						/**
						 * Constructs a new instance of the com.stripe.android.stripe3ds2.transaction.ChallengeResponseProcessor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							process(param0: com.stripe.android.stripe3ds2.transactions.ChallengeRequestData, param1: com.stripe.android.stripe3ds2.transaction.HttpResponse, param2: kotlin.coroutines.Continuation<any>): any;
						});
						public constructor();
						public process(param0: com.stripe.android.stripe3ds2.transactions.ChallengeRequestData, param1: com.stripe.android.stripe3ds2.transaction.HttpResponse, param2: kotlin.coroutines.Continuation<any>): any;
					}
					export module ChallengeResponseProcessor {
						export class Default extends com.stripe.android.stripe3ds2.transaction.ChallengeResponseProcessor {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeResponseProcessor.Default>;
							public processPayload(param0: com.stripe.android.stripe3ds2.transactions.ChallengeRequestData, param1: org.json.JSONObject): com.stripe.android.stripe3ds2.transaction.ChallengeRequestResult;
							public constructor(param0: com.stripe.android.stripe3ds2.security.MessageTransformer, param1: javax.crypto.SecretKey, param2: com.stripe.android.stripe3ds2.observability.ErrorReporter, param3: com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor.Config);
							public process(param0: com.stripe.android.stripe3ds2.transactions.ChallengeRequestData, param1: com.stripe.android.stripe3ds2.transaction.HttpResponse, param2: kotlin.coroutines.Continuation<any>): any;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transaction {
					export class ChallengeResponseProcessorFactory {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeResponseProcessorFactory>;
						/**
						 * Constructs a new instance of the com.stripe.android.stripe3ds2.transaction.ChallengeResponseProcessorFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							create(param0: javax.crypto.SecretKey): com.stripe.android.stripe3ds2.transaction.ChallengeResponseProcessor;
						});
						public constructor();
						public create(param0: javax.crypto.SecretKey): com.stripe.android.stripe3ds2.transaction.ChallengeResponseProcessor;
					}
					export module ChallengeResponseProcessorFactory {
						export class Default extends com.stripe.android.stripe3ds2.transaction.ChallengeResponseProcessorFactory {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeResponseProcessorFactory.Default>;
							public constructor(param0: com.stripe.android.stripe3ds2.security.MessageTransformer, param1: com.stripe.android.stripe3ds2.observability.ErrorReporter, param2: com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor.Config);
							public create(param0: javax.crypto.SecretKey): com.stripe.android.stripe3ds2.transaction.ChallengeResponseProcessor.Default;
							public create(param0: javax.crypto.SecretKey): com.stripe.android.stripe3ds2.transaction.ChallengeResponseProcessor;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transaction {
					export abstract class ChallengeResult {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeResult>;
						public static Companion: com.stripe.android.stripe3ds2.transaction.ChallengeResult.Companion;
						public getInitialUiType(): com.stripe.android.stripe3ds2.transactions.UiType;
						public toBundle$3ds2sdk_release(): globalAndroid.os.Bundle;
						public getIntentData(): com.stripe.android.stripe3ds2.transaction.IntentData;
					}
					export module ChallengeResult {
						export class Canceled extends com.stripe.android.stripe3ds2.transaction.ChallengeResult {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeResult.Canceled>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.ChallengeResult.Canceled>;
							public hashCode(): number;
							public constructor(param0: string, param1: com.stripe.android.stripe3ds2.transactions.UiType, param2: com.stripe.android.stripe3ds2.transaction.IntentData);
							public toString(): string;
							public getUiTypeCode(): string;
							public getIntentData(): com.stripe.android.stripe3ds2.transaction.IntentData;
							public component1(): string;
							public getInitialUiType(): com.stripe.android.stripe3ds2.transactions.UiType;
							public component2(): com.stripe.android.stripe3ds2.transactions.UiType;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public describeContents(): number;
							public component3(): com.stripe.android.stripe3ds2.transaction.IntentData;
							public equals(param0: any): boolean;
							public copy(param0: string, param1: com.stripe.android.stripe3ds2.transactions.UiType, param2: com.stripe.android.stripe3ds2.transaction.IntentData): com.stripe.android.stripe3ds2.transaction.ChallengeResult.Canceled;
						}
						export module Canceled {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.ChallengeResult.Canceled> {
								public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeResult.Canceled.Creator>;
								public newArray(param0: number): androidNative.Array<com.stripe.android.stripe3ds2.transaction.ChallengeResult.Canceled>;
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.stripe3ds2.transaction.ChallengeResult.Canceled;
								public constructor();
							}
						}
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeResult.Companion>;
							public fromIntent(param0: globalAndroid.content.Intent): com.stripe.android.stripe3ds2.transaction.ChallengeResult;
						}
						export class Failed extends com.stripe.android.stripe3ds2.transaction.ChallengeResult {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeResult.Failed>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.ChallengeResult.Failed>;
							public hashCode(): number;
							public constructor(param0: string, param1: com.stripe.android.stripe3ds2.transactions.UiType, param2: com.stripe.android.stripe3ds2.transaction.IntentData);
							public toString(): string;
							public getUiTypeCode(): string;
							public getIntentData(): com.stripe.android.stripe3ds2.transaction.IntentData;
							public component1(): string;
							public getInitialUiType(): com.stripe.android.stripe3ds2.transactions.UiType;
							public component2(): com.stripe.android.stripe3ds2.transactions.UiType;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public describeContents(): number;
							public component3(): com.stripe.android.stripe3ds2.transaction.IntentData;
							public copy(param0: string, param1: com.stripe.android.stripe3ds2.transactions.UiType, param2: com.stripe.android.stripe3ds2.transaction.IntentData): com.stripe.android.stripe3ds2.transaction.ChallengeResult.Failed;
							public equals(param0: any): boolean;
						}
						export module Failed {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.ChallengeResult.Failed> {
								public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeResult.Failed.Creator>;
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.stripe3ds2.transaction.ChallengeResult.Failed;
								public newArray(param0: number): androidNative.Array<com.stripe.android.stripe3ds2.transaction.ChallengeResult.Failed>;
								public constructor();
							}
						}
						export class ProtocolError extends com.stripe.android.stripe3ds2.transaction.ChallengeResult {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeResult.ProtocolError>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.ChallengeResult.ProtocolError>;
							public getData(): com.stripe.android.stripe3ds2.transactions.ErrorData;
							public hashCode(): number;
							public toString(): string;
							public getIntentData(): com.stripe.android.stripe3ds2.transaction.IntentData;
							public component1(): com.stripe.android.stripe3ds2.transactions.ErrorData;
							public getInitialUiType(): com.stripe.android.stripe3ds2.transactions.UiType;
							public component2(): com.stripe.android.stripe3ds2.transactions.UiType;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public copy(param0: com.stripe.android.stripe3ds2.transactions.ErrorData, param1: com.stripe.android.stripe3ds2.transactions.UiType, param2: com.stripe.android.stripe3ds2.transaction.IntentData): com.stripe.android.stripe3ds2.transaction.ChallengeResult.ProtocolError;
							public describeContents(): number;
							public component3(): com.stripe.android.stripe3ds2.transaction.IntentData;
							public equals(param0: any): boolean;
							public constructor(param0: com.stripe.android.stripe3ds2.transactions.ErrorData, param1: com.stripe.android.stripe3ds2.transactions.UiType, param2: com.stripe.android.stripe3ds2.transaction.IntentData);
						}
						export module ProtocolError {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.ChallengeResult.ProtocolError> {
								public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeResult.ProtocolError.Creator>;
								public newArray(param0: number): androidNative.Array<com.stripe.android.stripe3ds2.transaction.ChallengeResult.ProtocolError>;
								public constructor();
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.stripe3ds2.transaction.ChallengeResult.ProtocolError;
							}
						}
						export class RuntimeError extends com.stripe.android.stripe3ds2.transaction.ChallengeResult {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeResult.RuntimeError>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.ChallengeResult.RuntimeError>;
							public hashCode(): number;
							public copy(param0: java.lang.Throwable, param1: com.stripe.android.stripe3ds2.transactions.UiType, param2: com.stripe.android.stripe3ds2.transaction.IntentData): com.stripe.android.stripe3ds2.transaction.ChallengeResult.RuntimeError;
							public toString(): string;
							public getIntentData(): com.stripe.android.stripe3ds2.transaction.IntentData;
							public constructor(param0: java.lang.Throwable, param1: com.stripe.android.stripe3ds2.transactions.UiType, param2: com.stripe.android.stripe3ds2.transaction.IntentData);
							public getInitialUiType(): com.stripe.android.stripe3ds2.transactions.UiType;
							public component2(): com.stripe.android.stripe3ds2.transactions.UiType;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public describeContents(): number;
							public component3(): com.stripe.android.stripe3ds2.transaction.IntentData;
							public getThrowable(): java.lang.Throwable;
							public equals(param0: any): boolean;
							public component1(): java.lang.Throwable;
						}
						export module RuntimeError {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.ChallengeResult.RuntimeError> {
								public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeResult.RuntimeError.Creator>;
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.stripe3ds2.transaction.ChallengeResult.RuntimeError;
								public newArray(param0: number): androidNative.Array<com.stripe.android.stripe3ds2.transaction.ChallengeResult.RuntimeError>;
								public constructor();
							}
						}
						export class Succeeded extends com.stripe.android.stripe3ds2.transaction.ChallengeResult {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeResult.Succeeded>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.ChallengeResult.Succeeded>;
							public hashCode(): number;
							public copy(param0: string, param1: com.stripe.android.stripe3ds2.transactions.UiType, param2: com.stripe.android.stripe3ds2.transaction.IntentData): com.stripe.android.stripe3ds2.transaction.ChallengeResult.Succeeded;
							public constructor(param0: string, param1: com.stripe.android.stripe3ds2.transactions.UiType, param2: com.stripe.android.stripe3ds2.transaction.IntentData);
							public toString(): string;
							public getUiTypeCode(): string;
							public getIntentData(): com.stripe.android.stripe3ds2.transaction.IntentData;
							public component1(): string;
							public getInitialUiType(): com.stripe.android.stripe3ds2.transactions.UiType;
							public component2(): com.stripe.android.stripe3ds2.transactions.UiType;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public describeContents(): number;
							public component3(): com.stripe.android.stripe3ds2.transaction.IntentData;
							public equals(param0: any): boolean;
						}
						export module Succeeded {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.ChallengeResult.Succeeded> {
								public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeResult.Succeeded.Creator>;
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.stripe3ds2.transaction.ChallengeResult.Succeeded;
								public constructor();
								public newArray(param0: number): androidNative.Array<com.stripe.android.stripe3ds2.transaction.ChallengeResult.Succeeded>;
							}
						}
						export class Timeout extends com.stripe.android.stripe3ds2.transaction.ChallengeResult {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeResult.Timeout>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.ChallengeResult.Timeout>;
							public hashCode(): number;
							public constructor(param0: string, param1: com.stripe.android.stripe3ds2.transactions.UiType, param2: com.stripe.android.stripe3ds2.transaction.IntentData);
							public copy(param0: string, param1: com.stripe.android.stripe3ds2.transactions.UiType, param2: com.stripe.android.stripe3ds2.transaction.IntentData): com.stripe.android.stripe3ds2.transaction.ChallengeResult.Timeout;
							public toString(): string;
							public getUiTypeCode(): string;
							public getIntentData(): com.stripe.android.stripe3ds2.transaction.IntentData;
							public component1(): string;
							public getInitialUiType(): com.stripe.android.stripe3ds2.transactions.UiType;
							public component2(): com.stripe.android.stripe3ds2.transactions.UiType;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public describeContents(): number;
							public component3(): com.stripe.android.stripe3ds2.transaction.IntentData;
							public equals(param0: any): boolean;
						}
						export module Timeout {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.ChallengeResult.Timeout> {
								public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ChallengeResult.Timeout.Creator>;
								public newArray(param0: number): androidNative.Array<com.stripe.android.stripe3ds2.transaction.ChallengeResult.Timeout>;
								public constructor();
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.stripe3ds2.transaction.ChallengeResult.Timeout;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transaction {
					export class DefaultAcsDataParser extends com.stripe.android.stripe3ds2.transaction.AcsDataParser {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.DefaultAcsDataParser>;
						public static Companion: com.stripe.android.stripe3ds2.transaction.DefaultAcsDataParser.Companion;
						public static FIELD_ACS_URL: string;
						public static FIELD_ACS_EPHEM_PUB_KEY: string;
						public static FIELD_SDK_EPHEM_PUB_KEY: string;
						public parse(param0: org.json.JSONObject): com.stripe.android.stripe3ds2.transaction.AcsData;
						public constructor(param0: com.stripe.android.stripe3ds2.observability.ErrorReporter);
					}
					export module DefaultAcsDataParser {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.DefaultAcsDataParser.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transaction {
					export class DefaultAuthenticationRequestParametersFactory extends com.stripe.android.stripe3ds2.transaction.AuthenticationRequestParametersFactory {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.DefaultAuthenticationRequestParametersFactory>;
						public static Companion: com.stripe.android.stripe3ds2.transaction.DefaultAuthenticationRequestParametersFactory.Companion;
						public static KEY_DATA_VERSION: string;
						public static KEY_DEVICE_DATA: string;
						public static KEY_DEVICE_PARAM_NOT_AVAILABLE: string;
						public static KEY_SECURITY_WARNINGS: string;
						public getKeyUse$3ds2sdk_release(param0: string): com.nimbusds.jose.jwk.KeyUse;
						public create(param0: string, param1: java.security.PublicKey, param2: string, param3: com.stripe.android.stripe3ds2.transaction.SdkTransactionId, param4: java.security.PublicKey, param5: kotlin.coroutines.Continuation<any>): any;
						public constructor(param0: com.stripe.android.stripe3ds2.init.DeviceDataFactory, param1: com.stripe.android.stripe3ds2.init.DeviceParamNotAvailableFactory, param2: com.stripe.android.stripe3ds2.init.SecurityChecker, param3: com.stripe.android.stripe3ds2.init.AppInfoRepository, param4: com.stripe.android.stripe3ds2.security.JweEncrypter, param5: com.stripe.android.stripe3ds2.transaction.MessageVersionRegistry, param6: string, param7: com.stripe.android.stripe3ds2.observability.ErrorReporter, param8: kotlin.coroutines.CoroutineContext);
						public constructor(param0: com.stripe.android.stripe3ds2.init.DeviceDataFactory, param1: com.stripe.android.stripe3ds2.init.DeviceParamNotAvailableFactory, param2: com.stripe.android.stripe3ds2.init.SecurityChecker, param3: com.stripe.android.stripe3ds2.security.EphemeralKeyPairGenerator, param4: com.stripe.android.stripe3ds2.init.AppInfoRepository, param5: com.stripe.android.stripe3ds2.transaction.MessageVersionRegistry, param6: string, param7: com.stripe.android.stripe3ds2.observability.ErrorReporter, param8: kotlin.coroutines.CoroutineContext);
						public getDeviceDataJson$3ds2sdk_release(): string;
					}
					export module DefaultAuthenticationRequestParametersFactory {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.DefaultAuthenticationRequestParametersFactory.Companion>;
							public createPublicJwk$3ds2sdk_release(param0: java.security.PublicKey, param1: string, param2: com.nimbusds.jose.jwk.KeyUse): com.nimbusds.jose.jwk.JWK;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transaction {
					export class DefaultChallengeRequestResultRepository extends com.stripe.android.stripe3ds2.transaction.ChallengeRequestResultRepository {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.DefaultChallengeRequestResultRepository>;
						public constructor(param0: com.stripe.android.stripe3ds2.observability.ErrorReporter, param1: kotlin.coroutines.CoroutineContext);
						public get(param0: com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor.Config, param1: com.stripe.android.stripe3ds2.transactions.ChallengeRequestData, param2: kotlin.coroutines.Continuation<any>): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transaction {
					export class DefaultInitChallengeRepository extends com.stripe.android.stripe3ds2.transaction.InitChallengeRepository {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.DefaultInitChallengeRepository>;
						public constructor(param0: com.stripe.android.stripe3ds2.transaction.SdkTransactionId, param1: com.stripe.android.stripe3ds2.transaction.MessageVersionRegistry, param2: com.stripe.android.stripe3ds2.transaction.JwsValidator, param3: com.stripe.android.stripe3ds2.security.MessageTransformer, param4: com.stripe.android.stripe3ds2.transaction.AcsDataParser, param5: com.stripe.android.stripe3ds2.transaction.ChallengeRequestResultRepository, param6: com.stripe.android.stripe3ds2.transaction.ErrorRequestExecutor.Factory, param7: com.stripe.android.stripe3ds2.init.ui.StripeUiCustomization, param8: com.stripe.android.stripe3ds2.observability.ErrorReporter, param9: com.stripe.android.stripe3ds2.transaction.Logger);
						public startChallenge(param0: com.stripe.android.stripe3ds2.transaction.InitChallengeArgs, param1: kotlin.coroutines.Continuation<any>): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transaction {
					export class DefaultJwsValidator extends com.stripe.android.stripe3ds2.transaction.JwsValidator {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.DefaultJwsValidator>;
						public static Companion: com.stripe.android.stripe3ds2.transaction.DefaultJwsValidator.Companion;
						public constructor(param0: boolean, param1: java.util.List<any>, param2: com.stripe.android.stripe3ds2.observability.ErrorReporter);
						public isCertificateChainValid(param0: java.util.List<any>, param1: java.util.List<any>): boolean;
						public getPayload(param0: string): org.json.JSONObject;
					}
					export module DefaultJwsValidator {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.DefaultJwsValidator.Companion>;
							public sanitizedJwsHeader$3ds2sdk_release(param0: com.nimbusds.jose.JWSHeader): com.nimbusds.jose.JWSHeader;
							public createKeyStore(param0: java.util.List<any>): java.security.KeyStore;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transaction {
					export class DefaultTransactionFactory extends com.stripe.android.stripe3ds2.transaction.TransactionFactory {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.DefaultTransactionFactory>;
						public create(param0: string, param1: java.util.List<any>, param2: java.security.PublicKey, param3: string, param4: com.stripe.android.stripe3ds2.transaction.SdkTransactionId, param5: boolean, param6: com.stripe.android.stripe3ds2.views.Brand): com.stripe.android.stripe3ds2.transaction.Transaction;
						public constructor(param0: com.stripe.android.stripe3ds2.transaction.AuthenticationRequestParametersFactory, param1: com.stripe.android.stripe3ds2.security.EphemeralKeyPairGenerator, param2: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transaction {
					export class DefaultTransactionTimer extends com.stripe.android.stripe3ds2.transaction.TransactionTimer {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.DefaultTransactionTimer>;
						public constructor(param0: number, param1: com.stripe.android.stripe3ds2.transaction.ErrorRequestExecutor, param2: com.stripe.android.stripe3ds2.transactions.ChallengeRequestData, param3: kotlin.coroutines.CoroutineContext);
						public getTimeout(): kotlinx.coroutines.flow.Flow<java.lang.Boolean>;
						public start(param0: kotlin.coroutines.Continuation<any>): any;
						public onTimeout$3ds2sdk_release(): void;
						public getTimeout(): kotlinx.coroutines.flow.StateFlow<java.lang.Boolean>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transaction {
					export class ErrorMessage {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ErrorMessage>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.ErrorMessage>;
						public component3(): string;
						public describeContents(): number;
						public getErrorDescription(): string;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public getErrorCode(): string;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getTransactionId(): string;
						public toString(): string;
						public constructor(param0: string, param1: string, param2: string, param3: string);
						public component4(): string;
						public component2(): string;
						public getErrorDetails(): string;
						public copy(param0: string, param1: string, param2: string, param3: string): com.stripe.android.stripe3ds2.transaction.ErrorMessage;
					}
					export module ErrorMessage {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.ErrorMessage> {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ErrorMessage.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.stripe3ds2.transaction.ErrorMessage>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.stripe3ds2.transaction.ErrorMessage;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transaction {
					export class ErrorRequestExecutor {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ErrorRequestExecutor>;
						/**
						 * Constructs a new instance of the com.stripe.android.stripe3ds2.transaction.ErrorRequestExecutor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							executeAsync(param0: com.stripe.android.stripe3ds2.transactions.ErrorData): void;
						});
						public constructor();
						public executeAsync(param0: com.stripe.android.stripe3ds2.transactions.ErrorData): void;
					}
					export module ErrorRequestExecutor {
						export class Factory {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ErrorRequestExecutor.Factory>;
							/**
							 * Constructs a new instance of the com.stripe.android.stripe3ds2.transaction.ErrorRequestExecutor$Factory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								create(param0: string, param1: com.stripe.android.stripe3ds2.observability.ErrorReporter): com.stripe.android.stripe3ds2.transaction.ErrorRequestExecutor;
							});
							public constructor();
							public create(param0: string, param1: com.stripe.android.stripe3ds2.observability.ErrorReporter): com.stripe.android.stripe3ds2.transaction.ErrorRequestExecutor;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transaction {
					export class HttpClient {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.HttpClient>;
						/**
						 * Constructs a new instance of the com.stripe.android.stripe3ds2.transaction.HttpClient interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							doGetRequest(param0: kotlin.coroutines.Continuation<any>): any;
							doPostRequest(param0: string, param1: string, param2: kotlin.coroutines.Continuation<any>): any;
						});
						public constructor();
						public doGetRequest(param0: kotlin.coroutines.Continuation<any>): any;
						public doPostRequest(param0: string, param1: string, param2: kotlin.coroutines.Continuation<any>): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transaction {
					export class HttpResponse {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.HttpResponse>;
						public getContent(): string;
						public isJsonContentType(): boolean;
						public constructor(param0: string, param1: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transaction {
					export class ImmediateTimeoutTransactionTimer extends com.stripe.android.stripe3ds2.transaction.TransactionTimer {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ImmediateTimeoutTransactionTimer>;
						public constructor();
						public getTimeout(): kotlinx.coroutines.flow.Flow<java.lang.Boolean>;
						public start(param0: kotlin.coroutines.Continuation<any>): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transaction {
					export class InitChallengeArgs {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.InitChallengeArgs>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.InitChallengeArgs>;
						public constructor(param0: string, param1: java.security.KeyPair, param2: com.stripe.android.stripe3ds2.transaction.ChallengeParameters, param3: number, param4: com.stripe.android.stripe3ds2.transaction.IntentData);
						public getChallengeParameters$3ds2sdk_release(): com.stripe.android.stripe3ds2.transaction.ChallengeParameters;
						public component2$3ds2sdk_release(): java.security.KeyPair;
						public component1$3ds2sdk_release(): string;
						public describeContents(): number;
						public component5$3ds2sdk_release(): com.stripe.android.stripe3ds2.transaction.IntentData;
						public component4$3ds2sdk_release(): number;
						public getSdkKeyPair$3ds2sdk_release(): java.security.KeyPair;
						public copy(param0: string, param1: java.security.KeyPair, param2: com.stripe.android.stripe3ds2.transaction.ChallengeParameters, param3: number, param4: com.stripe.android.stripe3ds2.transaction.IntentData): com.stripe.android.stripe3ds2.transaction.InitChallengeArgs;
						public getSdkReferenceNumber$3ds2sdk_release(): string;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public toString(): string;
						public getIntentData$3ds2sdk_release(): com.stripe.android.stripe3ds2.transaction.IntentData;
						public component3$3ds2sdk_release(): com.stripe.android.stripe3ds2.transaction.ChallengeParameters;
						public getTimeoutMins$3ds2sdk_release(): number;
					}
					export module InitChallengeArgs {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.InitChallengeArgs> {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.InitChallengeArgs.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.stripe3ds2.transaction.InitChallengeArgs>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.stripe3ds2.transaction.InitChallengeArgs;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transaction {
					export class InitChallengeRepository {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.InitChallengeRepository>;
						/**
						 * Constructs a new instance of the com.stripe.android.stripe3ds2.transaction.InitChallengeRepository interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							startChallenge(param0: com.stripe.android.stripe3ds2.transaction.InitChallengeArgs, param1: kotlin.coroutines.Continuation<any>): any;
						});
						public constructor();
						public startChallenge(param0: com.stripe.android.stripe3ds2.transaction.InitChallengeArgs, param1: kotlin.coroutines.Continuation<any>): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transaction {
					export class InitChallengeRepositoryFactory {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.InitChallengeRepositoryFactory>;
						public constructor(param0: globalAndroid.app.Application, param1: boolean, param2: com.stripe.android.stripe3ds2.transaction.SdkTransactionId, param3: com.stripe.android.stripe3ds2.init.ui.StripeUiCustomization, param4: java.util.List<any>, param5: boolean, param6: kotlin.coroutines.CoroutineContext);
						public create(): com.stripe.android.stripe3ds2.transaction.InitChallengeRepository;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transaction {
					export abstract class InitChallengeResult {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.InitChallengeResult>;
						public static Companion: com.stripe.android.stripe3ds2.transaction.InitChallengeResult.Companion;
						public toBundle(): globalAndroid.os.Bundle;
					}
					export module InitChallengeResult {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.InitChallengeResult.Companion>;
							public fromBundle(param0: globalAndroid.os.Bundle): com.stripe.android.stripe3ds2.transaction.InitChallengeResult;
						}
						export class End extends com.stripe.android.stripe3ds2.transaction.InitChallengeResult {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.InitChallengeResult.End>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.InitChallengeResult.End>;
							public getChallengeResult(): com.stripe.android.stripe3ds2.transaction.ChallengeResult;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public hashCode(): number;
							public describeContents(): number;
							public constructor(param0: com.stripe.android.stripe3ds2.transaction.ChallengeResult);
							public toString(): string;
							public copy(param0: com.stripe.android.stripe3ds2.transaction.ChallengeResult): com.stripe.android.stripe3ds2.transaction.InitChallengeResult.End;
							public equals(param0: any): boolean;
							public component1(): com.stripe.android.stripe3ds2.transaction.ChallengeResult;
						}
						export module End {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.InitChallengeResult.End> {
								public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.InitChallengeResult.End.Creator>;
								public newArray(param0: number): androidNative.Array<com.stripe.android.stripe3ds2.transaction.InitChallengeResult.End>;
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.stripe3ds2.transaction.InitChallengeResult.End;
								public constructor();
							}
						}
						export class Start extends com.stripe.android.stripe3ds2.transaction.InitChallengeResult {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.InitChallengeResult.Start>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.InitChallengeResult.Start>;
							public constructor(param0: com.stripe.android.stripe3ds2.views.ChallengeViewArgs);
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public hashCode(): number;
							public describeContents(): number;
							public getChallengeViewArgs(): com.stripe.android.stripe3ds2.views.ChallengeViewArgs;
							public toString(): string;
							public component1(): com.stripe.android.stripe3ds2.views.ChallengeViewArgs;
							public equals(param0: any): boolean;
							public copy(param0: com.stripe.android.stripe3ds2.views.ChallengeViewArgs): com.stripe.android.stripe3ds2.transaction.InitChallengeResult.Start;
						}
						export module Start {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.InitChallengeResult.Start> {
								public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.InitChallengeResult.Start.Creator>;
								public newArray(param0: number): androidNative.Array<com.stripe.android.stripe3ds2.transaction.InitChallengeResult.Start>;
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.stripe3ds2.transaction.InitChallengeResult.Start;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transaction {
					export class IntentData {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.IntentData>;
						public static Companion: com.stripe.android.stripe3ds2.transaction.IntentData.Companion;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.IntentData>;
						public getAccountId(): string;
						public component3(): string;
						public describeContents(): number;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getSourceId(): string;
						public toString(): string;
						public constructor(param0: string, param1: string, param2: string, param3: string);
						public component4(): string;
						public copy(param0: string, param1: string, param2: string, param3: string): com.stripe.android.stripe3ds2.transaction.IntentData;
						public component2(): string;
						public getPublishableKey(): string;
						public getClientSecret(): string;
					}
					export module IntentData {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.IntentData.Companion>;
							public getEMPTY(): com.stripe.android.stripe3ds2.transaction.IntentData;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.IntentData> {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.IntentData.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.stripe3ds2.transaction.IntentData;
							public newArray(param0: number): androidNative.Array<com.stripe.android.stripe3ds2.transaction.IntentData>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transaction {
					export class JwsValidator {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.JwsValidator>;
						/**
						 * Constructs a new instance of the com.stripe.android.stripe3ds2.transaction.JwsValidator interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getPayload(param0: string): org.json.JSONObject;
						});
						public constructor();
						public getPayload(param0: string): org.json.JSONObject;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transaction {
					export abstract class Logger {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.Logger>;
						public static Companion: com.stripe.android.stripe3ds2.transaction.Logger.Companion;
						public info(param0: string): void;
						public error(param0: string, param1: java.lang.Throwable): void;
					}
					export module Logger {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.Logger.Companion>;
							public get(param0: boolean): com.stripe.android.stripe3ds2.transaction.Logger;
						}
						export class Noop extends com.stripe.android.stripe3ds2.transaction.Logger {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.Logger.Noop>;
							public static INSTANCE: com.stripe.android.stripe3ds2.transaction.Logger.Noop;
							public info(param0: string): void;
							public error(param0: string, param1: java.lang.Throwable): void;
						}
						export class Real extends com.stripe.android.stripe3ds2.transaction.Logger {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.Logger.Real>;
							public static INSTANCE: com.stripe.android.stripe3ds2.transaction.Logger.Real;
							public info(param0: string): void;
							public error(param0: string, param1: java.lang.Throwable): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transaction {
					export class MessageVersionRegistry {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.MessageVersionRegistry>;
						public constructor();
						public getCurrent(): string;
						public isSupported(param0: string): boolean;
					}
					export module MessageVersionRegistry {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.MessageVersionRegistry.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transaction {
					export class ProtocolErrorEvent {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ProtocolErrorEvent>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.ProtocolErrorEvent>;
						public constructor(param0: com.stripe.android.stripe3ds2.transaction.SdkTransactionId, param1: com.stripe.android.stripe3ds2.transaction.ErrorMessage);
						public describeContents(): number;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getSdkTransactionId(): com.stripe.android.stripe3ds2.transaction.SdkTransactionId;
						public getErrorMessage(): com.stripe.android.stripe3ds2.transaction.ErrorMessage;
						public copy(param0: com.stripe.android.stripe3ds2.transaction.SdkTransactionId, param1: com.stripe.android.stripe3ds2.transaction.ErrorMessage): com.stripe.android.stripe3ds2.transaction.ProtocolErrorEvent;
						public component1(): com.stripe.android.stripe3ds2.transaction.SdkTransactionId;
						public component2(): com.stripe.android.stripe3ds2.transaction.ErrorMessage;
						public toString(): string;
					}
					export module ProtocolErrorEvent {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.ProtocolErrorEvent> {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ProtocolErrorEvent.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.stripe3ds2.transaction.ProtocolErrorEvent>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.stripe3ds2.transaction.ProtocolErrorEvent;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transaction {
					export class ProtocolErrorEventFactory {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.ProtocolErrorEventFactory>;
						public constructor();
						public create(param0: com.stripe.android.stripe3ds2.transactions.ErrorData): com.stripe.android.stripe3ds2.transaction.ProtocolErrorEvent;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transaction {
					export class RuntimeErrorEvent {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.RuntimeErrorEvent>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.RuntimeErrorEvent>;
						public getErrorMessage(): string;
						public describeContents(): number;
						public constructor(param0: com.stripe.android.stripe3ds2.transactions.ErrorData);
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public getErrorCode(): string;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public toString(): string;
						public constructor(param0: java.lang.Throwable);
						public component2(): string;
						public copy(param0: string, param1: string): com.stripe.android.stripe3ds2.transaction.RuntimeErrorEvent;
						public constructor(param0: string, param1: string);
					}
					export module RuntimeErrorEvent {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.RuntimeErrorEvent> {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.RuntimeErrorEvent.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.stripe3ds2.transaction.RuntimeErrorEvent>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.stripe3ds2.transaction.RuntimeErrorEvent;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transaction {
					export class SdkTransactionId {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.SdkTransactionId>;
						public static Companion: com.stripe.android.stripe3ds2.transaction.SdkTransactionId.Companion;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.SdkTransactionId>;
						public describeContents(): number;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public constructor(param0: java.util.UUID);
						public getValue(): string;
						public copy(param0: string): com.stripe.android.stripe3ds2.transaction.SdkTransactionId;
						public toString(): string;
						public constructor(param0: string);
					}
					export module SdkTransactionId {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.SdkTransactionId.Companion>;
							public create(): com.stripe.android.stripe3ds2.transaction.SdkTransactionId;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transaction.SdkTransactionId> {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.SdkTransactionId.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.stripe3ds2.transaction.SdkTransactionId;
							public newArray(param0: number): androidNative.Array<com.stripe.android.stripe3ds2.transaction.SdkTransactionId>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transaction {
					export class StripeChallengeRequestExecutor extends com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.StripeChallengeRequestExecutor>;
						public static Companion: com.stripe.android.stripe3ds2.transaction.StripeChallengeRequestExecutor.Companion;
						public constructor(param0: com.stripe.android.stripe3ds2.security.MessageTransformer, param1: string, param2: java.security.PrivateKey, param3: java.security.interfaces.ECPublicKey, param4: string, param5: com.stripe.android.stripe3ds2.observability.ErrorReporter, param6: com.stripe.android.stripe3ds2.security.DiffieHellmanKeyGenerator, param7: kotlin.coroutines.CoroutineContext, param8: com.stripe.android.stripe3ds2.transaction.HttpClient, param9: com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor.Config, param10: com.stripe.android.stripe3ds2.transaction.ChallengeResponseProcessorFactory);
						public execute(param0: com.stripe.android.stripe3ds2.transactions.ChallengeRequestData, param1: kotlin.coroutines.Continuation<any>): any;
					}
					export module StripeChallengeRequestExecutor {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.StripeChallengeRequestExecutor.Companion>;
							public getTIMEOUT(): number;
						}
						export class Factory extends com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor.Factory {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.StripeChallengeRequestExecutor.Factory>;
							public create(param0: com.stripe.android.stripe3ds2.observability.ErrorReporter, param1: kotlin.coroutines.CoroutineContext): com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor;
							public constructor(param0: com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor.Config);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transaction {
					export class StripeErrorRequestExecutor extends com.stripe.android.stripe3ds2.transaction.ErrorRequestExecutor {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.StripeErrorRequestExecutor>;
						public constructor(param0: com.stripe.android.stripe3ds2.transaction.HttpClient, param1: com.stripe.android.stripe3ds2.observability.ErrorReporter, param2: kotlin.coroutines.CoroutineContext);
						public executeAsync(param0: com.stripe.android.stripe3ds2.transactions.ErrorData): void;
					}
					export module StripeErrorRequestExecutor {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.StripeErrorRequestExecutor.Companion>;
						}
						export class Factory extends com.stripe.android.stripe3ds2.transaction.ErrorRequestExecutor.Factory {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.StripeErrorRequestExecutor.Factory>;
							public constructor(param0: kotlin.coroutines.CoroutineContext);
							public create(param0: string, param1: com.stripe.android.stripe3ds2.observability.ErrorReporter): com.stripe.android.stripe3ds2.transaction.ErrorRequestExecutor;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transaction {
					export class StripeHttpClient extends com.stripe.android.stripe3ds2.transaction.HttpClient {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.StripeHttpClient>;
						public constructor(param0: string, param1: com.stripe.android.stripe3ds2.transaction.StripeHttpClient.ConnectionFactory, param2: com.stripe.android.stripe3ds2.observability.ErrorReporter, param3: kotlin.coroutines.CoroutineContext);
						public doGetRequest(param0: kotlin.coroutines.Continuation<any>): any;
						public handlePostResponse$3ds2sdk_release(param0: java.net.HttpURLConnection): com.stripe.android.stripe3ds2.transaction.HttpResponse;
						public doPostRequest(param0: string, param1: string, param2: kotlin.coroutines.Continuation<any>): any;
					}
					export module StripeHttpClient {
						export class ConnectionFactory {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.StripeHttpClient.ConnectionFactory>;
							/**
							 * Constructs a new instance of the com.stripe.android.stripe3ds2.transaction.StripeHttpClient$ConnectionFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								create(param0: string): java.net.HttpURLConnection;
							});
							public constructor();
							public create(param0: string): java.net.HttpURLConnection;
						}
						export class DefaultConnectionFactory extends com.stripe.android.stripe3ds2.transaction.StripeHttpClient.ConnectionFactory {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.StripeHttpClient.DefaultConnectionFactory>;
							public constructor();
							public create(param0: string): java.net.HttpURLConnection;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transaction {
					export class StripeTransaction extends com.stripe.android.stripe3ds2.transaction.Transaction {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.StripeTransaction>;
						public static Companion: com.stripe.android.stripe3ds2.transaction.StripeTransaction.Companion;
						public static MIN_TIMEOUT: number;
						public createInitChallengeArgs(param0: com.stripe.android.stripe3ds2.transaction.ChallengeParameters, param1: number, param2: com.stripe.android.stripe3ds2.transaction.IntentData): com.stripe.android.stripe3ds2.transaction.InitChallengeArgs;
						public createAuthenticationRequestParameters(param0: kotlin.coroutines.Continuation<any>): any;
						public getSdkTransactionId(): com.stripe.android.stripe3ds2.transaction.SdkTransactionId;
						public constructor(param0: com.stripe.android.stripe3ds2.transaction.AuthenticationRequestParametersFactory, param1: string, param2: java.security.PublicKey, param3: string, param4: com.stripe.android.stripe3ds2.transaction.SdkTransactionId, param5: java.security.KeyPair, param6: string);
					}
					export module StripeTransaction {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.StripeTransaction.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transaction {
					export class Transaction {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.Transaction>;
						/**
						 * Constructs a new instance of the com.stripe.android.stripe3ds2.transaction.Transaction interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							createAuthenticationRequestParameters(param0: kotlin.coroutines.Continuation<any>): any;
							getSdkTransactionId(): com.stripe.android.stripe3ds2.transaction.SdkTransactionId;
							createInitChallengeArgs(param0: com.stripe.android.stripe3ds2.transaction.ChallengeParameters, param1: number, param2: com.stripe.android.stripe3ds2.transaction.IntentData): com.stripe.android.stripe3ds2.transaction.InitChallengeArgs;
						});
						public constructor();
						public createInitChallengeArgs(param0: com.stripe.android.stripe3ds2.transaction.ChallengeParameters, param1: number, param2: com.stripe.android.stripe3ds2.transaction.IntentData): com.stripe.android.stripe3ds2.transaction.InitChallengeArgs;
						public createAuthenticationRequestParameters(param0: kotlin.coroutines.Continuation<any>): any;
						public getSdkTransactionId(): com.stripe.android.stripe3ds2.transaction.SdkTransactionId;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transaction {
					export class TransactionFactory {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.TransactionFactory>;
						/**
						 * Constructs a new instance of the com.stripe.android.stripe3ds2.transaction.TransactionFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							create(param0: string, param1: java.util.List<any>, param2: java.security.PublicKey, param3: string, param4: com.stripe.android.stripe3ds2.transaction.SdkTransactionId, param5: boolean, param6: com.stripe.android.stripe3ds2.views.Brand): com.stripe.android.stripe3ds2.transaction.Transaction;
						});
						public constructor();
						public create(param0: string, param1: java.util.List<any>, param2: java.security.PublicKey, param3: string, param4: com.stripe.android.stripe3ds2.transaction.SdkTransactionId, param5: boolean, param6: com.stripe.android.stripe3ds2.views.Brand): com.stripe.android.stripe3ds2.transaction.Transaction;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transaction {
					export class TransactionStatus {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.TransactionStatus>;
						public static Companion: com.stripe.android.stripe3ds2.transaction.TransactionStatus.Companion;
						public static VerificationSuccessful: com.stripe.android.stripe3ds2.transaction.TransactionStatus;
						public static VerificationDenied: com.stripe.android.stripe3ds2.transaction.TransactionStatus;
						public static VerificationNotPerformed: com.stripe.android.stripe3ds2.transaction.TransactionStatus;
						public static VerificationAttempted: com.stripe.android.stripe3ds2.transaction.TransactionStatus;
						public static ChallengeAdditionalAuth: com.stripe.android.stripe3ds2.transaction.TransactionStatus;
						public static ChallengeDecoupledAuth: com.stripe.android.stripe3ds2.transaction.TransactionStatus;
						public static VerificationRejected: com.stripe.android.stripe3ds2.transaction.TransactionStatus;
						public static InformationOnly: com.stripe.android.stripe3ds2.transaction.TransactionStatus;
						public static valueOf(param0: string): com.stripe.android.stripe3ds2.transaction.TransactionStatus;
						public static values(): androidNative.Array<com.stripe.android.stripe3ds2.transaction.TransactionStatus>;
						public getCode(): string;
					}
					export module TransactionStatus {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.TransactionStatus.Companion>;
							public fromCode(param0: string): com.stripe.android.stripe3ds2.transaction.TransactionStatus;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transaction {
					export class TransactionTimer {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transaction.TransactionTimer>;
						/**
						 * Constructs a new instance of the com.stripe.android.stripe3ds2.transaction.TransactionTimer interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							start(param0: kotlin.coroutines.Continuation<any>): any;
							getTimeout(): kotlinx.coroutines.flow.Flow<java.lang.Boolean>;
						});
						public constructor();
						public getTimeout(): kotlinx.coroutines.flow.Flow<java.lang.Boolean>;
						public start(param0: kotlin.coroutines.Continuation<any>): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transactions {
					export class ChallengeRequestData {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transactions.ChallengeRequestData>;
						public static Companion: com.stripe.android.stripe3ds2.transactions.ChallengeRequestData.Companion;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transactions.ChallengeRequestData>;
						public static FIELD_ACS_TRANS_ID: string;
						public static FIELD_3DS_SERVER_TRANS_ID: string;
						public static FIELD_CHALLENGE_CANCEL: string;
						public static FIELD_CHALLENGE_DATA_ENTRY: string;
						public static FIELD_CHALLENGE_HTML_DATA_ENTRY: string;
						public static FIELD_MESSAGE_EXTENSION: string;
						public static FIELD_MESSAGE_TYPE: string;
						public static FIELD_MESSAGE_VERSION: string;
						public static FIELD_OOB_CONTINUE: string;
						public static FIELD_RESEND_CHALLENGE: string;
						public static FIELD_SDK_TRANS_ID: string;
						public static MESSAGE_TYPE: string;
						public component5(): string;
						public constructor(param0: string, param1: string, param2: string, param3: com.stripe.android.stripe3ds2.transaction.SdkTransactionId, param4: string, param5: com.stripe.android.stripe3ds2.transactions.ChallengeRequestData.CancelReason, param6: string, param7: java.util.List<com.stripe.android.stripe3ds2.transactions.MessageExtension>, param8: java.lang.Boolean, param9: java.lang.Boolean);
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public toJson$3ds2sdk_release(): org.json.JSONObject;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getChallengeDataEntry(): string;
						public getMessageVersion(): string;
						public component6(): com.stripe.android.stripe3ds2.transactions.ChallengeRequestData.CancelReason;
						public getOobContinue(): java.lang.Boolean;
						public copy(param0: string, param1: string, param2: string, param3: com.stripe.android.stripe3ds2.transaction.SdkTransactionId, param4: string, param5: com.stripe.android.stripe3ds2.transactions.ChallengeRequestData.CancelReason, param6: string, param7: java.util.List<com.stripe.android.stripe3ds2.transactions.MessageExtension>, param8: java.lang.Boolean, param9: java.lang.Boolean): com.stripe.android.stripe3ds2.transactions.ChallengeRequestData;
						public getMessageExtensions(): java.util.List<com.stripe.android.stripe3ds2.transactions.MessageExtension>;
						public getAcsTransId(): string;
						public sanitize$3ds2sdk_release(): com.stripe.android.stripe3ds2.transactions.ChallengeRequestData;
						public getCancelReason(): com.stripe.android.stripe3ds2.transactions.ChallengeRequestData.CancelReason;
						public component9(): java.lang.Boolean;
						public getThreeDsServerTransId(): string;
						public component3(): string;
						public describeContents(): number;
						public component8(): java.util.List<com.stripe.android.stripe3ds2.transactions.MessageExtension>;
						public component7(): string;
						public component4(): com.stripe.android.stripe3ds2.transaction.SdkTransactionId;
						public getSdkTransId(): com.stripe.android.stripe3ds2.transaction.SdkTransactionId;
						public getShouldResendChallenge(): java.lang.Boolean;
						public toString(): string;
						public component10(): java.lang.Boolean;
						public component2(): string;
						public getChallengeHtmlDataEntry(): string;
					}
					export module ChallengeRequestData {
						export class CancelReason {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transactions.ChallengeRequestData.CancelReason>;
							public static UserSelected: com.stripe.android.stripe3ds2.transactions.ChallengeRequestData.CancelReason;
							public static Reserved: com.stripe.android.stripe3ds2.transactions.ChallengeRequestData.CancelReason;
							public static TransactionTimedOutDecoupled: com.stripe.android.stripe3ds2.transactions.ChallengeRequestData.CancelReason;
							public static TransactionTimedOutOther: com.stripe.android.stripe3ds2.transactions.ChallengeRequestData.CancelReason;
							public static TransactionTimedOutFirstCreq: com.stripe.android.stripe3ds2.transactions.ChallengeRequestData.CancelReason;
							public static TransactionError: com.stripe.android.stripe3ds2.transactions.ChallengeRequestData.CancelReason;
							public static Unknown: com.stripe.android.stripe3ds2.transactions.ChallengeRequestData.CancelReason;
							public getCode(): string;
							public static values(): androidNative.Array<com.stripe.android.stripe3ds2.transactions.ChallengeRequestData.CancelReason>;
							public static valueOf(param0: string): com.stripe.android.stripe3ds2.transactions.ChallengeRequestData.CancelReason;
						}
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transactions.ChallengeRequestData.Companion>;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transactions.ChallengeRequestData> {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transactions.ChallengeRequestData.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.stripe3ds2.transactions.ChallengeRequestData;
							public newArray(param0: number): androidNative.Array<com.stripe.android.stripe3ds2.transactions.ChallengeRequestData>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transactions {
					export class ChallengeResponseData {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transactions.ChallengeResponseData>;
						public static Companion: com.stripe.android.stripe3ds2.transactions.ChallengeResponseData.Companion;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transactions.ChallengeResponseData>;
						public static MESSAGE_TYPE: string;
						public getChallengeInfoHeader(): string;
						public getChallengeInfoText(): string;
						public getWhyInfoText(): string;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public equals(param0: any): boolean;
						public isValidForUi$3ds2sdk_release(): boolean;
						public getMessageVersion(): string;
						public component14(): string;
						public getExpandInfoText(): string;
						public component24(): string;
						public component17(): string;
						public getOobAppLabel(): string;
						public component27(): string;
						public getTransStatus(): string;
						public component8(): string;
						public getChallengeInfoLabel(): string;
						public component7(): string;
						public component26(): string;
						public component11(): boolean;
						public getSubmitAuthenticationLabel(): string;
						public toString(): string;
						public isChallengeCompleted(): boolean;
						public getOobAppUrl(): string;
						public getOobContinueLabel(): string;
						public copy(param0: string, param1: string, param2: string, param3: string, param4: com.stripe.android.stripe3ds2.transactions.UiType, param5: boolean, param6: string, param7: string, param8: string, param9: string, param10: boolean, param11: java.util.List<com.stripe.android.stripe3ds2.transactions.ChallengeResponseData.ChallengeSelectOption>, param12: string, param13: string, param14: com.stripe.android.stripe3ds2.transactions.ChallengeResponseData.Image, param15: java.util.List<com.stripe.android.stripe3ds2.transactions.MessageExtension>, param16: string, param17: string, param18: string, param19: string, param20: com.stripe.android.stripe3ds2.transactions.ChallengeResponseData.Image, param21: string, param22: com.stripe.android.stripe3ds2.transaction.SdkTransactionId, param23: string, param24: string, param25: string, param26: string, param27: string): com.stripe.android.stripe3ds2.transactions.ChallengeResponseData;
						public component12(): java.util.List<com.stripe.android.stripe3ds2.transactions.ChallengeResponseData.ChallengeSelectOption>;
						public getChallengeSelectOptions(): java.util.List<com.stripe.android.stripe3ds2.transactions.ChallengeResponseData.ChallengeSelectOption>;
						public getAcsHtmlRefresh(): string;
						public component28(): string;
						public getServerTransId(): string;
						public component25(): string;
						public component18(): string;
						public component1(): string;
						public hashCode(): number;
						public getUiType(): com.stripe.android.stripe3ds2.transactions.UiType;
						public component23(): com.stripe.android.stripe3ds2.transaction.SdkTransactionId;
						public component9(): string;
						public getExpandInfoLabel(): string;
						public getIssuerImage(): com.stripe.android.stripe3ds2.transactions.ChallengeResponseData.Image;
						public component4(): string;
						public component5(): com.stripe.android.stripe3ds2.transactions.UiType;
						public component20(): string;
						public component10(): string;
						public constructor(param0: string, param1: string, param2: string, param3: string, param4: com.stripe.android.stripe3ds2.transactions.UiType, param5: boolean, param6: string, param7: string, param8: string, param9: string, param10: boolean, param11: java.util.List<com.stripe.android.stripe3ds2.transactions.ChallengeResponseData.ChallengeSelectOption>, param12: string, param13: string, param14: com.stripe.android.stripe3ds2.transactions.ChallengeResponseData.Image, param15: java.util.List<com.stripe.android.stripe3ds2.transactions.MessageExtension>, param16: string, param17: string, param18: string, param19: string, param20: com.stripe.android.stripe3ds2.transactions.ChallengeResponseData.Image, param21: string, param22: com.stripe.android.stripe3ds2.transaction.SdkTransactionId, param23: string, param24: string, param25: string, param26: string, param27: string);
						public getMessageExtensions(): java.util.List<com.stripe.android.stripe3ds2.transactions.MessageExtension>;
						public getAcsTransId(): string;
						public getAcsHtml(): string;
						public component3(): string;
						public component13(): string;
						public describeContents(): number;
						public getShouldShowChallengeInfoTextIndicator(): boolean;
						public component6(): boolean;
						public component15(): com.stripe.android.stripe3ds2.transactions.ChallengeResponseData.Image;
						public component16(): java.util.List<com.stripe.android.stripe3ds2.transactions.MessageExtension>;
						public getResendInformationLabel(): string;
						public getSdkTransId(): com.stripe.android.stripe3ds2.transaction.SdkTransactionId;
						public component21(): com.stripe.android.stripe3ds2.transactions.ChallengeResponseData.Image;
						public getChallengeAdditionalInfoText(): string;
						public getWhyInfoLabel(): string;
						public toJson(): org.json.JSONObject;
						public getWhitelistingInfoText(): string;
						public component2(): string;
						public component19(): string;
						public component22(): string;
						public getPaymentSystemImage(): com.stripe.android.stripe3ds2.transactions.ChallengeResponseData.Image;
					}
					export module ChallengeResponseData {
						export class ChallengeSelectOption {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transactions.ChallengeResponseData.ChallengeSelectOption>;
							public static Companion: com.stripe.android.stripe3ds2.transactions.ChallengeResponseData.ChallengeSelectOption.Companion;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transactions.ChallengeResponseData.ChallengeSelectOption>;
							public component2(): string;
							public copy(param0: string, param1: string): com.stripe.android.stripe3ds2.transactions.ChallengeResponseData.ChallengeSelectOption;
							public getText(): string;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public hashCode(): number;
							public constructor(param0: string, param1: string);
							public getName(): string;
							public describeContents(): number;
							public toString(): string;
							public equals(param0: any): boolean;
							public component1(): string;
						}
						export module ChallengeSelectOption {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.stripe3ds2.transactions.ChallengeResponseData.ChallengeSelectOption.Companion>;
								public fromJson$3ds2sdk_release(param0: org.json.JSONArray): java.util.List<com.stripe.android.stripe3ds2.transactions.ChallengeResponseData.ChallengeSelectOption>;
								public toJsonArray$3ds2sdk_release(param0: java.util.List<com.stripe.android.stripe3ds2.transactions.ChallengeResponseData.ChallengeSelectOption>): org.json.JSONArray;
							}
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transactions.ChallengeResponseData.ChallengeSelectOption> {
								public static class: java.lang.Class<com.stripe.android.stripe3ds2.transactions.ChallengeResponseData.ChallengeSelectOption.Creator>;
								public newArray(param0: number): androidNative.Array<com.stripe.android.stripe3ds2.transactions.ChallengeResponseData.ChallengeSelectOption>;
								public constructor();
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.stripe3ds2.transactions.ChallengeResponseData.ChallengeSelectOption;
							}
						}
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transactions.ChallengeResponseData.Companion>;
							public checkMessageType$3ds2sdk_release(param0: org.json.JSONObject): void;
							public getTransactionId$3ds2sdk_release(param0: org.json.JSONObject, param1: string): java.util.UUID;
							public getTransStatus$3ds2sdk_release(param0: org.json.JSONObject): com.stripe.android.stripe3ds2.transaction.TransactionStatus;
							public getResendInformationLabel$3ds2sdk_release(param0: org.json.JSONObject): string;
							public getMessageExtensions$3ds2sdk_release(param0: org.json.JSONObject): java.util.List<com.stripe.android.stripe3ds2.transactions.MessageExtension>;
							public getChallengeSelectInfoArray$3ds2sdk_release(param0: org.json.JSONObject): org.json.JSONArray;
							public getSubmitAuthenticationLabel$3ds2sdk_release(param0: org.json.JSONObject, param1: com.stripe.android.stripe3ds2.transactions.UiType): string;
							public getOobContinueLabel$3ds2sdk_release(param0: org.json.JSONObject, param1: com.stripe.android.stripe3ds2.transactions.UiType): string;
							public getUiType$3ds2sdk_release(param0: org.json.JSONObject): com.stripe.android.stripe3ds2.transactions.UiType;
							public getMessageVersion$3ds2sdk_release(param0: org.json.JSONObject): string;
							public fromJson$3ds2sdk_release(param0: org.json.JSONObject): com.stripe.android.stripe3ds2.transactions.ChallengeResponseData;
							public getYesNoValue$3ds2sdk_release(param0: org.json.JSONObject, param1: string, param2: boolean): boolean;
							public checkFinalCresFields$3ds2sdk_release(param0: org.json.JSONObject): void;
							public getDecodedAcsHtml$3ds2sdk_release(param0: org.json.JSONObject, param1: com.stripe.android.stripe3ds2.transactions.UiType): string;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transactions.ChallengeResponseData> {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transactions.ChallengeResponseData.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.stripe3ds2.transactions.ChallengeResponseData;
							public newArray(param0: number): androidNative.Array<com.stripe.android.stripe3ds2.transactions.ChallengeResponseData>;
						}
						export class Image {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transactions.ChallengeResponseData.Image>;
							public static Companion: com.stripe.android.stripe3ds2.transactions.ChallengeResponseData.Image.Companion;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transactions.ChallengeResponseData.Image>;
							public component3$3ds2sdk_release(): string;
							public hashCode(): number;
							public getMediumUrl$3ds2sdk_release(): string;
							public getHighUrl$3ds2sdk_release(): string;
							public toString(): string;
							public getHighestFidelityImageUrl(): string;
							public toJson$3ds2sdk_release(): org.json.JSONObject;
							public getUrlForDensity(param0: number): string;
							public copy(param0: string, param1: string, param2: string): com.stripe.android.stripe3ds2.transactions.ChallengeResponseData.Image;
							public component2$3ds2sdk_release(): string;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public getExtraHighUrl$3ds2sdk_release(): string;
							public describeContents(): number;
							public constructor(param0: string, param1: string, param2: string);
							public component1$3ds2sdk_release(): string;
							public equals(param0: any): boolean;
						}
						export module Image {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.stripe3ds2.transactions.ChallengeResponseData.Image.Companion>;
								public fromJson$3ds2sdk_release(param0: org.json.JSONObject): com.stripe.android.stripe3ds2.transactions.ChallengeResponseData.Image;
							}
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transactions.ChallengeResponseData.Image> {
								public static class: java.lang.Class<com.stripe.android.stripe3ds2.transactions.ChallengeResponseData.Image.Creator>;
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.stripe3ds2.transactions.ChallengeResponseData.Image;
								public constructor();
								public newArray(param0: number): androidNative.Array<com.stripe.android.stripe3ds2.transactions.ChallengeResponseData.Image>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transactions {
					export class ChallengeResponseParseException {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transactions.ChallengeResponseParseException>;
						public static Companion: com.stripe.android.stripe3ds2.transactions.ChallengeResponseParseException.Companion;
						public constructor(param0: com.stripe.android.stripe3ds2.transactions.ProtocolError, param1: string);
						public static createRequiredDataElementMissing(param0: string): com.stripe.android.stripe3ds2.transactions.ChallengeResponseParseException;
						public getCode(): number;
						public static createInvalidDataElementFormat(param0: string): com.stripe.android.stripe3ds2.transactions.ChallengeResponseParseException;
						public constructor(param0: number, param1: string, param2: string);
						public getDescription(): string;
						public getDetail(): string;
					}
					export module ChallengeResponseParseException {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transactions.ChallengeResponseParseException.Companion>;
							public createRequiredDataElementMissing(param0: string): com.stripe.android.stripe3ds2.transactions.ChallengeResponseParseException;
							public createInvalidDataElementFormat(param0: string): com.stripe.android.stripe3ds2.transactions.ChallengeResponseParseException;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transactions {
					export class ErrorData {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transactions.ErrorData>;
						public static Companion: com.stripe.android.stripe3ds2.transactions.ErrorData.Companion;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transactions.ErrorData>;
						public getErrorDetail(): string;
						public getErrorDescription(): string;
						public getServerTransId(): string;
						public component10(): com.stripe.android.stripe3ds2.transaction.SdkTransactionId;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public getErrorCode(): string;
						public toJson$3ds2sdk_release(): org.json.JSONObject;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public component9(): string;
						public getMessageVersion(): string;
						public component4(): string;
						public getErrorMessageType(): string;
						public copy(param0: string, param1: string, param2: string, param3: string, param4: com.stripe.android.stripe3ds2.transactions.ErrorData.ErrorComponent, param5: string, param6: string, param7: string, param8: string, param9: com.stripe.android.stripe3ds2.transaction.SdkTransactionId): com.stripe.android.stripe3ds2.transactions.ErrorData;
						public getAcsTransId(): string;
						public component8(): string;
						public getErrorComponent(): com.stripe.android.stripe3ds2.transactions.ErrorData.ErrorComponent;
						public component3(): string;
						public describeContents(): number;
						public component5(): com.stripe.android.stripe3ds2.transactions.ErrorData.ErrorComponent;
						public component7(): string;
						public getSdkTransId(): com.stripe.android.stripe3ds2.transaction.SdkTransactionId;
						public toString(): string;
						public component2(): string;
						public component6(): string;
						public getDsTransId(): string;
						public constructor(param0: string, param1: string, param2: string, param3: string, param4: com.stripe.android.stripe3ds2.transactions.ErrorData.ErrorComponent, param5: string, param6: string, param7: string, param8: string, param9: com.stripe.android.stripe3ds2.transaction.SdkTransactionId);
					}
					export module ErrorData {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transactions.ErrorData.Companion>;
							public isErrorMessage$3ds2sdk_release(param0: org.json.JSONObject): boolean;
							public fromJson$3ds2sdk_release(param0: org.json.JSONObject): com.stripe.android.stripe3ds2.transactions.ErrorData;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transactions.ErrorData> {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transactions.ErrorData.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.stripe3ds2.transactions.ErrorData>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.stripe3ds2.transactions.ErrorData;
						}
						export class ErrorComponent {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transactions.ErrorData.ErrorComponent>;
							public static Companion: com.stripe.android.stripe3ds2.transactions.ErrorData.ErrorComponent.Companion;
							public static ThreeDsSdk: com.stripe.android.stripe3ds2.transactions.ErrorData.ErrorComponent;
							public static ThreeDsServer: com.stripe.android.stripe3ds2.transactions.ErrorData.ErrorComponent;
							public static DirectoryServer: com.stripe.android.stripe3ds2.transactions.ErrorData.ErrorComponent;
							public static Acs: com.stripe.android.stripe3ds2.transactions.ErrorData.ErrorComponent;
							public getCode(): string;
							public static values(): androidNative.Array<com.stripe.android.stripe3ds2.transactions.ErrorData.ErrorComponent>;
							public static valueOf(param0: string): com.stripe.android.stripe3ds2.transactions.ErrorData.ErrorComponent;
						}
						export module ErrorComponent {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.stripe3ds2.transactions.ErrorData.ErrorComponent.Companion>;
								public fromCode(param0: string): com.stripe.android.stripe3ds2.transactions.ErrorData.ErrorComponent;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transactions {
					export class MessageExtension {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transactions.MessageExtension>;
						public static Companion: com.stripe.android.stripe3ds2.transactions.MessageExtension.Companion;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transactions.MessageExtension>;
						public static FIELD_NAME: string;
						public static FIELD_ID: string;
						public static FIELD_CRITICALITY_INDICATOR: string;
						public static FIELD_DATA: string;
						public constructor(param0: string, param1: string, param2: boolean, param3: java.util.Map<string, string>);
						public component3(): boolean;
						public describeContents(): number;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public static toJsonArray(param0: java.util.List<com.stripe.android.stripe3ds2.transactions.MessageExtension>): org.json.JSONArray;
						public toJson$3ds2sdk_release(): org.json.JSONObject;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getCriticalityIndicator(): boolean;
						public getName(): string;
						public toString(): string;
						public copy(param0: string, param1: string, param2: boolean, param3: java.util.Map<string, string>): com.stripe.android.stripe3ds2.transactions.MessageExtension;
						public static fromJson(param0: org.json.JSONArray): java.util.List<com.stripe.android.stripe3ds2.transactions.MessageExtension>;
						public component2$3ds2sdk_release(): string;
						public isProcessable(): boolean;
						public getId$3ds2sdk_release(): string;
					}
					export module MessageExtension {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transactions.MessageExtension.Companion>;
							public fromJson(param0: org.json.JSONArray): java.util.List<com.stripe.android.stripe3ds2.transactions.MessageExtension>;
							public toJsonArray(param0: java.util.List<com.stripe.android.stripe3ds2.transactions.MessageExtension>): org.json.JSONArray;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.transactions.MessageExtension> {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transactions.MessageExtension.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.stripe3ds2.transactions.MessageExtension>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.stripe3ds2.transactions.MessageExtension;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transactions {
					export class ProtocolError {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transactions.ProtocolError>;
						public static InvalidMessageReceived: com.stripe.android.stripe3ds2.transactions.ProtocolError;
						public static UnsupportedMessageVersion: com.stripe.android.stripe3ds2.transactions.ProtocolError;
						public static RequiredDataElementMissing: com.stripe.android.stripe3ds2.transactions.ProtocolError;
						public static UnrecognizedCriticalMessageExtensions: com.stripe.android.stripe3ds2.transactions.ProtocolError;
						public static InvalidDataElementFormat: com.stripe.android.stripe3ds2.transactions.ProtocolError;
						public static InvalidTransactionId: com.stripe.android.stripe3ds2.transactions.ProtocolError;
						public static DataDecryptionFailure: com.stripe.android.stripe3ds2.transactions.ProtocolError;
						public static TransactionTimedout: com.stripe.android.stripe3ds2.transactions.ProtocolError;
						public static values(): androidNative.Array<com.stripe.android.stripe3ds2.transactions.ProtocolError>;
						public getCode(): number;
						public getDescription(): string;
						public static valueOf(param0: string): com.stripe.android.stripe3ds2.transactions.ProtocolError;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module transactions {
					export class UiType {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.transactions.UiType>;
						public static Companion: com.stripe.android.stripe3ds2.transactions.UiType.Companion;
						public static Text: com.stripe.android.stripe3ds2.transactions.UiType;
						public static SingleSelect: com.stripe.android.stripe3ds2.transactions.UiType;
						public static MultiSelect: com.stripe.android.stripe3ds2.transactions.UiType;
						public static OutOfBand: com.stripe.android.stripe3ds2.transactions.UiType;
						public static Html: com.stripe.android.stripe3ds2.transactions.UiType;
						public static values(): androidNative.Array<com.stripe.android.stripe3ds2.transactions.UiType>;
						public getRequiresSubmitButton$3ds2sdk_release(): boolean;
						public static valueOf(param0: string): com.stripe.android.stripe3ds2.transactions.UiType;
						public getCode(): string;
					}
					export module UiType {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.transactions.UiType.Companion>;
							public fromCode$3ds2sdk_release(param0: string): com.stripe.android.stripe3ds2.transactions.UiType;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module utils {
					export class CustomizeUtils {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.utils.CustomizeUtils>;
						public static INSTANCE: com.stripe.android.stripe3ds2.utils.CustomizeUtils;
						public setStatusBarColor(param0: androidx.appcompat.app.AppCompatActivity, param1: number): void;
						public buildStyledText(param0: globalAndroid.content.Context, param1: string, param2: com.stripe.android.stripe3ds2.init.ui.Customization): globalAndroid.text.SpannableString;
						public static requireValidDimension(param0: number): number;
						public static requireValidString(param0: string): string;
						public darken$3ds2sdk_release(param0: number, param1: number): number;
						public static colorIntToHex(param0: number): string;
						public static requireValidFontSize(param0: number): number;
						public darken$3ds2sdk_release(param0: number): number;
						public static requireValidColor(param0: string): string;
						public applyProgressBarColor$3ds2sdk_release(param0: globalAndroid.widget.ProgressBar, param1: com.stripe.android.stripe3ds2.init.ui.UiCustomization): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module utils {
					export class Factory0<T> extends java.lang.Object {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.utils.Factory0<any>>;
						/**
						 * Constructs a new instance of the com.stripe.android.stripe3ds2.utils.Factory0<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							create(): T;
						});
						public constructor();
						public create(): T;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module utils {
					export class ImageCache {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.utils.ImageCache>;
						/**
						 * Constructs a new instance of the com.stripe.android.stripe3ds2.utils.ImageCache interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							clear(): void;
							get(param0: string): globalAndroid.graphics.Bitmap;
							set(param0: string, param1: globalAndroid.graphics.Bitmap): void;
						});
						public constructor();
						public set(param0: string, param1: globalAndroid.graphics.Bitmap): void;
						public clear(): void;
						public get(param0: string): globalAndroid.graphics.Bitmap;
					}
					export module ImageCache {
						export class Default extends com.stripe.android.stripe3ds2.utils.ImageCache {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.utils.ImageCache.Default>;
							public static INSTANCE: com.stripe.android.stripe3ds2.utils.ImageCache.Default;
							public get(param0: string): globalAndroid.graphics.Bitmap;
							public clear(): void;
							public getCache$3ds2sdk_release(): globalAndroid.util.LruCache<string, globalAndroid.graphics.Bitmap>;
							public set(param0: string, param1: globalAndroid.graphics.Bitmap): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module utils {
					export class ObjectUtils {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.utils.ObjectUtils>;
						public static INSTANCE: com.stripe.android.stripe3ds2.utils.ObjectUtils;
						public static equals(param0: any, param1: any): boolean;
						public static hash(param0: androidNative.Array<any>): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module utils {
					export class Supplier<SuppliedType> extends java.lang.Object {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.utils.Supplier<any>>;
						/**
						 * Constructs a new instance of the com.stripe.android.stripe3ds2.utils.Supplier<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							get(): SuppliedType;
						});
						public constructor();
						public get(): SuppliedType;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module views {
					export class AnimationConstants {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.views.AnimationConstants>;
						public static INSTANCE: com.stripe.android.stripe3ds2.views.AnimationConstants;
						public getSLIDE_IN(): number;
						public getSLIDE_OUT(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module views {
					export class Brand {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.views.Brand>;
						public static Companion: com.stripe.android.stripe3ds2.views.Brand.Companion;
						public static Visa: com.stripe.android.stripe3ds2.views.Brand;
						public static Mastercard: com.stripe.android.stripe3ds2.views.Brand;
						public static Amex: com.stripe.android.stripe3ds2.views.Brand;
						public static Discover: com.stripe.android.stripe3ds2.views.Brand;
						public static CartesBancaires: com.stripe.android.stripe3ds2.views.Brand;
						public static UnionPay: com.stripe.android.stripe3ds2.views.Brand;
						public static Unknown: com.stripe.android.stripe3ds2.views.Brand;
						public getDirectoryServerName$3ds2sdk_release(): string;
						public getNameResId$3ds2sdk_release(): java.lang.Integer;
						public getShouldStretch$3ds2sdk_release(): boolean;
						public getDrawableResId$3ds2sdk_release(): number;
						public static valueOf(param0: string): com.stripe.android.stripe3ds2.views.Brand;
						public static values(): androidNative.Array<com.stripe.android.stripe3ds2.views.Brand>;
					}
					export module Brand {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.views.Brand.Companion>;
							public lookup$3ds2sdk_release(param0: string, param1: com.stripe.android.stripe3ds2.observability.ErrorReporter): com.stripe.android.stripe3ds2.views.Brand;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module views {
					export class BrandZoneView {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.views.BrandZoneView>;
						public constructor(param0: globalAndroid.content.Context);
						public getPaymentSystemImageView$3ds2sdk_release(): globalAndroid.widget.ImageView;
						public getIssuerImageView$3ds2sdk_release(): globalAndroid.widget.ImageView;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module views {
					export class ChallengeActivity {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.views.ChallengeActivity>;
						public constructor();
						public getFragmentViewBinding$3ds2sdk_release(): com.stripe.android.stripe3ds2.databinding.StripeChallengeFragmentBinding;
						public getViewBinding$3ds2sdk_release(): com.stripe.android.stripe3ds2.databinding.StripeChallengeActivityBinding;
						public onDestroy(): void;
						public getViewModel$3ds2sdk_release(): com.stripe.android.stripe3ds2.views.ChallengeActivityViewModel;
						public getFragment$3ds2sdk_release(): com.stripe.android.stripe3ds2.views.ChallengeFragment;
						public onResume(): void;
						public onCreate(param0: globalAndroid.os.Bundle): void;
						public onTrimMemory(param0: number): void;
						public onLowMemory(): void;
						public onPause(): void;
					}
					export module ChallengeActivity {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.views.ChallengeActivity.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module views {
					export class ChallengeActivityViewModel {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.views.ChallengeActivityViewModel>;
						public getTransactionTimerJob$3ds2sdk_release(): kotlinx.coroutines.Job;
						public submit(param0: com.stripe.android.stripe3ds2.transaction.ChallengeAction): void;
						public constructor(param0: com.stripe.android.stripe3ds2.transaction.ChallengeActionHandler, param1: com.stripe.android.stripe3ds2.transaction.TransactionTimer, param2: com.stripe.android.stripe3ds2.observability.ErrorReporter, param3: com.stripe.android.stripe3ds2.utils.ImageCache, param4: kotlin.coroutines.CoroutineContext);
						public getSubmitClicked(): androidx.lifecycle.LiveData<com.stripe.android.stripe3ds2.transaction.ChallengeAction>;
						public getShouldFinish(): androidx.lifecycle.LiveData<com.stripe.android.stripe3ds2.transaction.ChallengeResult>;
						public stopTimer(): void;
						public getImage(param0: com.stripe.android.stripe3ds2.transactions.ChallengeResponseData.Image, param1: number): androidx.lifecycle.LiveData<globalAndroid.graphics.Bitmap>;
						public setShouldRefreshUi(param0: boolean): void;
						public getTimeout(): androidx.lifecycle.LiveData<java.lang.Boolean>;
						public getChallengeRequestResult(): androidx.lifecycle.LiveData<com.stripe.android.stripe3ds2.transaction.ChallengeRequestResult>;
						public onSubmitClicked(param0: com.stripe.android.stripe3ds2.transaction.ChallengeAction): void;
						public getNextScreen(): androidx.lifecycle.LiveData<com.stripe.android.stripe3ds2.transactions.ChallengeResponseData>;
						public onRefreshUi(): void;
						public onFinish(param0: com.stripe.android.stripe3ds2.transaction.ChallengeResult): void;
						public onNextScreen(param0: com.stripe.android.stripe3ds2.transactions.ChallengeResponseData): void;
						public getRefreshUi(): androidx.lifecycle.LiveData<kotlin.Unit>;
						public updateChallengeText(param0: string): void;
						public onMemoryEvent(): void;
						public getChallengeText(): androidx.lifecycle.LiveData<string>;
						public getShouldRefreshUi(): boolean;
					}
					export module ChallengeActivityViewModel {
						export class Factory {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.views.ChallengeActivityViewModel.Factory>;
							public constructor(param0: com.stripe.android.stripe3ds2.transaction.ChallengeActionHandler, param1: com.stripe.android.stripe3ds2.transaction.TransactionTimer, param2: com.stripe.android.stripe3ds2.observability.ErrorReporter, param3: kotlin.coroutines.CoroutineContext);
							public create(param0: java.lang.Class): androidx.lifecycle.ViewModel;
						}
						export class OnInactiveAwareMutableLiveData<T> extends androidx.lifecycle.MutableLiveData<any> {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.views.ChallengeActivityViewModel.OnInactiveAwareMutableLiveData<any>>;
							public constructor();
							public onInactive(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module views {
					export class ChallengeEntryViewFactory {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.views.ChallengeEntryViewFactory>;
						public constructor(param0: globalAndroid.content.Context);
						public createChallengeEntrySelectView(param0: com.stripe.android.stripe3ds2.transactions.ChallengeResponseData, param1: com.stripe.android.stripe3ds2.init.ui.UiCustomization): com.stripe.android.stripe3ds2.views.ChallengeZoneSelectView;
						public createChallengeEntryWebView(param0: com.stripe.android.stripe3ds2.transactions.ChallengeResponseData): com.stripe.android.stripe3ds2.views.ChallengeZoneWebView;
						public createChallengeEntryTextView(param0: com.stripe.android.stripe3ds2.transactions.ChallengeResponseData, param1: com.stripe.android.stripe3ds2.init.ui.UiCustomization): com.stripe.android.stripe3ds2.views.ChallengeZoneTextView;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module views {
					export class ChallengeFragment {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.views.ChallengeFragment>;
						public static Companion: com.stripe.android.stripe3ds2.views.ChallengeFragment.Companion;
						public static ARG_CRES: string;
						public onDestroyView(): void;
						public constructor(param0: com.stripe.android.stripe3ds2.init.ui.StripeUiCustomization, param1: com.stripe.android.stripe3ds2.transaction.TransactionTimer, param2: com.stripe.android.stripe3ds2.transaction.ErrorRequestExecutor, param3: com.stripe.android.stripe3ds2.observability.ErrorReporter, param4: com.stripe.android.stripe3ds2.transaction.ChallengeActionHandler, param5: com.stripe.android.stripe3ds2.transactions.UiType, param6: com.stripe.android.stripe3ds2.transaction.IntentData, param7: kotlin.coroutines.CoroutineContext);
						public getChallengeZoneSelectView$3ds2sdk_release(): com.stripe.android.stripe3ds2.views.ChallengeZoneSelectView;
						public clickSubmitButton(): void;
						public onViewCreated(param0: globalAndroid.view.View, param1: globalAndroid.os.Bundle): void;
						public getViewModel$3ds2sdk_release(): com.stripe.android.stripe3ds2.views.ChallengeActivityViewModel;
						public getChallengeZoneWebView$3ds2sdk_release(): com.stripe.android.stripe3ds2.views.ChallengeZoneWebView;
						public getChallengeZoneTextView$3ds2sdk_release(): com.stripe.android.stripe3ds2.views.ChallengeZoneTextView;
						public getViewBinding$3ds2sdk_release(): com.stripe.android.stripe3ds2.databinding.StripeChallengeFragmentBinding;
						public refreshUi(): void;
						public getUserEntry$3ds2sdk_release(): string;
					}
					export module ChallengeFragment {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.views.ChallengeFragment.Companion>;
						}
						export class WhenMappings {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.views.ChallengeFragment.WhenMappings>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module views {
					export class ChallengeFragmentFactory {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.views.ChallengeFragmentFactory>;
						public constructor(param0: com.stripe.android.stripe3ds2.init.ui.StripeUiCustomization, param1: com.stripe.android.stripe3ds2.transaction.TransactionTimer, param2: com.stripe.android.stripe3ds2.transaction.ErrorRequestExecutor, param3: com.stripe.android.stripe3ds2.observability.ErrorReporter, param4: com.stripe.android.stripe3ds2.transaction.ChallengeActionHandler, param5: com.stripe.android.stripe3ds2.transactions.UiType, param6: com.stripe.android.stripe3ds2.transaction.IntentData, param7: kotlin.coroutines.CoroutineContext);
						public instantiate(param0: java.lang.ClassLoader, param1: string): androidx.fragment.app.Fragment;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module views {
					export class ChallengeProgressArgs {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.views.ChallengeProgressArgs>;
						public static Companion: com.stripe.android.stripe3ds2.views.ChallengeProgressArgs.Companion;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.views.ChallengeProgressArgs>;
						public describeContents(): number;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public component1(): string;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public component3(): com.stripe.android.stripe3ds2.transaction.SdkTransactionId;
						public component2(): java.lang.Integer;
						public getSdkTransactionId(): com.stripe.android.stripe3ds2.transaction.SdkTransactionId;
						public getDirectoryServerName(): string;
						public toBundle(): globalAndroid.os.Bundle;
						public toString(): string;
						public getAccentColor(): java.lang.Integer;
						public constructor(param0: string, param1: java.lang.Integer, param2: com.stripe.android.stripe3ds2.transaction.SdkTransactionId);
						public copy(param0: string, param1: java.lang.Integer, param2: com.stripe.android.stripe3ds2.transaction.SdkTransactionId): com.stripe.android.stripe3ds2.views.ChallengeProgressArgs;
					}
					export module ChallengeProgressArgs {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.views.ChallengeProgressArgs.Companion>;
							public fromBundle(param0: globalAndroid.os.Bundle): com.stripe.android.stripe3ds2.views.ChallengeProgressArgs;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.views.ChallengeProgressArgs> {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.views.ChallengeProgressArgs.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.stripe3ds2.views.ChallengeProgressArgs>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.stripe3ds2.views.ChallengeProgressArgs;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module views {
					export class ChallengeProgressFragment {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.views.ChallengeProgressFragment>;
						public onViewCreated(param0: globalAndroid.view.View, param1: globalAndroid.os.Bundle): void;
						public constructor(param0: string, param1: com.stripe.android.stripe3ds2.transaction.SdkTransactionId, param2: java.lang.Integer);
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module views {
					export class ChallengeProgressFragmentFactory {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.views.ChallengeProgressFragmentFactory>;
						public constructor(param0: string, param1: com.stripe.android.stripe3ds2.transaction.SdkTransactionId, param2: java.lang.Integer);
						public instantiate(param0: java.lang.ClassLoader, param1: string): androidx.fragment.app.Fragment;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module views {
					export class ChallengeSubmitDialogFactory extends com.stripe.android.stripe3ds2.utils.Factory0<globalAndroid.app.Dialog> {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.views.ChallengeSubmitDialogFactory>;
						public create(): globalAndroid.app.Dialog;
						public constructor(param0: globalAndroid.content.Context, param1: com.stripe.android.stripe3ds2.init.ui.UiCustomization);
						public create(): any;
					}
					export module ChallengeSubmitDialogFactory {
						export class ChallengeSubmitDialog {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.views.ChallengeSubmitDialogFactory.ChallengeSubmitDialog>;
							public constructor(param0: globalAndroid.content.Context, param1: com.stripe.android.stripe3ds2.init.ui.UiCustomization);
							public onStart(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module views {
					export class ChallengeViewArgs {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.views.ChallengeViewArgs>;
						public static Companion: com.stripe.android.stripe3ds2.views.ChallengeViewArgs.Companion;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.views.ChallengeViewArgs>;
						public component6$3ds2sdk_release(): number;
						public getCreqData$3ds2sdk_release(): com.stripe.android.stripe3ds2.transactions.ChallengeRequestData;
						public describeContents(): number;
						public component7$3ds2sdk_release(): com.stripe.android.stripe3ds2.transaction.IntentData;
						public component1$3ds2sdk_release(): com.stripe.android.stripe3ds2.transactions.ChallengeResponseData;
						public component2$3ds2sdk_release(): com.stripe.android.stripe3ds2.transactions.ChallengeRequestData;
						public copy(param0: com.stripe.android.stripe3ds2.transactions.ChallengeResponseData, param1: com.stripe.android.stripe3ds2.transactions.ChallengeRequestData, param2: com.stripe.android.stripe3ds2.init.ui.StripeUiCustomization, param3: com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor.Config, param4: com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor.Factory, param5: number, param6: com.stripe.android.stripe3ds2.transaction.IntentData): com.stripe.android.stripe3ds2.views.ChallengeViewArgs;
						public component5$3ds2sdk_release(): com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor.Factory;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getCreqExecutorConfig$3ds2sdk_release(): com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor.Config;
						public getCreqExecutorFactory$3ds2sdk_release(): com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor.Factory;
						public constructor(param0: com.stripe.android.stripe3ds2.transactions.ChallengeResponseData, param1: com.stripe.android.stripe3ds2.transactions.ChallengeRequestData, param2: com.stripe.android.stripe3ds2.init.ui.StripeUiCustomization, param3: com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor.Config, param4: com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor.Factory, param5: number, param6: com.stripe.android.stripe3ds2.transaction.IntentData);
						public getSdkTransactionId$3ds2sdk_release(): com.stripe.android.stripe3ds2.transaction.SdkTransactionId;
						public toBundle(): globalAndroid.os.Bundle;
						public toString(): string;
						public component3$3ds2sdk_release(): com.stripe.android.stripe3ds2.init.ui.StripeUiCustomization;
						public getIntentData$3ds2sdk_release(): com.stripe.android.stripe3ds2.transaction.IntentData;
						public component4$3ds2sdk_release(): com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor.Config;
						public getUiCustomization$3ds2sdk_release(): com.stripe.android.stripe3ds2.init.ui.StripeUiCustomization;
						public getTimeoutMins$3ds2sdk_release(): number;
						public getCresData$3ds2sdk_release(): com.stripe.android.stripe3ds2.transactions.ChallengeResponseData;
					}
					export module ChallengeViewArgs {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.views.ChallengeViewArgs.Companion>;
							public create(param0: globalAndroid.os.Bundle): com.stripe.android.stripe3ds2.views.ChallengeViewArgs;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.stripe3ds2.views.ChallengeViewArgs> {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.views.ChallengeViewArgs.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.stripe3ds2.views.ChallengeViewArgs>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.stripe3ds2.views.ChallengeViewArgs;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module views {
					export class ChallengeZoneSelectView implements com.stripe.android.stripe3ds2.views.FormField {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.views.ChallengeZoneSelectView>;
						public isSingleSelectMode(): boolean;
						public getSelectedIndexes$3ds2sdk_release(): java.util.List<java.lang.Integer>;
						public getUserEntry(): string;
						public constructor(param0: globalAndroid.content.Context);
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: boolean);
						public buildButton$3ds2sdk_release(param0: com.stripe.android.stripe3ds2.transactions.ChallengeResponseData.ChallengeSelectOption, param1: com.stripe.android.stripe3ds2.init.ui.ButtonCustomization, param2: boolean): globalAndroid.widget.CompoundButton;
						public getSelectGroup$3ds2sdk_release(): globalAndroid.widget.LinearLayout;
						public getSelectedOptions(): java.util.List<com.stripe.android.stripe3ds2.transactions.ChallengeResponseData.ChallengeSelectOption>;
						public selectOption(param0: number): void;
						public getInfoLabel$3ds2sdk_release(): com.stripe.android.stripe3ds2.views.ThreeDS2TextView;
						public getCheckBoxes(): java.util.List<globalAndroid.widget.CheckBox>;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
						public onSaveInstanceState(): globalAndroid.os.Parcelable;
						public setTextEntryLabel(param0: string, param1: com.stripe.android.stripe3ds2.init.ui.LabelCustomization): void;
						public onRestoreInstanceState(param0: globalAndroid.os.Parcelable): void;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
						public setChallengeSelectOptions(param0: java.util.List<com.stripe.android.stripe3ds2.transactions.ChallengeResponseData.ChallengeSelectOption>, param1: com.stripe.android.stripe3ds2.init.ui.ButtonCustomization): void;
					}
					export module ChallengeZoneSelectView {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.views.ChallengeZoneSelectView.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module views {
					export class ChallengeZoneTextView implements com.stripe.android.stripe3ds2.views.FormField {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.views.ChallengeZoneTextView>;
						public getTextEntryView$3ds2sdk_release(): com.google.android.material.textfield.TextInputEditText;
						public getUserEntry(): string;
						public constructor(param0: globalAndroid.content.Context);
						public setText(param0: string): void;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
						public getInfoLabel$3ds2sdk_release(): com.google.android.material.textfield.TextInputLayout;
						public setTextBoxCustomization(param0: com.stripe.android.stripe3ds2.init.ui.TextBoxCustomization): void;
						public setTextEntryLabel(param0: string): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module views {
					export class ChallengeZoneView {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.views.ChallengeZoneView>;
						public getWhitelistingLabel$3ds2sdk_release(): com.stripe.android.stripe3ds2.views.ThreeDS2TextView;
						public constructor(param0: globalAndroid.content.Context);
						public setInfoText(param0: string, param1: com.stripe.android.stripe3ds2.init.ui.LabelCustomization): void;
						public setSubmitButton(param0: string, param1: com.stripe.android.stripe3ds2.init.ui.ButtonCustomization): void;
						public setChallengeEntryView(param0: globalAndroid.view.View): void;
						public getWhitelistYesRadioButton$3ds2sdk_release(): globalAndroid.widget.RadioButton;
						public setInfoHeaderText(param0: string, param1: com.stripe.android.stripe3ds2.init.ui.LabelCustomization): void;
						public getInfoHeader$3ds2sdk_release(): com.stripe.android.stripe3ds2.views.ThreeDS2HeaderTextView;
						public getWhitelistRadioGroup$3ds2sdk_release(): globalAndroid.widget.RadioGroup;
						public getResendButton$3ds2sdk_release(): com.stripe.android.stripe3ds2.views.ThreeDS2Button;
						public setResendButtonClickListener(param0: globalAndroid.view.View.OnClickListener): void;
						public getWhitelistingSelection$3ds2sdk_release(): boolean;
						public setInfoTextIndicator(param0: number): void;
						public setWhitelistingLabel(param0: string, param1: com.stripe.android.stripe3ds2.init.ui.LabelCustomization, param2: com.stripe.android.stripe3ds2.init.ui.ButtonCustomization): void;
						public setResendButtonLabel(param0: string, param1: com.stripe.android.stripe3ds2.init.ui.ButtonCustomization): void;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
						public getChallengeEntryView$3ds2sdk_release(): globalAndroid.widget.FrameLayout;
						public getSubmitButton$3ds2sdk_release(): com.stripe.android.stripe3ds2.views.ThreeDS2Button;
						public getWhitelistNoRadioButton$3ds2sdk_release(): globalAndroid.widget.RadioButton;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
						public setSubmitButtonClickListener(param0: globalAndroid.view.View.OnClickListener): void;
						public getInfoTextView$3ds2sdk_release(): com.stripe.android.stripe3ds2.views.ThreeDS2TextView;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module views {
					export class ChallengeZoneWebView implements com.stripe.android.stripe3ds2.views.FormField {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.views.ChallengeZoneWebView>;
						public getUserEntry(): string;
						public getOnClickListener$3ds2sdk_release(): globalAndroid.view.View.OnClickListener;
						public constructor(param0: globalAndroid.content.Context);
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
						public transformHtml$3ds2sdk_release(param0: string): string;
						public loadHtml(param0: string): void;
						public getWebView(): com.stripe.android.stripe3ds2.views.ThreeDS2WebView;
						public setOnClickListener$3ds2sdk_release(param0: globalAndroid.view.View.OnClickListener): void;
						public setOnClickListener(param0: globalAndroid.view.View.OnClickListener): void;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					}
					export module ChallengeZoneWebView {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.views.ChallengeZoneWebView.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module views {
					export class FormField {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.views.FormField>;
						/**
						 * Constructs a new instance of the com.stripe.android.stripe3ds2.views.FormField interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getUserEntry(): string;
						});
						public constructor();
						public getUserEntry(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module views {
					export class HeaderZoneCustomizer {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.views.HeaderZoneCustomizer>;
						public static Companion: com.stripe.android.stripe3ds2.views.HeaderZoneCustomizer.Companion;
						public constructor(param0: androidx.fragment.app.FragmentActivity);
						public customize(param0: com.stripe.android.stripe3ds2.init.ui.ToolbarCustomization, param1: com.stripe.android.stripe3ds2.init.ui.ButtonCustomization): com.stripe.android.stripe3ds2.views.ThreeDS2Button;
					}
					export module HeaderZoneCustomizer {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.views.HeaderZoneCustomizer.Companion>;
							public customizeStatusBar(param0: androidx.appcompat.app.AppCompatActivity, param1: com.stripe.android.stripe3ds2.init.ui.ToolbarCustomization): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module views {
					export class ImageRepository {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.views.ImageRepository>;
						public constructor(param0: kotlin.coroutines.CoroutineContext, param1: com.stripe.android.stripe3ds2.utils.ImageCache, param2: com.stripe.android.stripe3ds2.views.ImageRepository.ImageSupplier);
						public getImage$3ds2sdk_release(param0: string, param1: kotlin.coroutines.Continuation<any>): any;
						public constructor(param0: com.stripe.android.stripe3ds2.observability.ErrorReporter, param1: kotlin.coroutines.CoroutineContext);
					}
					export module ImageRepository {
						export class ImageSupplier {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.views.ImageRepository.ImageSupplier>;
							/**
							 * Constructs a new instance of the com.stripe.android.stripe3ds2.views.ImageRepository$ImageSupplier interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getBitmap(param0: string, param1: kotlin.coroutines.Continuation<any>): any;
							});
							public constructor();
							public getBitmap(param0: string, param1: kotlin.coroutines.Continuation<any>): any;
						}
						export module ImageSupplier {
							export class Default extends com.stripe.android.stripe3ds2.views.ImageRepository.ImageSupplier {
								public static class: java.lang.Class<com.stripe.android.stripe3ds2.views.ImageRepository.ImageSupplier.Default>;
								public getBitmap(param0: string, param1: kotlin.coroutines.Continuation<any>): any;
								public constructor(param0: com.stripe.android.stripe3ds2.observability.ErrorReporter, param1: kotlin.coroutines.CoroutineContext);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module views {
					export class InformationZoneView {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.views.InformationZoneView>;
						public getToggleColor$3ds2sdk_release(): number;
						public setExpandInfo(param0: string, param1: string, param2: com.stripe.android.stripe3ds2.init.ui.LabelCustomization): void;
						public constructor(param0: globalAndroid.content.Context);
						public setToggleColor$3ds2sdk_release(param0: number): void;
						public getWhyContainer$3ds2sdk_release(): globalAndroid.widget.LinearLayout;
						public setWhyInfo(param0: string, param1: string, param2: com.stripe.android.stripe3ds2.init.ui.LabelCustomization): void;
						public getExpandArrow$3ds2sdk_release(): androidx.appcompat.widget.AppCompatImageView;
						public getExpandText$3ds2sdk_release(): com.stripe.android.stripe3ds2.views.ThreeDS2TextView;
						public getWhyLabel$3ds2sdk_release(): com.stripe.android.stripe3ds2.views.ThreeDS2TextView;
						public expandViews(): void;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
						public getExpandContainer$3ds2sdk_release(): globalAndroid.widget.LinearLayout;
						public getWhyArrow$3ds2sdk_release(): androidx.appcompat.widget.AppCompatImageView;
						public getWhyText$3ds2sdk_release(): com.stripe.android.stripe3ds2.views.ThreeDS2TextView;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
						public getExpandLabel$3ds2sdk_release(): com.stripe.android.stripe3ds2.views.ThreeDS2TextView;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module views {
					export class KeyboardController {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.views.KeyboardController>;
						public constructor(param0: androidx.fragment.app.FragmentActivity);
						public hide(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module views {
					export class ThreeDS2Button {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.views.ThreeDS2Button>;
						public constructor(param0: globalAndroid.content.Context);
						public parseColor$3ds2sdk_release(param0: string): number;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
						public setButtonCustomization(param0: com.stripe.android.stripe3ds2.init.ui.ButtonCustomization): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module views {
					export class ThreeDS2HeaderTextView extends com.stripe.android.stripe3ds2.views.ThreeDS2TextView {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.views.ThreeDS2HeaderTextView>;
						public constructor(param0: globalAndroid.content.Context);
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
						public setText(param0: string, param1: com.stripe.android.stripe3ds2.init.ui.LabelCustomization): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module views {
					export class ThreeDS2TextView {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.views.ThreeDS2TextView>;
						public constructor(param0: globalAndroid.content.Context);
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
						public setText(param0: string, param1: com.stripe.android.stripe3ds2.init.ui.LabelCustomization): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module views {
					export class ThreeDS2WebView {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.views.ThreeDS2WebView>;
						public constructor(param0: globalAndroid.content.Context);
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
						public setOnHtmlSubmitListener$3ds2sdk_release(param0: com.stripe.android.stripe3ds2.views.ThreeDS2WebViewClient.OnHtmlSubmitListener): void;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
						public setWebViewClient(param0: globalAndroid.webkit.WebViewClient): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module stripe3ds2 {
				export module views {
					export class ThreeDS2WebViewClient {
						public static class: java.lang.Class<com.stripe.android.stripe3ds2.views.ThreeDS2WebViewClient>;
						public static Companion: com.stripe.android.stripe3ds2.views.ThreeDS2WebViewClient.Companion;
						public static CHALLENGE_URL: string;
						public constructor();
						public shouldOverrideUrlLoading(param0: globalAndroid.webkit.WebView, param1: globalAndroid.webkit.WebResourceRequest): boolean;
						public shouldInterceptRequest(param0: globalAndroid.webkit.WebView, param1: globalAndroid.webkit.WebResourceRequest): globalAndroid.webkit.WebResourceResponse;
						public handleFormSubmitUrl(param0: globalAndroid.net.Uri): void;
						public getListener$3ds2sdk_release(): com.stripe.android.stripe3ds2.views.ThreeDS2WebViewClient.OnHtmlSubmitListener;
						public setListener$3ds2sdk_release(param0: com.stripe.android.stripe3ds2.views.ThreeDS2WebViewClient.OnHtmlSubmitListener): void;
						public shouldNotInterceptUrl(param0: globalAndroid.net.Uri): boolean;
					}
					export module ThreeDS2WebViewClient {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.views.ThreeDS2WebViewClient.Companion>;
						}
						export class OnHtmlSubmitListener {
							public static class: java.lang.Class<com.stripe.android.stripe3ds2.views.ThreeDS2WebViewClient.OnHtmlSubmitListener>;
							/**
							 * Constructs a new instance of the com.stripe.android.stripe3ds2.views.ThreeDS2WebViewClient$OnHtmlSubmitListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onHtmlSubmit(param0: string): void;
							});
							public constructor();
							public onHtmlSubmit(param0: string): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export class Amount {
						public static class: java.lang.Class<com.stripe.android.ui.core.Amount>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.ui.core.Amount>;
						public static $stable: number;
						public describeContents(): number;
						public constructor(param0: number, param1: string);
						public component2(): string;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getCurrencyCode(): string;
						public component1(): number;
						public copy(param0: number, param1: string): com.stripe.android.ui.core.Amount;
						public toString(): string;
						public getValue(): number;
					}
					export module Amount {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.ui.core.Amount> {
							public static class: java.lang.Class<com.stripe.android.ui.core.Amount.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.ui.core.Amount>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.ui.core.Amount;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export class BuildConfig {
						public static class: java.lang.Class<com.stripe.android.ui.core.BuildConfig>;
						public static DEBUG: boolean;
						public static LIBRARY_PACKAGE_NAME: string;
						public static BUILD_TYPE: string;
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export class CurrencyFormatter {
						public static class: java.lang.Class<com.stripe.android.ui.core.CurrencyFormatter>;
						public static Companion: com.stripe.android.ui.core.CurrencyFormatter.Companion;
						public static $stable: number;
						public format(param0: number, param1: java.util.Currency, param2: java.util.Locale): string;
						public constructor();
						public format(param0: number, param1: string, param2: java.util.Locale): string;
					}
					export module CurrencyFormatter {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.ui.core.CurrencyFormatter.Companion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export class StripeThemeKt {
						public static class: java.lang.Class<com.stripe.android.ui.core.StripeThemeKt>;
						public static StripeTheme(param0: boolean, param1: kotlin.jvm.functions.Function2<any, any, kotlin.Unit>, param2: androidx.compose.runtime.Composer, param3: number, param4: number): void;
						public static getGrayLight(): number;
						public static getLocalFieldTextStyle(): androidx.compose.ui.text.TextStyle;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module address {
						export class AddressFieldElementRepository {
							public static class: java.lang.Class<com.stripe.android.ui.core.address.AddressFieldElementRepository>;
							public static Companion: com.stripe.android.ui.core.address.AddressFieldElementRepository.Companion;
							public static $stable: number;
							public static DEFAULT_COUNTRY_CODE: string;
							public get$stripe_ui_core_release(param0: string): java.util.List<com.stripe.android.ui.core.elements.SectionFieldElement>;
							public getResources(): globalAndroid.content.res.Resources;
							public constructor(param0: globalAndroid.content.res.Resources);
							public initialize(param0: string, param1: java.io.ByteArrayInputStream): void;
							public add$stripe_ui_core_release(param0: string, param1: java.util.List<any>): void;
						}
						export module AddressFieldElementRepository {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.ui.core.address.AddressFieldElementRepository.Companion>;
								public getSupportedCountries$stripe_ui_core_release(): java.util.Set<string>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module address {
						export class AddressFieldElementRepository_Factory extends dagger.internal.Factory<com.stripe.android.ui.core.address.AddressFieldElementRepository> {
							public static class: java.lang.Class<com.stripe.android.ui.core.address.AddressFieldElementRepository_Factory>;
							public get(): com.stripe.android.ui.core.address.AddressFieldElementRepository;
							public constructor(param0: javax.inject.Provider<globalAndroid.content.res.Resources>);
							public static create(param0: javax.inject.Provider<globalAndroid.content.res.Resources>): com.stripe.android.ui.core.address.AddressFieldElementRepository_Factory;
							public static newInstance(param0: globalAndroid.content.res.Resources): com.stripe.android.ui.core.address.AddressFieldElementRepository;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module address {
						export class CountryAddressSchema {
							public static class: java.lang.Class<com.stripe.android.ui.core.address.CountryAddressSchema>;
							public static Companion: com.stripe.android.ui.core.address.CountryAddressSchema.Companion;
							public static write$Self(param0: com.stripe.android.ui.core.address.CountryAddressSchema, param1: kotlinx.serialization.encoding.CompositeEncoder, param2: kotlinx.serialization.descriptors.SerialDescriptor): void;
							public constructor(param0: com.stripe.android.ui.core.address.FieldType, param1: boolean, param2: com.stripe.android.ui.core.address.FieldSchema);
							public getRequired(): boolean;
							public getType(): com.stripe.android.ui.core.address.FieldType;
							public getSchema(): com.stripe.android.ui.core.address.FieldSchema;
						}

						export module CountryAddressSchema {
							export class serializer extends kotlinx.serialization.internal.GeneratedSerializer<com.stripe.android.ui.core.address.CountryAddressSchema> {
								public static class: java.lang.Class<com.stripe.android.ui.core.address.CountryAddressSchema.serializer>;
								public static INSTANCE: com.stripe.android.ui.core.address.CountryAddressSchema.serializer;
								public static $stable: number;
								public typeParametersSerializers(): androidNative.Array<kotlinx.serialization.KSerializer<any>>;
								public getDescriptor(): kotlinx.serialization.descriptors.SerialDescriptor;
								public deserialize(param0: kotlinx.serialization.encoding.Decoder): com.stripe.android.ui.core.address.CountryAddressSchema;
								public childSerializers(): androidNative.Array<kotlinx.serialization.KSerializer<any>>;
								public serialize(param0: kotlinx.serialization.encoding.Encoder, param1: com.stripe.android.ui.core.address.CountryAddressSchema): void;
							}
						}
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.ui.core.address.CountryAddressSchema.Companion>;
							public serializer(): kotlinx.serialization.KSerializer<com.stripe.android.ui.core.address.CountryAddressSchema>;
						}

					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module address {
						export class FieldSchema {
							public static class: java.lang.Class<com.stripe.android.ui.core.address.FieldSchema>;
							public static Companion: com.stripe.android.ui.core.address.FieldSchema.Companion;
							public getExamples(): java.util.List<string>;
							public static write$Self(param0: com.stripe.android.ui.core.address.FieldSchema, param1: kotlinx.serialization.encoding.CompositeEncoder, param2: kotlinx.serialization.descriptors.SerialDescriptor): void;
							public getNameType(): com.stripe.android.ui.core.address.NameType;
							public isNumeric(): boolean;
							public constructor(param0: boolean, param1: java.util.List<string>, param2: com.stripe.android.ui.core.address.NameType);
						}

						export module FieldSchema {
							export class serializer extends kotlinx.serialization.internal.GeneratedSerializer<com.stripe.android.ui.core.address.FieldSchema> {
								public static class: java.lang.Class<com.stripe.android.ui.core.address.FieldSchema.serializer>;
								public static INSTANCE: com.stripe.android.ui.core.address.FieldSchema.serializer;
								public static $stable: number;
								public typeParametersSerializers(): androidNative.Array<kotlinx.serialization.KSerializer<any>>;
								public deserialize(param0: kotlinx.serialization.encoding.Decoder): com.stripe.android.ui.core.address.FieldSchema;
								public serialize(param0: kotlinx.serialization.encoding.Encoder, param1: com.stripe.android.ui.core.address.FieldSchema): void;
								public getDescriptor(): kotlinx.serialization.descriptors.SerialDescriptor;
								public childSerializers(): androidNative.Array<kotlinx.serialization.KSerializer<any>>;
							}
						}
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.ui.core.address.FieldSchema.Companion>;
							public serializer(): kotlinx.serialization.KSerializer<com.stripe.android.ui.core.address.FieldSchema>;
						}

					}
				}
			}
		}
	}
}

// declare module com {
// 	export module stripe {
// 		export module android {
// 			export module ui {
// 				export module core {
// 					export module address {
// 						export class FieldType {
// 							public static class: java.lang.Class<com.stripe.android.ui.core.address.FieldType>;
// 							public static Companion: com.stripe.android.ui.core.address.FieldType.Companion;
// 							public static AddressLine1: com.stripe.android.ui.core.address.FieldType;
// 							public static AddressLine2: com.stripe.android.ui.core.address.FieldType;
// 							public static Locality: com.stripe.android.ui.core.address.FieldType;
// 							public static PostalCode: com.stripe.android.ui.core.address.FieldType;
// 							public static AdministrativeArea: com.stripe.android.ui.core.address.FieldType;
// 							public static Name: com.stripe.android.ui.core.address.FieldType;
// 							public getSerializedValue(): string;
// 							public getDefaultLabel(): number;
// 							public getCapitalization-IUNYP9k(): number;
// 							public static values(): androidNative.Array<com.stripe.android.ui.core.address.FieldType>;
// 							public getIdentifierSpec(): com.stripe.android.ui.core.elements.IdentifierSpec;
// 							public static valueOf(param0: string): com.stripe.android.ui.core.address.FieldType;
// 						}
// 						export module FieldType {
// 							export class Companion {
// 								public static class: java.lang.Class<com.stripe.android.ui.core.address.FieldType.Companion>;
// 								public serializer(): kotlinx.serialization.KSerializer<com.stripe.android.ui.core.address.FieldType>;
// 								public from(param0: string): com.stripe.android.ui.core.address.FieldType;
// 							}
// 						}
// 					}
// 				}
// 			}
// 		}
// 	}
// }

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module address {
						export class FieldTypeAsStringSerializer extends kotlinx.serialization.KSerializer<com.stripe.android.ui.core.address.FieldType> {
							public static class: java.lang.Class<com.stripe.android.ui.core.address.FieldTypeAsStringSerializer>;
							public static INSTANCE: com.stripe.android.ui.core.address.FieldTypeAsStringSerializer;
							public serialize(param0: kotlinx.serialization.encoding.Encoder, param1: com.stripe.android.ui.core.address.FieldType): void;
							public getDescriptor(): kotlinx.serialization.descriptors.SerialDescriptor;
							public deserialize(param0: kotlinx.serialization.encoding.Decoder): com.stripe.android.ui.core.address.FieldType;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module address {
						export class NameType {
							public static class: java.lang.Class<com.stripe.android.ui.core.address.NameType>;
							public static area: com.stripe.android.ui.core.address.NameType;
							public static cedex: com.stripe.android.ui.core.address.NameType;
							public static city: com.stripe.android.ui.core.address.NameType;
							public static country: com.stripe.android.ui.core.address.NameType;
							public static county: com.stripe.android.ui.core.address.NameType;
							public static department: com.stripe.android.ui.core.address.NameType;
							public static district: com.stripe.android.ui.core.address.NameType;
							public static do_si: com.stripe.android.ui.core.address.NameType;
							public static eircode: com.stripe.android.ui.core.address.NameType;
							public static emirate: com.stripe.android.ui.core.address.NameType;
							public static island: com.stripe.android.ui.core.address.NameType;
							public static neighborhood: com.stripe.android.ui.core.address.NameType;
							public static oblast: com.stripe.android.ui.core.address.NameType;
							public static parish: com.stripe.android.ui.core.address.NameType;
							public static pin: com.stripe.android.ui.core.address.NameType;
							public static post_town: com.stripe.android.ui.core.address.NameType;
							public static postal: com.stripe.android.ui.core.address.NameType;
							public static prefecture: com.stripe.android.ui.core.address.NameType;
							public static province: com.stripe.android.ui.core.address.NameType;
							public static state: com.stripe.android.ui.core.address.NameType;
							public static suburb: com.stripe.android.ui.core.address.NameType;
							public static suburb_or_city: com.stripe.android.ui.core.address.NameType;
							public static townland: com.stripe.android.ui.core.address.NameType;
							public static village_township: com.stripe.android.ui.core.address.NameType;
							public static zip: com.stripe.android.ui.core.address.NameType;
							public static values(): androidNative.Array<com.stripe.android.ui.core.address.NameType>;
							public static valueOf(param0: string): com.stripe.android.ui.core.address.NameType;
							public getStringResId(): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module address {
						export class StateSchema {
							public static class: java.lang.Class<com.stripe.android.ui.core.address.StateSchema>;
							public static Companion: com.stripe.android.ui.core.address.StateSchema.Companion;
							public getKey(): string;
							public getName(): string;
							public static write$Self(param0: com.stripe.android.ui.core.address.StateSchema, param1: kotlinx.serialization.encoding.CompositeEncoder, param2: kotlinx.serialization.descriptors.SerialDescriptor): void;
							public getIsoID(): string;
							public constructor(param0: string, param1: string, param2: string);
						}

						export module StateSchema {
							export class serializer extends kotlinx.serialization.internal.GeneratedSerializer<com.stripe.android.ui.core.address.StateSchema> {
								public static class: java.lang.Class<com.stripe.android.ui.core.address.StateSchema.serializer>;
								public static INSTANCE: com.stripe.android.ui.core.address.StateSchema.serializer;
								public static $stable: number;
								public typeParametersSerializers(): androidNative.Array<kotlinx.serialization.KSerializer<any>>;
								public deserialize(param0: kotlinx.serialization.encoding.Decoder): com.stripe.android.ui.core.address.StateSchema;
								public serialize(param0: kotlinx.serialization.encoding.Encoder, param1: com.stripe.android.ui.core.address.StateSchema): void;
								public getDescriptor(): kotlinx.serialization.descriptors.SerialDescriptor;
								public childSerializers(): androidNative.Array<kotlinx.serialization.KSerializer<any>>;
							}
						}
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.ui.core.address.StateSchema.Companion>;
							public serializer(): kotlinx.serialization.KSerializer<com.stripe.android.ui.core.address.StateSchema>;
						}

					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module address {
						export class TransformAddressToElementKt {
							public static class: java.lang.Class<com.stripe.android.ui.core.address.TransformAddressToElementKt>;
							public static parseAddressesSchema(param0: java.io.InputStream): java.util.List<com.stripe.android.ui.core.address.CountryAddressSchema>;
							public static transformToElementList(param0: java.util.List<com.stripe.android.ui.core.address.CountryAddressSchema>): java.util.List<com.stripe.android.ui.core.elements.SectionFieldElement>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class AddressController extends com.stripe.android.ui.core.elements.SectionFieldErrorController {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.AddressController>;
							public static $stable: number;
							public getFieldsFlowable(): kotlinx.coroutines.flow.Flow<java.util.List<com.stripe.android.ui.core.elements.SectionFieldElement>>;
							public getError(): kotlinx.coroutines.flow.Flow<com.stripe.android.ui.core.elements.FieldError>;
							public getLabel(): java.lang.Integer;
							public constructor(param0: kotlinx.coroutines.flow.Flow<any>);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class AddressElement extends com.stripe.android.ui.core.elements.SectionMultiFieldElement {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.AddressElement>;
							public static $stable: number;
							public getFields(): kotlinx.coroutines.flow.Flow<java.util.List<com.stripe.android.ui.core.elements.SectionFieldElement>>;
							public getController(): com.stripe.android.ui.core.elements.AddressController;
							public getIdentifier(): com.stripe.android.ui.core.elements.IdentifierSpec;
							public constructor(param0: com.stripe.android.ui.core.elements.IdentifierSpec, param1: com.stripe.android.ui.core.address.AddressFieldElementRepository, param2: java.util.Map<com.stripe.android.ui.core.elements.IdentifierSpec, string>, param3: java.util.Set<string>, param4: com.stripe.android.ui.core.elements.DropdownFieldController);
							public getFormFieldValueFlow(): kotlinx.coroutines.flow.Flow<java.util.List<kotlin.Pair<com.stripe.android.ui.core.elements.IdentifierSpec, com.stripe.android.ui.core.forms.FormFieldEntry>>>;
							public sectionFieldErrorController(): com.stripe.android.ui.core.elements.SectionFieldErrorController;
							public getCountryElement(): com.stripe.android.ui.core.elements.CountryElement;
							public setRawValue(param0: java.util.Map<com.stripe.android.ui.core.elements.IdentifierSpec, string>): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class AddressElementUIKt {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.AddressElementUIKt>;
							public static AddressElementUI(param0: boolean, param1: com.stripe.android.ui.core.elements.AddressController, param2: androidx.compose.runtime.Composer, param3: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class AddressSpec extends com.stripe.android.ui.core.elements.SectionFieldSpec {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.AddressSpec>;
							public getIdentifier(): com.stripe.android.ui.core.elements.IdentifierSpec;
							public copy(param0: com.stripe.android.ui.core.elements.IdentifierSpec): com.stripe.android.ui.core.elements.AddressSpec;
							public hashCode(): number;
							public transform(param0: java.util.Map<com.stripe.android.ui.core.elements.IdentifierSpec, string>, param1: com.stripe.android.ui.core.address.AddressFieldElementRepository): com.stripe.android.ui.core.elements.SectionFieldElement;
							public component1(): com.stripe.android.ui.core.elements.IdentifierSpec;
							public toString(): string;
							public constructor(param0: com.stripe.android.ui.core.elements.IdentifierSpec);
							public equals(param0: any): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class AfterpayClearpayElementUIKt {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.AfterpayClearpayElementUIKt>;
							public static AfterpayClearpayElementUI(param0: boolean, param1: com.stripe.android.ui.core.elements.AfterpayClearpayHeaderElement, param2: androidx.compose.runtime.Composer, param3: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class AfterpayClearpayHeaderElement extends com.stripe.android.ui.core.elements.FormElement {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.AfterpayClearpayHeaderElement>;
							public static Companion: com.stripe.android.ui.core.elements.AfterpayClearpayHeaderElement.Companion;
							public static $stable: number;
							public static url: string;
							public getController(): com.stripe.android.ui.core.elements.Controller;
							public getIdentifier(): com.stripe.android.ui.core.elements.IdentifierSpec;
							public constructor(param0: com.stripe.android.ui.core.elements.IdentifierSpec, param1: com.stripe.android.ui.core.Amount, param2: com.stripe.android.ui.core.elements.Controller);
							public hashCode(): number;
							public component1(): com.stripe.android.ui.core.elements.IdentifierSpec;
							public getInfoUrl(): string;
							public getFormFieldValueFlow(): kotlinx.coroutines.flow.Flow<java.util.List<kotlin.Pair<com.stripe.android.ui.core.elements.IdentifierSpec, com.stripe.android.ui.core.forms.FormFieldEntry>>>;
							public getLabel(param0: globalAndroid.content.res.Resources): string;
							public toString(): string;
							public equals(param0: any): boolean;
							public component3(): com.stripe.android.ui.core.elements.Controller;
							public copy(param0: com.stripe.android.ui.core.elements.IdentifierSpec, param1: com.stripe.android.ui.core.Amount, param2: com.stripe.android.ui.core.elements.Controller): com.stripe.android.ui.core.elements.AfterpayClearpayHeaderElement;
						}
						export module AfterpayClearpayHeaderElement {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.ui.core.elements.AfterpayClearpayHeaderElement.Companion>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class AfterpayClearpayTextSpec extends com.stripe.android.ui.core.elements.FormItemSpec implements com.stripe.android.ui.core.elements.RequiredItemSpec {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.AfterpayClearpayTextSpec>;
							public getIdentifier(): com.stripe.android.ui.core.elements.IdentifierSpec;
							public hashCode(): number;
							public transform(param0: com.stripe.android.ui.core.Amount): com.stripe.android.ui.core.elements.FormElement;
							public component1(): com.stripe.android.ui.core.elements.IdentifierSpec;
							public copy(param0: com.stripe.android.ui.core.elements.IdentifierSpec): com.stripe.android.ui.core.elements.AfterpayClearpayTextSpec;
							public toString(): string;
							public constructor(param0: com.stripe.android.ui.core.elements.IdentifierSpec);
							public equals(param0: any): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class BankDropdownSpec extends com.stripe.android.ui.core.elements.SectionFieldSpec {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.BankDropdownSpec>;
							public constructor(param0: com.stripe.android.ui.core.elements.IdentifierSpec, param1: number, param2: com.stripe.android.ui.core.elements.SupportedBankType);
							public getIdentifier(): com.stripe.android.ui.core.elements.IdentifierSpec;
							public getLabel(): number;
							public copy(param0: com.stripe.android.ui.core.elements.IdentifierSpec, param1: number, param2: com.stripe.android.ui.core.elements.SupportedBankType): com.stripe.android.ui.core.elements.BankDropdownSpec;
							public hashCode(): number;
							public component1(): com.stripe.android.ui.core.elements.IdentifierSpec;
							public component2(): number;
							public getBankType(): com.stripe.android.ui.core.elements.SupportedBankType;
							public toString(): string;
							public equals(param0: any): boolean;
							public transform(param0: com.stripe.android.ui.core.elements.BankRepository): com.stripe.android.ui.core.elements.SectionFieldElement;
							public component3(): com.stripe.android.ui.core.elements.SupportedBankType;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class BankRepository {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.BankRepository>;
							public static $stable: number;
							public component1(): globalAndroid.content.res.Resources;
							public initialize(param0: java.util.Map<com.stripe.android.ui.core.elements.SupportedBankType, any>): void;
							public copy(param0: globalAndroid.content.res.Resources): com.stripe.android.ui.core.elements.BankRepository;
							public getResources(): globalAndroid.content.res.Resources;
							public hashCode(): number;
							public constructor(param0: globalAndroid.content.res.Resources);
							public toString(): string;
							public get(param0: com.stripe.android.ui.core.elements.SupportedBankType): java.util.List<com.stripe.android.ui.core.elements.DropdownItemSpec>;
							public equals(param0: any): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class BankRepository_Factory extends dagger.internal.Factory<com.stripe.android.ui.core.elements.BankRepository> {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.BankRepository_Factory>;
							public static newInstance(param0: globalAndroid.content.res.Resources): com.stripe.android.ui.core.elements.BankRepository;
							public constructor(param0: javax.inject.Provider<globalAndroid.content.res.Resources>);
							public get(): com.stripe.android.ui.core.elements.BankRepository;
							public static create(param0: javax.inject.Provider<globalAndroid.content.res.Resources>): com.stripe.android.ui.core.elements.BankRepository_Factory;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class BillingSpecKt {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.BillingSpecKt>;
							public static getAddressParams(): java.util.Map<string, any>;
							public static getBillingParams(): java.util.Map<string, any>;
						}
					}
				}
			}
		}
	}
}

// declare module com {
// 	export module stripe {
// 		export module android {
// 			export module ui {
// 				export module core {
// 					export module elements {
// 						export class CardStyle {
// 							public static class: java.lang.Class<com.stripe.android.ui.core.elements.CardStyle>;
// 							public component3-D9Ej5fM(): number;
// 							public component5-0d7_KjU(): number;
// 							public copy-D_Ou-18(param0: boolean, param1: number, param2: number, param3: number, param4: number): com.stripe.android.ui.core.elements.CardStyle;
// 							public component4-D9Ej5fM(): number;
// 							public hashCode(): number;
// 							public getCardBorderColor-0d7_KjU(): number;
// 							public getCardElevation-D9Ej5fM(): number;
// 							public toString(): string;
// 							public getCardStyleBackground-0d7_KjU(): number;
// 							public equals(param0: any): boolean;
// 							public getCardBorderWidth-D9Ej5fM(): number;
// 							public component2-0d7_KjU(): number;
// 						}
// 						export module ComposableSingletons {
// 						export module CardStyle {
// 							export class AfterpayClearpayElementUIKt {
// 								public static class: java.lang.Class<com.stripe.android.ui.core.elements.ComposableSingletons.AfterpayClearpayElementUIKt>;
// 								public static INSTANCE: com.stripe.android.ui.core.elements.ComposableSingletons.AfterpayClearpayElementUIKt;
// 								public static lambda-1: kotlin.jvm.functions.Function3<androidx.compose.foundation.layout.RowScope,androidx.compose.runtime.Composer,java.lang.Integer,kotlin.Unit>;
// 								public getLambda-1$stripe_ui_core_release(): kotlin.jvm.functions.Function3<androidx.compose.foundation.layout.RowScope,androidx.compose.runtime.Composer,java.lang.Integer,kotlin.Unit>;
// 								public constructor();
// 							}
// 						}
// 					}
// 				}
// 			}
// 		}
// 	}
// }

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class Controller {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.Controller>;
							/**
							 * Constructs a new instance of the com.stripe.android.ui.core.elements.Controller interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
							});
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class CountryConfig extends com.stripe.android.ui.core.elements.DropdownConfig {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.CountryConfig>;
							public static $stable: number;
							public constructor();
							public getLabel(): number;
							public convertFromRaw(param0: string): string;
							public constructor(param0: java.util.Set<string>, param1: java.util.Locale);
							public getOnlyShowCountryCodes(): java.util.Set<string>;
							public getDebugLabel(): string;
							public getDisplayItems(): java.util.List<string>;
							public getLocale(): java.util.Locale;
							public convertToRaw(param0: string): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class CountryElement extends com.stripe.android.ui.core.elements.SectionSingleFieldElement {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.CountryElement>;
							public static $stable: number;
							public getIdentifier(): com.stripe.android.ui.core.elements.IdentifierSpec;
							public copy(param0: com.stripe.android.ui.core.elements.IdentifierSpec, param1: com.stripe.android.ui.core.elements.DropdownFieldController): com.stripe.android.ui.core.elements.CountryElement;
							public hashCode(): number;
							public component1(): com.stripe.android.ui.core.elements.IdentifierSpec;
							public component2(): com.stripe.android.ui.core.elements.DropdownFieldController;
							public toString(): string;
							public sectionFieldErrorController(): com.stripe.android.ui.core.elements.SectionFieldErrorController;
							public getController(): com.stripe.android.ui.core.elements.InputController;
							public getController(): com.stripe.android.ui.core.elements.DropdownFieldController;
							public getFormFieldValueFlow(): kotlinx.coroutines.flow.Flow<java.util.List<kotlin.Pair<com.stripe.android.ui.core.elements.IdentifierSpec, com.stripe.android.ui.core.forms.FormFieldEntry>>>;
							public constructor(param0: com.stripe.android.ui.core.elements.IdentifierSpec, param1: com.stripe.android.ui.core.elements.DropdownFieldController);
							public equals(param0: any): boolean;
							public setRawValue(param0: java.util.Map<com.stripe.android.ui.core.elements.IdentifierSpec, string>): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class CountrySpec extends com.stripe.android.ui.core.elements.SectionFieldSpec {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.CountrySpec>;
							public static $stable: number;
							public constructor(param0: java.util.Set<string>);
							public constructor();
							public hashCode(): number;
							public copy(param0: java.util.Set<string>): com.stripe.android.ui.core.elements.CountrySpec;
							public getOnlyShowCountryCodes(): java.util.Set<string>;
							public toString(): string;
							public component1(): java.util.Set<string>;
							public equals(param0: any): boolean;
							public transform(param0: string): com.stripe.android.ui.core.elements.SectionFieldElement;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class DropdownConfig {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.DropdownConfig>;
							/**
							 * Constructs a new instance of the com.stripe.android.ui.core.elements.DropdownConfig interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getDebugLabel(): string;
								getLabel(): number;
								getDisplayItems(): java.util.List<string>;
								convertFromRaw(param0: string): string;
								convertToRaw(param0: string): string;
							});
							public constructor();
							public getLabel(): number;
							public convertFromRaw(param0: string): string;
							public getDebugLabel(): string;
							public getDisplayItems(): java.util.List<string>;
							public convertToRaw(param0: string): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class DropdownFieldController implements com.stripe.android.ui.core.elements.InputController, com.stripe.android.ui.core.elements.SectionFieldErrorController {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.DropdownFieldController>;
							public static $stable: number;
							public constructor(param0: com.stripe.android.ui.core.elements.DropdownConfig, param1: string);
							public getSelectedIndex(): kotlinx.coroutines.flow.Flow<java.lang.Integer>;
							public getLabel(): number;
							public getError(): kotlinx.coroutines.flow.Flow<com.stripe.android.ui.core.elements.FieldError>;
							public getFormFieldValue(): kotlinx.coroutines.flow.Flow<com.stripe.android.ui.core.forms.FormFieldEntry>;
							public onRawValueChange(param0: string): void;
							public getRawFieldValue(): kotlinx.coroutines.flow.Flow<string>;
							public isComplete(): kotlinx.coroutines.flow.Flow<java.lang.Boolean>;
							public getFieldValue(): kotlinx.coroutines.flow.Flow<string>;
							public getShowOptionalLabel(): boolean;
							public onValueChange(param0: number): void;
							public getDisplayItems(): java.util.List<string>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class DropdownFieldUIKt {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.DropdownFieldUIKt>;
							public static DropdownLabel(param0: number, param1: androidx.compose.runtime.Composer, param2: number): void;
							public static DropDown(param0: number, param1: com.stripe.android.ui.core.elements.DropdownFieldController, param2: boolean, param3: androidx.compose.runtime.Composer, param4: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class DropdownItemSpec {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.DropdownItemSpec>;
							public static Companion: com.stripe.android.ui.core.elements.DropdownItemSpec.Companion;
							public static $stable: number;
							public component2(): string;
							public getText(): string;
							public copy(param0: string, param1: string): com.stripe.android.ui.core.elements.DropdownItemSpec;
							public hashCode(): number;
							public constructor(param0: string, param1: string);
							public static write$Self(param0: com.stripe.android.ui.core.elements.DropdownItemSpec, param1: kotlinx.serialization.encoding.CompositeEncoder, param2: kotlinx.serialization.descriptors.SerialDescriptor): void;
							public getValue(): string;
							public toString(): string;
							public equals(param0: any): boolean;
							public component1(): string;
						}

						export module DropdownItemSpec {
							export class serializer extends kotlinx.serialization.internal.GeneratedSerializer<com.stripe.android.ui.core.elements.DropdownItemSpec> {
								public static class: java.lang.Class<com.stripe.android.ui.core.elements.DropdownItemSpec.serializer>;
								public static INSTANCE: com.stripe.android.ui.core.elements.DropdownItemSpec.serializer;
								public static $stable: number;
								public deserialize(param0: kotlinx.serialization.encoding.Decoder): com.stripe.android.ui.core.elements.DropdownItemSpec;
								public typeParametersSerializers(): androidNative.Array<kotlinx.serialization.KSerializer<any>>;
								public serialize(param0: kotlinx.serialization.encoding.Encoder, param1: com.stripe.android.ui.core.elements.DropdownItemSpec): void;
								public getDescriptor(): kotlinx.serialization.descriptors.SerialDescriptor;
								public childSerializers(): androidNative.Array<kotlinx.serialization.KSerializer<any>>;
							}
						}
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.DropdownItemSpec.Companion>;
							public serializer(): kotlinx.serialization.KSerializer<com.stripe.android.ui.core.elements.DropdownItemSpec>;
						}

					}
				}
			}
		}
	}
}

// declare module com {
// 	export module stripe {
// 		export module android {
// 			export module ui {
// 				export module core {
// 					export module elements {
// 						export class EmailConfig extends com.stripe.android.ui.core.elements.TextFieldConfig {
// 							public static class: java.lang.Class<com.stripe.android.ui.core.elements.EmailConfig>;
// 							public static Companion: com.stripe.android.ui.core.elements.EmailConfig.Companion;
// 							public static $stable: number;
// 							public constructor();
// 							public getKeyboard-PjHm6EE(): number;
// 							public getLabel(): number;
// 							public getVisualTransformation(): androidx.compose.ui.text.input.VisualTransformation;
// 							public convertFromRaw(param0: string): string;
// 							public getDebugLabel(): string;
// 							public getCapitalization-IUNYP9k(): number;
// 							public filter(param0: string): string;
// 							public determineState(param0: string): com.stripe.android.ui.core.elements.TextFieldState;
// 							public convertToRaw(param0: string): string;
// 						}
// 						export module EmailConfig {
// 							export class Companion {
// 								public static class: java.lang.Class<com.stripe.android.ui.core.elements.EmailConfig.Companion>;
// 								public getPATTERN(): java.util.regex.Pattern;
// 							}
// 						}
// 					}
// 				}
// 			}
// 		}
// 	}
// }

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class EmailElement extends com.stripe.android.ui.core.elements.SectionSingleFieldElement {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.EmailElement>;
							public static $stable: number;
							public constructor(param0: com.stripe.android.ui.core.elements.IdentifierSpec, param1: com.stripe.android.ui.core.elements.TextFieldController);
							public getIdentifier(): com.stripe.android.ui.core.elements.IdentifierSpec;
							public copy(param0: com.stripe.android.ui.core.elements.IdentifierSpec, param1: com.stripe.android.ui.core.elements.TextFieldController): com.stripe.android.ui.core.elements.EmailElement;
							public hashCode(): number;
							public component1(): com.stripe.android.ui.core.elements.IdentifierSpec;
							public toString(): string;
							public sectionFieldErrorController(): com.stripe.android.ui.core.elements.SectionFieldErrorController;
							public getController(): com.stripe.android.ui.core.elements.TextFieldController;
							public getController(): com.stripe.android.ui.core.elements.InputController;
							public component2(): com.stripe.android.ui.core.elements.TextFieldController;
							public getFormFieldValueFlow(): kotlinx.coroutines.flow.Flow<java.util.List<kotlin.Pair<com.stripe.android.ui.core.elements.IdentifierSpec, com.stripe.android.ui.core.forms.FormFieldEntry>>>;
							public equals(param0: any): boolean;
							public setRawValue(param0: java.util.Map<com.stripe.android.ui.core.elements.IdentifierSpec, string>): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class EmailSpec extends com.stripe.android.ui.core.elements.SectionFieldSpec {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.EmailSpec>;
							public static INSTANCE: com.stripe.android.ui.core.elements.EmailSpec;
							public static $stable: number;
							public transform(param0: string): com.stripe.android.ui.core.elements.SectionFieldElement;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class EmptyFormElement extends com.stripe.android.ui.core.elements.FormElement {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.EmptyFormElement>;
							public getController(): com.stripe.android.ui.core.elements.Controller;
							public constructor();
							public getIdentifier(): com.stripe.android.ui.core.elements.IdentifierSpec;
							public constructor(param0: com.stripe.android.ui.core.elements.IdentifierSpec, param1: com.stripe.android.ui.core.elements.Controller);
							public hashCode(): number;
							public component1(): com.stripe.android.ui.core.elements.IdentifierSpec;
							public copy(param0: com.stripe.android.ui.core.elements.IdentifierSpec, param1: com.stripe.android.ui.core.elements.Controller): com.stripe.android.ui.core.elements.EmptyFormElement;
							public getFormFieldValueFlow(): kotlinx.coroutines.flow.Flow<java.util.List<kotlin.Pair<com.stripe.android.ui.core.elements.IdentifierSpec, com.stripe.android.ui.core.forms.FormFieldEntry>>>;
							public component2(): com.stripe.android.ui.core.elements.Controller;
							public toString(): string;
							public equals(param0: any): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class EmptyFormSpec extends com.stripe.android.ui.core.elements.FormItemSpec {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.EmptyFormSpec>;
							public static INSTANCE: com.stripe.android.ui.core.elements.EmptyFormSpec;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class FieldError {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.FieldError>;
							public static $stable: number;
							public getFormatArgs(): androidNative.Array<any>;
							public constructor(param0: number, param1: androidNative.Array<any>);
							public getErrorMessage(): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export abstract class FormElement {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.FormElement>;
							public static $stable: number;
							public getController(): com.stripe.android.ui.core.elements.Controller;
							public getIdentifier(): com.stripe.android.ui.core.elements.IdentifierSpec;
							public getFormFieldValueFlow(): kotlinx.coroutines.flow.Flow<java.util.List<kotlin.Pair<com.stripe.android.ui.core.elements.IdentifierSpec, com.stripe.android.ui.core.forms.FormFieldEntry>>>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export abstract class FormItemSpec {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.FormItemSpec>;
							public static $stable: number;
						}
					}
				}
			}
		}
	}
}

// declare module com {
// 	export module stripe {
// 		export module android {
// 			export module ui {
// 				export module core {
// 					export module elements {
// 						export class IbanConfig extends com.stripe.android.ui.core.elements.TextFieldConfig {
// 							public static class: java.lang.Class<com.stripe.android.ui.core.elements.IbanConfig>;
// 							public static $stable: number;
// 							public static MIN_LENGTH: number;
// 							public static MAX_LENGTH: number;
// 							public constructor();
// 							public getKeyboard-PjHm6EE(): number;
// 							public getLabel(): number;
// 							public getVisualTransformation(): androidx.compose.ui.text.input.VisualTransformation;
// 							public convertFromRaw(param0: string): string;
// 							public getDebugLabel(): string;
// 							public getCapitalization-IUNYP9k(): number;
// 							public filter(param0: string): string;
// 							public determineState(param0: string): com.stripe.android.ui.core.elements.TextFieldState;
// 							public convertToRaw(param0: string): string;
// 						}
// 						export module IbanConfig {
// 							export class Companion {
// 								public static class: java.lang.Class<com.stripe.android.ui.core.elements.IbanConfig.Companion>;
// 								public getVALID_INPUT_RANGES(): java.util.List<java.lang.Character>;
// 							}
// 						}
// 					}
// 				}
// 			}
// 		}
// 	}
// }

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class IbanElement extends com.stripe.android.ui.core.elements.SectionSingleFieldElement {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.IbanElement>;
							public constructor(param0: com.stripe.android.ui.core.elements.IdentifierSpec, param1: com.stripe.android.ui.core.elements.TextFieldController);
							public getIdentifier(): com.stripe.android.ui.core.elements.IdentifierSpec;
							public copy(param0: com.stripe.android.ui.core.elements.IdentifierSpec, param1: com.stripe.android.ui.core.elements.TextFieldController): com.stripe.android.ui.core.elements.IbanElement;
							public hashCode(): number;
							public component1(): com.stripe.android.ui.core.elements.IdentifierSpec;
							public toString(): string;
							public sectionFieldErrorController(): com.stripe.android.ui.core.elements.SectionFieldErrorController;
							public getController(): com.stripe.android.ui.core.elements.TextFieldController;
							public getController(): com.stripe.android.ui.core.elements.InputController;
							public component2(): com.stripe.android.ui.core.elements.TextFieldController;
							public getFormFieldValueFlow(): kotlinx.coroutines.flow.Flow<java.util.List<kotlin.Pair<com.stripe.android.ui.core.elements.IdentifierSpec, com.stripe.android.ui.core.forms.FormFieldEntry>>>;
							public equals(param0: any): boolean;
							public setRawValue(param0: java.util.Map<com.stripe.android.ui.core.elements.IdentifierSpec, string>): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class IbanSpec extends com.stripe.android.ui.core.elements.SectionFieldSpec {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.IbanSpec>;
							public static INSTANCE: com.stripe.android.ui.core.elements.IbanSpec;
							public transform(): com.stripe.android.ui.core.elements.SectionFieldElement;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export abstract class IdentifierSpec {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.IdentifierSpec>;
							public static $stable: number;
							public getValue(): string;
						}
						export module IdentifierSpec {
							export class City extends com.stripe.android.ui.core.elements.IdentifierSpec {
								public static class: java.lang.Class<com.stripe.android.ui.core.elements.IdentifierSpec.City>;
								public static INSTANCE: com.stripe.android.ui.core.elements.IdentifierSpec.City;
								public static $stable: number;
							}
							export class Country extends com.stripe.android.ui.core.elements.IdentifierSpec {
								public static class: java.lang.Class<com.stripe.android.ui.core.elements.IdentifierSpec.Country>;
								public static INSTANCE: com.stripe.android.ui.core.elements.IdentifierSpec.Country;
								public static $stable: number;
							}
							export class Email extends com.stripe.android.ui.core.elements.IdentifierSpec {
								public static class: java.lang.Class<com.stripe.android.ui.core.elements.IdentifierSpec.Email>;
								public static INSTANCE: com.stripe.android.ui.core.elements.IdentifierSpec.Email;
								public static $stable: number;
							}
							export class Generic extends com.stripe.android.ui.core.elements.IdentifierSpec {
								public static class: java.lang.Class<com.stripe.android.ui.core.elements.IdentifierSpec.Generic>;
								public static $stable: number;
								public toString(): string;
								public copy(param0: string): com.stripe.android.ui.core.elements.IdentifierSpec.Generic;
								public equals(param0: any): boolean;
								public constructor(param0: string);
								public hashCode(): number;
							}
							export class Line1 extends com.stripe.android.ui.core.elements.IdentifierSpec {
								public static class: java.lang.Class<com.stripe.android.ui.core.elements.IdentifierSpec.Line1>;
								public static INSTANCE: com.stripe.android.ui.core.elements.IdentifierSpec.Line1;
								public static $stable: number;
							}
							export class Line2 extends com.stripe.android.ui.core.elements.IdentifierSpec {
								public static class: java.lang.Class<com.stripe.android.ui.core.elements.IdentifierSpec.Line2>;
								public static INSTANCE: com.stripe.android.ui.core.elements.IdentifierSpec.Line2;
								public static $stable: number;
							}
							export class Name extends com.stripe.android.ui.core.elements.IdentifierSpec {
								public static class: java.lang.Class<com.stripe.android.ui.core.elements.IdentifierSpec.Name>;
								public static INSTANCE: com.stripe.android.ui.core.elements.IdentifierSpec.Name;
								public static $stable: number;
							}
							export class Phone extends com.stripe.android.ui.core.elements.IdentifierSpec {
								public static class: java.lang.Class<com.stripe.android.ui.core.elements.IdentifierSpec.Phone>;
								public static INSTANCE: com.stripe.android.ui.core.elements.IdentifierSpec.Phone;
								public static $stable: number;
							}
							export class PostalCode extends com.stripe.android.ui.core.elements.IdentifierSpec {
								public static class: java.lang.Class<com.stripe.android.ui.core.elements.IdentifierSpec.PostalCode>;
								public static INSTANCE: com.stripe.android.ui.core.elements.IdentifierSpec.PostalCode;
								public static $stable: number;
							}
							export class SaveForFutureUse extends com.stripe.android.ui.core.elements.IdentifierSpec {
								public static class: java.lang.Class<com.stripe.android.ui.core.elements.IdentifierSpec.SaveForFutureUse>;
								public static INSTANCE: com.stripe.android.ui.core.elements.IdentifierSpec.SaveForFutureUse;
								public static $stable: number;
							}
							export class State extends com.stripe.android.ui.core.elements.IdentifierSpec {
								public static class: java.lang.Class<com.stripe.android.ui.core.elements.IdentifierSpec.State>;
								public static INSTANCE: com.stripe.android.ui.core.elements.IdentifierSpec.State;
								public static $stable: number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class InputController extends com.stripe.android.ui.core.elements.SectionFieldErrorController {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.InputController>;
							/**
							 * Constructs a new instance of the com.stripe.android.ui.core.elements.InputController interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getLabel(): number;
								getFieldValue(): kotlinx.coroutines.flow.Flow<string>;
								getRawFieldValue(): kotlinx.coroutines.flow.Flow<string>;
								isComplete(): kotlinx.coroutines.flow.Flow<java.lang.Boolean>;
								getShowOptionalLabel(): boolean;
								getFormFieldValue(): kotlinx.coroutines.flow.Flow<com.stripe.android.ui.core.forms.FormFieldEntry>;
								onRawValueChange(param0: string): void;
								getError(): kotlinx.coroutines.flow.Flow<com.stripe.android.ui.core.elements.FieldError>;
							});
							public constructor();
							public getLabel(): number;
							public getFormFieldValue(): kotlinx.coroutines.flow.Flow<com.stripe.android.ui.core.forms.FormFieldEntry>;
							public onRawValueChange(param0: string): void;
							public getError(): kotlinx.coroutines.flow.Flow<com.stripe.android.ui.core.elements.FieldError>;
							public getRawFieldValue(): kotlinx.coroutines.flow.Flow<string>;
							public isComplete(): kotlinx.coroutines.flow.Flow<java.lang.Boolean>;
							public getFieldValue(): kotlinx.coroutines.flow.Flow<string>;
							public getShowOptionalLabel(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class KlarnaCountrySpec extends com.stripe.android.ui.core.elements.SectionFieldSpec {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.KlarnaCountrySpec>;
							public constructor();
							public transform(param0: string, param1: string): com.stripe.android.ui.core.elements.SectionFieldElement;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class KlarnaHelper {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.KlarnaHelper>;
							public static INSTANCE: com.stripe.android.ui.core.elements.KlarnaHelper;
							public static $stable: number;
							public getAllowedCountriesForCurrency(param0: string): java.util.Set<string>;
							public getKlarnaHeader(param0: java.util.Locale): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class LayoutFormDescriptor {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.LayoutFormDescriptor>;
							public static $stable: number;
							public component3(): boolean;
							public getShowCheckbox(): boolean;
							public constructor(param0: com.stripe.android.ui.core.elements.LayoutSpec, param1: boolean, param2: boolean);
							public hashCode(): number;
							public component2(): boolean;
							public getLayoutSpec(): com.stripe.android.ui.core.elements.LayoutSpec;
							public getShowCheckboxControlledFields(): boolean;
							public component1(): com.stripe.android.ui.core.elements.LayoutSpec;
							public toString(): string;
							public copy(param0: com.stripe.android.ui.core.elements.LayoutSpec, param1: boolean, param2: boolean): com.stripe.android.ui.core.elements.LayoutFormDescriptor;
							public equals(param0: any): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class LayoutSpec {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.LayoutSpec>;
							public static Companion: com.stripe.android.ui.core.elements.LayoutSpec.Companion;
							public static $stable: number;
							public copy(param0: java.util.List<any>): com.stripe.android.ui.core.elements.LayoutSpec;
							public hashCode(): number;
							public getItems(): java.util.List<com.stripe.android.ui.core.elements.FormItemSpec>;
							public component1(): java.util.List<com.stripe.android.ui.core.elements.FormItemSpec>;
							public toString(): string;
							public equals(param0: any): boolean;
						}
						export module LayoutSpec {
							export class Companion {
								public static class: java.lang.Class<com.stripe.android.ui.core.elements.LayoutSpec.Companion>;
								public create(param0: androidNative.Array<com.stripe.android.ui.core.elements.FormItemSpec>): com.stripe.android.ui.core.elements.LayoutSpec;
								public create(): com.stripe.android.ui.core.elements.LayoutSpec;
							}
						}
					}
				}
			}
		}
	}
}

// declare module com {
// 	export module stripe {
// 		export module android {
// 			export module ui {
// 				export module core {
// 					export module elements {
// 						export class NameConfig extends com.stripe.android.ui.core.elements.TextFieldConfig {
// 							public static class: java.lang.Class<com.stripe.android.ui.core.elements.NameConfig>;
// 							public static $stable: number;
// 							public constructor();
// 							public getKeyboard-PjHm6EE(): number;
// 							public getLabel(): number;
// 							public getVisualTransformation(): androidx.compose.ui.text.input.VisualTransformation;
// 							public convertFromRaw(param0: string): string;
// 							public getDebugLabel(): string;
// 							public getCapitalization-IUNYP9k(): number;
// 							public filter(param0: string): string;
// 							public determineState(param0: string): com.stripe.android.ui.core.elements.TextFieldState;
// 							public convertToRaw(param0: string): string;
// 						}
// 					}
// 				}
// 			}
// 		}
// 	}
// }

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class RequiredItemSpec {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.RequiredItemSpec>;
							/**
							 * Constructs a new instance of the com.stripe.android.ui.core.elements.RequiredItemSpec interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getIdentifier(): com.stripe.android.ui.core.elements.IdentifierSpec;
							});
							public constructor();
							public getIdentifier(): com.stripe.android.ui.core.elements.IdentifierSpec;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class RowController extends com.stripe.android.ui.core.elements.SectionFieldErrorController {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.RowController>;
							public static $stable: number;
							public constructor(param0: java.util.List<any>);
							public getError(): kotlinx.coroutines.flow.Flow<com.stripe.android.ui.core.elements.FieldError>;
							public getFields(): java.util.List<com.stripe.android.ui.core.elements.SectionSingleFieldElement>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class RowElement extends com.stripe.android.ui.core.elements.SectionMultiFieldElement {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.RowElement>;
							public static $stable: number;
							public sectionFieldErrorController(): com.stripe.android.ui.core.elements.RowController;
							public getIdentifier(): com.stripe.android.ui.core.elements.IdentifierSpec;
							public getFormFieldValueFlow(): kotlinx.coroutines.flow.Flow<java.util.List<kotlin.Pair<com.stripe.android.ui.core.elements.IdentifierSpec, com.stripe.android.ui.core.forms.FormFieldEntry>>>;
							public sectionFieldErrorController(): com.stripe.android.ui.core.elements.SectionFieldErrorController;
							public getController(): com.stripe.android.ui.core.elements.RowController;
							public constructor(param0: com.stripe.android.ui.core.elements.IdentifierSpec, param1: java.util.List<any>, param2: com.stripe.android.ui.core.elements.RowController);
							public getFields(): java.util.List<com.stripe.android.ui.core.elements.SectionSingleFieldElement>;
							public setRawValue(param0: java.util.Map<com.stripe.android.ui.core.elements.IdentifierSpec, string>): void;
						}
					}
				}
			}
		}
	}
}

// declare module com {
// 	export module stripe {
// 		export module android {
// 			export module ui {
// 				export module core {
// 					export module elements {
// 						export class RowElementUIKt {
// 							public static class: java.lang.Class<com.stripe.android.ui.core.elements.RowElementUIKt>;
// 							public static RowElementUI(param0: boolean, param1: com.stripe.android.ui.core.elements.RowController, param2: androidx.compose.runtime.Composer, param3: number): void;
// 							public static VeriticalDivider-DxzAY5Q(param0: number, param1: androidx.compose.ui.Modifier, param2: number, param3: androidx.compose.runtime.Composer, param4: number, param5: number): void;
// 						}
// 					}
// 				}
// 			}
// 		}
// 	}
// }

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class SaveForFutureUseController extends com.stripe.android.ui.core.elements.InputController {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.SaveForFutureUseController>;
							public static $stable: number;
							public getLabel(): number;
							public getError(): kotlinx.coroutines.flow.Flow<com.stripe.android.ui.core.elements.FieldError>;
							public getFormFieldValue(): kotlinx.coroutines.flow.Flow<com.stripe.android.ui.core.forms.FormFieldEntry>;
							public onRawValueChange(param0: string): void;
							public getRawFieldValue(): kotlinx.coroutines.flow.Flow<string>;
							public isComplete(): kotlinx.coroutines.flow.Flow<java.lang.Boolean>;
							public constructor(param0: java.util.List<any>, param1: boolean);
							public getFieldValue(): kotlinx.coroutines.flow.Flow<string>;
							public getShowOptionalLabel(): boolean;
							public getHiddenIdentifiers(): kotlinx.coroutines.flow.Flow<java.util.List<com.stripe.android.ui.core.elements.IdentifierSpec>>;
							public onValueChange(param0: boolean): void;
							public getSaveForFutureUse(): kotlinx.coroutines.flow.Flow<java.lang.Boolean>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class SaveForFutureUseElement extends com.stripe.android.ui.core.elements.FormElement {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.SaveForFutureUseElement>;
							public static $stable: number;
							public getController(): com.stripe.android.ui.core.elements.SaveForFutureUseController;
							public getIdentifier(): com.stripe.android.ui.core.elements.IdentifierSpec;
							public hashCode(): number;
							public component1(): com.stripe.android.ui.core.elements.IdentifierSpec;
							public copy(param0: com.stripe.android.ui.core.elements.IdentifierSpec, param1: com.stripe.android.ui.core.elements.SaveForFutureUseController, param2: string): com.stripe.android.ui.core.elements.SaveForFutureUseElement;
							public constructor(param0: com.stripe.android.ui.core.elements.IdentifierSpec, param1: com.stripe.android.ui.core.elements.SaveForFutureUseController, param2: string);
							public component2(): com.stripe.android.ui.core.elements.SaveForFutureUseController;
							public toString(): string;
							public getMerchantName(): string;
							public component3(): string;
							public getController(): com.stripe.android.ui.core.elements.Controller;
							public getFormFieldValueFlow(): kotlinx.coroutines.flow.Flow<java.util.List<kotlin.Pair<com.stripe.android.ui.core.elements.IdentifierSpec, com.stripe.android.ui.core.forms.FormFieldEntry>>>;
							public equals(param0: any): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class SaveForFutureUseElementUIKt {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.SaveForFutureUseElementUIKt>;
							public static SaveForFutureUseElementUI(param0: boolean, param1: com.stripe.android.ui.core.elements.SaveForFutureUseElement, param2: androidx.compose.runtime.Composer, param3: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class SaveForFutureUseSpec extends com.stripe.android.ui.core.elements.FormItemSpec implements com.stripe.android.ui.core.elements.RequiredItemSpec {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.SaveForFutureUseSpec>;
							public static $stable: number;
							public copy(param0: java.util.List<any>): com.stripe.android.ui.core.elements.SaveForFutureUseSpec;
							public constructor(param0: java.util.List<any>);
							public getIdentifier(): com.stripe.android.ui.core.elements.IdentifierSpec;
							public transform(param0: boolean, param1: string): com.stripe.android.ui.core.elements.FormElement;
							public hashCode(): number;
							public getIdentifierRequiredForFutureUse(): java.util.List<com.stripe.android.ui.core.elements.RequiredItemSpec>;
							public component1(): java.util.List<com.stripe.android.ui.core.elements.RequiredItemSpec>;
							public getIdentifier(): com.stripe.android.ui.core.elements.IdentifierSpec.SaveForFutureUse;
							public toString(): string;
							public equals(param0: any): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class SectionController extends com.stripe.android.ui.core.elements.Controller {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.SectionController>;
							public static $stable: number;
							public getSectionFieldErrorControllers(): java.util.List<com.stripe.android.ui.core.elements.SectionFieldErrorController>;
							public getError(): kotlinx.coroutines.flow.Flow<com.stripe.android.ui.core.elements.FieldError>;
							public getLabel(): java.lang.Integer;
							public constructor(param0: java.lang.Integer, param1: java.util.List<any>);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class SectionElement extends com.stripe.android.ui.core.elements.FormElement {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.SectionElement>;
							public static $stable: number;
							public copy(param0: com.stripe.android.ui.core.elements.IdentifierSpec, param1: java.util.List<any>, param2: com.stripe.android.ui.core.elements.SectionController): com.stripe.android.ui.core.elements.SectionElement;
							public getIdentifier(): com.stripe.android.ui.core.elements.IdentifierSpec;
							public constructor(param0: com.stripe.android.ui.core.elements.IdentifierSpec, param1: com.stripe.android.ui.core.elements.SectionFieldElement, param2: com.stripe.android.ui.core.elements.SectionController);
							public getController(): com.stripe.android.ui.core.elements.SectionController;
							public hashCode(): number;
							public component1(): com.stripe.android.ui.core.elements.IdentifierSpec;
							public toString(): string;
							public constructor(param0: com.stripe.android.ui.core.elements.IdentifierSpec, param1: java.util.List<any>, param2: com.stripe.android.ui.core.elements.SectionController);
							public getController(): com.stripe.android.ui.core.elements.Controller;
							public getFormFieldValueFlow(): kotlinx.coroutines.flow.Flow<java.util.List<kotlin.Pair<com.stripe.android.ui.core.elements.IdentifierSpec, com.stripe.android.ui.core.forms.FormFieldEntry>>>;
							public component2(): java.util.List<com.stripe.android.ui.core.elements.SectionFieldElement>;
							public equals(param0: any): boolean;
							public component3(): com.stripe.android.ui.core.elements.SectionController;
							public getFields(): java.util.List<com.stripe.android.ui.core.elements.SectionFieldElement>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class SectionElementUIKt {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.SectionElementUIKt>;
							public static SectionElementUI(param0: boolean, param1: com.stripe.android.ui.core.elements.SectionElement, param2: java.util.List<any>, param3: androidx.compose.runtime.Composer, param4: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class SectionFieldElement {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.SectionFieldElement>;
							/**
							 * Constructs a new instance of the com.stripe.android.ui.core.elements.SectionFieldElement interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getIdentifier(): com.stripe.android.ui.core.elements.IdentifierSpec;
								getFormFieldValueFlow(): kotlinx.coroutines.flow.Flow<java.util.List<kotlin.Pair<com.stripe.android.ui.core.elements.IdentifierSpec, com.stripe.android.ui.core.forms.FormFieldEntry>>>;
								sectionFieldErrorController(): com.stripe.android.ui.core.elements.SectionFieldErrorController;
								setRawValue(param0: java.util.Map<com.stripe.android.ui.core.elements.IdentifierSpec, string>): void;
							});
							public constructor();
							public getIdentifier(): com.stripe.android.ui.core.elements.IdentifierSpec;
							public getFormFieldValueFlow(): kotlinx.coroutines.flow.Flow<java.util.List<kotlin.Pair<com.stripe.android.ui.core.elements.IdentifierSpec, com.stripe.android.ui.core.forms.FormFieldEntry>>>;
							public sectionFieldErrorController(): com.stripe.android.ui.core.elements.SectionFieldErrorController;
							public setRawValue(param0: java.util.Map<com.stripe.android.ui.core.elements.IdentifierSpec, string>): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class SectionFieldElementUIKt {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.SectionFieldElementUIKt>;
							public static SectionFieldElementUI(param0: boolean, param1: com.stripe.android.ui.core.elements.SectionFieldElement, param2: androidx.compose.ui.Modifier, param3: androidx.compose.runtime.Composer, param4: number, param5: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class SectionFieldErrorController extends com.stripe.android.ui.core.elements.Controller {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.SectionFieldErrorController>;
							/**
							 * Constructs a new instance of the com.stripe.android.ui.core.elements.SectionFieldErrorController interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getError(): kotlinx.coroutines.flow.Flow<com.stripe.android.ui.core.elements.FieldError>;
							});
							public constructor();
							public getError(): kotlinx.coroutines.flow.Flow<com.stripe.android.ui.core.elements.FieldError>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export abstract class SectionFieldSpec {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.SectionFieldSpec>;
							public static $stable: number;
							public getIdentifier(): com.stripe.android.ui.core.elements.IdentifierSpec;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export abstract class SectionMultiFieldElement extends com.stripe.android.ui.core.elements.SectionFieldElement {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.SectionMultiFieldElement>;
							public static $stable: number;
							public getIdentifier(): com.stripe.android.ui.core.elements.IdentifierSpec;
							public getFormFieldValueFlow(): kotlinx.coroutines.flow.Flow<java.util.List<kotlin.Pair<com.stripe.android.ui.core.elements.IdentifierSpec, com.stripe.android.ui.core.forms.FormFieldEntry>>>;
							public sectionFieldErrorController(): com.stripe.android.ui.core.elements.SectionFieldErrorController;
							public setRawValue(param0: java.util.Map<com.stripe.android.ui.core.elements.IdentifierSpec, string>): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export abstract class SectionSingleFieldElement extends com.stripe.android.ui.core.elements.SectionFieldElement {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.SectionSingleFieldElement>;
							public static $stable: number;
							public getController(): com.stripe.android.ui.core.elements.InputController;
							public getIdentifier(): com.stripe.android.ui.core.elements.IdentifierSpec;
							public getFormFieldValueFlow(): kotlinx.coroutines.flow.Flow<java.util.List<kotlin.Pair<com.stripe.android.ui.core.elements.IdentifierSpec, com.stripe.android.ui.core.forms.FormFieldEntry>>>;
							public sectionFieldErrorController(): com.stripe.android.ui.core.elements.SectionFieldErrorController;
							public setRawValue(param0: java.util.Map<com.stripe.android.ui.core.elements.IdentifierSpec, string>): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class SectionSpec extends com.stripe.android.ui.core.elements.FormItemSpec implements com.stripe.android.ui.core.elements.RequiredItemSpec {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.SectionSpec>;
							public static $stable: number;
							public getFields(): java.util.List<com.stripe.android.ui.core.elements.SectionFieldSpec>;
							public getIdentifier(): com.stripe.android.ui.core.elements.IdentifierSpec;
							public getTitle(): java.lang.Integer;
							public copy(param0: com.stripe.android.ui.core.elements.IdentifierSpec, param1: java.util.List<any>, param2: java.lang.Integer): com.stripe.android.ui.core.elements.SectionSpec;
							public hashCode(): number;
							public component1(): com.stripe.android.ui.core.elements.IdentifierSpec;
							public constructor(param0: com.stripe.android.ui.core.elements.IdentifierSpec, param1: java.util.List<any>, param2: java.lang.Integer);
							public constructor(param0: com.stripe.android.ui.core.elements.IdentifierSpec, param1: com.stripe.android.ui.core.elements.SectionFieldSpec, param2: java.lang.Integer);
							public component3(): java.lang.Integer;
							public component2(): java.util.List<com.stripe.android.ui.core.elements.SectionFieldSpec>;
							public toString(): string;
							public equals(param0: any): boolean;
						}
					}
				}
			}
		}
	}
}

// declare module com {
// 	export module stripe {
// 		export module android {
// 			export module ui {
// 				export module core {
// 					export module elements {
// 						export class SectionTitle {
// 							public static class: java.lang.Class<com.stripe.android.ui.core.elements.SectionTitle>;
// 							public component6-XSAIIZE(): number;
// 							public hashCode(): number;
// 							public getFontWeight(): androidx.compose.ui.text.font.FontWeight;
// 							public getPaddingBottom-D9Ej5fM(): number;
// 							public getLetterSpacing-XSAIIZE(): number;
// 							public copy-RwOOn5U(param0: number, param1: number, param2: androidx.compose.ui.text.font.FontWeight, param3: number, param4: number, param5: number): com.stripe.android.ui.core.elements.SectionTitle;
// 							public toString(): string;
// 							public component3(): androidx.compose.ui.text.font.FontWeight;
// 							public getLight-0d7_KjU(): number;
// 							public getDark-0d7_KjU(): number;
// 							public component4-D9Ej5fM(): number;
// 							public getFontSize-XSAIIZE(): number;
// 							public equals(param0: any): boolean;
// 							public component2-0d7_KjU(): number;
// 							public component5-XSAIIZE(): number;
// 							public component1-0d7_KjU(): number;
// 						}
// 					}
// 				}
// 			}
// 		}
// 	}
// }

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class SectionUIKt {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.SectionUIKt>;
							public static SectionTitle(param0: java.lang.Integer, param1: androidx.compose.runtime.Composer, param2: number): void;
							public static SectionError(param0: string, param1: androidx.compose.runtime.Composer, param2: number): void;
							public static Section(param0: java.lang.Integer, param1: string, param2: kotlin.jvm.functions.Function2<any, any, kotlin.Unit>, param3: androidx.compose.runtime.Composer, param4: number): void;
							public static SectionCard(param0: kotlin.jvm.functions.Function2<any, any, kotlin.Unit>, param1: androidx.compose.runtime.Composer, param2: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class SimpleDropdownConfig extends com.stripe.android.ui.core.elements.DropdownConfig {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.SimpleDropdownConfig>;
							public static $stable: number;
							public constructor(param0: number, param1: java.util.List<com.stripe.android.ui.core.elements.DropdownItemSpec>);
							public getLabel(): number;
							public convertFromRaw(param0: string): string;
							public getDebugLabel(): string;
							public getDisplayItems(): java.util.List<string>;
							public convertToRaw(param0: string): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class SimpleDropdownElement extends com.stripe.android.ui.core.elements.SectionSingleFieldElement {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.SimpleDropdownElement>;
							public static $stable: number;
							public getIdentifier(): com.stripe.android.ui.core.elements.IdentifierSpec;
							public hashCode(): number;
							public component1(): com.stripe.android.ui.core.elements.IdentifierSpec;
							public component2(): com.stripe.android.ui.core.elements.DropdownFieldController;
							public toString(): string;
							public sectionFieldErrorController(): com.stripe.android.ui.core.elements.SectionFieldErrorController;
							public getController(): com.stripe.android.ui.core.elements.InputController;
							public getController(): com.stripe.android.ui.core.elements.DropdownFieldController;
							public copy(param0: com.stripe.android.ui.core.elements.IdentifierSpec, param1: com.stripe.android.ui.core.elements.DropdownFieldController): com.stripe.android.ui.core.elements.SimpleDropdownElement;
							public getFormFieldValueFlow(): kotlinx.coroutines.flow.Flow<java.util.List<kotlin.Pair<com.stripe.android.ui.core.elements.IdentifierSpec, com.stripe.android.ui.core.forms.FormFieldEntry>>>;
							public constructor(param0: com.stripe.android.ui.core.elements.IdentifierSpec, param1: com.stripe.android.ui.core.elements.DropdownFieldController);
							public equals(param0: any): boolean;
							public setRawValue(param0: java.util.Map<com.stripe.android.ui.core.elements.IdentifierSpec, string>): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class SimpleTextElement extends com.stripe.android.ui.core.elements.SectionSingleFieldElement {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.SimpleTextElement>;
							public static $stable: number;
							public constructor(param0: com.stripe.android.ui.core.elements.IdentifierSpec, param1: com.stripe.android.ui.core.elements.TextFieldController);
							public getIdentifier(): com.stripe.android.ui.core.elements.IdentifierSpec;
							public hashCode(): number;
							public component1(): com.stripe.android.ui.core.elements.IdentifierSpec;
							public toString(): string;
							public sectionFieldErrorController(): com.stripe.android.ui.core.elements.SectionFieldErrorController;
							public getController(): com.stripe.android.ui.core.elements.TextFieldController;
							public getController(): com.stripe.android.ui.core.elements.InputController;
							public component2(): com.stripe.android.ui.core.elements.TextFieldController;
							public copy(param0: com.stripe.android.ui.core.elements.IdentifierSpec, param1: com.stripe.android.ui.core.elements.TextFieldController): com.stripe.android.ui.core.elements.SimpleTextElement;
							public getFormFieldValueFlow(): kotlinx.coroutines.flow.Flow<java.util.List<kotlin.Pair<com.stripe.android.ui.core.elements.IdentifierSpec, com.stripe.android.ui.core.forms.FormFieldEntry>>>;
							public equals(param0: any): boolean;
							public setRawValue(param0: java.util.Map<com.stripe.android.ui.core.elements.IdentifierSpec, string>): void;
						}
					}
				}
			}
		}
	}
}

// declare module com {
// 	export module stripe {
// 		export module android {
// 			export module ui {
// 				export module core {
// 					export module elements {
// 						export class SimpleTextFieldConfig extends com.stripe.android.ui.core.elements.TextFieldConfig {
// 							public static class: java.lang.Class<com.stripe.android.ui.core.elements.SimpleTextFieldConfig>;
// 							public static $stable: number;
// 							public getKeyboard-PjHm6EE(): number;
// 							public getLabel(): number;
// 							public getVisualTransformation(): androidx.compose.ui.text.input.VisualTransformation;
// 							public convertFromRaw(param0: string): string;
// 							public getDebugLabel(): string;
// 							public getCapitalization-IUNYP9k(): number;
// 							public filter(param0: string): string;
// 							public determineState(param0: string): com.stripe.android.ui.core.elements.TextFieldState;
// 							public convertToRaw(param0: string): string;
// 						}
// 					}
// 				}
// 			}
// 		}
// 	}
// }

// declare module com {
// 	export module stripe {
// 		export module android {
// 			export module ui {
// 				export module core {
// 					export module elements {
// 						export class SimpleTextSpec extends com.stripe.android.ui.core.elements.SectionFieldSpec {
// 							public static class: java.lang.Class<com.stripe.android.ui.core.elements.SimpleTextSpec>;
// 							public static Companion: com.stripe.android.ui.core.elements.SimpleTextSpec.Companion;
// 							public static $stable: number;
// 							public getIdentifier(): com.stripe.android.ui.core.elements.IdentifierSpec;
// 							public getKeyboardType-PjHm6EE(): number;
// 							public component3-IUNYP9k(): number;
// 							public component5(): boolean;
// 							public hashCode(): number;
// 							public component1(): com.stripe.android.ui.core.elements.IdentifierSpec;
// 							public component2(): number;
// 							public transform(param0: java.util.Map<com.stripe.android.ui.core.elements.IdentifierSpec,string>): com.stripe.android.ui.core.elements.SectionSingleFieldElement;
// 							public component4-PjHm6EE(): number;
// 							public getCapitalization-IUNYP9k(): number;
// 							public toString(): string;
// 							public getLabel(): number;
// 							public getShowOptionalLabel(): boolean;
// 							public equals(param0: any): boolean;
// 							public copy-25FCGzQ(param0: com.stripe.android.ui.core.elements.IdentifierSpec, param1: number, param2: number, param3: number, param4: boolean): com.stripe.android.ui.core.elements.SimpleTextSpec;
// 						}
// 						export module SimpleTextSpec {
// 							export class Companion {
// 								public static class: java.lang.Class<com.stripe.android.ui.core.elements.SimpleTextSpec.Companion>;
// 								public getNAME(): com.stripe.android.ui.core.elements.SimpleTextSpec;
// 							}
// 						}
// 					}
// 				}
// 			}
// 		}
// 	}
// }

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class StaticTextElement extends com.stripe.android.ui.core.elements.FormElement {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.StaticTextElement>;
							public static $stable: number;
							public getIdentifier(): com.stripe.android.ui.core.elements.IdentifierSpec;
							public getFontSizeSp(): number;
							public copy(param0: com.stripe.android.ui.core.elements.IdentifierSpec, param1: number, param2: java.lang.Integer, param3: string, param4: number, param5: number, param6: com.stripe.android.ui.core.elements.InputController): com.stripe.android.ui.core.elements.StaticTextElement;
							public hashCode(): number;
							public component1(): com.stripe.android.ui.core.elements.IdentifierSpec;
							public component2(): number;
							public component5(): number;
							public component7(): com.stripe.android.ui.core.elements.InputController;
							public component3(): java.lang.Integer;
							public getLetterSpacingSp(): number;
							public toString(): string;
							public getMerchantName(): string;
							public getController(): com.stripe.android.ui.core.elements.Controller;
							public getController(): com.stripe.android.ui.core.elements.InputController;
							public component6(): number;
							public getFormFieldValueFlow(): kotlinx.coroutines.flow.Flow<java.util.List<kotlin.Pair<com.stripe.android.ui.core.elements.IdentifierSpec, com.stripe.android.ui.core.forms.FormFieldEntry>>>;
							public getStringResId(): number;
							public constructor(param0: com.stripe.android.ui.core.elements.IdentifierSpec, param1: number, param2: java.lang.Integer, param3: string, param4: number, param5: number, param6: com.stripe.android.ui.core.elements.InputController);
							public component4(): string;
							public getColor(): java.lang.Integer;
							public equals(param0: any): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class StaticTextElementUIKt {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.StaticTextElementUIKt>;
							public static StaticElementUI(param0: com.stripe.android.ui.core.elements.StaticTextElement, param1: androidx.compose.runtime.Composer, param2: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class StaticTextSpec extends com.stripe.android.ui.core.elements.FormItemSpec implements com.stripe.android.ui.core.elements.RequiredItemSpec {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.StaticTextSpec>;
							public getIdentifier(): com.stripe.android.ui.core.elements.IdentifierSpec;
							public getFontSizeSp(): number;
							public constructor(param0: com.stripe.android.ui.core.elements.IdentifierSpec, param1: number, param2: java.lang.Integer, param3: number, param4: number);
							public hashCode(): number;
							public component1(): com.stripe.android.ui.core.elements.IdentifierSpec;
							public component2(): number;
							public transform(param0: string): com.stripe.android.ui.core.elements.FormElement;
							public copy(param0: com.stripe.android.ui.core.elements.IdentifierSpec, param1: number, param2: java.lang.Integer, param3: number, param4: number): com.stripe.android.ui.core.elements.StaticTextSpec;
							public component5(): number;
							public component3(): java.lang.Integer;
							public getLetterSpacingSp(): number;
							public toString(): string;
							public component4(): number;
							public getStringResId(): number;
							public getColor(): java.lang.Integer;
							public equals(param0: any): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class SupportedBankType {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.SupportedBankType>;
							public static Eps: com.stripe.android.ui.core.elements.SupportedBankType;
							public static Ideal: com.stripe.android.ui.core.elements.SupportedBankType;
							public static P24: com.stripe.android.ui.core.elements.SupportedBankType;
							public getAssetFileName(): string;
							public static valueOf(param0: string): com.stripe.android.ui.core.elements.SupportedBankType;
							public static values(): androidNative.Array<com.stripe.android.ui.core.elements.SupportedBankType>;
						}
					}
				}
			}
		}
	}
}

// declare module com {
// 	export module stripe {
// 		export module android {
// 			export module ui {
// 				export module core {
// 					export module elements {
// 						export class TextFieldColors {
// 							public static class: java.lang.Class<com.stripe.android.ui.core.elements.TextFieldColors>;
// 							public hashCode(): number;
// 							public component8-0d7_KjU(): number;
// 							public getTextColor-0d7_KjU(): number;
// 							public getFocusedIndicatorColor-0d7_KjU(): number;
// 							public copy-zoLT1gQ(param0: boolean, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number): com.stripe.android.ui.core.elements.TextFieldColors;
// 							public toString(): string;
// 							public component4-0d7_KjU(): number;
// 							public getUnfocusedIndicatorColor-0d7_KjU(): number;
// 							public component5-0d7_KjU(): number;
// 							public getPlaceholderColor-0d7_KjU(): number;
// 							public getDisabledIndicatorColor-0d7_KjU(): number;
// 							public component7-0d7_KjU(): number;
// 							public getBackgroundColor-0d7_KjU(): number;
// 							public component6-0d7_KjU(): number;
// 							public equals(param0: any): boolean;
// 							public component3-0d7_KjU(): number;
// 						}
// 					}
// 				}
// 			}
// 		}
// 	}
// }

// declare module com {
// 	export module stripe {
// 		export module android {
// 			export module ui {
// 				export module core {
// 					export module elements {
// 						export class TextFieldConfig {
// 							public static class: java.lang.Class<com.stripe.android.ui.core.elements.TextFieldConfig>;
// 							/**
// 							 * Constructs a new instance of the com.stripe.android.ui.core.elements.TextFieldConfig interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
// 							 */
// 							public constructor(implementation: {
// 								getCapitalization-IUNYP9k(): number;
// 								getDebugLabel(): string;
// 								getLabel(): number;
// 								getKeyboard-PjHm6EE(): number;
// 								getVisualTransformation(): androidx.compose.ui.text.input.VisualTransformation;
// 								determineState(param0: string): com.stripe.android.ui.core.elements.TextFieldState;
// 								filter(param0: string): string;
// 								convertToRaw(param0: string): string;
// 								convertFromRaw(param0: string): string;
// 							});
// 							public constructor();
// 							public getKeyboard-PjHm6EE(): number;
// 							public getLabel(): number;
// 							public getVisualTransformation(): androidx.compose.ui.text.input.VisualTransformation;
// 							public convertFromRaw(param0: string): string;
// 							public getDebugLabel(): string;
// 							public getCapitalization-IUNYP9k(): number;
// 							public filter(param0: string): string;
// 							public determineState(param0: string): com.stripe.android.ui.core.elements.TextFieldState;
// 							public convertToRaw(param0: string): string;
// 						}
// 					}
// 				}
// 			}
// 		}
// 	}
// }

// declare module com {
// 	export module stripe {
// 		export module android {
// 			export module ui {
// 				export module core {
// 					export module elements {
// 						export class TextFieldController implements com.stripe.android.ui.core.elements.InputController, com.stripe.android.ui.core.elements.SectionFieldErrorController {
// 							public static class: java.lang.Class<com.stripe.android.ui.core.elements.TextFieldController>;
// 							public static $stable: number;
// 							public onValueChange(param0: string): void;
// 							public getKeyboardType-PjHm6EE(): number;
// 							public getError(): kotlinx.coroutines.flow.Flow<com.stripe.android.ui.core.elements.FieldError>;
// 							public onRawValueChange(param0: string): void;
// 							public getRawFieldValue(): kotlinx.coroutines.flow.Flow<string>;
// 							public getCapitalization-IUNYP9k(): number;
// 							public getVisibleError(): kotlinx.coroutines.flow.Flow<java.lang.Boolean>;
// 							public isFull(): kotlinx.coroutines.flow.Flow<java.lang.Boolean>;
// 							public getLabel(): number;
// 							public getFormFieldValue(): kotlinx.coroutines.flow.Flow<com.stripe.android.ui.core.forms.FormFieldEntry>;
// 							public getVisualTransformation(): androidx.compose.ui.text.input.VisualTransformation;
// 							public onFocusChange(param0: boolean): void;
// 							public constructor(param0: com.stripe.android.ui.core.elements.TextFieldConfig, param1: boolean, param2: string);
// 							public isComplete(): kotlinx.coroutines.flow.Flow<java.lang.Boolean>;
// 							public getDebugLabel(): string;
// 							public getShowOptionalLabel(): boolean;
// 							public getFieldValue(): kotlinx.coroutines.flow.Flow<string>;
// 						}
// 					}
// 				}
// 			}
// 		}
// 	}
// }

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class TextFieldState {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.TextFieldState>;
							/**
							 * Constructs a new instance of the com.stripe.android.ui.core.elements.TextFieldState interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								shouldShowError(param0: boolean): boolean;
								isValid(): boolean;
								getError(): com.stripe.android.ui.core.elements.FieldError;
								isFull(): boolean;
								isBlank(): boolean;
							});
							public constructor();
							public isFull(): boolean;
							public getError(): com.stripe.android.ui.core.elements.FieldError;
							public isBlank(): boolean;
							public shouldShowError(param0: boolean): boolean;
							public isValid(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class TextFieldStateConstants {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.TextFieldStateConstants>;
							public constructor();
						}
						export module TextFieldStateConstants {
							export abstract class Error extends com.stripe.android.ui.core.elements.TextFieldState {
								public static class: java.lang.Class<com.stripe.android.ui.core.elements.TextFieldStateConstants.Error>;
								public static $stable: number;
								public isFull(): boolean;
								public shouldShowError(param0: boolean): boolean;
								public getError(): com.stripe.android.ui.core.elements.FieldError;
								public isBlank(): boolean;
								public getFormatArgs(): androidNative.Array<any>;
								public isValid(): boolean;
								public getErrorMessageResId(): number;
							}
							export module Error {
								export class Blank extends com.stripe.android.ui.core.elements.TextFieldStateConstants.Error {
									public static class: java.lang.Class<com.stripe.android.ui.core.elements.TextFieldStateConstants.Error.Blank>;
									public static INSTANCE: com.stripe.android.ui.core.elements.TextFieldStateConstants.Error.Blank;
									public static $stable: number;
									public isValid(): boolean;
									public shouldShowError(param0: boolean): boolean;
									public isFull(): boolean;
									public isBlank(): boolean;
									public getError(): com.stripe.android.ui.core.elements.FieldError;
								}
								export class Incomplete extends com.stripe.android.ui.core.elements.TextFieldStateConstants.Error {
									public static class: java.lang.Class<com.stripe.android.ui.core.elements.TextFieldStateConstants.Error.Incomplete>;
									public static $stable: number;
									public isValid(): boolean;
									public shouldShowError(param0: boolean): boolean;
									public isFull(): boolean;
									public constructor(param0: number);
									public getErrorMessageResId(): number;
									public isBlank(): boolean;
									public getError(): com.stripe.android.ui.core.elements.FieldError;
								}
								export class Invalid extends com.stripe.android.ui.core.elements.TextFieldStateConstants.Error {
									public static class: java.lang.Class<com.stripe.android.ui.core.elements.TextFieldStateConstants.Error.Invalid>;
									public static $stable: number;
									public isValid(): boolean;
									public shouldShowError(param0: boolean): boolean;
									public isFull(): boolean;
									public constructor(param0: number, param1: androidNative.Array<any>);
									public getErrorMessageResId(): number;
									public isBlank(): boolean;
									public getFormatArgs(): androidNative.Array<any>;
									public getError(): com.stripe.android.ui.core.elements.FieldError;
								}
							}
							export abstract class Valid extends com.stripe.android.ui.core.elements.TextFieldState {
								public static class: java.lang.Class<com.stripe.android.ui.core.elements.TextFieldStateConstants.Valid>;
								public static $stable: number;
								public isFull(): boolean;
								public shouldShowError(param0: boolean): boolean;
								public getError(): com.stripe.android.ui.core.elements.FieldError;
								public isBlank(): boolean;
								public isValid(): boolean;
							}
							export module Valid {
								export class Full extends com.stripe.android.ui.core.elements.TextFieldStateConstants.Valid {
									public static class: java.lang.Class<com.stripe.android.ui.core.elements.TextFieldStateConstants.Valid.Full>;
									public static INSTANCE: com.stripe.android.ui.core.elements.TextFieldStateConstants.Valid.Full;
									public static $stable: number;
									public isValid(): boolean;
									public shouldShowError(param0: boolean): boolean;
									public isFull(): boolean;
									public isBlank(): boolean;
									public getError(): com.stripe.android.ui.core.elements.FieldError;
								}
								export class Limitless extends com.stripe.android.ui.core.elements.TextFieldStateConstants.Valid {
									public static class: java.lang.Class<com.stripe.android.ui.core.elements.TextFieldStateConstants.Valid.Limitless>;
									public static INSTANCE: com.stripe.android.ui.core.elements.TextFieldStateConstants.Valid.Limitless;
									public static $stable: number;
									public isValid(): boolean;
									public shouldShowError(param0: boolean): boolean;
									public isFull(): boolean;
									public isBlank(): boolean;
									public getError(): com.stripe.android.ui.core.elements.FieldError;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module elements {
						export class TextFieldUIKt {
							public static class: java.lang.Class<com.stripe.android.ui.core.elements.TextFieldUIKt>;
							public static imeAction(param0: androidx.compose.ui.focus.FocusRequester): number;
							public static TextField(param0: com.stripe.android.ui.core.elements.TextFieldController, param1: androidx.compose.ui.Modifier, param2: boolean, param3: androidx.compose.runtime.Composer, param4: number, param5: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module forms {
						export class AfterpayClearpaySpecKt {
							public static class: java.lang.Class<com.stripe.android.ui.core.forms.AfterpayClearpaySpecKt>;
							public static getAfterpayClearpayEmailSection(): com.stripe.android.ui.core.elements.SectionSpec;
							public static getAfterpayClearpayParamKey(): java.util.Map<string, any>;
							public static getAfterpayClearpayBillingSection(): com.stripe.android.ui.core.elements.SectionSpec;
							public static getAfterpayClearpayHeader(): com.stripe.android.ui.core.elements.AfterpayClearpayTextSpec;
							public static getAfterpayClearpayForm(): com.stripe.android.ui.core.elements.LayoutSpec;
							public static getAfterpayClearpayNameSection(): com.stripe.android.ui.core.elements.SectionSpec;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module forms {
						export class BancontactSpecKt {
							public static class: java.lang.Class<com.stripe.android.ui.core.forms.BancontactSpecKt>;
							public static getBancontactEmailSection(): com.stripe.android.ui.core.elements.SectionSpec;
							public static getBancontactNameSection(): com.stripe.android.ui.core.elements.SectionSpec;
							public static getBancontactParamKey(): java.util.Map<string, any>;
							public static getBancontactMandate(): com.stripe.android.ui.core.elements.StaticTextSpec;
							public static getBancontactForm(): com.stripe.android.ui.core.elements.LayoutSpec;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module forms {
						export class CardSpecKt {
							public static class: java.lang.Class<com.stripe.android.ui.core.forms.CardSpecKt>;
							public static getCard(): com.stripe.android.ui.core.elements.LayoutSpec;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module forms {
						export class EpsSpecKt {
							public static class: java.lang.Class<com.stripe.android.ui.core.forms.EpsSpecKt>;
							public static getEpsNameSection(): com.stripe.android.ui.core.elements.SectionSpec;
							public static getEpsForm(): com.stripe.android.ui.core.elements.LayoutSpec;
							public static getEpsBankSection(): com.stripe.android.ui.core.elements.SectionSpec;
							public static getEpsParamKey(): java.util.Map<string, any>;
							public static getEpsParams(): java.util.Map<string, any>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module forms {
						export class FormFieldEntry {
							public static class: java.lang.Class<com.stripe.android.ui.core.forms.FormFieldEntry>;
							public static $stable: number;
							public constructor(param0: string, param1: boolean);
							public isComplete(): boolean;
							public hashCode(): number;
							public component2(): boolean;
							public copy(param0: string, param1: boolean): com.stripe.android.ui.core.forms.FormFieldEntry;
							public getValue(): string;
							public toString(): string;
							public equals(param0: any): boolean;
							public component1(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module forms {
						export class GiropaySpecKt {
							public static class: java.lang.Class<com.stripe.android.ui.core.forms.GiropaySpecKt>;
							public static getGiropayNameSection(): com.stripe.android.ui.core.elements.SectionSpec;
							public static getGiropayForm(): com.stripe.android.ui.core.elements.LayoutSpec;
							public static getGiropayParamKey(): java.util.Map<string, any>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module forms {
						export class IdealSpecKt {
							public static class: java.lang.Class<com.stripe.android.ui.core.forms.IdealSpecKt>;
							public static getIdealEmailSection(): com.stripe.android.ui.core.elements.SectionSpec;
							public static getIdealParamKey(): java.util.Map<string, any>;
							public static getIdealBankSection(): com.stripe.android.ui.core.elements.SectionSpec;
							public static getIdealMandate(): com.stripe.android.ui.core.elements.StaticTextSpec;
							public static getIdealNameSection(): com.stripe.android.ui.core.elements.SectionSpec;
							public static getIdealParams(): java.util.Map<string, any>;
							public static getIdealForm(): com.stripe.android.ui.core.elements.LayoutSpec;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module forms {
						export class KlarnaSpecKt {
							public static class: java.lang.Class<com.stripe.android.ui.core.forms.KlarnaSpecKt>;
							public static getKlarnaHeader(): com.stripe.android.ui.core.elements.StaticTextSpec;
							public static getKlarnaBillingSection(): com.stripe.android.ui.core.elements.SectionSpec;
							public static getKlarnaParamKey(): java.util.Map<string, any>;
							public static getKlarnaEmailSection(): com.stripe.android.ui.core.elements.SectionSpec;
							public static getKlarnaForm(): com.stripe.android.ui.core.elements.LayoutSpec;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module forms {
						export class P24SpecKt {
							public static class: java.lang.Class<com.stripe.android.ui.core.forms.P24SpecKt>;
							public static getP24BankSection(): com.stripe.android.ui.core.elements.SectionSpec;
							public static getP24Form(): com.stripe.android.ui.core.elements.LayoutSpec;
							public static getP24NameSection(): com.stripe.android.ui.core.elements.SectionSpec;
							public static getP24Params(): java.util.Map<string, any>;
							public static getP24EmailSection(): com.stripe.android.ui.core.elements.SectionSpec;
							public static getP24ParamKey(): java.util.Map<string, any>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module forms {
						export class PaypalSpecKt {
							public static class: java.lang.Class<com.stripe.android.ui.core.forms.PaypalSpecKt>;
							public static getPaypalParamKey(): java.util.Map<string, any>;
							public static getPaypalForm(): com.stripe.android.ui.core.elements.LayoutSpec;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module forms {
						export class SepaDebitSpecKt {
							public static class: java.lang.Class<com.stripe.android.ui.core.forms.SepaDebitSpecKt>;
							public static getSepaDebitMandate(): com.stripe.android.ui.core.elements.StaticTextSpec;
							public static getSepaBillingSection(): com.stripe.android.ui.core.elements.SectionSpec;
							public static getSepaDebitParamKey(): java.util.Map<string, any>;
							public static getSepaDebitEmailSection(): com.stripe.android.ui.core.elements.SectionSpec;
							public static getSepaDebitForm(): com.stripe.android.ui.core.elements.LayoutSpec;
							public static getSepaDebitParams(): java.util.Map<string, any>;
							public static getSepaDebitNameSection(): com.stripe.android.ui.core.elements.SectionSpec;
							public static getSepaDebitIbanSection(): com.stripe.android.ui.core.elements.SectionSpec;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module forms {
						export class SofortSpecKt {
							public static class: java.lang.Class<com.stripe.android.ui.core.forms.SofortSpecKt>;
							public static getSofortForm(): com.stripe.android.ui.core.elements.LayoutSpec;
							public static getSofortParams(): java.util.Map<string, any>;
							public static getSofortCountrySection(): com.stripe.android.ui.core.elements.SectionSpec;
							public static getSofortMandate(): com.stripe.android.ui.core.elements.StaticTextSpec;
							public static getSofortNameSection(): com.stripe.android.ui.core.elements.SectionSpec;
							public static getSofortEmailSection(): com.stripe.android.ui.core.elements.SectionSpec;
							public static getSofortParamKey(): java.util.Map<string, any>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module forms {
						export class TransformSpecToElements {
							public static class: java.lang.Class<com.stripe.android.ui.core.forms.TransformSpecToElements>;
							public static $stable: number;
							public constructor(param0: com.stripe.android.ui.core.forms.resources.ResourceRepository, param1: java.util.Map<com.stripe.android.ui.core.elements.IdentifierSpec, string>, param2: com.stripe.android.ui.core.Amount, param3: string, param4: boolean, param5: string);
							public transform(param0: java.util.List<any>): java.util.List<com.stripe.android.ui.core.elements.FormElement>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module forms {
						export module resources {
							export class AsyncResourceRepository extends com.stripe.android.ui.core.forms.resources.ResourceRepository {
								public static class: java.lang.Class<com.stripe.android.ui.core.forms.resources.AsyncResourceRepository>;
								public static $stable: number;
								public getBankRepository(): com.stripe.android.ui.core.elements.BankRepository;
								public getAddressRepository(): com.stripe.android.ui.core.address.AddressFieldElementRepository;
								public isLoaded(): boolean;
								public constructor(param0: globalAndroid.content.res.Resources, param1: kotlin.coroutines.CoroutineContext, param2: java.util.Locale);
								public waitUntilLoaded(param0: kotlin.coroutines.Continuation<any>): any;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module forms {
						export module resources {
							export class AsyncResourceRepository_Factory extends dagger.internal.Factory<com.stripe.android.ui.core.forms.resources.AsyncResourceRepository> {
								public static class: java.lang.Class<com.stripe.android.ui.core.forms.resources.AsyncResourceRepository_Factory>;
								public static create(param0: javax.inject.Provider<globalAndroid.content.res.Resources>, param1: javax.inject.Provider<kotlin.coroutines.CoroutineContext>, param2: javax.inject.Provider<java.util.Locale>): com.stripe.android.ui.core.forms.resources.AsyncResourceRepository_Factory;
								public constructor(param0: javax.inject.Provider<globalAndroid.content.res.Resources>, param1: javax.inject.Provider<kotlin.coroutines.CoroutineContext>, param2: javax.inject.Provider<java.util.Locale>);
								public static newInstance(param0: globalAndroid.content.res.Resources, param1: kotlin.coroutines.CoroutineContext, param2: java.util.Locale): com.stripe.android.ui.core.forms.resources.AsyncResourceRepository;
								public get(): com.stripe.android.ui.core.forms.resources.AsyncResourceRepository;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module forms {
						export module resources {
							export class ResourceRepository {
								public static class: java.lang.Class<com.stripe.android.ui.core.forms.resources.ResourceRepository>;
								/**
								 * Constructs a new instance of the com.stripe.android.ui.core.forms.resources.ResourceRepository interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									waitUntilLoaded(param0: kotlin.coroutines.Continuation<any>): any;
									isLoaded(): boolean;
									getBankRepository(): com.stripe.android.ui.core.elements.BankRepository;
									getAddressRepository(): com.stripe.android.ui.core.address.AddressFieldElementRepository;
								});
								public constructor();
								public getBankRepository(): com.stripe.android.ui.core.elements.BankRepository;
								public getAddressRepository(): com.stripe.android.ui.core.address.AddressFieldElementRepository;
								public isLoaded(): boolean;
								public waitUntilLoaded(param0: kotlin.coroutines.Continuation<any>): any;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module ui {
				export module core {
					export module forms {
						export module resources {
							export class StaticResourceRepository extends com.stripe.android.ui.core.forms.resources.ResourceRepository {
								public static class: java.lang.Class<com.stripe.android.ui.core.forms.resources.StaticResourceRepository>;
								public static $stable: number;
								public getBankRepository(): com.stripe.android.ui.core.elements.BankRepository;
								public getAddressRepository(): com.stripe.android.ui.core.address.AddressFieldElementRepository;
								public isLoaded(): boolean;
								public waitUntilLoaded(param0: kotlin.coroutines.Continuation<any>): any;
								public constructor(param0: com.stripe.android.ui.core.elements.BankRepository, param1: com.stripe.android.ui.core.address.AddressFieldElementRepository);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module utils {
				export class ClassUtils {
					public static class: java.lang.Class<com.stripe.android.utils.ClassUtils>;
					public static INSTANCE: com.stripe.android.utils.ClassUtils;
					public static findField(param0: java.lang.Class<any>, param1: java.util.Collection<string>): java.lang.reflect.Field;
					public static getInternalObject(param0: java.lang.Class<any>, param1: java.util.Set<string>, param2: any): any;
					public static findMethod(param0: java.lang.Class<any>, param1: java.util.Collection<string>): java.lang.reflect.Method;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module utils {
				export class ContextUtils {
					public static class: java.lang.Class<com.stripe.android.utils.ContextUtils>;
					public static INSTANCE: com.stripe.android.utils.ContextUtils;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module utils {
				export class StripeUrlUtils {
					public static class: java.lang.Class<com.stripe.android.utils.StripeUrlUtils>;
					public static INSTANCE: com.stripe.android.utils.StripeUrlUtils;
					public isStripeUrl$payments_core_release(param0: string): boolean;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export abstract class ActivityStarter<TargetActivityType, ArgsType> extends java.lang.Object {
					public static class: java.lang.Class<com.stripe.android.view.ActivityStarter<any, any>>;
					public static $stable: number;
					public constructor(param0: androidx.fragment.app.Fragment, param1: java.lang.Class<TargetActivityType>, param2: number, param3: java.lang.Integer);
					public startForResult(param0: ArgsType): void;
					public constructor(param0: globalAndroid.app.Activity, param1: java.lang.Class<TargetActivityType>, param2: number, param3: java.lang.Integer);
					public constructor(param0: globalAndroid.app.Activity, param1: androidx.fragment.app.Fragment, param2: java.lang.Class<TargetActivityType>, param3: number, param4: java.lang.Integer);
				}
				export module ActivityStarter {
					export class Args {
						public static class: java.lang.Class<com.stripe.android.view.ActivityStarter.Args>;
						/**
						 * Constructs a new instance of the com.stripe.android.view.ActivityStarter$Args interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							<clinit>(): void;
						});
						public constructor();
						public static Companion: com.stripe.android.view.ActivityStarter.Args.Companion;
						public static EXTRA: string;
					}
					export module Args {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.view.ActivityStarter.Args.Companion>;
							public static EXTRA: string;
						}
					}
					export class Result {
						public static class: java.lang.Class<com.stripe.android.view.ActivityStarter.Result>;
						/**
						 * Constructs a new instance of the com.stripe.android.view.ActivityStarter$Result interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							toBundle(): globalAndroid.os.Bundle;
							<clinit>(): void;
						});
						public constructor();
						public static EXTRA: string;
						public static Companion: com.stripe.android.view.ActivityStarter.Result.Companion;
						public toBundle(): globalAndroid.os.Bundle;
					}
					export module Result {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.view.ActivityStarter.Result.Companion>;
							public static EXTRA: string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class AddPaymentMethodActivity extends com.stripe.android.view.StripeActivity {
					public static class: java.lang.Class<com.stripe.android.view.AddPaymentMethodActivity>;
					public static Companion: com.stripe.android.view.AddPaymentMethodActivity.Companion;
					public static $stable: number;
					public static PRODUCT_TOKEN: string;
					public onActionSave(): void;
					public onCreate(param0: globalAndroid.os.Bundle): void;
					public constructor();
					public onProgressBarVisibilityChanged(param0: boolean): void;
					public createPaymentMethod$payments_core_release(param0: com.stripe.android.view.AddPaymentMethodViewModel, param1: com.stripe.android.model.PaymentMethodCreateParams): void;
					public onResume(): void;
				}
				export module AddPaymentMethodActivity {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.view.AddPaymentMethodActivity.Companion>;
					}
					export class WhenMappings {
						public static class: java.lang.Class<com.stripe.android.view.AddPaymentMethodActivity.WhenMappings>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class AddPaymentMethodActivityStarter extends com.stripe.android.view.ActivityStarter<com.stripe.android.view.AddPaymentMethodActivity, com.stripe.android.view.AddPaymentMethodActivityStarter.Args> {
					public static class: java.lang.Class<com.stripe.android.view.AddPaymentMethodActivityStarter>;
					public static Companion: com.stripe.android.view.AddPaymentMethodActivityStarter.Companion;
					public static $stable: number;
					public static REQUEST_CODE: number;
					public constructor(param0: globalAndroid.app.Activity, param1: java.lang.Class<any>, param2: number, param3: java.lang.Integer);
					public constructor(param0: globalAndroid.app.Activity, param1: androidx.fragment.app.Fragment, param2: java.lang.Class<any>, param3: number, param4: java.lang.Integer);
					public constructor(param0: androidx.fragment.app.Fragment);
					public constructor(param0: androidx.fragment.app.Fragment, param1: java.lang.Class<any>, param2: number, param3: java.lang.Integer);
					public constructor(param0: globalAndroid.app.Activity);
				}
				export module AddPaymentMethodActivityStarter {
					export class Args extends com.stripe.android.view.ActivityStarter.Args {
						public static class: java.lang.Class<com.stripe.android.view.AddPaymentMethodActivityStarter.Args>;
						public static Companion: com.stripe.android.view.AddPaymentMethodActivityStarter.Args.Companion;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.view.AddPaymentMethodActivityStarter.Args>;
						public static $stable: number;
						public describeContents(): number;
						public component2$payments_core_release(): boolean;
						public getWindowFlags$payments_core_release(): java.lang.Integer;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public getPaymentMethodType$payments_core_release(): com.stripe.android.model.PaymentMethod.Type;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public component3$payments_core_release(): boolean;
						public getAddPaymentMethodFooterLayoutId$payments_core_release(): number;
						public component5$payments_core_release(): com.stripe.android.PaymentConfiguration;
						public getShouldAttachToCustomer$payments_core_release(): boolean;
						public toString(): string;
						public isPaymentSessionActive$payments_core_release(): boolean;
						public getPaymentConfiguration$payments_core_release(): com.stripe.android.PaymentConfiguration;
						public component7$payments_core_release(): java.lang.Integer;
						public copy(param0: com.stripe.android.view.BillingAddressFields, param1: boolean, param2: boolean, param3: com.stripe.android.model.PaymentMethod.Type, param4: com.stripe.android.PaymentConfiguration, param5: number, param6: java.lang.Integer): com.stripe.android.view.AddPaymentMethodActivityStarter.Args;
						public getBillingAddressFields$payments_core_release(): com.stripe.android.view.BillingAddressFields;
						public component1$payments_core_release(): com.stripe.android.view.BillingAddressFields;
						public component6$payments_core_release(): number;
						public constructor(param0: com.stripe.android.view.BillingAddressFields, param1: boolean, param2: boolean, param3: com.stripe.android.model.PaymentMethod.Type, param4: com.stripe.android.PaymentConfiguration, param5: number, param6: java.lang.Integer);
						public component4$payments_core_release(): com.stripe.android.model.PaymentMethod.Type;
					}
					export module Args {
						export class Builder extends com.stripe.android.ObjectBuilder<com.stripe.android.view.AddPaymentMethodActivityStarter.Args> {
							public static class: java.lang.Class<com.stripe.android.view.AddPaymentMethodActivityStarter.Args.Builder>;
							public static $stable: number;
							public constructor();
							public setPaymentMethodType(param0: com.stripe.android.model.PaymentMethod.Type): com.stripe.android.view.AddPaymentMethodActivityStarter.Args.Builder;
							public setShouldAttachToCustomer(param0: boolean): com.stripe.android.view.AddPaymentMethodActivityStarter.Args.Builder;
							public setWindowFlags(param0: java.lang.Integer): com.stripe.android.view.AddPaymentMethodActivityStarter.Args.Builder;
							public build(): any;
							public build(): com.stripe.android.view.AddPaymentMethodActivityStarter.Args;
							public setBillingAddressFields(param0: com.stripe.android.view.BillingAddressFields): com.stripe.android.view.AddPaymentMethodActivityStarter.Args.Builder;
							public setAddPaymentMethodFooter(param0: number): com.stripe.android.view.AddPaymentMethodActivityStarter.Args.Builder;
						}
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.view.AddPaymentMethodActivityStarter.Args.Companion>;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.view.AddPaymentMethodActivityStarter.Args> {
							public static class: java.lang.Class<com.stripe.android.view.AddPaymentMethodActivityStarter.Args.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.view.AddPaymentMethodActivityStarter.Args>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.view.AddPaymentMethodActivityStarter.Args;
						}
					}
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.view.AddPaymentMethodActivityStarter.Companion>;
					}
					export abstract class Result extends com.stripe.android.view.ActivityStarter.Result {
						public static class: java.lang.Class<com.stripe.android.view.AddPaymentMethodActivityStarter.Result>;
						public static Companion: com.stripe.android.view.AddPaymentMethodActivityStarter.Result.Companion;
						public static $stable: number;
						public static fromIntent(param0: globalAndroid.content.Intent): com.stripe.android.view.AddPaymentMethodActivityStarter.Result;
						public toBundle(): globalAndroid.os.Bundle;
					}
					export module Result {
						export class Canceled extends com.stripe.android.view.AddPaymentMethodActivityStarter.Result {
							public static class: java.lang.Class<com.stripe.android.view.AddPaymentMethodActivityStarter.Result.Canceled>;
							public static INSTANCE: com.stripe.android.view.AddPaymentMethodActivityStarter.Result.Canceled;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.view.AddPaymentMethodActivityStarter.Result.Canceled>;
							public static $stable: number;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public describeContents(): number;
							public toBundle(): globalAndroid.os.Bundle;
						}
						export module Canceled {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.view.AddPaymentMethodActivityStarter.Result.Canceled> {
								public static class: java.lang.Class<com.stripe.android.view.AddPaymentMethodActivityStarter.Result.Canceled.Creator>;
								public newArray(param0: number): androidNative.Array<com.stripe.android.view.AddPaymentMethodActivityStarter.Result.Canceled>;
								public constructor();
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.view.AddPaymentMethodActivityStarter.Result.Canceled;
							}
						}
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.view.AddPaymentMethodActivityStarter.Result.Companion>;
							public fromIntent(param0: globalAndroid.content.Intent): com.stripe.android.view.AddPaymentMethodActivityStarter.Result;
						}
						export class Failure extends com.stripe.android.view.AddPaymentMethodActivityStarter.Result {
							public static class: java.lang.Class<com.stripe.android.view.AddPaymentMethodActivityStarter.Result.Failure>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.view.AddPaymentMethodActivityStarter.Result.Failure>;
							public static $stable: number;
							public getException(): java.lang.Throwable;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public hashCode(): number;
							public constructor(param0: java.lang.Throwable);
							public describeContents(): number;
							public toString(): string;
							public toBundle(): globalAndroid.os.Bundle;
							public copy(param0: java.lang.Throwable): com.stripe.android.view.AddPaymentMethodActivityStarter.Result.Failure;
							public equals(param0: any): boolean;
							public component1(): java.lang.Throwable;
						}
						export module Failure {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.view.AddPaymentMethodActivityStarter.Result.Failure> {
								public static class: java.lang.Class<com.stripe.android.view.AddPaymentMethodActivityStarter.Result.Failure.Creator>;
								public constructor();
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.view.AddPaymentMethodActivityStarter.Result.Failure;
								public newArray(param0: number): androidNative.Array<com.stripe.android.view.AddPaymentMethodActivityStarter.Result.Failure>;
							}
						}
						export class Success extends com.stripe.android.view.AddPaymentMethodActivityStarter.Result {
							public static class: java.lang.Class<com.stripe.android.view.AddPaymentMethodActivityStarter.Result.Success>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.view.AddPaymentMethodActivityStarter.Result.Success>;
							public static $stable: number;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public constructor(param0: com.stripe.android.model.PaymentMethod);
							public hashCode(): number;
							public describeContents(): number;
							public getPaymentMethod(): com.stripe.android.model.PaymentMethod;
							public copy(param0: com.stripe.android.model.PaymentMethod): com.stripe.android.view.AddPaymentMethodActivityStarter.Result.Success;
							public component1(): com.stripe.android.model.PaymentMethod;
							public toString(): string;
							public toBundle(): globalAndroid.os.Bundle;
							public equals(param0: any): boolean;
						}
						export module Success {
							export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.view.AddPaymentMethodActivityStarter.Result.Success> {
								public static class: java.lang.Class<com.stripe.android.view.AddPaymentMethodActivityStarter.Result.Success.Creator>;
								public newArray(param0: number): androidNative.Array<com.stripe.android.view.AddPaymentMethodActivityStarter.Result.Success>;
								public constructor();
								public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.view.AddPaymentMethodActivityStarter.Result.Success;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class AddPaymentMethodCardView extends com.stripe.android.view.AddPaymentMethodView {
					public static class: java.lang.Class<com.stripe.android.view.AddPaymentMethodCardView>;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public constructor(param0: globalAndroid.content.Context);
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: com.stripe.android.view.BillingAddressFields);
					public setCommunicatingProgress(param0: boolean): void;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
					public getCreateParams(): com.stripe.android.model.PaymentMethodCreateParams;
				}
				export module AddPaymentMethodCardView {
					export class OnEditorActionListenerImpl {
						public static class: java.lang.Class<com.stripe.android.view.AddPaymentMethodCardView.OnEditorActionListenerImpl>;
						public constructor(param0: com.stripe.android.view.AddPaymentMethodActivity, param1: com.stripe.android.view.AddPaymentMethodCardView, param2: com.stripe.android.view.KeyboardController);
						public onEditorAction(param0: globalAndroid.widget.TextView, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
					}
					export class WhenMappings {
						public static class: java.lang.Class<com.stripe.android.view.AddPaymentMethodCardView.WhenMappings>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class AddPaymentMethodContract extends androidx.activity.result.contract.ActivityResultContract<com.stripe.android.view.AddPaymentMethodActivityStarter.Args, com.stripe.android.view.AddPaymentMethodActivityStarter.Result> {
					public static class: java.lang.Class<com.stripe.android.view.AddPaymentMethodContract>;
					public constructor();
					public createIntent(param0: globalAndroid.content.Context, param1: com.stripe.android.view.AddPaymentMethodActivityStarter.Args): globalAndroid.content.Intent;
					public parseResult(param0: number, param1: globalAndroid.content.Intent): com.stripe.android.view.AddPaymentMethodActivityStarter.Result;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class AddPaymentMethodFpxView extends com.stripe.android.view.AddPaymentMethodView {
					public static class: java.lang.Class<com.stripe.android.view.AddPaymentMethodFpxView>;
					public static Companion: com.stripe.android.view.AddPaymentMethodFpxView.Companion;
					public constructor(param0: androidx.fragment.app.FragmentActivity, param1: globalAndroid.util.AttributeSet, param2: number);
					public constructor(param0: androidx.fragment.app.FragmentActivity, param1: globalAndroid.util.AttributeSet);
					public constructor(param0: androidx.fragment.app.FragmentActivity);
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
					public getCreateParams(): com.stripe.android.model.PaymentMethodCreateParams;
				}
				export module AddPaymentMethodFpxView {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.view.AddPaymentMethodFpxView.Companion>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class AddPaymentMethodListAdapter extends androidx.recyclerview.widget.RecyclerView.Adapter<androidx.recyclerview.widget.RecyclerView.ViewHolder> {
					public static class: java.lang.Class<com.stripe.android.view.AddPaymentMethodListAdapter>;
					public updateSelected$payments_core_release(param0: number): void;
					public getBankStatuses$payments_core_release(): com.stripe.android.model.BankStatuses;
					public getThemeConfig(): com.stripe.android.view.ThemeConfig;
					public setSelectedPosition(param0: number): void;
					public onBindViewHolder(param0: androidx.recyclerview.widget.RecyclerView.ViewHolder, param1: number): void;
					public getItems(): java.util.List<com.stripe.android.view.Bank>;
					public setBankStatuses$payments_core_release(param0: com.stripe.android.model.BankStatuses): void;
					public constructor(param0: com.stripe.android.view.ThemeConfig, param1: java.util.List<any>, param2: kotlin.jvm.functions.Function1<any, kotlin.Unit>);
					public onCreateViewHolder(param0: globalAndroid.view.ViewGroup, param1: number): androidx.recyclerview.widget.RecyclerView.ViewHolder;
					public getItemCount(): number;
					public notifyAdapterItemChanged(param0: number): void;
					public getItemSelectedCallback(): kotlin.jvm.functions.Function1<java.lang.Integer, kotlin.Unit>;
					public getItemId(param0: number): number;
					public getSelectedPosition(): number;
				}
				export module AddPaymentMethodListAdapter {
					export class BankViewHolder {
						public static class: java.lang.Class<com.stripe.android.view.AddPaymentMethodListAdapter.BankViewHolder>;
						public update(param0: com.stripe.android.view.Bank, param1: boolean): void;
						public setSelected$payments_core_release(param0: boolean): void;
						public constructor(param0: com.stripe.android.databinding.BankItemBinding, param1: com.stripe.android.view.ThemeConfig);
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class AddPaymentMethodNetbankingView extends com.stripe.android.view.AddPaymentMethodView {
					public static class: java.lang.Class<com.stripe.android.view.AddPaymentMethodNetbankingView>;
					public static Companion: com.stripe.android.view.AddPaymentMethodNetbankingView.Companion;
					public constructor(param0: androidx.fragment.app.FragmentActivity, param1: globalAndroid.util.AttributeSet, param2: number);
					public constructor(param0: androidx.fragment.app.FragmentActivity, param1: globalAndroid.util.AttributeSet);
					public constructor(param0: androidx.fragment.app.FragmentActivity);
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
					public getCreateParams(): com.stripe.android.model.PaymentMethodCreateParams;
				}
				export module AddPaymentMethodNetbankingView {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.view.AddPaymentMethodNetbankingView.Companion>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class AddPaymentMethodRowView {
					public static class: java.lang.Class<com.stripe.android.view.AddPaymentMethodRowView>;
					public getLabel$payments_core_release(): androidx.appcompat.widget.AppCompatTextView;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export abstract class AddPaymentMethodView {
					public static class: java.lang.Class<com.stripe.android.view.AddPaymentMethodView>;
					public setCommunicatingProgress(param0: boolean): void;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
					public getCreateParams(): com.stripe.android.model.PaymentMethodCreateParams;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class AddPaymentMethodViewModel {
					public static class: java.lang.Class<com.stripe.android.view.AddPaymentMethodViewModel>;
					public updatedPaymentMethodCreateParams$payments_core_release(param0: com.stripe.android.model.PaymentMethodCreateParams): com.stripe.android.model.PaymentMethodCreateParams;
					public createPaymentMethod$payments_core_release(param0: com.stripe.android.model.PaymentMethodCreateParams): androidx.lifecycle.LiveData<kotlin.Result<com.stripe.android.model.PaymentMethod>>;
					public constructor(param0: com.stripe.android.Stripe, param1: com.stripe.android.view.AddPaymentMethodActivityStarter.Args, param2: com.stripe.android.view.i18n.ErrorMessageTranslator);
				}
				export module AddPaymentMethodViewModel {
					export class Factory {
						public static class: java.lang.Class<com.stripe.android.view.AddPaymentMethodViewModel.Factory>;
						public create(param0: java.lang.Class): androidx.lifecycle.ViewModel;
						public constructor(param0: com.stripe.android.Stripe, param1: com.stripe.android.view.AddPaymentMethodActivityStarter.Args);
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class AlertDisplayer {
					public static class: java.lang.Class<com.stripe.android.view.AlertDisplayer>;
					/**
					 * Constructs a new instance of the com.stripe.android.view.AlertDisplayer interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						show(param0: string): void;
					});
					public constructor();
					public show(param0: string): void;
				}
				export module AlertDisplayer {
					export class DefaultAlertDisplayer extends com.stripe.android.view.AlertDisplayer {
						public static class: java.lang.Class<com.stripe.android.view.AlertDisplayer.DefaultAlertDisplayer>;
						public static $stable: number;
						public constructor(param0: globalAndroid.app.Activity);
						public show(param0: string): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class AuthActivityStarter<ArgsType> extends java.lang.Object {
					public static class: java.lang.Class<com.stripe.android.view.AuthActivityStarter<any>>;
					/**
					 * Constructs a new instance of the com.stripe.android.view.AuthActivityStarter<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						start(param0: ArgsType): void;
					});
					public constructor();
					public start(param0: ArgsType): void;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export abstract class AuthActivityStarterHost {
					public static class: java.lang.Class<com.stripe.android.view.AuthActivityStarterHost>;
					public static Companion: com.stripe.android.view.AuthActivityStarterHost.Companion;
					public static $stable: number;
					public getStatusBarColor$payments_core_release(): java.lang.Integer;
					public startActivityForResult(param0: java.lang.Class<any>, param1: globalAndroid.os.Bundle, param2: number): void;
				}
				export module AuthActivityStarterHost {
					export class ActivityHost extends com.stripe.android.view.AuthActivityStarterHost {
						public static class: java.lang.Class<com.stripe.android.view.AuthActivityStarterHost.ActivityHost>;
						public constructor(param0: androidx.activity.ComponentActivity, param1: java.lang.Integer);
						public getActivity(): androidx.activity.ComponentActivity;
						public getStatusBarColor$payments_core_release(): java.lang.Integer;
						public startActivityForResult(param0: java.lang.Class<any>, param1: globalAndroid.os.Bundle, param2: number): void;
					}
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.view.AuthActivityStarterHost.Companion>;
					}
					export class FragmentHost extends com.stripe.android.view.AuthActivityStarterHost {
						public static class: java.lang.Class<com.stripe.android.view.AuthActivityStarterHost.FragmentHost>;
						public getStatusBarColor$payments_core_release(): java.lang.Integer;
						public constructor(param0: androidx.fragment.app.Fragment, param1: java.lang.Integer);
						public startActivityForResult(param0: java.lang.Class<any>, param1: globalAndroid.os.Bundle, param2: number): void;
						public getFragment(): androidx.fragment.app.Fragment;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class BackUpFieldDeleteListener extends com.stripe.android.view.StripeEditText.DeleteEmptyListener {
					public static class: java.lang.Class<com.stripe.android.view.BackUpFieldDeleteListener>;
					public onDeleteEmpty(): void;
					public constructor(param0: com.stripe.android.view.StripeEditText);
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class Bank {
					public static class: java.lang.Class<com.stripe.android.view.Bank>;
					/**
					 * Constructs a new instance of the com.stripe.android.view.Bank interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getId(): string;
						getCode(): string;
						getDisplayName(): string;
						getBrandIconResId(): java.lang.Integer;
					});
					public constructor();
					public getDisplayName(): string;
					public getId(): string;
					public getCode(): string;
					public getBrandIconResId(): java.lang.Integer;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class BecsDebitAccountNumberEditText extends com.stripe.android.view.StripeEditText {
					public static class: java.lang.Class<com.stripe.android.view.BecsDebitAccountNumberEditText>;
					public static Companion: com.stripe.android.view.BecsDebitAccountNumberEditText.Companion;
					public static DEFAULT_MIN_LENGTH: number;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public constructor(param0: globalAndroid.content.Context);
					public setMinLength(param0: number): void;
					public getMinLength(): number;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
					public getAccountNumber(): string;
				}
				export module BecsDebitAccountNumberEditText {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.view.BecsDebitAccountNumberEditText.Companion>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class BecsDebitBanks {
					public static class: java.lang.Class<com.stripe.android.view.BecsDebitBanks>;
					public constructor(param0: globalAndroid.content.Context, param1: boolean);
					public constructor(param0: java.util.List<com.stripe.android.view.BecsDebitBanks.Bank>, param1: boolean);
					public byPrefix(param0: string): com.stripe.android.view.BecsDebitBanks.Bank;
					public getBanks$payments_core_release(): java.util.List<com.stripe.android.view.BecsDebitBanks.Bank>;
				}
				export module BecsDebitBanks {
					export class Bank {
						public static class: java.lang.Class<com.stripe.android.view.BecsDebitBanks.Bank>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.view.BecsDebitBanks.Bank>;
						public static $stable: number;
						public describeContents(): number;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public toString(): string;
						public component3$payments_core_release(): string;
						public component1$payments_core_release(): string;
						public component2$payments_core_release(): string;
						public copy(param0: string, param1: string, param2: string): com.stripe.android.view.BecsDebitBanks.Bank;
						public constructor(param0: string, param1: string, param2: string);
						public getName$payments_core_release(): string;
						public getPrefix$payments_core_release(): string;
						public getCode$payments_core_release(): string;
					}
					export module Bank {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.view.BecsDebitBanks.Bank> {
							public static class: java.lang.Class<com.stripe.android.view.BecsDebitBanks.Bank.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.view.BecsDebitBanks.Bank;
							public newArray(param0: number): androidNative.Array<com.stripe.android.view.BecsDebitBanks.Bank>;
						}
					}
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.view.BecsDebitBanks.Companion>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class BecsDebitBsbEditText extends com.stripe.android.view.StripeEditText {
					public static class: java.lang.Class<com.stripe.android.view.BecsDebitBsbEditText>;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public constructor(param0: globalAndroid.content.Context);
					public setOnCompletedCallback(param0: kotlin.jvm.functions.Function0<kotlin.Unit>): void;
					public getOnBankChangedCallback(): kotlin.jvm.functions.Function1<com.stripe.android.view.BecsDebitBanks.Bank, kotlin.Unit>;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
					public getOnCompletedCallback(): kotlin.jvm.functions.Function0<kotlin.Unit>;
					public getBsb$payments_core_release(): string;
					public setOnBankChangedCallback(param0: kotlin.jvm.functions.Function1<any, kotlin.Unit>): void;
				}
				export module BecsDebitBsbEditText {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.view.BecsDebitBsbEditText.Companion>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class BecsDebitMandateAcceptanceTextFactory {
					public static class: java.lang.Class<com.stripe.android.view.BecsDebitMandateAcceptanceTextFactory>;
					public static $stable: number;
					public constructor(param0: globalAndroid.content.Context);
					public create(param0: string): string;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class BecsDebitMandateAcceptanceTextView {
					public static class: java.lang.Class<com.stripe.android.view.BecsDebitMandateAcceptanceTextView>;
					public static $stable: number;
					public isValid$payments_core_release(): boolean;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public constructor(param0: globalAndroid.content.Context);
					public getCompanyName(): string;
					public setCompanyName(param0: string): void;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class BecsDebitWidget {
					public static class: java.lang.Class<com.stripe.android.view.BecsDebitWidget>;
					public static $stable: number;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public constructor(param0: globalAndroid.content.Context);
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: string);
					public getParams(): com.stripe.android.model.PaymentMethodCreateParams;
					public setValidParamsCallback(param0: com.stripe.android.view.BecsDebitWidget.ValidParamsCallback): void;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
					public getViewBinding$payments_core_release(): com.stripe.android.databinding.BecsDebitWidgetBinding;
					public getValidParamsCallback(): com.stripe.android.view.BecsDebitWidget.ValidParamsCallback;
				}
				export module BecsDebitWidget {
					export class ValidParamsCallback {
						public static class: java.lang.Class<com.stripe.android.view.BecsDebitWidget.ValidParamsCallback>;
						/**
						 * Constructs a new instance of the com.stripe.android.view.BecsDebitWidget$ValidParamsCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onInputChanged(param0: boolean): void;
						});
						public constructor();
						public onInputChanged(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class BillingAddressFields {
					public static class: java.lang.Class<com.stripe.android.view.BillingAddressFields>;
					public static None: com.stripe.android.view.BillingAddressFields;
					public static PostalCode: com.stripe.android.view.BillingAddressFields;
					public static Full: com.stripe.android.view.BillingAddressFields;
					public static valueOf(param0: string): com.stripe.android.view.BillingAddressFields;
					public static values(): androidNative.Array<com.stripe.android.view.BillingAddressFields>;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class CardBrandSpinner {
					public static class: java.lang.Class<com.stripe.android.view.CardBrandSpinner>;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public constructor(param0: globalAndroid.content.Context);
					public getCardBrand(): com.stripe.android.model.CardBrand;
					public setTintColor(param0: number): void;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
					public onFinishInflate(): void;
				}
				export module CardBrandSpinner {
					export class Adapter extends globalAndroid.widget.ArrayAdapter<com.stripe.android.model.CardBrand> {
						public static class: java.lang.Class<com.stripe.android.view.CardBrandSpinner.Adapter>;
						public getTintColor$payments_core_release(): number;
						public constructor(param0: globalAndroid.content.Context);
						public getView(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
						public setTintColor$payments_core_release(param0: number): void;
						public getDropDownView(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class CardBrandView {
					public static class: java.lang.Class<com.stripe.android.view.CardBrandView>;
					public isLoading(): boolean;
					public setShouldShowCvc(param0: boolean): void;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public constructor(param0: globalAndroid.content.Context);
					public setTintColorInt$payments_core_release(param0: number): void;
					public getTintColorInt$payments_core_release(): number;
					public setBrand(param0: com.stripe.android.model.CardBrand): void;
					public getBrand(): com.stripe.android.model.CardBrand;
					public setShouldShowErrorIcon(param0: boolean): void;
					public setLoading(param0: boolean): void;
					public getShouldShowErrorIcon(): boolean;
					public getShouldShowCvc(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class CardDisplayTextFactory {
					public static class: java.lang.Class<com.stripe.android.view.CardDisplayTextFactory>;
					public constructor(param0: globalAndroid.content.res.Resources, param1: com.stripe.android.view.ThemeConfig);
					public constructor(param0: globalAndroid.content.Context);
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class CardFormView {
					public static class: java.lang.Class<com.stripe.android.view.CardFormView>;
					public static Companion: com.stripe.android.view.CardFormView.Companion;
					public static $stable: number;
					public static CARD_FORM_VIEW: string;
					public setEnabled(param0: boolean): void;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public constructor(param0: globalAndroid.content.Context);
					public onRestoreInstanceState(param0: globalAndroid.os.Parcelable): void;
					public getCardParams(): com.stripe.android.model.CardParams;
					public onSaveInstanceState(): globalAndroid.os.Parcelable;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
					public setCardValidCallback(param0: com.stripe.android.view.CardValidCallback): void;
				}
				export module CardFormView {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.view.CardFormView.Companion>;
					}
					export class Style {
						public static class: java.lang.Class<com.stripe.android.view.CardFormView.Style>;
						public static Standard: com.stripe.android.view.CardFormView.Style;
						public static Borderless: com.stripe.android.view.CardFormView.Style;
						public static values(): androidNative.Array<com.stripe.android.view.CardFormView.Style>;
						public static valueOf(param0: string): com.stripe.android.view.CardFormView.Style;
						public getAttrValue$payments_core_release(): number;
					}
					export class WhenMappings {
						public static class: java.lang.Class<com.stripe.android.view.CardFormView.WhenMappings>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class CardInputListener {
					public static class: java.lang.Class<com.stripe.android.view.CardInputListener>;
					/**
					 * Constructs a new instance of the com.stripe.android.view.CardInputListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onFocusChange(param0: com.stripe.android.view.CardInputListener.FocusField): void;
						onCardComplete(): void;
						onExpirationComplete(): void;
						onCvcComplete(): void;
						onPostalCodeComplete(): void;
					});
					public constructor();
					public onCvcComplete(): void;
					public onExpirationComplete(): void;
					public onCardComplete(): void;
					public onPostalCodeComplete(): void;
					public onFocusChange(param0: com.stripe.android.view.CardInputListener.FocusField): void;
				}
				export module CardInputListener {
					export class FocusField {
						public static class: java.lang.Class<com.stripe.android.view.CardInputListener.FocusField>;
						public static CardNumber: com.stripe.android.view.CardInputListener.FocusField;
						public static ExpiryDate: com.stripe.android.view.CardInputListener.FocusField;
						public static Cvc: com.stripe.android.view.CardInputListener.FocusField;
						public static PostalCode: com.stripe.android.view.CardInputListener.FocusField;
						public static values(): androidNative.Array<com.stripe.android.view.CardInputListener.FocusField>;
						public static valueOf(param0: string): com.stripe.android.view.CardInputListener.FocusField;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class CardInputWidget implements com.stripe.android.view.CardWidget {
					public static class: java.lang.Class<com.stripe.android.view.CardInputWidget>;
					public static Companion: com.stripe.android.view.CardInputWidget.Companion;
					public static $stable: number;
					public static LOGGING_TOKEN: string;
					public getPostalCodeEditText$payments_core_release(): com.stripe.android.view.PostalCodeEditText;
					public getPostalCodeRequired(): boolean;
					public getPaymentMethodCard(): com.stripe.android.model.PaymentMethodCreateParams.Card;
					public setCardHint(param0: string): void;
					public setCvcLabel(param0: string): void;
					public getCardParams(): com.stripe.android.model.CardParams;
					public getShouldShowErrorIcon$payments_core_release(): boolean;
					public setUsZipCodeRequired(param0: boolean): void;
					public setLayoutWidthCalculator$payments_core_release(param0: com.stripe.android.view.CardInputWidget.LayoutWidthCalculator): void;
					public updateSpaceSizes$payments_core_release(param0: boolean, param1: number, param2: number): void;
					public onInterceptTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public setCvcNumberTextWatcher(param0: globalAndroid.text.TextWatcher): void;
					public setPostalCodeEnabled(param0: boolean): void;
					public setPostalCodeRequired(param0: boolean): void;
					public getRequiredFields$payments_core_release(): java.util.Set<com.stripe.android.view.StripeEditText>;
					public setCardInputListener(param0: com.stripe.android.view.CardInputListener): void;
					public clear(): void;
					public setCvcCode(param0: string): void;
					public onFinishInflate(): void;
					public isEnabled(): boolean;
					public setCardValidCallback(param0: com.stripe.android.view.CardValidCallback): void;
					public getCvcEditText$payments_core_release(): com.stripe.android.view.CvcEditText;
					public getUsZipCodeRequired(): boolean;
					public setEnabled(param0: boolean): void;
					public isShowingFullCard$payments_core_release(): boolean;
					public getLayoutWidthCalculator$payments_core_release(): com.stripe.android.view.CardInputWidget.LayoutWidthCalculator;
					public setCardNumber(param0: string): void;
					public createHiddenCardText$payments_core_release(param0: number): string;
					public getPostalCodeEnabled(): boolean;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
					public setExpiryDate(param0: number, param1: number): void;
					public getPlacement$payments_core_release(): com.stripe.android.view.CardInputWidgetPlacement;
					public setPostalCodeTextWatcher(param0: globalAndroid.text.TextWatcher): void;
					public constructor(param0: globalAndroid.content.Context);
					public getFrameWidthSupplier$payments_core_release(): kotlin.jvm.functions.Function0<java.lang.Integer>;
					public setCardNumberTextWatcher(param0: globalAndroid.text.TextWatcher): void;
					public getCardNumberEditText$payments_core_release(): com.stripe.android.view.CardNumberEditText;
					public setExpiryDateTextWatcher(param0: globalAndroid.text.TextWatcher): void;
					public getPaymentMethodCreateParams(): com.stripe.android.model.PaymentMethodCreateParams;
					public setFrameWidthSupplier$payments_core_release(param0: kotlin.jvm.functions.Function0<java.lang.Integer>): void;
					public onRestoreInstanceState(param0: globalAndroid.os.Parcelable): void;
					public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
					public onSaveInstanceState(): globalAndroid.os.Parcelable;
					public getPostalCodeTextInputLayout$payments_core_release(): com.google.android.material.textfield.TextInputLayout;
					public getCardBrandView$payments_core_release(): com.stripe.android.view.CardBrandView;
					public getExpiryDateEditText$payments_core_release(): com.stripe.android.view.ExpiryDateEditText;
					public setShowingFullCard$payments_core_release(param0: boolean): void;
				}
				export module CardInputWidget {
					export abstract class AnimationEndListener {
						public static class: java.lang.Class<com.stripe.android.view.CardInputWidget.AnimationEndListener>;
						public constructor();
						public onAnimationRepeat(param0: globalAndroid.view.animation.Animation): void;
						public onAnimationStart(param0: globalAndroid.view.animation.Animation): void;
					}
					export abstract class CardFieldAnimation {
						public static class: java.lang.Class<com.stripe.android.view.CardInputWidget.CardFieldAnimation>;
						public constructor();
					}
					export module CardFieldAnimation {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.view.CardInputWidget.CardFieldAnimation.Companion>;
						}
					}
					export class CardNumberSlideEndAnimation extends com.stripe.android.view.CardInputWidget.CardFieldAnimation {
						public static class: java.lang.Class<com.stripe.android.view.CardInputWidget.CardNumberSlideEndAnimation>;
						public constructor();
						public constructor(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.View);
						public applyTransformation(param0: number, param1: globalAndroid.view.animation.Transformation): void;
					}
					export class CardNumberSlideStartAnimation extends com.stripe.android.view.CardInputWidget.CardFieldAnimation {
						public static class: java.lang.Class<com.stripe.android.view.CardInputWidget.CardNumberSlideStartAnimation>;
						public constructor();
						public constructor(param0: globalAndroid.view.View);
						public applyTransformation(param0: number, param1: globalAndroid.view.animation.Transformation): void;
					}
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.view.CardInputWidget.Companion>;
						public shouldIconShowBrand$payments_core_release(param0: com.stripe.android.model.CardBrand, param1: boolean, param2: string): boolean;
					}
					export class CvcSlideEndAnimation extends com.stripe.android.view.CardInputWidget.CardFieldAnimation {
						public static class: java.lang.Class<com.stripe.android.view.CardInputWidget.CvcSlideEndAnimation>;
						public constructor();
						public constructor(param0: globalAndroid.view.View, param1: number, param2: number, param3: number);
						public applyTransformation(param0: number, param1: globalAndroid.view.animation.Transformation): void;
					}
					export class CvcSlideStartAnimation extends com.stripe.android.view.CardInputWidget.CardFieldAnimation {
						public static class: java.lang.Class<com.stripe.android.view.CardInputWidget.CvcSlideStartAnimation>;
						public constructor();
						public constructor(param0: globalAndroid.view.View, param1: number, param2: number, param3: number);
						public applyTransformation(param0: number, param1: globalAndroid.view.animation.Transformation): void;
					}
					export class DefaultLayoutWidthCalculator extends com.stripe.android.view.CardInputWidget.LayoutWidthCalculator {
						public static class: java.lang.Class<com.stripe.android.view.CardInputWidget.DefaultLayoutWidthCalculator>;
						public constructor();
						public calculate(param0: string, param1: globalAndroid.text.TextPaint): number;
					}
					export class ExpiryDateSlideEndAnimation extends com.stripe.android.view.CardInputWidget.CardFieldAnimation {
						public static class: java.lang.Class<com.stripe.android.view.CardInputWidget.ExpiryDateSlideEndAnimation>;
						public constructor();
						public applyTransformation(param0: number, param1: globalAndroid.view.animation.Transformation): void;
						public constructor(param0: globalAndroid.view.View, param1: number, param2: number);
					}
					export class ExpiryDateSlideStartAnimation extends com.stripe.android.view.CardInputWidget.CardFieldAnimation {
						public static class: java.lang.Class<com.stripe.android.view.CardInputWidget.ExpiryDateSlideStartAnimation>;
						public constructor();
						public applyTransformation(param0: number, param1: globalAndroid.view.animation.Transformation): void;
						public constructor(param0: globalAndroid.view.View, param1: number, param2: number);
					}
					export class Field {
						public static class: java.lang.Class<com.stripe.android.view.CardInputWidget.Field>;
						public static Number: com.stripe.android.view.CardInputWidget.Field;
						public static Expiry: com.stripe.android.view.CardInputWidget.Field;
						public static Cvc: com.stripe.android.view.CardInputWidget.Field;
						public static PostalCode: com.stripe.android.view.CardInputWidget.Field;
						public static values(): androidNative.Array<com.stripe.android.view.CardInputWidget.Field>;
						public static valueOf(param0: string): com.stripe.android.view.CardInputWidget.Field;
					}
					export class LayoutWidthCalculator {
						public static class: java.lang.Class<com.stripe.android.view.CardInputWidget.LayoutWidthCalculator>;
						/**
						 * Constructs a new instance of the com.stripe.android.view.CardInputWidget$LayoutWidthCalculator interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							calculate(param0: string, param1: globalAndroid.text.TextPaint): number;
						});
						public constructor();
						public calculate(param0: string, param1: globalAndroid.text.TextPaint): number;
					}
					export class PostalCodeSlideEndAnimation extends com.stripe.android.view.CardInputWidget.CardFieldAnimation {
						public static class: java.lang.Class<com.stripe.android.view.CardInputWidget.PostalCodeSlideEndAnimation>;
						public constructor();
						public constructor(param0: globalAndroid.view.View, param1: number, param2: number, param3: number);
						public applyTransformation(param0: number, param1: globalAndroid.view.animation.Transformation): void;
					}
					export class PostalCodeSlideStartAnimation extends com.stripe.android.view.CardInputWidget.CardFieldAnimation {
						public static class: java.lang.Class<com.stripe.android.view.CardInputWidget.PostalCodeSlideStartAnimation>;
						public constructor();
						public constructor(param0: globalAndroid.view.View, param1: number, param2: number, param3: number);
						public applyTransformation(param0: number, param1: globalAndroid.view.animation.Transformation): void;
					}
					export class WhenMappings {
						public static class: java.lang.Class<com.stripe.android.view.CardInputWidget.WhenMappings>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class CardInputWidgetPlacement {
					public static class: java.lang.Class<com.stripe.android.view.CardInputWidgetPlacement>;
					public static MIN_SEPARATION_IN_PX: number;
					public setCardTouchBufferLimit$payments_core_release(param0: number): void;
					public setHiddenCardWidth$payments_core_release(param0: number): void;
					public getCardDateSeparation$payments_core_release(): number;
					public getCvcEndTouchBufferLimit$payments_core_release(): number;
					public setDateWidth$payments_core_release(param0: number): void;
					public getDateStartPosition$payments_core_release(): number;
					public constructor();
					public getCardWidth$payments_core_release(): number;
					public getCvcStartPosition$payments_core_release(): number;
					public component1$payments_core_release(): number;
					public component3$payments_core_release(): number;
					public setDateStartPosition$payments_core_release(param0: number): void;
					public constructor(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number, param8: number, param9: number, param10: number, param11: number, param12: number, param13: number, param14: number, param15: number);
					public getFocusField$payments_core_release(param0: number, param1: number, param2: boolean, param3: boolean): com.stripe.android.view.CardInputWidget.Field;
					public component5$payments_core_release(): number;
					public setCvcPostalCodeSeparation$payments_core_release(param0: number): void;
					public setDateCvcSeparation$payments_core_release(param0: number): void;
					public setPostalCodeWidth$payments_core_release(param0: number): void;
					public component15$payments_core_release(): number;
					public getPostalCodeWidth$payments_core_release(): number;
					public getDateCvcSeparation$payments_core_release(): number;
					public getPostalCodeStartPosition$payments_core_release(): number;
					public component11$payments_core_release(): number;
					public component13$payments_core_release(): number;
					public getPeekCardWidth$payments_core_release(): number;
					public component7$payments_core_release(): number;
					public component9$payments_core_release(): number;
					public setTotalLengthInPixels$payments_core_release(param0: number): void;
					public getCvcPostalCodeSeparation$payments_core_release(): number;
					public getTotalLengthInPixels$payments_core_release(): number;
					public setCvcEndTouchBufferLimit$payments_core_release(param0: number): void;
					public setCardWidth$payments_core_release(param0: number): void;
					public setPeekCardWidth$payments_core_release(param0: number): void;
					public getCardTouchBufferLimit$payments_core_release(): number;
					public setCvcStartPosition$payments_core_release(param0: number): void;
					public toString(): string;
					public setPostalCodeStartPosition$payments_core_release(param0: number): void;
					public hashCode(): number;
					public component2$payments_core_release(): number;
					public component4$payments_core_release(): number;
					public setCvcWidth$payments_core_release(param0: number): void;
					public getHiddenCardWidth$payments_core_release(): number;
					public getDateEndTouchBufferLimit$payments_core_release(): number;
					public getDateWidth$payments_core_release(): number;
					public copy(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number, param8: number, param9: number, param10: number, param11: number, param12: number, param13: number, param14: number, param15: number): com.stripe.android.view.CardInputWidgetPlacement;
					public getCvcWidth$payments_core_release(): number;
					public component16$payments_core_release(): number;
					public equals(param0: any): boolean;
					public setDateEndTouchBufferLimit$payments_core_release(param0: number): void;
					public component12$payments_core_release(): number;
					public component14$payments_core_release(): number;
					public setCardDateSeparation$payments_core_release(param0: number): void;
					public component10$payments_core_release(): number;
					public component6$payments_core_release(): number;
					public component8$payments_core_release(): number;
				}
				export module CardInputWidgetPlacement {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.view.CardInputWidgetPlacement.Companion>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class CardMultilineWidget implements com.stripe.android.view.CardWidget {
					public static class: java.lang.Class<com.stripe.android.view.CardMultilineWidget>;
					public static $stable: number;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: boolean);
					public setCardNumberErrorListener(param0: com.stripe.android.view.StripeEditText.ErrorMessageListener): void;
					public getPostalCodeRequired(): boolean;
					public getCardNumberEditText(): com.stripe.android.view.CardNumberEditText;
					public setExpirationDateErrorListener$payments_core_release(param0: com.stripe.android.view.StripeEditText.ErrorMessageListener): void;
					public setUsZipCodeRequired(param0: boolean): void;
					public getShouldShowErrorIcon$payments_core_release(): boolean;
					public onAttachedToWindow(): void;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public setPostalCodeRequired(param0: boolean): void;
					public getSecondRowLayout(): globalAndroid.widget.LinearLayout;
					public setCardInputListener(param0: com.stripe.android.view.CardInputListener): void;
					public setShouldShowPostalCode(param0: boolean): void;
					public getValidatedCardNumber$payments_core_release(): com.stripe.android.cards.CardNumber.Validated;
					public isEnabled(): boolean;
					public getExpirationDatePlaceholderRes$payments_core_release(): java.lang.Integer;
					public getUsZipCodeRequired(): boolean;
					public setEnabled(param0: boolean): void;
					public getCvcEditText(): com.stripe.android.view.CvcEditText;
					public getInvalidFields$payments_core_release(): java.util.Set<com.stripe.android.view.CardValidCallback.Fields>;
					public setCardNumber(param0: string): void;
					public getExpiryDateEditText(): com.stripe.android.view.ExpiryDateEditText;
					public getPaymentMethodBillingDetails(): com.stripe.android.model.PaymentMethod.BillingDetails;
					public setExpirationDateErrorListener(param0: com.stripe.android.view.StripeEditText.ErrorMessageListener): void;
					public setExpiryDate(param0: number, param1: number): void;
					public setPostalCodeTextWatcher(param0: globalAndroid.text.TextWatcher): void;
					public setShouldShowErrorIcon$payments_core_release(param0: boolean): void;
					public getCardBrandIconSupplier$payments_core_release(): com.stripe.android.view.CardMultilineWidget.CardBrandIconSupplier;
					public validateCardNumber(): boolean;
					public setCardNumberTextWatcher(param0: globalAndroid.text.TextWatcher): void;
					public setExpiryDateTextWatcher(param0: globalAndroid.text.TextWatcher): void;
					public setExpirationDatePlaceholderRes$payments_core_release(param0: java.lang.Integer): void;
					public getPostalCodeErrorListener$payments_core_release(): com.stripe.android.view.StripeEditText.ErrorMessageListener;
					public onWindowFocusChanged(param0: boolean): void;
					public validateAllFields(): boolean;
					public getPostalCodeEditText$payments_core_release(): com.stripe.android.view.PostalCodeEditText;
					public getPaymentMethodCard(): com.stripe.android.model.PaymentMethodCreateParams.Card;
					public setCardHint(param0: string): void;
					public setCvcLabel(param0: string): void;
					public getCardParams(): com.stripe.android.model.CardParams;
					public getCardNumberTextInputLayout(): com.stripe.android.view.CardNumberTextInputLayout;
					public setCvcPlaceholderText(param0: string): void;
					public populate(param0: com.stripe.android.model.PaymentMethodCreateParams.Card): void;
					public setCvcNumberTextWatcher(param0: globalAndroid.text.TextWatcher): void;
					public getExpiryTextInputLayout(): com.google.android.material.textfield.TextInputLayout;
					public setCardNumberErrorListener$payments_core_release(param0: com.stripe.android.view.StripeEditText.ErrorMessageListener): void;
					public setCvcErrorListener$payments_core_release(param0: com.stripe.android.view.StripeEditText.ErrorMessageListener): void;
					public getCvcErrorListener$payments_core_release(): com.stripe.android.view.StripeEditText.ErrorMessageListener;
					public setCvcErrorListener(param0: com.stripe.android.view.StripeEditText.ErrorMessageListener): void;
					public getCvcInputLayout(): com.google.android.material.textfield.TextInputLayout;
					public getPaymentMethodBillingDetailsBuilder(): com.stripe.android.model.PaymentMethod.BillingDetails.Builder;
					public clear(): void;
					public getBrand(): com.stripe.android.model.CardBrand;
					public setCvcCode(param0: string): void;
					public setCardValidCallback(param0: com.stripe.android.view.CardValidCallback): void;
					public getCardNumberErrorListener$payments_core_release(): com.stripe.android.view.StripeEditText.ErrorMessageListener;
					public getExpirationDateErrorListener$payments_core_release(): com.stripe.android.view.StripeEditText.ErrorMessageListener;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
					public setExpirationDatePlaceholderRes(param0: java.lang.Integer): void;
					public getPostalInputLayout$payments_core_release(): com.google.android.material.textfield.TextInputLayout;
					public setPostalCodeErrorListener$payments_core_release(param0: com.stripe.android.view.StripeEditText.ErrorMessageListener): void;
					public constructor(param0: globalAndroid.content.Context);
					public getPaymentMethodCreateParams(): com.stripe.android.model.PaymentMethodCreateParams;
					public setCardBrandIconSupplier$payments_core_release(param0: com.stripe.android.view.CardMultilineWidget.CardBrandIconSupplier): void;
					public setPostalCodeErrorListener(param0: com.stripe.android.view.StripeEditText.ErrorMessageListener): void;
				}
				export module CardMultilineWidget {
					export class CardBrandIcon {
						public static class: java.lang.Class<com.stripe.android.view.CardMultilineWidget.CardBrandIcon>;
						public getIconResourceId(): number;
						public copy(param0: number): com.stripe.android.view.CardMultilineWidget.CardBrandIcon;
						public constructor(param0: number);
						public hashCode(): number;
						public equals(param0: any): boolean;
						public component1(): number;
						public toString(): string;
					}
					export class CardBrandIconSupplier {
						public static class: java.lang.Class<com.stripe.android.view.CardMultilineWidget.CardBrandIconSupplier>;
						/**
						 * Constructs a new instance of the com.stripe.android.view.CardMultilineWidget$CardBrandIconSupplier interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							get(param0: com.stripe.android.model.CardBrand): com.stripe.android.view.CardMultilineWidget.CardBrandIcon;
						});
						public constructor();
						public get(param0: com.stripe.android.model.CardBrand): com.stripe.android.view.CardMultilineWidget.CardBrandIcon;
					}
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.view.CardMultilineWidget.Companion>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class CardNumberEditText extends com.stripe.android.view.StripeEditText {
					public static class: java.lang.Class<com.stripe.android.view.CardNumberEditText>;
					public static $stable: number;
					public onDetachedFromWindow(): void;
					public setCardBrand$payments_core_release(param0: com.stripe.android.model.CardBrand): void;
					public getAccountRangeRepositoryJob$payments_core_release(): kotlinx.coroutines.Job;
					public getBrandChangeCallback$payments_core_release(): kotlin.jvm.functions.Function1<com.stripe.android.model.CardBrand, kotlin.Unit>;
					public setBrandChangeCallback$payments_core_release(param0: kotlin.jvm.functions.Function1<any, kotlin.Unit>): void;
					public getPanLength$payments_core_release(): number;
					public getAccessibilityText(): string;
					public setLoadingCallback$payments_core_release(param0: kotlin.jvm.functions.Function1<any, kotlin.Unit>): void;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
					public onAttachedToWindow(): void;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public constructor(param0: globalAndroid.content.Context);
					public getCardBrand(): com.stripe.android.model.CardBrand;
					public setAccountRangeRepositoryJob$payments_core_release(param0: kotlinx.coroutines.Job): void;
					public setCompletionCallback$payments_core_release(param0: kotlin.jvm.functions.Function0<kotlin.Unit>): void;
					public isLoadingCallback$payments_core_release(): kotlin.jvm.functions.Function1<java.lang.Boolean, kotlin.Unit>;
					public getWorkContext$payments_core_release(): kotlin.coroutines.CoroutineContext;
					public getValidatedCardNumber$payments_core_release(): com.stripe.android.cards.CardNumber.Validated;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: kotlin.coroutines.CoroutineContext, param4: com.stripe.android.cards.CardAccountRangeRepository, param5: com.stripe.android.cards.StaticCardAccountRanges, param6: com.stripe.android.core.networking.AnalyticsRequestExecutor, param7: com.stripe.android.networking.PaymentAnalyticsRequestFactory);
					public setWorkContext$payments_core_release(param0: kotlin.coroutines.CoroutineContext): void;
					public getCompletionCallback$payments_core_release(): kotlin.jvm.functions.Function0<kotlin.Unit>;
					public isCardNumberValid(): boolean;
				}
				export module CardNumberEditText {
					export class CardNumberTextWatcher extends com.stripe.android.view.StripeTextWatcher {
						public static class: java.lang.Class<com.stripe.android.view.CardNumberEditText.CardNumberTextWatcher>;
						public afterTextChanged(param0: globalAndroid.text.Editable): void;
						public constructor();
						public beforeTextChanged(param0: string, param1: number, param2: number, param3: number): void;
						public constructor(param0: com.stripe.android.view.CardNumberEditText);
						public onTextChanged(param0: string, param1: number, param2: number, param3: number): void;
					}
					export module CardNumberTextWatcher {
						export class WhenMappings {
							public static class: java.lang.Class<com.stripe.android.view.CardNumberEditText.CardNumberTextWatcher.WhenMappings>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class CardNumberTextInputLayout {
					public static class: java.lang.Class<com.stripe.android.view.CardNumberTextInputLayout>;
					public static $stable: number;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public constructor(param0: globalAndroid.content.Context);
					public isLoading$payments_core_release(): boolean;
					public setLoading$payments_core_release(param0: boolean): void;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class CardValidCallback {
					public static class: java.lang.Class<com.stripe.android.view.CardValidCallback>;
					/**
					 * Constructs a new instance of the com.stripe.android.view.CardValidCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onInputChanged(param0: boolean, param1: java.util.Set<any>): void;
					});
					public constructor();
					public onInputChanged(param0: boolean, param1: java.util.Set<any>): void;
				}
				export module CardValidCallback {
					export class Fields {
						public static class: java.lang.Class<com.stripe.android.view.CardValidCallback.Fields>;
						public static Number: com.stripe.android.view.CardValidCallback.Fields;
						public static Expiry: com.stripe.android.view.CardValidCallback.Fields;
						public static Cvc: com.stripe.android.view.CardValidCallback.Fields;
						public static Postal: com.stripe.android.view.CardValidCallback.Fields;
						public static values(): androidNative.Array<com.stripe.android.view.CardValidCallback.Fields>;
						public static valueOf(param0: string): com.stripe.android.view.CardValidCallback.Fields;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class CardWidget {
					public static class: java.lang.Class<com.stripe.android.view.CardWidget>;
					/**
					 * Constructs a new instance of the com.stripe.android.view.CardWidget interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getCardParams(): com.stripe.android.model.CardParams;
						getPaymentMethodCard(): com.stripe.android.model.PaymentMethodCreateParams.Card;
						getPaymentMethodCreateParams(): com.stripe.android.model.PaymentMethodCreateParams;
						setCardValidCallback(param0: com.stripe.android.view.CardValidCallback): void;
						setCardInputListener(param0: com.stripe.android.view.CardInputListener): void;
						setCardNumberTextWatcher(param0: globalAndroid.text.TextWatcher): void;
						setExpiryDateTextWatcher(param0: globalAndroid.text.TextWatcher): void;
						setCvcNumberTextWatcher(param0: globalAndroid.text.TextWatcher): void;
						setPostalCodeTextWatcher(param0: globalAndroid.text.TextWatcher): void;
						setCardHint(param0: string): void;
						clear(): void;
						setCardNumber(param0: string): void;
						setExpiryDate(param0: number, param1: number): void;
						setCvcCode(param0: string): void;
						<clinit>(): void;
					});
					public constructor();
					public static Companion: com.stripe.android.view.CardWidget.Companion;
					public static DEFAULT_POSTAL_CODE_REQUIRED: boolean;
					public static DEFAULT_US_ZIP_CODE_REQUIRED: boolean;
					public static DEFAULT_POSTAL_CODE_ENABLED: boolean;
					public getPaymentMethodCard(): com.stripe.android.model.PaymentMethodCreateParams.Card;
					public setCardHint(param0: string): void;
					public setCardNumber(param0: string): void;
					public getCardParams(): com.stripe.android.model.CardParams;
					public setExpiryDate(param0: number, param1: number): void;
					public setPostalCodeTextWatcher(param0: globalAndroid.text.TextWatcher): void;
					public setCvcNumberTextWatcher(param0: globalAndroid.text.TextWatcher): void;
					public setCardNumberTextWatcher(param0: globalAndroid.text.TextWatcher): void;
					public setExpiryDateTextWatcher(param0: globalAndroid.text.TextWatcher): void;
					public getPaymentMethodCreateParams(): com.stripe.android.model.PaymentMethodCreateParams;
					public setCardInputListener(param0: com.stripe.android.view.CardInputListener): void;
					public clear(): void;
					public setCvcCode(param0: string): void;
					public setCardValidCallback(param0: com.stripe.android.view.CardValidCallback): void;
				}
				export module CardWidget {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.view.CardWidget.Companion>;
						public static DEFAULT_POSTAL_CODE_ENABLED: boolean;
						public static DEFAULT_POSTAL_CODE_REQUIRED: boolean;
						public static DEFAULT_US_ZIP_CODE_REQUIRED: boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class CardWidgetProgressView {
					public static class: java.lang.Class<com.stripe.android.view.CardWidgetProgressView>;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public constructor(param0: globalAndroid.content.Context);
					public show(): void;
					public hide(): void;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
					public onAttachedToWindow(): void;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class CountryAdapter extends globalAndroid.widget.ArrayAdapter<com.stripe.android.core.model.Country> {
					public static class: java.lang.Class<com.stripe.android.view.CountryAdapter>;
					public getFilter(): globalAndroid.widget.Filter;
					public constructor(param0: globalAndroid.content.Context, param1: java.util.List<com.stripe.android.core.model.Country>, param2: number, param3: kotlin.jvm.functions.Function1<any, any>);
					public getCount(): number;
					public updateUnfilteredCountries$payments_core_release(param0: java.util.Set<string>): boolean;
					public getUnfilteredCountries$payments_core_release(): java.util.List<com.stripe.android.core.model.Country>;
					public getPosition(param0: com.stripe.android.core.model.Country): number;
					public getItemId(param0: number): number;
					public getItem(param0: number): com.stripe.android.core.model.Country;
					public setUnfilteredCountries$payments_core_release(param0: java.util.List<com.stripe.android.core.model.Country>): void;
					public getView(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
				}
				export module CountryAdapter {
					export class CountryFilter {
						public static class: java.lang.Class<com.stripe.android.view.CountryAdapter.CountryFilter>;
						public performFiltering(param0: string): globalAndroid.widget.Filter.FilterResults;
						public publishResults(param0: string, param1: globalAndroid.widget.Filter.FilterResults): void;
						public constructor(param0: java.util.List<com.stripe.android.core.model.Country>, param1: com.stripe.android.view.CountryAdapter, param2: globalAndroid.app.Activity);
						public setUnfilteredCountries(param0: java.util.List<com.stripe.android.core.model.Country>): void;
						public getUnfilteredCountries(): java.util.List<com.stripe.android.core.model.Country>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class CountryAutoCompleteTextViewValidator {
					public static class: java.lang.Class<com.stripe.android.view.CountryAutoCompleteTextViewValidator>;
					public isValid(param0: string): boolean;
					public fixText(param0: string): string;
					public constructor(param0: com.stripe.android.view.CountryAdapter, param1: kotlin.jvm.functions.Function1<any, kotlin.Unit>);
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class CountryTextInputLayout {
					public static class: java.lang.Class<com.stripe.android.view.CountryTextInputLayout>;
					public static $stable: number;
					public static INVALID_COUNTRY_AUTO_COMPLETE_STYLE: number;
					public setEnabled(param0: boolean): void;
					/** @deprecated */
					public setCountrySelected$payments_core_release(param0: string): void;
					public setCountryCodeChangeCallback(param0: kotlin.jvm.functions.Function1<any, kotlin.Unit>): void;
					public setSelectedCountryCode$payments_core_release(param0: com.stripe.android.core.model.CountryCode): void;
					public getSelectedCountryCode(): com.stripe.android.core.model.CountryCode;
					public setSelectedCountryCode(param0: com.stripe.android.core.model.CountryCode): void;
					/** @deprecated */
					public setCountryChangeCallback$payments_core_release(param0: kotlin.jvm.functions.Function1<any, kotlin.Unit>): void;
					public getSelectedCountry$payments_core_release(): com.stripe.android.core.model.Country;
					public updateUiForCountryEntered(param0: com.stripe.android.core.model.CountryCode): void;
					/** @deprecated */
					public getCountryChangeCallback$payments_core_release(): kotlin.jvm.functions.Function1<com.stripe.android.core.model.Country, kotlin.Unit>;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
					public getCountryAutocomplete(): globalAndroid.widget.AutoCompleteTextView;
					public getSelectedCountryCode$payments_core_release(): com.stripe.android.core.model.CountryCode;
					public setAllowedCountryCodes$payments_core_release(param0: java.util.Set<string>): void;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public constructor(param0: globalAndroid.content.Context);
					public validateCountry$payments_core_release(): void;
					public onRestoreInstanceState(param0: globalAndroid.os.Parcelable): void;
					public updatedSelectedCountryCode$payments_core_release(param0: com.stripe.android.core.model.CountryCode): void;
					public onSaveInstanceState(): globalAndroid.os.Parcelable;
					public restoreSelectedCountry$payments_core_release(param0: com.stripe.android.view.CountryTextInputLayout.SelectedCountryState): void;
					public getCountryCodeChangeCallback(): kotlin.jvm.functions.Function1<com.stripe.android.core.model.CountryCode, kotlin.Unit>;
					public setCountrySelected$payments_core_release(param0: com.stripe.android.core.model.CountryCode): void;
				}
				export module CountryTextInputLayout {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.view.CountryTextInputLayout.Companion>;
						public getDEFAULT_ITEM_LAYOUT(): number;
					}
					export class SelectedCountryState {
						public static class: java.lang.Class<com.stripe.android.view.CountryTextInputLayout.SelectedCountryState>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.view.CountryTextInputLayout.SelectedCountryState>;
						public constructor(param0: com.stripe.android.core.model.CountryCode, param1: globalAndroid.os.Parcelable);
						public component2(): globalAndroid.os.Parcelable;
						public describeContents(): number;
						public getSuperState(): globalAndroid.os.Parcelable;
						public copy(param0: com.stripe.android.core.model.CountryCode, param1: globalAndroid.os.Parcelable): com.stripe.android.view.CountryTextInputLayout.SelectedCountryState;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public component1(): com.stripe.android.core.model.CountryCode;
						public getCountryCode(): com.stripe.android.core.model.CountryCode;
						public toString(): string;
					}
					export module SelectedCountryState {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.view.CountryTextInputLayout.SelectedCountryState> {
							public static class: java.lang.Class<com.stripe.android.view.CountryTextInputLayout.SelectedCountryState.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.view.CountryTextInputLayout.SelectedCountryState>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.view.CountryTextInputLayout.SelectedCountryState;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class CvcEditText extends com.stripe.android.view.StripeEditText {
					public static class: java.lang.Class<com.stripe.android.view.CvcEditText>;
					public static $stable: number;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public constructor(param0: globalAndroid.content.Context);
					public setCompletionCallback$payments_core_release(param0: kotlin.jvm.functions.Function0<kotlin.Unit>): void;
					public getAccessibilityText(): string;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
					public getCvc$payments_core_release(): com.stripe.android.cards.Cvc.Validated;
					public getCompletionCallback$payments_core_release(): kotlin.jvm.functions.Function0<kotlin.Unit>;
				}
				export module CvcEditText {
					export class WhenMappings {
						public static class: java.lang.Class<com.stripe.android.view.CvcEditText.WhenMappings>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class DateUtils {
					public static class: java.lang.Class<com.stripe.android.view.DateUtils>;
					public static INSTANCE: com.stripe.android.view.DateUtils;
					public static isExpiryDataValid(param0: number, param1: number): boolean;
					public static isExpiryDataValid(param0: number, param1: number, param2: java.util.Calendar): boolean;
					public convertTwoDigitYearToFour(param0: number): number;
					public convertTwoDigitYearToFour(param0: number, param1: java.util.Calendar): number;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class DeletePaymentMethodDialogFactory {
					public static class: java.lang.Class<com.stripe.android.view.DeletePaymentMethodDialogFactory>;
					public constructor(param0: globalAndroid.content.Context, param1: com.stripe.android.view.PaymentMethodsAdapter, param2: com.stripe.android.view.CardDisplayTextFactory, param3: any, param4: java.util.Set<string>, param5: kotlin.jvm.functions.Function1<any, kotlin.Unit>);
				}
				export module DeletePaymentMethodDialogFactory {
					export class PaymentMethodDeleteListener extends com.stripe.android.CustomerSession.PaymentMethodRetrievalListener {
						public static class: java.lang.Class<com.stripe.android.view.DeletePaymentMethodDialogFactory.PaymentMethodDeleteListener>;
						public constructor();
						public onError(param0: number, param1: string, param2: com.stripe.android.core.StripeError): void;
						public onPaymentMethodRetrieved(param0: com.stripe.android.model.PaymentMethod): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class EmailEditText extends com.stripe.android.view.StripeEditText {
					public static class: java.lang.Class<com.stripe.android.view.EmailEditText>;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public constructor(param0: globalAndroid.content.Context);
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
					public getEmail(): string;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class ErrorListener extends com.stripe.android.view.StripeEditText.ErrorMessageListener {
					public static class: java.lang.Class<com.stripe.android.view.ErrorListener>;
					public constructor(param0: com.google.android.material.textfield.TextInputLayout);
					public displayErrorMessage(param0: string): void;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class ExpiryDateEditText extends com.stripe.android.view.StripeEditText {
					public static class: java.lang.Class<com.stripe.android.view.ExpiryDateEditText>;
					public static $stable: number;
					public isDateValid(): boolean;
					public getAccessibilityText(): string;
					public setIncludeSeparatorGaps(param0: boolean): void;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
					public getIncludeSeparatorGaps$payments_core_release(): boolean;
					public setIncludeSeparatorGaps$payments_core_release(param0: boolean): void;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public constructor(param0: globalAndroid.content.Context);
					public getValidatedDate(): com.stripe.android.model.ExpirationDate.Validated;
					public setText$payments_core_release(param0: java.lang.Integer, param1: java.lang.Integer): void;
					public setCompletionCallback$payments_core_release(param0: kotlin.jvm.functions.Function0<kotlin.Unit>): void;
					public updateSelectionIndex$payments_core_release(param0: number, param1: number, param2: number, param3: number): number;
					public getCompletionCallback$payments_core_release(): kotlin.jvm.functions.Function0<kotlin.Unit>;
				}
				export module ExpiryDateEditText {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.view.ExpiryDateEditText.Companion>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class FpxBank extends com.stripe.android.view.Bank {
					public static class: java.lang.Class<com.stripe.android.view.FpxBank>;
					public static Companion: com.stripe.android.view.FpxBank.Companion;
					public static Maybank2U: com.stripe.android.view.FpxBank;
					public static Cimb: com.stripe.android.view.FpxBank;
					public static PublicBank: com.stripe.android.view.FpxBank;
					public static Rhb: com.stripe.android.view.FpxBank;
					public static HongLeongBank: com.stripe.android.view.FpxBank;
					public static AmBank: com.stripe.android.view.FpxBank;
					public static AffinBank: com.stripe.android.view.FpxBank;
					public static AllianceBankBusiness: com.stripe.android.view.FpxBank;
					public static BankIslam: com.stripe.android.view.FpxBank;
					public static BankMuamalat: com.stripe.android.view.FpxBank;
					public static BankRakyat: com.stripe.android.view.FpxBank;
					public static Bsn: com.stripe.android.view.FpxBank;
					public static Hsbc: com.stripe.android.view.FpxBank;
					public static Kfh: com.stripe.android.view.FpxBank;
					public static Maybank2E: com.stripe.android.view.FpxBank;
					public static Ocbc: com.stripe.android.view.FpxBank;
					public static StandardChartered: com.stripe.android.view.FpxBank;
					public static UobBank: com.stripe.android.view.FpxBank;
					public getDisplayName(): string;
					public static values(): androidNative.Array<com.stripe.android.view.FpxBank>;
					public getId(): string;
					public getCode(): string;
					public static get(param0: string): com.stripe.android.view.FpxBank;
					public static valueOf(param0: string): com.stripe.android.view.FpxBank;
					public getBrandIconResId(): java.lang.Integer;
				}
				export module FpxBank {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.view.FpxBank.Companion>;
						public get(param0: string): com.stripe.android.view.FpxBank;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class FpxViewModel {
					public static class: java.lang.Class<com.stripe.android.view.FpxViewModel>;
					public constructor(param0: globalAndroid.app.Application, param1: string, param2: com.stripe.android.networking.StripeRepository);
					public getSelectedPosition$payments_core_release(): java.lang.Integer;
					public setSelectedPosition$payments_core_release(param0: java.lang.Integer): void;
				}
				export module FpxViewModel {
					export class Factory {
						public static class: java.lang.Class<com.stripe.android.view.FpxViewModel.Factory>;
						public create(param0: java.lang.Class): androidx.lifecycle.ViewModel;
						public constructor(param0: globalAndroid.app.Application);
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class KeyboardController {
					public static class: java.lang.Class<com.stripe.android.view.KeyboardController>;
					public static $stable: number;
					public constructor(param0: globalAndroid.app.Activity);
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class MaskedCardView {
					public static class: java.lang.Class<com.stripe.android.view.MaskedCardView>;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public constructor(param0: globalAndroid.content.Context);
					public setSelected(param0: boolean): void;
					public getCardBrand(): com.stripe.android.model.CardBrand;
					public setPaymentMethod(param0: com.stripe.android.model.PaymentMethod): void;
					public getViewBinding$payments_core_release(): com.stripe.android.databinding.MaskedCardViewBinding;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
					public getLast4(): string;
				}
				export module MaskedCardView {
					export class WhenMappings {
						public static class: java.lang.Class<com.stripe.android.view.MaskedCardView.WhenMappings>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class NetbankingBank extends com.stripe.android.view.Bank {
					public static class: java.lang.Class<com.stripe.android.view.NetbankingBank>;
					public static Companion: com.stripe.android.view.NetbankingBank.Companion;
					public static KotakBank: com.stripe.android.view.NetbankingBank;
					public static AndraBank: com.stripe.android.view.NetbankingBank;
					public static AllahabadBank: com.stripe.android.view.NetbankingBank;
					public static AndhraPragathiBank: com.stripe.android.view.NetbankingBank;
					public static AirtelBank: com.stripe.android.view.NetbankingBank;
					public static AUSmallFinanceBank: com.stripe.android.view.NetbankingBank;
					public static BankOfBahrainAndKuwait: com.stripe.android.view.NetbankingBank;
					public static BankOfBaroda: com.stripe.android.view.NetbankingBank;
					public static BasseinCatholicBank: com.stripe.android.view.NetbankingBank;
					public static BandhanBank: com.stripe.android.view.NetbankingBank;
					public static BankOfIndia: com.stripe.android.view.NetbankingBank;
					public static BankofMaharashtra: com.stripe.android.view.NetbankingBank;
					public static CentralBankOfIndia: com.stripe.android.view.NetbankingBank;
					public static CanaraBank: com.stripe.android.view.NetbankingBank;
					public static CosmosBank: com.stripe.android.view.NetbankingBank;
					public static CorporationBank: com.stripe.android.view.NetbankingBank;
					public static CatholicSyrianBank: com.stripe.android.view.NetbankingBank;
					public static CityUnionBank: com.stripe.android.view.NetbankingBank;
					public static DeutscheBank: com.stripe.android.view.NetbankingBank;
					public static Digibank: com.stripe.android.view.NetbankingBank;
					public static DevelopmentCreditBank: com.stripe.android.view.NetbankingBank;
					public static DenaBank: com.stripe.android.view.NetbankingBank;
					public static DhanlakshmiBank: com.stripe.android.view.NetbankingBank;
					public static EquitasSmallFinanceBank: com.stripe.android.view.NetbankingBank;
					public static ESAFBank: com.stripe.android.view.NetbankingBank;
					public static FederalBank: com.stripe.android.view.NetbankingBank;
					public static FincareBank: com.stripe.android.view.NetbankingBank;
					public static HDFCBank: com.stripe.android.view.NetbankingBank;
					public static ICICIBank: com.stripe.android.view.NetbankingBank;
					public static IDBIBank: com.stripe.android.view.NetbankingBank;
					public static IDFCBank: com.stripe.android.view.NetbankingBank;
					public static IndusIndBank: com.stripe.android.view.NetbankingBank;
					public static IndianBank: com.stripe.android.view.NetbankingBank;
					public static IndianOverseasBank: com.stripe.android.view.NetbankingBank;
					public static JammuKashmirBank: com.stripe.android.view.NetbankingBank;
					public static JanaBank: com.stripe.android.view.NetbankingBank;
					public static JanataSahakariBank: com.stripe.android.view.NetbankingBank;
					public static KarnatakaBank: com.stripe.android.view.NetbankingBank;
					public static KalyanJanataBank: com.stripe.android.view.NetbankingBank;
					public static KalpurBank: com.stripe.android.view.NetbankingBank;
					public static KarurVysyaBank: com.stripe.android.view.NetbankingBank;
					public static KarnatakaVikasGrameenaBank: com.stripe.android.view.NetbankingBank;
					public static LaxmiVilasBank: com.stripe.android.view.NetbankingBank;
					public static MehsanaBank: com.stripe.android.view.NetbankingBank;
					public static NEBank: com.stripe.android.view.NetbankingBank;
					public static NKGSBBank: com.stripe.android.view.NetbankingBank;
					public static OBCBank: com.stripe.android.view.NetbankingBank;
					public static PunjabNationalBank: com.stripe.android.view.NetbankingBank;
					public static PunjabAndSindBank: com.stripe.android.view.NetbankingBank;
					public static RBLBank: com.stripe.android.view.NetbankingBank;
					public static SBI: com.stripe.android.view.NetbankingBank;
					public static StandardCharteredBank: com.stripe.android.view.NetbankingBank;
					public static ShivalikMercantileBank: com.stripe.android.view.NetbankingBank;
					public static SouthIndianBank: com.stripe.android.view.NetbankingBank;
					public static SuryodayBank: com.stripe.android.view.NetbankingBank;
					public static SaraswatBank: com.stripe.android.view.NetbankingBank;
					public static SyndicateBank: com.stripe.android.view.NetbankingBank;
					public static ThaneBharatBank: com.stripe.android.view.NetbankingBank;
					public static TJSBBank: com.stripe.android.view.NetbankingBank;
					public static TamilnadMercantileBank: com.stripe.android.view.NetbankingBank;
					public static TamilNaduStateBank: com.stripe.android.view.NetbankingBank;
					public static UBI: com.stripe.android.view.NetbankingBank;
					public static UNIBank: com.stripe.android.view.NetbankingBank;
					public static AxisBank: com.stripe.android.view.NetbankingBank;
					public static VijayaBank: com.stripe.android.view.NetbankingBank;
					public static VarachhaBank: com.stripe.android.view.NetbankingBank;
					public static YesBank: com.stripe.android.view.NetbankingBank;
					public static ZoroastrianBank: com.stripe.android.view.NetbankingBank;
					public static KarnatakaGraminBank: com.stripe.android.view.NetbankingBank;
					public static ShamraoVithalBank: com.stripe.android.view.NetbankingBank;
					public static NutanNagrikBank: com.stripe.android.view.NetbankingBank;
					public static BOBBank: com.stripe.android.view.NetbankingBank;
					public static PunjabNationalCorpBank: com.stripe.android.view.NetbankingBank;
					public static ShamraoVithalCorpBank: com.stripe.android.view.NetbankingBank;
					public static BNPParibas: com.stripe.android.view.NetbankingBank;
					public static RBLCorpBank: com.stripe.android.view.NetbankingBank;
					public static ICICICorpBank: com.stripe.android.view.NetbankingBank;
					public static IDBICorpBank: com.stripe.android.view.NetbankingBank;
					public static AxisCorpBank: com.stripe.android.view.NetbankingBank;
					public static AndhraCorpBank: com.stripe.android.view.NetbankingBank;
					public static DhanlaxmiCorpBank: com.stripe.android.view.NetbankingBank;
					public static AllahabadCorpBank: com.stripe.android.view.NetbankingBank;
					public static HFDCCorpBank: com.stripe.android.view.NetbankingBank;
					public static YesCorpBank: com.stripe.android.view.NetbankingBank;
					public static CorporationBankCorporate: com.stripe.android.view.NetbankingBank;
					public static BarclaysCorpBank: com.stripe.android.view.NetbankingBank;
					public getDisplayName(): string;
					public getId(): string;
					public getCode(): string;
					public static get(param0: string): com.stripe.android.view.NetbankingBank;
					public getBrandIconResId(): java.lang.Integer;
					public static values(): androidNative.Array<com.stripe.android.view.NetbankingBank>;
					public static valueOf(param0: string): com.stripe.android.view.NetbankingBank;
				}
				export module NetbankingBank {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.view.NetbankingBank.Companion>;
						public get(param0: string): com.stripe.android.view.NetbankingBank;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class PaymentAuthWebChromeClient {
					public static class: java.lang.Class<com.stripe.android.view.PaymentAuthWebChromeClient>;
					public constructor(param0: globalAndroid.app.Activity, param1: com.stripe.android.core.Logger);
					public onConsoleMessage(param0: globalAndroid.webkit.ConsoleMessage): boolean;
					public onJsConfirm(param0: globalAndroid.webkit.WebView, param1: string, param2: string, param3: globalAndroid.webkit.JsResult): boolean;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class PaymentAuthWebView {
					public static class: java.lang.Class<com.stripe.android.view.PaymentAuthWebView>;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public constructor(param0: globalAndroid.content.Context);
					public setOnLoadBlank$payments_core_release(param0: kotlin.jvm.functions.Function0<kotlin.Unit>): void;
					public destroy(): void;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
					public getOnLoadBlank$payments_core_release(): kotlin.jvm.functions.Function0<kotlin.Unit>;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class PaymentAuthWebViewActivity {
					public static class: java.lang.Class<com.stripe.android.view.PaymentAuthWebViewActivity>;
					public static $stable: number;
					public onCreate(param0: globalAndroid.os.Bundle): void;
					public onAuthComplete$payments_core_release(param0: java.lang.Throwable): void;
					public onCreateOptionsMenu(param0: globalAndroid.view.Menu): boolean;
					public constructor();
					public onBackPressed(): void;
					public onDestroy(): void;
					public onOptionsItemSelected(param0: globalAndroid.view.MenuItem): boolean;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class PaymentAuthWebViewActivityViewModel {
					public static class: java.lang.Class<com.stripe.android.view.PaymentAuthWebViewActivityViewModel>;
					public getButtonText$payments_core_release(): string;
					public logError(): void;
					public getExtraHeaders(): java.util.Map<string, string>;
					public constructor(param0: com.stripe.android.auth.PaymentBrowserAuthContract.Args, param1: com.stripe.android.core.networking.AnalyticsRequestExecutor, param2: com.stripe.android.networking.PaymentAnalyticsRequestFactory);
					public getToolbarTitle$payments_core_release(): com.stripe.android.view.PaymentAuthWebViewActivityViewModel.ToolbarTitleData;
					public logComplete(): void;
					public getToolbarBackgroundColor$payments_core_release(): string;
					public logStart(): void;
				}
				export module PaymentAuthWebViewActivityViewModel {
					export class Factory {
						public static class: java.lang.Class<com.stripe.android.view.PaymentAuthWebViewActivityViewModel.Factory>;
						public create(param0: java.lang.Class): androidx.lifecycle.ViewModel;
						public constructor(param0: globalAndroid.app.Application, param1: com.stripe.android.core.Logger, param2: com.stripe.android.auth.PaymentBrowserAuthContract.Args);
					}
					export class ToolbarTitleData {
						public static class: java.lang.Class<com.stripe.android.view.PaymentAuthWebViewActivityViewModel.ToolbarTitleData>;
						public component1$payments_core_release(): string;
						public constructor(param0: string, param1: com.stripe.android.stripe3ds2.init.ui.StripeToolbarCustomization);
						public getText$payments_core_release(): string;
						public copy(param0: string, param1: com.stripe.android.stripe3ds2.init.ui.StripeToolbarCustomization): com.stripe.android.view.PaymentAuthWebViewActivityViewModel.ToolbarTitleData;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public component2$payments_core_release(): com.stripe.android.stripe3ds2.init.ui.StripeToolbarCustomization;
						public getToolbarCustomization$payments_core_release(): com.stripe.android.stripe3ds2.init.ui.StripeToolbarCustomization;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class PaymentAuthWebViewClient {
					public static class: java.lang.Class<com.stripe.android.view.PaymentAuthWebViewClient>;
					public static Companion: com.stripe.android.view.PaymentAuthWebViewClient.Companion;
					public static PARAM_PAYMENT_CLIENT_SECRET: string;
					public static PARAM_SETUP_CLIENT_SECRET: string;
					public static BLANK_PAGE: string;
					public setHasLoadedBlank$payments_core_release(param0: boolean): void;
					public onPageFinished(param0: globalAndroid.webkit.WebView, param1: string): void;
					public shouldOverrideUrlLoading(param0: globalAndroid.webkit.WebView, param1: globalAndroid.webkit.WebResourceRequest): boolean;
					public getHasLoadedBlank$payments_core_release(): boolean;
					public constructor(param0: com.stripe.android.core.Logger, param1: androidx.lifecycle.MutableLiveData<java.lang.Boolean>, param2: string, param3: string, param4: kotlin.jvm.functions.Function1<any, kotlin.Unit>, param5: kotlin.jvm.functions.Function1<any, kotlin.Unit>);
					public getCompletionUrlParam(): string;
				}
				export module PaymentAuthWebViewClient {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.view.PaymentAuthWebViewClient.Companion>;
						public isCompletionUrl$payments_core_release(param0: string): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class PaymentFlowActivity extends com.stripe.android.view.StripeActivity {
					public static class: java.lang.Class<com.stripe.android.view.PaymentFlowActivity>;
					public static Companion: com.stripe.android.view.PaymentFlowActivity.Companion;
					public static $stable: number;
					public static PRODUCT_TOKEN: string;
					public onActionSave(): void;
					public onCreate(param0: globalAndroid.os.Bundle): void;
					public constructor();
					public onBackPressed(): void;
				}
				export module PaymentFlowActivity {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.view.PaymentFlowActivity.Companion>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class PaymentFlowActivityStarter extends com.stripe.android.view.ActivityStarter<com.stripe.android.view.PaymentFlowActivity, com.stripe.android.view.PaymentFlowActivityStarter.Args> {
					public static class: java.lang.Class<com.stripe.android.view.PaymentFlowActivityStarter>;
					public static Companion: com.stripe.android.view.PaymentFlowActivityStarter.Companion;
					public static $stable: number;
					public static REQUEST_CODE: number;
					public constructor(param0: globalAndroid.app.Activity, param1: java.lang.Class<any>, param2: number, param3: java.lang.Integer);
					public constructor(param0: androidx.fragment.app.Fragment, param1: com.stripe.android.PaymentSessionConfig);
					public constructor(param0: globalAndroid.app.Activity, param1: androidx.fragment.app.Fragment, param2: java.lang.Class<any>, param3: number, param4: java.lang.Integer);
					public constructor(param0: globalAndroid.app.Activity, param1: com.stripe.android.PaymentSessionConfig);
					public constructor(param0: androidx.fragment.app.Fragment, param1: java.lang.Class<any>, param2: number, param3: java.lang.Integer);
				}
				export module PaymentFlowActivityStarter {
					export class Args extends com.stripe.android.view.ActivityStarter.Args {
						public static class: java.lang.Class<com.stripe.android.view.PaymentFlowActivityStarter.Args>;
						public static Companion: com.stripe.android.view.PaymentFlowActivityStarter.Args.Companion;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.view.PaymentFlowActivityStarter.Args>;
						public static $stable: number;
						public describeContents(): number;
						public copy(param0: com.stripe.android.PaymentSessionConfig, param1: com.stripe.android.PaymentSessionData, param2: boolean, param3: java.lang.Integer): com.stripe.android.view.PaymentFlowActivityStarter.Args;
						public getWindowFlags$payments_core_release(): java.lang.Integer;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public component3$payments_core_release(): boolean;
						public getPaymentSessionConfig$payments_core_release(): com.stripe.android.PaymentSessionConfig;
						public toString(): string;
						public isPaymentSessionActive$payments_core_release(): boolean;
						public static create(param0: globalAndroid.content.Intent): com.stripe.android.view.PaymentFlowActivityStarter.Args;
						public constructor(param0: com.stripe.android.PaymentSessionConfig, param1: com.stripe.android.PaymentSessionData, param2: boolean, param3: java.lang.Integer);
						public getPaymentSessionData$payments_core_release(): com.stripe.android.PaymentSessionData;
						public component2$payments_core_release(): com.stripe.android.PaymentSessionData;
						public component1$payments_core_release(): com.stripe.android.PaymentSessionConfig;
						public component4$payments_core_release(): java.lang.Integer;
					}
					export module Args {
						export class Builder extends com.stripe.android.ObjectBuilder<com.stripe.android.view.PaymentFlowActivityStarter.Args> {
							public static class: java.lang.Class<com.stripe.android.view.PaymentFlowActivityStarter.Args.Builder>;
							public static $stable: number;
							public constructor();
							public setWindowFlags(param0: java.lang.Integer): com.stripe.android.view.PaymentFlowActivityStarter.Args.Builder;
							public build(): com.stripe.android.view.PaymentFlowActivityStarter.Args;
							public build(): any;
							public setPaymentSessionData(param0: com.stripe.android.PaymentSessionData): com.stripe.android.view.PaymentFlowActivityStarter.Args.Builder;
							public setPaymentSessionConfig(param0: com.stripe.android.PaymentSessionConfig): com.stripe.android.view.PaymentFlowActivityStarter.Args.Builder;
							public setIsPaymentSessionActive(param0: boolean): com.stripe.android.view.PaymentFlowActivityStarter.Args.Builder;
						}
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.view.PaymentFlowActivityStarter.Args.Companion>;
							public create(param0: globalAndroid.content.Intent): com.stripe.android.view.PaymentFlowActivityStarter.Args;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.view.PaymentFlowActivityStarter.Args> {
							public static class: java.lang.Class<com.stripe.android.view.PaymentFlowActivityStarter.Args.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.view.PaymentFlowActivityStarter.Args;
							public newArray(param0: number): androidNative.Array<com.stripe.android.view.PaymentFlowActivityStarter.Args>;
						}
					}
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.view.PaymentFlowActivityStarter.Companion>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class PaymentFlowPage {
					public static class: java.lang.Class<com.stripe.android.view.PaymentFlowPage>;
					public static ShippingInfo: com.stripe.android.view.PaymentFlowPage;
					public static ShippingMethod: com.stripe.android.view.PaymentFlowPage;
					public static valueOf(param0: string): com.stripe.android.view.PaymentFlowPage;
					public static values(): androidNative.Array<com.stripe.android.view.PaymentFlowPage>;
					public getTitleResId(): number;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class PaymentFlowPagerAdapter {
					public static class: java.lang.Class<com.stripe.android.view.PaymentFlowPagerAdapter>;
					public isShippingInfoSubmitted$payments_core_release(): boolean;
					public setShippingMethods$payments_core_release(param0: java.util.List<com.stripe.android.model.ShippingMethod>): void;
					public getCount(): number;
					public getShippingMethods$payments_core_release(): java.util.List<com.stripe.android.model.ShippingMethod>;
					public getSelectedShippingMethod$payments_core_release(): com.stripe.android.model.ShippingMethod;
					public setShippingInfoSubmitted$payments_core_release(param0: boolean): void;
					public destroyItem(param0: globalAndroid.view.ViewGroup, param1: number, param2: any): void;
					public getPageTitle(param0: number): string;
					public isViewFromObject(param0: globalAndroid.view.View, param1: any): boolean;
					public getShippingInformation$payments_core_release(): com.stripe.android.model.ShippingInformation;
					public constructor(param0: globalAndroid.content.Context, param1: com.stripe.android.PaymentSessionConfig, param2: java.util.Set<string>, param3: kotlin.jvm.functions.Function1<any, kotlin.Unit>);
					public getItemPosition(param0: any): number;
					public instantiateItem(param0: globalAndroid.view.ViewGroup, param1: number): any;
					public getPageAt$payments_core_release(param0: number): com.stripe.android.view.PaymentFlowPage;
					public setShippingInformation$payments_core_release(param0: com.stripe.android.model.ShippingInformation): void;
					public setSelectedShippingMethod$payments_core_release(param0: com.stripe.android.model.ShippingMethod): void;
				}
				export module PaymentFlowPagerAdapter {
					export abstract class PaymentFlowViewHolder {
						public static class: java.lang.Class<com.stripe.android.view.PaymentFlowPagerAdapter.PaymentFlowViewHolder>;
					}
					export module PaymentFlowViewHolder {
						export class ShippingInformationViewHolder extends com.stripe.android.view.PaymentFlowPagerAdapter.PaymentFlowViewHolder {
							public static class: java.lang.Class<com.stripe.android.view.PaymentFlowPagerAdapter.PaymentFlowViewHolder.ShippingInformationViewHolder>;
							public static $stable: number;
							public constructor(param0: com.stripe.android.databinding.ShippingInfoPageBinding);
							public constructor(param0: globalAndroid.view.ViewGroup);
							public bind(param0: com.stripe.android.PaymentSessionConfig, param1: com.stripe.android.model.ShippingInformation, param2: java.util.Set<string>): void;
						}
						export class ShippingMethodViewHolder extends com.stripe.android.view.PaymentFlowPagerAdapter.PaymentFlowViewHolder {
							public static class: java.lang.Class<com.stripe.android.view.PaymentFlowPagerAdapter.PaymentFlowViewHolder.ShippingMethodViewHolder>;
							public static $stable: number;
							public constructor(param0: com.stripe.android.databinding.ShippingMethodPageBinding);
							public bind(param0: java.util.List<com.stripe.android.model.ShippingMethod>, param1: com.stripe.android.model.ShippingMethod, param2: kotlin.jvm.functions.Function1<any, kotlin.Unit>): void;
							public constructor(param0: globalAndroid.view.ViewGroup);
						}
					}
					export class WhenMappings {
						public static class: java.lang.Class<com.stripe.android.view.PaymentFlowPagerAdapter.WhenMappings>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class PaymentFlowViewModel {
					public static class: java.lang.Class<com.stripe.android.view.PaymentFlowViewModel>;
					public static Companion: com.stripe.android.view.PaymentFlowViewModel.Companion;
					public constructor(param0: com.stripe.android.CustomerSession, param1: com.stripe.android.PaymentSessionData, param2: kotlin.coroutines.CoroutineContext);
					public setShippingMethods$payments_core_release(param0: java.util.List<com.stripe.android.model.ShippingMethod>): void;
					public isShippingInfoSubmitted$payments_core_release(): boolean;
					public getShippingMethods$payments_core_release(): java.util.List<com.stripe.android.model.ShippingMethod>;
					public getSelectedShippingMethod$payments_core_release(): com.stripe.android.model.ShippingMethod;
					public setShippingInfoSubmitted$payments_core_release(param0: boolean): void;
					public getCurrentPage$payments_core_release(): number;
					public getSubmittedShippingInfo$payments_core_release(): com.stripe.android.model.ShippingInformation;
					public setPaymentSessionData$payments_core_release(param0: com.stripe.android.PaymentSessionData): void;
					public setSubmittedShippingInfo$payments_core_release(param0: com.stripe.android.model.ShippingInformation): void;
					public getPaymentSessionData$payments_core_release(): com.stripe.android.PaymentSessionData;
					public setCurrentPage$payments_core_release(param0: number): void;
					public setSelectedShippingMethod$payments_core_release(param0: com.stripe.android.model.ShippingMethod): void;
				}
				export module PaymentFlowViewModel {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.view.PaymentFlowViewModel.Companion>;
						public getPRODUCT_USAGE(): java.util.Set<string>;
					}
					export class Factory {
						public static class: java.lang.Class<com.stripe.android.view.PaymentFlowViewModel.Factory>;
						public constructor(param0: com.stripe.android.CustomerSession, param1: com.stripe.android.PaymentSessionData);
						public create(param0: java.lang.Class): androidx.lifecycle.ViewModel;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class PaymentFlowViewPager {
					public static class: java.lang.Class<com.stripe.android.view.PaymentFlowViewPager>;
					public static $stable: number;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public constructor(param0: globalAndroid.content.Context);
					public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
					public onInterceptTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: boolean);
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class PaymentMethodSwipeCallback {
					public static class: java.lang.Class<com.stripe.android.view.PaymentMethodSwipeCallback>;
					public static Companion: com.stripe.android.view.PaymentMethodSwipeCallback.Companion;
					public onMove(param0: androidx.recyclerview.widget.RecyclerView, param1: androidx.recyclerview.widget.RecyclerView.ViewHolder, param2: androidx.recyclerview.widget.RecyclerView.ViewHolder): boolean;
					public onChildDraw(param0: globalAndroid.graphics.Canvas, param1: androidx.recyclerview.widget.RecyclerView, param2: androidx.recyclerview.widget.RecyclerView.ViewHolder, param3: number, param4: number, param5: number, param6: boolean): void;
					public getSwipeDirs(param0: androidx.recyclerview.widget.RecyclerView, param1: androidx.recyclerview.widget.RecyclerView.ViewHolder): number;
					public constructor(param0: globalAndroid.content.Context, param1: com.stripe.android.view.PaymentMethodsAdapter, param2: com.stripe.android.view.PaymentMethodSwipeCallback.Listener);
					public onSwiped(param0: androidx.recyclerview.widget.RecyclerView.ViewHolder, param1: number): void;
					public getSwipeThreshold(param0: androidx.recyclerview.widget.RecyclerView.ViewHolder): number;
				}
				export module PaymentMethodSwipeCallback {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.view.PaymentMethodSwipeCallback.Companion>;
						public calculateTransitionColor$payments_core_release(param0: number, param1: number, param2: number): number;
					}
					export class Listener {
						public static class: java.lang.Class<com.stripe.android.view.PaymentMethodSwipeCallback.Listener>;
						/**
						 * Constructs a new instance of the com.stripe.android.view.PaymentMethodSwipeCallback$Listener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onSwiped(param0: com.stripe.android.model.PaymentMethod): void;
						});
						public constructor();
						public onSwiped(param0: com.stripe.android.model.PaymentMethod): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class PaymentMethodsActivity {
					public static class: java.lang.Class<com.stripe.android.view.PaymentMethodsActivity>;
					public static Companion: com.stripe.android.view.PaymentMethodsActivity.Companion;
					public static $stable: number;
					public static PRODUCT_TOKEN: string;
					public onSupportNavigateUp(): boolean;
					public onAddPaymentMethodResult$payments_core_release(param0: com.stripe.android.view.AddPaymentMethodActivityStarter.Result): void;
					public onCreate(param0: globalAndroid.os.Bundle): void;
					public constructor();
					public onBackPressed(): void;
					public onDestroy(): void;
					public getViewBinding$payments_core_release(): com.stripe.android.databinding.PaymentMethodsActivityBinding;
				}
				export module PaymentMethodsActivity {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.view.PaymentMethodsActivity.Companion>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class PaymentMethodsActivityStarter extends com.stripe.android.view.ActivityStarter<com.stripe.android.view.PaymentMethodsActivity, com.stripe.android.view.PaymentMethodsActivityStarter.Args> {
					public static class: java.lang.Class<com.stripe.android.view.PaymentMethodsActivityStarter>;
					public static Companion: com.stripe.android.view.PaymentMethodsActivityStarter.Companion;
					public static $stable: number;
					public static REQUEST_CODE: number;
					public constructor(param0: globalAndroid.app.Activity, param1: java.lang.Class<any>, param2: number, param3: java.lang.Integer);
					public constructor(param0: globalAndroid.app.Activity, param1: androidx.fragment.app.Fragment, param2: java.lang.Class<any>, param3: number, param4: java.lang.Integer);
					public constructor(param0: androidx.fragment.app.Fragment);
					public constructor(param0: androidx.fragment.app.Fragment, param1: java.lang.Class<any>, param2: number, param3: java.lang.Integer);
					public constructor(param0: globalAndroid.app.Activity);
				}
				export module PaymentMethodsActivityStarter {
					export class Args extends com.stripe.android.view.ActivityStarter.Args {
						public static class: java.lang.Class<com.stripe.android.view.PaymentMethodsActivityStarter.Args>;
						public static Companion: com.stripe.android.view.PaymentMethodsActivityStarter.Args.Companion;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.view.PaymentMethodsActivityStarter.Args>;
						public static $stable: number;
						public component11$payments_core_release(): boolean;
						public getPaymentMethodTypes$payments_core_release(): java.util.List<com.stripe.android.model.PaymentMethod.Type>;
						public copy(param0: string, param1: number, param2: number, param3: boolean, param4: java.util.List<any>, param5: com.stripe.android.PaymentConfiguration, param6: java.lang.Integer, param7: com.stripe.android.view.BillingAddressFields, param8: boolean, param9: boolean, param10: boolean): com.stripe.android.view.PaymentMethodsActivityStarter.Args;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public component4$payments_core_release(): boolean;
						public component2(): number;
						public component1$payments_core_release(): string;
						public component6$payments_core_release(): com.stripe.android.PaymentConfiguration;
						public getAddPaymentMethodFooterLayoutId(): number;
						public component7$payments_core_release(): java.lang.Integer;
						public component5$payments_core_release(): java.util.List<com.stripe.android.model.PaymentMethod.Type>;
						public component8$payments_core_release(): com.stripe.android.view.BillingAddressFields;
						public describeContents(): number;
						public getWindowFlags$payments_core_release(): java.lang.Integer;
						public component9$payments_core_release(): boolean;
						public toString(): string;
						public isPaymentSessionActive$payments_core_release(): boolean;
						public component10$payments_core_release(): boolean;
						public constructor(param0: string, param1: number, param2: number, param3: boolean, param4: java.util.List<any>, param5: com.stripe.android.PaymentConfiguration, param6: java.lang.Integer, param7: com.stripe.android.view.BillingAddressFields, param8: boolean, param9: boolean, param10: boolean);
						public getShouldShowGooglePay$payments_core_release(): boolean;
						public getCanDeletePaymentMethods$payments_core_release(): boolean;
						public getPaymentConfiguration$payments_core_release(): com.stripe.android.PaymentConfiguration;
						public getPaymentMethodsFooterLayoutId(): number;
						public getBillingAddressFields$payments_core_release(): com.stripe.android.view.BillingAddressFields;
						public getUseGooglePay$payments_core_release(): boolean;
						public getInitialPaymentMethodId$payments_core_release(): string;
						public component3(): number;
					}
					export module Args {
						export class Builder extends com.stripe.android.ObjectBuilder<com.stripe.android.view.PaymentMethodsActivityStarter.Args> {
							public static class: java.lang.Class<com.stripe.android.view.PaymentMethodsActivityStarter.Args.Builder>;
							public static $stable: number;
							public constructor();
							public setAddPaymentMethodFooter(param0: number): com.stripe.android.view.PaymentMethodsActivityStarter.Args.Builder;
							public setBillingAddressFields(param0: com.stripe.android.view.BillingAddressFields): com.stripe.android.view.PaymentMethodsActivityStarter.Args.Builder;
							public build(): any;
							public setWindowFlags(param0: java.lang.Integer): com.stripe.android.view.PaymentMethodsActivityStarter.Args.Builder;
							public setIsPaymentSessionActive(param0: boolean): com.stripe.android.view.PaymentMethodsActivityStarter.Args.Builder;
							public setPaymentConfiguration(param0: com.stripe.android.PaymentConfiguration): com.stripe.android.view.PaymentMethodsActivityStarter.Args.Builder;
							public setUseGooglePay$payments_core_release(param0: boolean): com.stripe.android.view.PaymentMethodsActivityStarter.Args.Builder;
							public setCanDeletePaymentMethods(param0: boolean): com.stripe.android.view.PaymentMethodsActivityStarter.Args.Builder;
							public setShouldShowGooglePay(param0: boolean): com.stripe.android.view.PaymentMethodsActivityStarter.Args.Builder;
							public setPaymentMethodTypes(param0: java.util.List<any>): com.stripe.android.view.PaymentMethodsActivityStarter.Args.Builder;
							public build(): com.stripe.android.view.PaymentMethodsActivityStarter.Args;
							public setPaymentMethodsFooter(param0: number): com.stripe.android.view.PaymentMethodsActivityStarter.Args.Builder;
							public setInitialPaymentMethodId(param0: string): com.stripe.android.view.PaymentMethodsActivityStarter.Args.Builder;
						}
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.view.PaymentMethodsActivityStarter.Args.Companion>;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.view.PaymentMethodsActivityStarter.Args> {
							public static class: java.lang.Class<com.stripe.android.view.PaymentMethodsActivityStarter.Args.Creator>;
							public constructor();
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.view.PaymentMethodsActivityStarter.Args;
							public newArray(param0: number): androidNative.Array<com.stripe.android.view.PaymentMethodsActivityStarter.Args>;
						}
					}
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.view.PaymentMethodsActivityStarter.Companion>;
					}
					export class Result extends com.stripe.android.view.ActivityStarter.Result {
						public static class: java.lang.Class<com.stripe.android.view.PaymentMethodsActivityStarter.Result>;
						public static Companion: com.stripe.android.view.PaymentMethodsActivityStarter.Result.Companion;
						public paymentMethod: com.stripe.android.model.PaymentMethod;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.view.PaymentMethodsActivityStarter.Result>;
						public static $stable: number;
						public describeContents(): number;
						public constructor();
						public component2(): boolean;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public toBundle(): globalAndroid.os.Bundle;
						public toString(): string;
						public component1(): com.stripe.android.model.PaymentMethod;
						public copy(param0: com.stripe.android.model.PaymentMethod, param1: boolean): com.stripe.android.view.PaymentMethodsActivityStarter.Result;
						public constructor(param0: com.stripe.android.model.PaymentMethod, param1: boolean);
						public static fromIntent(param0: globalAndroid.content.Intent): com.stripe.android.view.PaymentMethodsActivityStarter.Result;
						public getUseGooglePay(): boolean;
					}
					export module Result {
						export class Companion {
							public static class: java.lang.Class<com.stripe.android.view.PaymentMethodsActivityStarter.Result.Companion>;
							public fromIntent(param0: globalAndroid.content.Intent): com.stripe.android.view.PaymentMethodsActivityStarter.Result;
						}
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.view.PaymentMethodsActivityStarter.Result> {
							public static class: java.lang.Class<com.stripe.android.view.PaymentMethodsActivityStarter.Result.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.view.PaymentMethodsActivityStarter.Result>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.view.PaymentMethodsActivityStarter.Result;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class PaymentMethodsAdapter extends androidx.recyclerview.widget.RecyclerView.Adapter<androidx.recyclerview.widget.RecyclerView.ViewHolder> {
					public static class: java.lang.Class<com.stripe.android.view.PaymentMethodsAdapter>;
					public static Companion: com.stripe.android.view.PaymentMethodsAdapter.Companion;
					public getAddCardArgs$payments_core_release(): com.stripe.android.view.AddPaymentMethodActivityStarter.Args;
					public constructor(param0: com.stripe.android.view.PaymentMethodsActivityStarter.Args, param1: java.util.List<any>, param2: string, param3: boolean, param4: boolean, param5: boolean);
					public getSelectedPaymentMethod$payments_core_release(): com.stripe.android.model.PaymentMethod;
					public getAddFpxArgs$payments_core_release(): com.stripe.android.view.AddPaymentMethodActivityStarter.Args;
					public setSelectedPaymentMethodId$payments_core_release(param0: string): void;
					public getListener$payments_core_release(): com.stripe.android.view.PaymentMethodsAdapter.Listener;
					public onBindViewHolder(param0: androidx.recyclerview.widget.RecyclerView.ViewHolder, param1: number): void;
					public getSelectedPaymentMethodId$payments_core_release(): string;
					public getPosition$payments_core_release(param0: com.stripe.android.model.PaymentMethod): java.lang.Integer;
					public setListener$payments_core_release(param0: com.stripe.android.view.PaymentMethodsAdapter.Listener): void;
					public getAddPaymentMethodArgs(): androidx.lifecycle.LiveData<com.stripe.android.view.AddPaymentMethodActivityStarter.Args>;
					public getItemCount(): number;
					public onCreateViewHolder(param0: globalAndroid.view.ViewGroup, param1: number): androidx.recyclerview.widget.RecyclerView.ViewHolder;
					public getItemViewType(param0: number): number;
					public getItemId(param0: number): number;
					public getPaymentMethods$payments_core_release(): java.util.List<com.stripe.android.model.PaymentMethod>;
				}
				export module PaymentMethodsAdapter {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.view.PaymentMethodsAdapter.Companion>;
						public getGOOGLE_PAY_ITEM_ID$payments_core_release(): number;
					}
					export class Listener {
						public static class: java.lang.Class<com.stripe.android.view.PaymentMethodsAdapter.Listener>;
						/**
						 * Constructs a new instance of the com.stripe.android.view.PaymentMethodsAdapter$Listener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onPaymentMethodClick(param0: com.stripe.android.model.PaymentMethod): void;
							onGooglePayClick(): void;
							onDeletePaymentMethodAction(param0: com.stripe.android.model.PaymentMethod): void;
						});
						public constructor();
						public onPaymentMethodClick(param0: com.stripe.android.model.PaymentMethod): void;
						public onGooglePayClick(): void;
						public onDeletePaymentMethodAction(param0: com.stripe.android.model.PaymentMethod): void;
					}
					export abstract class ViewHolder {
						public static class: java.lang.Class<com.stripe.android.view.PaymentMethodsAdapter.ViewHolder>;
					}
					export module ViewHolder {
						export class AddCardPaymentMethodViewHolder {
							public static class: java.lang.Class<com.stripe.android.view.PaymentMethodsAdapter.ViewHolder.AddCardPaymentMethodViewHolder>;
							public constructor(param0: com.stripe.android.databinding.AddPaymentMethodRowBinding);
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.view.ViewGroup);
						}
						export class AddFpxPaymentMethodViewHolder {
							public static class: java.lang.Class<com.stripe.android.view.PaymentMethodsAdapter.ViewHolder.AddFpxPaymentMethodViewHolder>;
							public constructor(param0: com.stripe.android.databinding.AddPaymentMethodRowBinding);
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.view.ViewGroup);
						}
						export class GooglePayViewHolder {
							public static class: java.lang.Class<com.stripe.android.view.PaymentMethodsAdapter.ViewHolder.GooglePayViewHolder>;
							public bind(param0: boolean): void;
							public constructor(param0: com.stripe.android.databinding.GooglePayRowBinding);
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.view.ViewGroup);
						}
						export class PaymentMethodViewHolder extends com.stripe.android.view.PaymentMethodsAdapter.ViewHolder {
							public static class: java.lang.Class<com.stripe.android.view.PaymentMethodsAdapter.ViewHolder.PaymentMethodViewHolder>;
							public constructor(param0: globalAndroid.view.ViewGroup);
							public constructor(param0: com.stripe.android.databinding.MaskedCardRowBinding);
							public setSelected(param0: boolean): void;
							public setPaymentMethod(param0: com.stripe.android.model.PaymentMethod): void;
						}
					}
					export class ViewType {
						public static class: java.lang.Class<com.stripe.android.view.PaymentMethodsAdapter.ViewType>;
						public static Card: com.stripe.android.view.PaymentMethodsAdapter.ViewType;
						public static AddCard: com.stripe.android.view.PaymentMethodsAdapter.ViewType;
						public static AddFpx: com.stripe.android.view.PaymentMethodsAdapter.ViewType;
						public static GooglePay: com.stripe.android.view.PaymentMethodsAdapter.ViewType;
						public static valueOf(param0: string): com.stripe.android.view.PaymentMethodsAdapter.ViewType;
						public static values(): androidNative.Array<com.stripe.android.view.PaymentMethodsAdapter.ViewType>;
					}
					export class WhenMappings {
						public static class: java.lang.Class<com.stripe.android.view.PaymentMethodsAdapter.WhenMappings>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class PaymentMethodsRecyclerView {
					public static class: java.lang.Class<com.stripe.android.view.PaymentMethodsRecyclerView>;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public constructor(param0: globalAndroid.content.Context);
					public setTappedPaymentMethod$payments_core_release(param0: com.stripe.android.model.PaymentMethod): void;
					public setPaymentMethodSelectedCallback$payments_core_release(param0: kotlin.jvm.functions.Function1<any, kotlin.Unit>): void;
					public getTappedPaymentMethod$payments_core_release(): com.stripe.android.model.PaymentMethod;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
					public getPaymentMethodSelectedCallback$payments_core_release(): kotlin.jvm.functions.Function1<com.stripe.android.model.PaymentMethod, kotlin.Unit>;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class PaymentMethodsViewModel {
					public static class: java.lang.Class<com.stripe.android.view.PaymentMethodsViewModel>;
					public onPaymentMethodAdded$payments_core_release(param0: com.stripe.android.model.PaymentMethod): void;
					public constructor(param0: globalAndroid.app.Application, param1: any, param2: string, param3: boolean);
					public getSnackbarData$payments_core_release(): androidx.lifecycle.MutableLiveData<string>;
					public getProductUsage$payments_core_release(): java.util.Set<string>;
					public setSelectedPaymentMethodId$payments_core_release(param0: string): void;
					public getProgressData$payments_core_release(): androidx.lifecycle.MutableLiveData<java.lang.Boolean>;
					public onPaymentMethodRemoved$payments_core_release(param0: com.stripe.android.model.PaymentMethod): void;
					public getSelectedPaymentMethodId$payments_core_release(): string;
				}
				export module PaymentMethodsViewModel {
					export class Factory {
						public static class: java.lang.Class<com.stripe.android.view.PaymentMethodsViewModel.Factory>;
						public create(param0: java.lang.Class): androidx.lifecycle.ViewModel;
						public constructor(param0: globalAndroid.app.Application, param1: any, param2: string, param3: boolean);
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class PaymentRelayActivity {
					public static class: java.lang.Class<com.stripe.android.view.PaymentRelayActivity>;
					public onCreate(param0: globalAndroid.os.Bundle): void;
					public constructor();
					public onResume(): void;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class PaymentUtils {
					public static class: java.lang.Class<com.stripe.android.view.PaymentUtils>;
					public static INSTANCE: com.stripe.android.view.PaymentUtils;
					public static $stable: number;
					public static formatPriceStringUsingFree(param0: number, param1: java.util.Currency, param2: string): string;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class PostalCodeEditText extends com.stripe.android.view.StripeEditText {
					public static class: java.lang.Class<com.stripe.android.view.PostalCodeEditText>;
					public static $stable: number;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public constructor(param0: globalAndroid.content.Context);
					public hasValidPostal$payments_core_release(): boolean;
					public setConfig$payments_core_release(param0: com.stripe.android.view.PostalCodeEditText.Config): void;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
					public onFinishInflate(): void;
					public getConfig$payments_core_release(): com.stripe.android.view.PostalCodeEditText.Config;
					public getPostalCode$payments_core_release(): string;
				}
				export module PostalCodeEditText {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.view.PostalCodeEditText.Companion>;
					}
					export class Config {
						public static class: java.lang.Class<com.stripe.android.view.PostalCodeEditText.Config>;
						public static Global: com.stripe.android.view.PostalCodeEditText.Config;
						public static US: com.stripe.android.view.PostalCodeEditText.Config;
						public static values(): androidNative.Array<com.stripe.android.view.PostalCodeEditText.Config>;
						public static valueOf(param0: string): com.stripe.android.view.PostalCodeEditText.Config;
					}
					export class WhenMappings {
						public static class: java.lang.Class<com.stripe.android.view.PostalCodeEditText.WhenMappings>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class PostalCodeValidator {
					public static class: java.lang.Class<com.stripe.android.view.PostalCodeValidator>;
					public static $stable: number;
					public isValid$payments_core_release(param0: string, param1: string, param2: java.util.List<any>, param3: java.util.List<any>): boolean;
					public isValid(param0: string, param1: string): boolean;
					public constructor();
				}
				export module PostalCodeValidator {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.view.PostalCodeValidator.Companion>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class SelectShippingMethodWidget {
					public static class: java.lang.Class<com.stripe.android.view.SelectShippingMethodWidget>;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public constructor(param0: globalAndroid.content.Context);
					public setSelectedShippingMethod(param0: com.stripe.android.model.ShippingMethod): void;
					public setShippingMethods(param0: java.util.List<com.stripe.android.model.ShippingMethod>): void;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
					public setShippingMethodSelectedCallback(param0: kotlin.jvm.functions.Function1<any, kotlin.Unit>): void;
					public getSelectedShippingMethod(): com.stripe.android.model.ShippingMethod;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class ShippingInfoWidget {
					public static class: java.lang.Class<com.stripe.android.view.ShippingInfoWidget>;
					public static $stable: number;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public constructor(param0: globalAndroid.content.Context);
					public setHiddenFields(param0: java.util.List<any>): void;
					public setOptionalFields(param0: java.util.List<any>): void;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
					public populateShippingInfo(param0: com.stripe.android.model.ShippingInformation): void;
					public getOptionalFields(): java.util.List<com.stripe.android.view.ShippingInfoWidget.CustomizableShippingField>;
					public validateAllFields(): boolean;
					public getHiddenFields(): java.util.List<com.stripe.android.view.ShippingInfoWidget.CustomizableShippingField>;
					public getShippingInformation(): com.stripe.android.model.ShippingInformation;
					public setAllowedCountryCodes(param0: java.util.Set<string>): void;
				}
				export module ShippingInfoWidget {
					export class CustomizableShippingField {
						public static class: java.lang.Class<com.stripe.android.view.ShippingInfoWidget.CustomizableShippingField>;
						public static Line1: com.stripe.android.view.ShippingInfoWidget.CustomizableShippingField;
						public static Line2: com.stripe.android.view.ShippingInfoWidget.CustomizableShippingField;
						public static City: com.stripe.android.view.ShippingInfoWidget.CustomizableShippingField;
						public static PostalCode: com.stripe.android.view.ShippingInfoWidget.CustomizableShippingField;
						public static State: com.stripe.android.view.ShippingInfoWidget.CustomizableShippingField;
						public static Phone: com.stripe.android.view.ShippingInfoWidget.CustomizableShippingField;
						public static valueOf(param0: string): com.stripe.android.view.ShippingInfoWidget.CustomizableShippingField;
						public static values(): androidNative.Array<com.stripe.android.view.ShippingInfoWidget.CustomizableShippingField>;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class ShippingMethodAdapter extends androidx.recyclerview.widget.RecyclerView.Adapter<com.stripe.android.view.ShippingMethodAdapter.ShippingMethodViewHolder> {
					public static class: java.lang.Class<com.stripe.android.view.ShippingMethodAdapter>;
					public setShippingMethods$payments_core_release(param0: java.util.List<com.stripe.android.model.ShippingMethod>): void;
					public setSelectedIndex$payments_core_release(param0: number): void;
					public getShippingMethods$payments_core_release(): java.util.List<com.stripe.android.model.ShippingMethod>;
					public setOnShippingMethodSelectedCallback$payments_core_release(param0: kotlin.jvm.functions.Function1<any, kotlin.Unit>): void;
					public getSelectedIndex$payments_core_release(): number;
					public getSelectedShippingMethod(): com.stripe.android.model.ShippingMethod;
					public onCreateViewHolder(param0: globalAndroid.view.ViewGroup, param1: number): com.stripe.android.view.ShippingMethodAdapter.ShippingMethodViewHolder;
					public onBindViewHolder(param0: com.stripe.android.view.ShippingMethodAdapter.ShippingMethodViewHolder, param1: number): void;
					public constructor();
					public getItemCount(): number;
					public getOnShippingMethodSelectedCallback$payments_core_release(): kotlin.jvm.functions.Function1<com.stripe.android.model.ShippingMethod, kotlin.Unit>;
					public getItemId(param0: number): number;
					public setSelected$payments_core_release(param0: com.stripe.android.model.ShippingMethod): void;
				}
				export module ShippingMethodAdapter {
					export class ShippingMethodViewHolder {
						public static class: java.lang.Class<com.stripe.android.view.ShippingMethodAdapter.ShippingMethodViewHolder>;
						public getShippingMethodView$payments_core_release(): com.stripe.android.view.ShippingMethodView;
						public setShippingMethod(param0: com.stripe.android.model.ShippingMethod): void;
						public setSelected(param0: boolean): void;
						public constructor(param0: com.stripe.android.view.ShippingMethodView);
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class ShippingMethodView {
					public static class: java.lang.Class<com.stripe.android.view.ShippingMethodView>;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public constructor(param0: globalAndroid.content.Context);
					public setSelected(param0: boolean): void;
					public setShippingMethod(param0: com.stripe.android.model.ShippingMethod): void;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export abstract class StripeActivity {
					public static class: java.lang.Class<com.stripe.android.view.StripeActivity>;
					public static $stable: number;
					public onActionSave(): void;
					public isProgressBarVisible(): boolean;
					public onCreate(param0: globalAndroid.os.Bundle): void;
					public onCreateOptionsMenu(param0: globalAndroid.view.Menu): boolean;
					public onPrepareOptionsMenu(param0: globalAndroid.view.Menu): boolean;
					public constructor();
					public onProgressBarVisibilityChanged(param0: boolean): void;
					public getProgressBar$payments_core_release(): globalAndroid.widget.ProgressBar;
					public getViewStub$payments_core_release(): globalAndroid.view.ViewStub;
					public onOptionsItemSelected(param0: globalAndroid.view.MenuItem): boolean;
					public setProgressBarVisible(param0: boolean): void;
					public showError(param0: string): void;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class StripeColorUtils {
					public static class: java.lang.Class<com.stripe.android.view.StripeColorUtils>;
					public static Companion: com.stripe.android.view.StripeColorUtils.Companion;
					public constructor(param0: globalAndroid.content.Context);
					public getColorControlNormal(): number;
					public getTextColorSecondary(): number;
					public getColorAccent(): number;
					public getTextColorPrimary(): number;
					public getTintedIconWithAttribute(param0: globalAndroid.content.res.Resources.Theme, param1: number, param2: number): globalAndroid.graphics.drawable.Drawable;
				}
				export module StripeColorUtils {
					export class Companion {
						public static class: java.lang.Class<com.stripe.android.view.StripeColorUtils.Companion>;
						public isColorTransparent(param0: number): boolean;
						public isColorDark(param0: number): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class StripeEditText {
					public static class: java.lang.Class<com.stripe.android.view.StripeEditText>;
					public static $stable: number;
					public setErrorMessage$payments_core_release(param0: string): void;
					public setDefaultColorStateList$payments_core_release(param0: globalAndroid.content.res.ColorStateList): void;
					public removeTextChangedListener(param0: globalAndroid.text.TextWatcher): void;
					public getAccessibilityText(): string;
					public getParentOnFocusChangeListener(): globalAndroid.view.View.OnFocusChangeListener;
					public setLastKeyDelete(param0: boolean): void;
					public getDefaultColorStateList$payments_core_release(): globalAndroid.content.res.ColorStateList;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public getShouldShowError(): boolean;
					public getErrorMessage$payments_core_release(): string;
					public setTextColor(param0: globalAndroid.content.res.ColorStateList): void;
					public setTextSilent$payments_core_release(param0: string): void;
					public setErrorMessage(param0: string): void;
					public setShouldShowError(param0: boolean): void;
					public getFieldText$payments_core_release(): string;
					public onInitializeAccessibilityNodeInfo(param0: globalAndroid.view.accessibility.AccessibilityNodeInfo): void;
					public setNumberOnlyInputType(): void;
					public getInternalFocusChangeListeners(): java.util.List<globalAndroid.view.View.OnFocusChangeListener>;
					public setDeleteEmptyListener(param0: com.stripe.android.view.StripeEditText.DeleteEmptyListener): void;
					public setTextColor(param0: number): void;
					public setErrorMessageListener(param0: com.stripe.android.view.StripeEditText.ErrorMessageListener): void;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
					public getDefaultErrorColorInt(): number;
					public setAfterTextChangedListener(param0: com.stripe.android.view.StripeEditText.AfterTextChangedListener): void;
					public onCreateInputConnection(param0: globalAndroid.view.inputmethod.EditorInfo): globalAndroid.view.inputmethod.InputConnection;
					public constructor(param0: globalAndroid.content.Context);
					public setErrorColor(param0: number): void;
					public onRestoreInstanceState(param0: globalAndroid.os.Parcelable): void;
					public onSaveInstanceState(): globalAndroid.os.Parcelable;
					public getOnFocusChangeListener(): globalAndroid.view.View.OnFocusChangeListener;
					public setOnFocusChangeListener(param0: globalAndroid.view.View.OnFocusChangeListener): void;
					public addTextChangedListener(param0: globalAndroid.text.TextWatcher): void;
					public isLastKeyDelete(): boolean;
				}
				export module StripeEditText {
					export class AfterTextChangedListener {
						public static class: java.lang.Class<com.stripe.android.view.StripeEditText.AfterTextChangedListener>;
						/**
						 * Constructs a new instance of the com.stripe.android.view.StripeEditText$AfterTextChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onTextChanged(param0: string): void;
						});
						public constructor();
						public onTextChanged(param0: string): void;
					}
					export class DeleteEmptyListener {
						public static class: java.lang.Class<com.stripe.android.view.StripeEditText.DeleteEmptyListener>;
						/**
						 * Constructs a new instance of the com.stripe.android.view.StripeEditText$DeleteEmptyListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onDeleteEmpty(): void;
						});
						public constructor();
						public onDeleteEmpty(): void;
					}
					export class ErrorMessageListener {
						public static class: java.lang.Class<com.stripe.android.view.StripeEditText.ErrorMessageListener>;
						/**
						 * Constructs a new instance of the com.stripe.android.view.StripeEditText$ErrorMessageListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							displayErrorMessage(param0: string): void;
						});
						public constructor();
						public displayErrorMessage(param0: string): void;
					}
					export class SoftDeleteInputConnection {
						public static class: java.lang.Class<com.stripe.android.view.StripeEditText.SoftDeleteInputConnection>;
						public constructor(param0: globalAndroid.view.inputmethod.InputConnection, param1: boolean, param2: com.stripe.android.view.StripeEditText.DeleteEmptyListener);
						public deleteSurroundingText(param0: number, param1: number): boolean;
					}
					export class StripeEditTextState {
						public static class: java.lang.Class<com.stripe.android.view.StripeEditText.StripeEditTextState>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.stripe.android.view.StripeEditText.StripeEditTextState>;
						public getErrorMessage(): string;
						public component3(): boolean;
						public describeContents(): number;
						public getSuperState(): globalAndroid.os.Parcelable;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public toString(): string;
						public getShouldShowError(): boolean;
						public component2(): string;
						public copy(param0: globalAndroid.os.Parcelable, param1: string, param2: boolean): com.stripe.android.view.StripeEditText.StripeEditTextState;
						public constructor(param0: globalAndroid.os.Parcelable, param1: string, param2: boolean);
						public component1(): globalAndroid.os.Parcelable;
					}
					export module StripeEditTextState {
						export class Creator extends globalAndroid.os.Parcelable.Creator<com.stripe.android.view.StripeEditText.StripeEditTextState> {
							public static class: java.lang.Class<com.stripe.android.view.StripeEditText.StripeEditTextState.Creator>;
							public constructor();
							public newArray(param0: number): androidNative.Array<com.stripe.android.view.StripeEditText.StripeEditTextState>;
							public createFromParcel(param0: globalAndroid.os.Parcel): com.stripe.android.view.StripeEditText.StripeEditTextState;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export abstract class StripeTextWatcher {
					public static class: java.lang.Class<com.stripe.android.view.StripeTextWatcher>;
					public afterTextChanged(param0: globalAndroid.text.Editable): void;
					public onTextChanged(param0: string, param1: number, param2: number, param3: number): void;
					public constructor();
					public beforeTextChanged(param0: string, param1: number, param2: number, param3: number): void;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class SwipeToDeleteCallbackListener extends com.stripe.android.view.PaymentMethodSwipeCallback.Listener {
					public static class: java.lang.Class<com.stripe.android.view.SwipeToDeleteCallbackListener>;
					public onSwiped(param0: com.stripe.android.model.PaymentMethod): void;
					public constructor(param0: com.stripe.android.view.DeletePaymentMethodDialogFactory);
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class ThemeConfig {
					public static class: java.lang.Class<com.stripe.android.view.ThemeConfig>;
					public constructor(param0: globalAndroid.content.Context);
					public getTextColorValues$payments_core_release(): androidNative.Array<number>;
					public getTintColor$payments_core_release(param0: boolean): number;
					public getTextColor$payments_core_release(param0: boolean): number;
					public getTextAlphaColor$payments_core_release(param0: boolean): number;
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export class ViewWidthAnimator {
					public static class: java.lang.Class<com.stripe.android.view.ViewWidthAnimator>;
					public animate(param0: number, param1: number, param2: kotlin.jvm.functions.Function0<kotlin.Unit>): void;
					public constructor(param0: globalAndroid.view.View, param1: number);
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export module i18n {
					export class ErrorMessageTranslator {
						public static class: java.lang.Class<com.stripe.android.view.i18n.ErrorMessageTranslator>;
						/**
						 * Constructs a new instance of the com.stripe.android.view.i18n.ErrorMessageTranslator interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							translate(param0: number, param1: string, param2: com.stripe.android.core.StripeError): string;
						});
						public constructor();
						public translate(param0: number, param1: string, param2: com.stripe.android.core.StripeError): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module view {
				export module i18n {
					export class TranslatorManager {
						public static class: java.lang.Class<com.stripe.android.view.i18n.TranslatorManager>;
						public static INSTANCE: com.stripe.android.view.i18n.TranslatorManager;
						public static $stable: number;
						public getErrorMessageTranslator(): com.stripe.android.view.i18n.ErrorMessageTranslator;
						public setErrorMessageTranslator(param0: com.stripe.android.view.i18n.ErrorMessageTranslator): void;
					}
					export module TranslatorManager {
						export class Default extends com.stripe.android.view.i18n.ErrorMessageTranslator {
							public static class: java.lang.Class<com.stripe.android.view.i18n.TranslatorManager.Default>;
							public constructor();
							public translate(param0: number, param1: string, param2: com.stripe.android.core.StripeError): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module stripe {
		export module android {
			export module payments {
				export module core {
					export module injection {
						export class WeChatPayAuthenticatorModule {
							public static class: java.lang.Class<com.stripe.android.payments.core.injection.WeChatPayAuthenticatorModule>;
							public constructor();
							public provideWeChatAuthenticator$payments_core_release(param0: com.stripe.android.payments.core.authentication.UnsupportedAuthenticator): com.stripe.android.payments.core.authentication.PaymentAuthenticator<com.stripe.android.model.StripeIntent>;
						}
						export module WeChatPayAuthenticatorModule_ProvideWeChatAuthenticator {
							export module WeChatPayAuthenticatorModule {
								export class payments_core_releaseFactory extends dagger.internal.Factory<com.stripe.android.payments.core.authentication.PaymentAuthenticator<com.stripe.android.model.StripeIntent>> {
									public static class: java.lang.Class<com.stripe.android.payments.core.injection.WeChatPayAuthenticatorModule_ProvideWeChatAuthenticator.payments_core_releaseFactory>;
									public get(): com.stripe.android.payments.core.authentication.PaymentAuthenticator<com.stripe.android.model.StripeIntent>;
									public static create(param0: com.stripe.android.payments.core.injection.WeChatPayAuthenticatorModule, param1: javax.inject.Provider<com.stripe.android.payments.core.authentication.UnsupportedAuthenticator>): com.stripe.android.payments.core.injection.WeChatPayAuthenticatorModule_ProvideWeChatAuthenticator.payments_core_releaseFactory;
									public static provideWeChatAuthenticator$payments_core_release(param0: com.stripe.android.payments.core.injection.WeChatPayAuthenticatorModule, param1: com.stripe.android.payments.core.authentication.UnsupportedAuthenticator): com.stripe.android.payments.core.authentication.PaymentAuthenticator<com.stripe.android.model.StripeIntent>;
									public constructor(param0: com.stripe.android.payments.core.injection.WeChatPayAuthenticatorModule, param1: javax.inject.Provider<com.stripe.android.payments.core.authentication.UnsupportedAuthenticator>);
								}
							}
						}
					}
				}
			}
		}
	}
}

//Generics information:
//com.stripe.android.ApiResultCallback:1
//com.stripe.android.ObjectBuilder:1
//com.stripe.android.StripeIntentResult:1
//com.stripe.android.core.injection.Injectable:1
//com.stripe.android.core.networking.StripeConnection:1
//com.stripe.android.core.networking.StripeConnection.AbstractConnection:1
//com.stripe.android.core.networking.StripeResponse:1
//com.stripe.android.model.parsers.ModelJsonParser:1
//com.stripe.android.model.parsers.PaymentMethodPreferenceJsonParser:1
//com.stripe.android.payments.PaymentFlowResultProcessor:2
//com.stripe.android.payments.core.authentication.PaymentAuthenticator:1
//com.stripe.android.paymentsheet.model.ConfirmStripeIntentParamsFactory:1
//com.stripe.android.paymentsheet.paymentdatacollection.CardDataCollectionFragment:1
//com.stripe.android.paymentsheet.ui.AddPaymentMethodsFragmentFactory:1
//com.stripe.android.paymentsheet.ui.BaseSheetActivity:1
//com.stripe.android.paymentsheet.viewmodels.BaseSheetViewModel:1
//com.stripe.android.paymentsheet.viewmodels.BaseSheetViewModel.Event:1
//com.stripe.android.stripe3ds2.utils.Factory0:1
//com.stripe.android.stripe3ds2.utils.Supplier:1
//com.stripe.android.stripe3ds2.views.ChallengeActivityViewModel.OnInactiveAwareMutableLiveData:1
//com.stripe.android.view.ActivityStarter:2
//com.stripe.android.view.AuthActivityStarter:1